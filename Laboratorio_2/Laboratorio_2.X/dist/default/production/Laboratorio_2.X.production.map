Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Laboratorio_2.X.production.sym \
  --cmf=dist/default/production\Laboratorio_2.X.production.cmf -z -Q16F887 \
  -oC:\Users\katha\AppData\Local\Temp\seuc.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Laboratorio_2.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\katha\AppData\Local\Temp\seuc.o \
  dist/default/production\Laboratorio_2.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\katha\AppData\Local\Temp\seuc.o
                end_init                              E        E        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Laboratorio_2.X.production.o
                cinit                                11       11       11        8       0
                intentry                              4        4        A        8       0
                config                             2007     2007        2        0       4
                text9                               1DE      1DE        A        8       0
                text8                               1C6      1C6       18        8       0
                text7                               1E8      1E8        8        8       0
                text6                                22       22       9D        8       0
                text5                               1A3      1A3       23        8       0
                text4                                BF       BF       78        8       0
                text3                               1F5      1F5        5        8       0
                text2                               1F0      1F0        5        8       0
                text1                               137      137       41        8       0
                maintext                            178      178       2B        8       0
                cstackCOMMON                         70       70        8       70       1
                bssBANK0                             20       20        5       20       1
                bssCOMMON                            78       78        6       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              E        E        3         0
                cinit                                11       11       11         0
                intentry                              4        4        A         0
                reset_vec                             0        0        3         0
                text9                               1DE      1DE        A         0
                text8                               1C6      1C6       18         0
                text7                               1E8      1E8        8         0
                text6                                22       22       9D         0
                text5                               1A3      1A3       23         0
                text4                                BF       BF       78         0
                text3                               1F5      1F5        5         0
                text2                               1F0      1F0        5         0
                text1                               137      137       41         0
                maintext                            178      178       2B         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        6         1

        CLASS   BANK0          
                bssBANK0                             20       20        5         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0001F6  0001FA         8       0  CODE        2
                bssBANK0                       000020  000005  000025        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0025-006F             4B           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         01FA-1FFF            800
        CONST            0003-0003              1           2
                         01FA-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         01FA-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0025-006F             4B           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         01FA-1FFF           1E06
        STRING           0003-0003              1           2
                         01FA-1FFF            100

                                  Symbol Table

ADC_nib_1@val_ADC_       cstackCOMMON 0071
ADC_nib_2@val_ADC_1      cstackCOMMON 0072
ADC_val@ADRES_H          cstackCOMMON 0070
_ADC                     text3        01F5
_ADCON0                  (abs)        001F
_ADCON0bits              (abs)        001F
_ADCON1                  (abs)        009F
_ADC_nib_1               text9        01DE
_ADC_nib_2               text8        01C6
_ADC_res                 bssCOMMON    007C
_ADC_val                 text7        01E8
_ADRESH                  (abs)        001E
_ADRESL                  (abs)        009E
_ANSEL                   (abs)        0188
_ANSELH                  (abs)        0189
_FLAG                    bssCOMMON    0078
_INTCON                  (abs)        000B
_INTCONbits              (abs)        000B
_IOCB                    (abs)        0096
_IOCBbits                (abs)        0096
_ISR                     text4        00BF
_Mostrar                 text5        01A3
_NIB1_res                bssCOMMON    007B
_NIB2_res                bssBANK0     0024
_OPTION_REG              (abs)        0081
_OSCCON                  (abs)        008F
_OSCCONbits              (abs)        008F
_PIE1bits                (abs)        008C
_PIR1bits                (abs)        000C
_PORTA                   (abs)        0005
_PORTB                   (abs)        0006
_PORTBbits               (abs)        0006
_PORTC                   (abs)        0007
_PORTD                   (abs)        0008
_PORTE                   (abs)        0009
_PORTEbits               (abs)        0009
_TMR0                    (abs)        0001
_TMR0IF                  (abs)        005A
_TRISA                   (abs)        0085
_TRISB                   (abs)        0086
_TRISC                   (abs)        0087
_TRISD                   (abs)        0088
_TRISE                   (abs)        0089
_VALOR_ADC               bssBANK0     0023
_VALOR_NIB1              bssBANK0     0021
_VALOR_NIB2              bssBANK0     0020
_VALOR_SWAP              bssBANK0     0022
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__HbssCOMMON             bssCOMMON    0000
__Hcinit                 cinit        0022
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2009
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0011
__Hfunctab               functab      0000
__Hinit                  init         000E
__Hintentry              intentry     000E
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0003
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        01FA
__Hspace_1               (abs)        007E
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hspace_4               (abs)        4010
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__LbssCOMMON             bssCOMMON    0000
__Lcinit                 cinit        0011
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     000E
__Lfunctab               functab      0000
__Linit                  init         000E
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        01FA
__S1                     (abs)        007E
__S2                     (abs)        0000
__S3                     (abs)        0000
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
__end_of_ADC             text3        01FA
__end_of_ADC_nib_1       text9        01E8
__end_of_ADC_nib_2       text8        01DE
__end_of_ADC_val         text7        01F0
__end_of_ISR             text4        0137
__end_of_Mostrar         text5        01C6
__end_of__initialization cinit        001E
__end_of_cont            text2        01F5
__end_of_disp_val        text6        00BF
__end_of_main            maintext     01A3
__end_of_setup           text1        0178
__initialization         cinit        0011
__pbssBANK0              bssBANK0     0020
__pbssCOMMON             bssCOMMON    0078
__pcstackBANK0           cstackBANK0  0000
__pcstackCOMMON          cstackCOMMON 0070
__pintentry              intentry     0004
__pmaintext              maintext     0178
__ptext1                 text1        0137
__ptext2                 text2        01F0
__ptext3                 text3        01F5
__ptext4                 text4        00BF
__ptext5                 text5        01A3
__ptext6                 text6        0022
__ptext7                 text7        01E8
__ptext8                 text8        01C6
__ptext9                 text9        01DE
__size_of_ADC            (abs)        0000
__size_of_ADC_nib_1      (abs)        0000
__size_of_ADC_nib_2      (abs)        0000
__size_of_ADC_val        (abs)        0000
__size_of_ISR            (abs)        0000
__size_of_Mostrar        (abs)        0000
__size_of_cont           (abs)        0000
__size_of_disp_val       (abs)        0000
__size_of_main           (abs)        0000
__size_of_setup          (abs)        0000
_cont                    text2        01F0
_contador                bssCOMMON    007D
_disp_val                text6        0022
_main                    maintext     0178
_setup                   text1        0137
_timer_cont              bssCOMMON    007A
btemp                    (abs)        007E
disp_val@val_display     cstackCOMMON 0072
end_of_initialization    cinit        001E
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
start                    init         000E
start_initialization     cinit        0011
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 104 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADC
		_cont
		_setup
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 128 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _cont *****************
 Defined at:
		line 170 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC *****************
 Defined at:
		line 175 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 52 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ADC_nib_1
		_ADC_nib_2
		_ADC_val
		_Mostrar
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _Mostrar *****************
 Defined at:
		line 180 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_disp_val
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _disp_val *****************
 Defined at:
		line 4 in file "Disp.c"
 Parameters:    Size  Location     Type
  val_display     1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val_display     1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Mostrar
 This function uses a non-reentrant model


 *************** function _ADC_val *****************
 Defined at:
		line 9 in file "ADC.c"
 Parameters:    Size  Location     Type
  ADRES_L         1    wreg     unsigned char 
  ADRES_H         1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  ADRES_L         1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ADC_nib_2 *****************
 Defined at:
		line 19 in file "ADC.c"
 Parameters:    Size  Location     Type
  val_ADC_1       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val_ADC_1       1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ADC_nib_1 *****************
 Defined at:
		line 14 in file "ADC.c"
 Parameters:    Size  Location     Type
  val_ADC_        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val_ADC_        1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
Disp.c
		_disp_val      		CODE           	0022	0000	157

Disp.c estimated size: 157

shared
		__initialization		CODE           	0011	0000	13

shared estimated size: 13

ADC.c
		_ADC_val       		CODE           	01E8	0000	8
		_ADC_nib_1     		CODE           	01DE	0000	10
		_ADC_nib_2     		CODE           	01C6	0000	24

ADC.c estimated size: 42

main.c
		_ADC           		CODE           	01F5	0000	5
		_ISR           		CODE           	00BF	0000	120
		_cont          		CODE           	01F0	0000	5
		_main          		CODE           	0178	0000	43
		_Mostrar       		CODE           	01A3	0000	35
		_setup         		CODE           	0137	0000	65

main.c estimated size: 273

