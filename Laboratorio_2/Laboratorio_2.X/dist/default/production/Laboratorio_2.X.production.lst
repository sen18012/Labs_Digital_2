

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 16:35:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  000B                     _INTCON	set	11
   448  001F                     _ADCON0	set	31
   449  0005                     _PORTA	set	5
   450  0006                     _PORTB	set	6
   451  0009                     _PORTE	set	9
   452  0008                     _PORTD	set	8
   453  0007                     _PORTC	set	7
   454  0009                     _PORTEbits	set	9
   455  0001                     _TMR0	set	1
   456  001E                     _ADRESH	set	30
   457  001F                     _ADCON0bits	set	31
   458  000C                     _PIR1bits	set	12
   459  0006                     _PORTBbits	set	6
   460  000B                     _INTCONbits	set	11
   461  005A                     _TMR0IF	set	90
   462  008F                     _OSCCONbits	set	143
   463  0096                     _IOCB	set	150
   464  0081                     _OPTION_REG	set	129
   465  0096                     _IOCBbits	set	150
   466  0085                     _TRISA	set	133
   467  0086                     _TRISB	set	134
   468  0089                     _TRISE	set	137
   469  0088                     _TRISD	set	136
   470  0087                     _TRISC	set	135
   471  008F                     _OSCCON	set	143
   472  008C                     _PIE1bits	set	140
   473  009F                     _ADCON1	set	159
   474  009E                     _ADRESL	set	158
   475  0189                     _ANSELH	set	393
   476  0188                     _ANSEL	set	392
   477                           
   478                           	psect	cinit
   479  0011                     start_initialization:	
   480                           ; #config settings
   481                           
   482  0011                     __initialization:
   483                           
   484                           ; Clear objects allocated to COMMON
   485  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   486  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   487  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   488  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   489  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   490  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   491                           
   492                           ; Clear objects allocated to BANK0
   493  0017  1283               	bcf	3,5	;RP0=0, select bank0
   494  0018  1303               	bcf	3,6	;RP1=0, select bank0
   495  0019  01A0               	clrf	__pbssBANK0& (0+127)
   496  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   497  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   498  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   499  001D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   500  001E                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  001E                     __end_of__initialization:
   504  001E  0183               	clrf	3
   505  001F  120A  118A  2978   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssCOMMON
   508  0078                     __pbssCOMMON:
   509  0078                     _FLAG:
   510  0078                     	ds	2
   511  007A                     _timer_cont:
   512  007A                     	ds	1
   513  007B                     _NIB1_res:
   514  007B                     	ds	1
   515  007C                     _ADC_res:
   516  007C                     	ds	1
   517  007D                     _contador:
   518  007D                     	ds	1
   519                           
   520                           	psect	bssBANK0
   521  0020                     __pbssBANK0:
   522  0020                     _VALOR_NIB2:
   523  0020                     	ds	1
   524  0021                     _VALOR_NIB1:
   525  0021                     	ds	1
   526  0022                     _VALOR_SWAP:
   527  0022                     	ds	1
   528  0023                     _VALOR_ADC:
   529  0023                     	ds	1
   530  0024                     _NIB2_res:
   531  0024                     	ds	1
   532                           
   533                           	psect	cstackCOMMON
   534  0070                     __pcstackCOMMON:
   535  0070                     ?_ADC_val:
   536  0070                     ?_ADC_nib_1:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_ADC_nib_1:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_ADC_nib_2:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ??_ADC_nib_2:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Mostrar:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_setup:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_cont:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_ADC:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_disp_val:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_disp_val:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_ISR:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_main:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ADC_val@ADRES_L:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ADC_val@ADRES_H:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580  0070                     	ds	1
   581  0071                     ??_ADC_val:
   582  0071                     ADC_nib_1@val_ADC_:	
   583                           ; 1 bytes @ 0x1
   584                           
   585                           
   586                           ; 1 bytes @ 0x1
   587  0071                     	ds	1
   588  0072                     ADC_nib_2@val_ADC_1:
   589  0072                     disp_val@val_display:	
   590                           ; 1 bytes @ 0x2
   591                           
   592                           
   593                           ; 1 bytes @ 0x2
   594  0072                     	ds	1
   595  0073                     ??_Mostrar:
   596  0073                     ??_ISR:	
   597                           ; 1 bytes @ 0x3
   598                           
   599                           
   600                           ; 1 bytes @ 0x3
   601  0073                     	ds	5
   602                           
   603                           	psect	cstackBANK0
   604  0000                     __pcstackBANK0:
   605  0000                     ??_setup:
   606  0000                     ??_cont:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0000                     ??_ADC:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0000                     ??_main:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           	psect	maintext
   617  0178                     __pmaintext:	
   618                           ; 1 bytes @ 0x0
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 104 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B00/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels required when called:    4
   644 ;; This function calls:
   645 ;;		_ADC
   646 ;;		_cont
   647 ;;		_setup
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _main
   655  0178                     _main:
   656  0178                     l1248:	
   657                           ;incstack = 0
   658                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   659                           
   660                           
   661                           ;main.c: 105:     contador = 0;
   662  0178  01FD               	clrf	_contador
   663  0179                     l1250:
   664                           
   665                           ;main.c: 106:     setup();
   666  0179  120A  118A  2137  120A  118A  	fcall	_setup
   667  017E                     l1252:
   668                           
   669                           ;main.c: 107:     ADCON1 = 0b00000000;
   670  017E  1683               	bsf	3,5	;RP0=1, select bank1
   671  017F  1303               	bcf	3,6	;RP1=0, select bank1
   672  0180  019F               	clrf	31	;volatile
   673  0181                     l1254:
   674                           
   675                           ;main.c: 108:     PIE1bits.ADIE = 1;
   676  0181  170C               	bsf	12,6	;volatile
   677  0182                     l112:	
   678                           ;main.c: 109:     while (1) {
   679                           
   680                           
   681                           ;main.c: 110:         cont();
   682  0182  120A  118A  21F0  120A  118A  	fcall	_cont
   683                           
   684                           ;main.c: 111:         ADC();
   685  0187  120A  118A  21F5  120A  118A  	fcall	_ADC
   686  018C                     l1256:
   687                           
   688                           ;main.c: 114:         if (ADC_res > contador) {
   689  018C  087C               	movf	_ADC_res,w
   690  018D  027D               	subwf	_contador,w
   691  018E  1803               	skipnc
   692  018F  2991               	goto	u271
   693  0190  2992               	goto	u270
   694  0191                     u271:
   695  0191  2996               	goto	l1260
   696  0192                     u270:
   697  0192                     l1258:
   698                           
   699                           ;main.c: 115:             PORTEbits.RE2 = 1;
   700  0192  1283               	bcf	3,5	;RP0=0, select bank0
   701  0193  1303               	bcf	3,6	;RP1=0, select bank0
   702  0194  1509               	bsf	9,2	;volatile
   703                           
   704                           ;main.c: 117:         } else if (ADC_res < contador) {
   705  0195  2982               	goto	l112
   706  0196                     l1260:
   707  0196  087D               	movf	_contador,w
   708  0197  027C               	subwf	_ADC_res,w
   709  0198  1803               	skipnc
   710  0199  299B               	goto	u281
   711  019A  299C               	goto	u280
   712  019B                     u281:
   713  019B  2982               	goto	l112
   714  019C                     u280:
   715  019C                     l1262:
   716                           
   717                           ;main.c: 118:             PORTEbits.RE2 = 0;
   718  019C  1283               	bcf	3,5	;RP0=0, select bank0
   719  019D  1303               	bcf	3,6	;RP1=0, select bank0
   720  019E  1109               	bcf	9,2	;volatile
   721  019F  2982               	goto	l112
   722  01A0  120A  118A  280E   	ljmp	start
   723  01A3                     __end_of_main:
   724                           
   725                           	psect	text1
   726  0137                     __ptext1:	
   727 ;; *************** function _setup *****************
   728 ;; Defined at:
   729 ;;		line 128 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    3
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _setup
   759  0137                     _setup:
   760  0137                     l1160:	
   761                           ;incstack = 0
   762                           ; Regs used in _setup: [wreg+status,2]
   763                           
   764                           
   765                           ;main.c: 130:     OSCCON = 0b01100001;
   766  0137  3061               	movlw	97
   767  0138  1683               	bsf	3,5	;RP0=1, select bank1
   768  0139  1303               	bcf	3,6	;RP1=0, select bank1
   769  013A  008F               	movwf	15	;volatile
   770                           
   771                           ;main.c: 131:     ANSEL = 0b00000100;
   772  013B  3004               	movlw	4
   773  013C  1683               	bsf	3,5	;RP0=1, select bank3
   774  013D  1703               	bsf	3,6	;RP1=1, select bank3
   775  013E  0088               	movwf	8	;volatile
   776  013F                     l1162:
   777                           
   778                           ;main.c: 132:     ANSELH = 0;
   779  013F  0189               	clrf	9	;volatile
   780  0140                     l1164:
   781                           
   782                           ;main.c: 133:     TRISC = 0;
   783  0140  1683               	bsf	3,5	;RP0=1, select bank1
   784  0141  1303               	bcf	3,6	;RP1=0, select bank1
   785  0142  0187               	clrf	7	;volatile
   786  0143                     l1166:
   787                           
   788                           ;main.c: 134:     PORTC = 0;
   789  0143  1283               	bcf	3,5	;RP0=0, select bank0
   790  0144  1303               	bcf	3,6	;RP1=0, select bank0
   791  0145  0187               	clrf	7	;volatile
   792  0146                     l1168:
   793                           
   794                           ;main.c: 135:     TRISD = 0;
   795  0146  1683               	bsf	3,5	;RP0=1, select bank1
   796  0147  1303               	bcf	3,6	;RP1=0, select bank1
   797  0148  0188               	clrf	8	;volatile
   798  0149                     l1170:
   799                           
   800                           ;main.c: 136:     PORTD = 0;
   801  0149  1283               	bcf	3,5	;RP0=0, select bank0
   802  014A  1303               	bcf	3,6	;RP1=0, select bank0
   803  014B  0188               	clrf	8	;volatile
   804  014C                     l1172:
   805                           
   806                           ;main.c: 137:     TRISE = 0;
   807  014C  1683               	bsf	3,5	;RP0=1, select bank1
   808  014D  1303               	bcf	3,6	;RP1=0, select bank1
   809  014E  0189               	clrf	9	;volatile
   810  014F                     l1174:
   811                           
   812                           ;main.c: 138:     PORTE = 0;
   813  014F  1283               	bcf	3,5	;RP0=0, select bank0
   814  0150  1303               	bcf	3,6	;RP1=0, select bank0
   815  0151  0189               	clrf	9	;volatile
   816  0152                     l1176:
   817                           
   818                           ;main.c: 139:     TRISB = 0b0000011;
   819  0152  3003               	movlw	3
   820  0153  1683               	bsf	3,5	;RP0=1, select bank1
   821  0154  1303               	bcf	3,6	;RP1=0, select bank1
   822  0155  0086               	movwf	6	;volatile
   823                           
   824                           ;main.c: 140:     PORTB = 0;
   825  0156  1283               	bcf	3,5	;RP0=0, select bank0
   826  0157  1303               	bcf	3,6	;RP1=0, select bank0
   827  0158  0186               	clrf	6	;volatile
   828  0159                     l1178:
   829                           
   830                           ;main.c: 141:     TRISA = 0b00000100;
   831  0159  3004               	movlw	4
   832  015A  1683               	bsf	3,5	;RP0=1, select bank1
   833  015B  1303               	bcf	3,6	;RP1=0, select bank1
   834  015C  0085               	movwf	5	;volatile
   835  015D                     l1180:
   836                           
   837                           ;main.c: 142:     PORTA = 0b00000011;
   838  015D  3003               	movlw	3
   839  015E  1283               	bcf	3,5	;RP0=0, select bank0
   840  015F  1303               	bcf	3,6	;RP1=0, select bank0
   841  0160  0085               	movwf	5	;volatile
   842  0161                     l1182:
   843                           
   844                           ;main.c: 143:     INTCONbits.GIE = 1;
   845  0161  178B               	bsf	11,7	;volatile
   846  0162                     l1184:
   847                           
   848                           ;main.c: 144:     INTCONbits.RBIE = 1;
   849  0162  158B               	bsf	11,3	;volatile
   850  0163                     l1186:
   851                           
   852                           ;main.c: 145:     INTCONbits.RBIF = 0;
   853  0163  100B               	bcf	11,0	;volatile
   854  0164                     l1188:
   855                           
   856                           ;main.c: 146:     IOCBbits.IOCB0 = 1;
   857  0164  1683               	bsf	3,5	;RP0=1, select bank1
   858  0165  1303               	bcf	3,6	;RP1=0, select bank1
   859  0166  1416               	bsf	22,0	;volatile
   860  0167                     l1190:
   861                           
   862                           ;main.c: 147:     IOCBbits.IOCB1 = 1;
   863  0167  1496               	bsf	22,1	;volatile
   864  0168                     l1192:
   865                           
   866                           ;main.c: 148:     INTCONbits.PEIE = 1;
   867  0168  170B               	bsf	11,6	;volatile
   868  0169                     l1194:
   869                           
   870                           ;main.c: 149:     ADCON0 = 0b01001001;
   871  0169  3049               	movlw	73
   872  016A  1283               	bcf	3,5	;RP0=0, select bank0
   873  016B  1303               	bcf	3,6	;RP1=0, select bank0
   874  016C  009F               	movwf	31	;volatile
   875  016D                     l1196:
   876                           
   877                           ;main.c: 150:     TMR0 = 4;
   878  016D  3004               	movlw	4
   879  016E  0081               	movwf	1	;volatile
   880  016F                     l1198:
   881                           
   882                           ;main.c: 151:     OPTION_REG = 0b10000001;
   883  016F  3081               	movlw	129
   884  0170  1683               	bsf	3,5	;RP0=1, select bank1
   885  0171  1303               	bcf	3,6	;RP1=0, select bank1
   886  0172  0081               	movwf	1	;volatile
   887  0173                     l1200:
   888                           
   889                           ;main.c: 152:     INTCON = 0b10101001;
   890  0173  30A9               	movlw	169
   891  0174  008B               	movwf	11	;volatile
   892  0175                     l1202:
   893                           
   894                           ;main.c: 153:     IOCB = 0b00000011;
   895  0175  3003               	movlw	3
   896  0176  0096               	movwf	22	;volatile
   897  0177                     l121:
   898  0177  0008               	return
   899  0178                     __end_of_setup:
   900                           
   901                           	psect	text2
   902  01F0                     __ptext2:	
   903 ;; *************** function _cont *****************
   904 ;; Defined at:
   905 ;;		line 170 in file "main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    3
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _cont
   935  01F0                     _cont:
   936  01F0                     l1204:	
   937                           ;incstack = 0
   938                           ; Regs used in _cont: [wreg]
   939                           
   940                           
   941                           ;main.c: 172:     PORTC = contador;
   942  01F0  087D               	movf	_contador,w
   943  01F1  1283               	bcf	3,5	;RP0=0, select bank0
   944  01F2  1303               	bcf	3,6	;RP1=0, select bank0
   945  01F3  0087               	movwf	7	;volatile
   946  01F4                     l124:
   947  01F4  0008               	return
   948  01F5                     __end_of_cont:
   949                           
   950                           	psect	text3
   951  01F5                     __ptext3:	
   952 ;; *************** function _ADC *****************
   953 ;; Defined at:
   954 ;;		line 175 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0
   971 ;;      Totals:         0       0       0       0       0
   972 ;;Total ram usage:        0 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    3
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _ADC
   984  01F5                     _ADC:
   985  01F5                     l1206:	
   986                           ;incstack = 0
   987                           ; Regs used in _ADC: [wreg]
   988                           
   989                           
   990                           ;main.c: 177:     PORTD = ADC_res;
   991  01F5  087C               	movf	_ADC_res,w
   992  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   993  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   994  01F8  0088               	movwf	8	;volatile
   995  01F9                     l127:
   996  01F9  0008               	return
   997  01FA                     __end_of_ADC:
   998                           
   999                           	psect	text4
  1000  00BF                     __ptext4:	
  1001 ;; *************** function _ISR *****************
  1002 ;; Defined at:
  1003 ;;		line 52 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          5       0       0       0       0
  1020 ;;      Totals:         5       0       0       0       0
  1021 ;;Total ram usage:        5 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		_ADC_nib_1
  1026 ;;		_ADC_nib_2
  1027 ;;		_ADC_val
  1028 ;;		_Mostrar
  1029 ;; This function is called by:
  1030 ;;		Interrupt level 1
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _ISR
  1036  00BF                     _ISR:
  1037  00BF                     i1l1208:
  1038                           
  1039                           ;main.c: 53:     }
  1040  00BF  1C0B               	btfss	11,0	;volatile
  1041  00C0  28C2               	goto	u19_21
  1042  00C1  28C3               	goto	u19_20
  1043  00C2                     u19_21:
  1044  00C2  28DF               	goto	i1l1222
  1045  00C3                     u19_20:
  1046  00C3                     i1l1210:
  1047                           
  1048                           ;main.c: 54: }
  1049  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1050  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1051  00C5  1C06               	btfss	6,0	;volatile
  1052  00C6  28C8               	goto	u20_21
  1053  00C7  28C9               	goto	u20_20
  1054  00C8                     u20_21:
  1055  00C8  28D2               	goto	i1l1216
  1056  00C9                     u20_20:
  1057  00C9                     i1l95:	
  1058                           ;main.c: 57: 
  1059                           
  1060                           
  1061                           ;main.c: 55: 
  1062  00C9  1806               	btfsc	6,0	;volatile
  1063  00CA  28CC               	goto	u21_21
  1064  00CB  28CD               	goto	u21_20
  1065  00CC                     u21_21:
  1066  00CC  28C9               	goto	i1l95
  1067  00CD                     u21_20:
  1068  00CD                     i1l1214:
  1069                           
  1070                           ;main.c: 58: 
  1071  00CD  087D               	movf	_contador,w
  1072  00CE  3E01               	addlw	1
  1073  00CF  00F3               	movwf	??_ISR
  1074  00D0  0873               	movf	??_ISR,w
  1075  00D1  00FD               	movwf	_contador
  1076  00D2                     i1l1216:
  1077                           
  1078                           ;main.c: 60: void setup(void);
  1079  00D2  1C86               	btfss	6,1	;volatile
  1080  00D3  28D5               	goto	u22_21
  1081  00D4  28D6               	goto	u22_20
  1082  00D5                     u22_21:
  1083  00D5  28DF               	goto	i1l1222
  1084  00D6                     u22_20:
  1085  00D6                     i1l99:
  1086                           
  1087                           ;main.c: 61: void cont(void);
  1088  00D6  1886               	btfsc	6,1	;volatile
  1089  00D7  28D9               	goto	u23_21
  1090  00D8  28DA               	goto	u23_20
  1091  00D9                     u23_21:
  1092  00D9  28D6               	goto	i1l99
  1093  00DA                     u23_20:
  1094  00DA                     i1l1220:
  1095  00DA  087D               	movf	_contador,w
  1096  00DB  3EFF               	addlw	255
  1097  00DC  00F3               	movwf	??_ISR
  1098  00DD  0873               	movf	??_ISR,w
  1099  00DE  00FD               	movwf	_contador
  1100  00DF                     i1l1222:
  1101  00DF  100B               	bcf	11,0	;volatile
  1102  00E0                     i1l1224:
  1103  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1104  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1105  00E2  1F0C               	btfss	12,6	;volatile
  1106  00E3  28E5               	goto	u24_21
  1107  00E4  28E6               	goto	u24_20
  1108  00E5                     u24_21:
  1109  00E5  2922               	goto	i1l102
  1110  00E6                     u24_20:
  1111  00E6                     i1l1226:
  1112  00E6  130C               	bcf	12,6	;volatile
  1113  00E7                     i1l1228:
  1114  00E7  3003               	movlw	3
  1115  00E8  00F4               	movwf	??_ISR+1
  1116  00E9  3097               	movlw	151
  1117  00EA  00F3               	movwf	??_ISR
  1118  00EB                     u29_27:
  1119  00EB  0BF3               	decfsz	??_ISR,f
  1120  00EC  28EB               	goto	u29_27
  1121  00ED  0BF4               	decfsz	??_ISR+1,f
  1122  00EE  28EB               	goto	u29_27
  1123  00EF  28F0               	nop2
  1124  00F0                     i1l1230:
  1125  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00F2  149F               	bsf	31,1	;volatile
  1128  00F3  291C               	goto	i1l1240
  1129  00F4                     i1l1232:
  1130  00F4  081E               	movf	30,w	;volatile
  1131  00F5  00F3               	movwf	??_ISR
  1132  00F6  0873               	movf	??_ISR,w
  1133  00F7  00F0               	movwf	ADC_val@ADRES_H
  1134  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1135  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  1136  00FA  081E               	movf	30,w	;volatile
  1137  00FB  120A  118A  21E8  120A  118A  	fcall	_ADC_val
  1138  0100  00F4               	movwf	??_ISR+1
  1139  0101  0874               	movf	??_ISR+1,w
  1140  0102  00FC               	movwf	_ADC_res
  1141  0103                     i1l1234:
  1142  0103  087C               	movf	_ADC_res,w
  1143  0104  120A  118A  21DE  120A  118A  	fcall	_ADC_nib_1
  1144  0109  00F3               	movwf	??_ISR
  1145  010A  0873               	movf	??_ISR,w
  1146  010B  00FB               	movwf	_NIB1_res
  1147  010C                     i1l1236:
  1148  010C  087C               	movf	_ADC_res,w
  1149  010D  120A  118A  21C6  120A  118A  	fcall	_ADC_nib_2
  1150  0112  00F3               	movwf	??_ISR
  1151  0113  0873               	movf	??_ISR,w
  1152  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0116  00A4               	movwf	_NIB2_res
  1155  0117                     i1l1238:
  1156  0117  120A  118A  21A3  120A  118A  	fcall	_Mostrar
  1157  011C                     i1l1240:
  1158  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1159  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1160  011E  189F               	btfsc	31,1	;volatile
  1161  011F  2921               	goto	u25_21
  1162  0120  2922               	goto	u25_20
  1163  0121                     u25_21:
  1164  0121  28F4               	goto	i1l1232
  1165  0122                     u25_20:
  1166  0122                     i1l102:
  1167  0122  1D0B               	btfss	11,2	;volatile
  1168  0123  2925               	goto	u26_21
  1169  0124  2926               	goto	u26_20
  1170  0125                     u26_21:
  1171  0125  292E               	goto	i1l107
  1172  0126                     u26_20:
  1173  0126                     i1l1242:
  1174  0126  110B               	bcf	11,2	;volatile
  1175  0127                     i1l1244:
  1176  0127  3004               	movlw	4
  1177  0128  0081               	movwf	1	;volatile
  1178  0129                     i1l1246:
  1179  0129  087A               	movf	_timer_cont,w
  1180  012A  3E01               	addlw	1
  1181  012B  00F3               	movwf	??_ISR
  1182  012C  0873               	movf	??_ISR,w
  1183  012D  00FA               	movwf	_timer_cont
  1184  012E                     i1l107:
  1185  012E  0877               	movf	??_ISR+4,w
  1186  012F  008A               	movwf	10
  1187  0130  0876               	movf	??_ISR+3,w
  1188  0131  0084               	movwf	4
  1189  0132  0E75               	swapf	??_ISR+2,w
  1190  0133  0083               	movwf	3
  1191  0134  0EFE               	swapf	btemp,f
  1192  0135  0E7E               	swapf	btemp,w
  1193  0136  0009               	retfie
  1194  0137                     __end_of_ISR:
  1195                           
  1196                           	psect	intentry
  1197  0004                     __pintentry:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1200                           
  1201  0004                     interrupt_function:
  1202  007E                     saved_w	set	btemp
  1203  0004  00FE               	movwf	btemp
  1204  0005  0E03               	swapf	3,w
  1205  0006  00F5               	movwf	??_ISR+2
  1206  0007  0804               	movf	4,w
  1207  0008  00F6               	movwf	??_ISR+3
  1208  0009  080A               	movf	10,w
  1209  000A  00F7               	movwf	??_ISR+4
  1210  000B  120A  118A  28BF   	ljmp	_ISR
  1211                           
  1212                           	psect	text5
  1213  01A3                     __ptext5:	
  1214 ;; *************** function _Mostrar *****************
  1215 ;; Defined at:
  1216 ;;		line 180 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    1
  1237 ;; This function calls:
  1238 ;;		_disp_val
  1239 ;; This function is called by:
  1240 ;;		_ISR
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _Mostrar
  1246  01A3                     _Mostrar:
  1247  01A3                     i1l1146:	
  1248                           ;incstack = 0
  1249                           ; Regs used in _Mostrar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1250                           
  1251                           
  1252                           ;main.c: 181:     PORTE = 0;
  1253  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01A5  0189               	clrf	9	;volatile
  1256  01A6                     i1l1148:
  1257                           
  1258                           ;main.c: 182:     if (FLAG == 0) {
  1259  01A6  0878               	movf	_FLAG,w
  1260  01A7  0479               	iorwf	_FLAG+1,w
  1261  01A8  1D03               	btfss	3,2
  1262  01A9  29AB               	goto	u17_21
  1263  01AA  29AC               	goto	u17_20
  1264  01AB                     u17_21:
  1265  01AB  29B6               	goto	i1l1154
  1266  01AC                     u17_20:
  1267  01AC                     i1l1150:
  1268                           
  1269                           ;main.c: 183:         disp_val(NIB1_res);
  1270  01AC  087B               	movf	_NIB1_res,w
  1271  01AD  120A  118A  2022  120A  118A  	fcall	_disp_val
  1272  01B2                     i1l1152:
  1273                           
  1274                           ;main.c: 184:         PORTEbits.RE1 = 1;
  1275  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1276  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1277  01B4  1489               	bsf	9,1	;volatile
  1278                           
  1279                           ;main.c: 185:     }
  1280  01B5  29C5               	goto	i1l133
  1281  01B6                     i1l1154:
  1282  01B6  0378               	decf	_FLAG,w
  1283  01B7  0479               	iorwf	_FLAG+1,w
  1284  01B8  1D03               	btfss	3,2
  1285  01B9  29BB               	goto	u18_21
  1286  01BA  29BC               	goto	u18_20
  1287  01BB                     u18_21:
  1288  01BB  29C5               	goto	i1l133
  1289  01BC                     u18_20:
  1290  01BC                     i1l1156:
  1291                           
  1292                           ;main.c: 187:         disp_val(NIB1_res);
  1293  01BC  087B               	movf	_NIB1_res,w
  1294  01BD  120A  118A  2022  120A  118A  	fcall	_disp_val
  1295  01C2                     i1l1158:
  1296                           
  1297                           ;main.c: 188:         PORTEbits.RE2 = 1;
  1298  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1299  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1300  01C4  1509               	bsf	9,2	;volatile
  1301  01C5                     i1l133:
  1302  01C5  0008               	return
  1303  01C6                     __end_of_Mostrar:
  1304                           
  1305                           	psect	text6
  1306  0022                     __ptext6:	
  1307 ;; *************** function _disp_val *****************
  1308 ;; Defined at:
  1309 ;;		line 4 in file "Disp.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  val_display     1    wreg     unsigned char 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  val_display     1    2[COMMON] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         1       0       0       0       0
  1325 ;;      Temps:          2       0       0       0       0
  1326 ;;      Totals:         3       0       0       0       0
  1327 ;;Total ram usage:        3 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_Mostrar
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function _disp_val
  1338  0022                     _disp_val:
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in _disp_val: [wreg-fsr0h+status,2+status,0]
  1342                           ;disp_val@val_display stored from wreg
  1343  0022  00F2               	movwf	disp_val@val_display
  1344  0023                     i1l1054:
  1345                           
  1346                           ;Disp.c: 5:     TRISD = 0;
  1347  0023  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0024  1303               	bcf	3,6	;RP1=0, select bank1
  1349  0025  0188               	clrf	8	;volatile
  1350                           
  1351                           ;Disp.c: 6:     PORTD = 0;
  1352  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0028  0188               	clrf	8	;volatile
  1355                           
  1356                           ;Disp.c: 7:     switch (val_display) {
  1357  0029  2857               	goto	i1l1122
  1358  002A                     i1l1056:
  1359                           
  1360                           ;Disp.c: 9:             PORTD = 0x3F;
  1361  002A  303F               	movlw	63
  1362  002B  0088               	movwf	8	;volatile
  1363                           
  1364                           ;Disp.c: 10:             break;
  1365  002C  28BE               	goto	i1l214
  1366  002D                     i1l1058:
  1367                           
  1368                           ;Disp.c: 12:             PORTD = 0x06;
  1369  002D  3006               	movlw	6
  1370  002E  0088               	movwf	8	;volatile
  1371                           
  1372                           ;Disp.c: 13:             break;
  1373  002F  28BE               	goto	i1l214
  1374  0030                     i1l1060:
  1375                           
  1376                           ;Disp.c: 15:             PORTD = 0x5B;
  1377  0030  305B               	movlw	91
  1378  0031  0088               	movwf	8	;volatile
  1379                           
  1380                           ;Disp.c: 16:             break;
  1381  0032  28BE               	goto	i1l214
  1382  0033                     i1l1062:
  1383                           
  1384                           ;Disp.c: 18:             PORTD = 0x4F;
  1385  0033  304F               	movlw	79
  1386  0034  0088               	movwf	8	;volatile
  1387                           
  1388                           ;Disp.c: 19:             break;
  1389  0035  28BE               	goto	i1l214
  1390  0036                     i1l1064:
  1391                           
  1392                           ;Disp.c: 21:             PORTD = 0x66;
  1393  0036  3066               	movlw	102
  1394  0037  0088               	movwf	8	;volatile
  1395                           
  1396                           ;Disp.c: 22:             break;
  1397  0038  28BE               	goto	i1l214
  1398  0039                     i1l1066:
  1399                           
  1400                           ;Disp.c: 24:             PORTD = 0x6D;
  1401  0039  306D               	movlw	109
  1402  003A  0088               	movwf	8	;volatile
  1403                           
  1404                           ;Disp.c: 25:             break;
  1405  003B  28BE               	goto	i1l214
  1406  003C                     i1l1068:
  1407                           
  1408                           ;Disp.c: 27:             PORTD = 0x7D;
  1409  003C  307D               	movlw	125
  1410  003D  0088               	movwf	8	;volatile
  1411                           
  1412                           ;Disp.c: 28:             break;
  1413  003E  28BE               	goto	i1l214
  1414  003F                     i1l1070:
  1415                           
  1416                           ;Disp.c: 30:             PORTD = 0x07;
  1417  003F  3007               	movlw	7
  1418  0040  0088               	movwf	8	;volatile
  1419                           
  1420                           ;Disp.c: 31:             break;
  1421  0041  28BE               	goto	i1l214
  1422  0042                     i1l1072:
  1423                           
  1424                           ;Disp.c: 33:             PORTD = 0x7F;
  1425  0042  307F               	movlw	127
  1426  0043  0088               	movwf	8	;volatile
  1427                           
  1428                           ;Disp.c: 34:             break;
  1429  0044  28BE               	goto	i1l214
  1430  0045                     i1l1074:
  1431                           
  1432                           ;Disp.c: 36:             PORTD = 0x6F;
  1433  0045  306F               	movlw	111
  1434  0046  0088               	movwf	8	;volatile
  1435                           
  1436                           ;Disp.c: 37:             break;
  1437  0047  28BE               	goto	i1l214
  1438  0048                     i1l1076:
  1439                           
  1440                           ;Disp.c: 39:             PORTD = 0x77;
  1441  0048  3077               	movlw	119
  1442  0049  0088               	movwf	8	;volatile
  1443                           
  1444                           ;Disp.c: 40:             break;
  1445  004A  28BE               	goto	i1l214
  1446  004B                     i1l1078:
  1447                           
  1448                           ;Disp.c: 42:             PORTD = 0x1F;
  1449  004B  301F               	movlw	31
  1450  004C  0088               	movwf	8	;volatile
  1451                           
  1452                           ;Disp.c: 43:             break;
  1453  004D  28BE               	goto	i1l214
  1454  004E                     i1l1080:
  1455                           
  1456                           ;Disp.c: 45:             PORTD = 0x4E;
  1457  004E  304E               	movlw	78
  1458  004F  0088               	movwf	8	;volatile
  1459                           
  1460                           ;Disp.c: 46:             break;
  1461  0050  28BE               	goto	i1l214
  1462  0051                     i1l1082:
  1463                           
  1464                           ;Disp.c: 48:             PORTD = 0x3D;
  1465  0051  303D               	movlw	61
  1466  0052  0088               	movwf	8	;volatile
  1467                           
  1468                           ;Disp.c: 49:             break;
  1469  0053  28BE               	goto	i1l214
  1470  0054                     i1l1086:
  1471                           
  1472                           ;Disp.c: 54:             PORTD = 0x47;
  1473  0054  3047               	movlw	71
  1474  0055  0088               	movwf	8	;volatile
  1475                           
  1476                           ;Disp.c: 55:             break;
  1477  0056  28BE               	goto	i1l214
  1478  0057                     i1l1122:
  1479  0057  0872               	movf	disp_val@val_display,w
  1480  0058  00F0               	movwf	??_disp_val
  1481  0059  01F1               	clrf	??_disp_val+1
  1482                           
  1483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1484                           ; Switch size 1, requested type "simple"
  1485                           ; Number of cases is 1, Range of values is 0 to 0
  1486                           ; switch strategies available:
  1487                           ; Name         Instructions Cycles
  1488                           ; simple_byte            4     3 (average)
  1489                           ; direct_byte           11     8 (fixed)
  1490                           ; jumptable            260     6 (fixed)
  1491                           ;	Chosen strategy is simple_byte
  1492  005A  0871               	movf	??_disp_val+1,w
  1493  005B  3A00               	xorlw	0	; case 0
  1494  005C  1903               	skipnz
  1495  005D  285F               	goto	i1l1284
  1496  005E  282A               	goto	i1l1056
  1497  005F                     i1l1284:
  1498                           
  1499                           ; Switch size 1, requested type "simple"
  1500                           ; Number of cases is 31, Range of values is 0 to 240
  1501                           ; switch strategies available:
  1502                           ; Name         Instructions Cycles
  1503                           ; simple_byte           94    48 (average)
  1504                           ; jumptable            260     6 (fixed)
  1505                           ;	Chosen strategy is simple_byte
  1506  005F  0870               	movf	??_disp_val,w
  1507  0060  3A00               	xorlw	0	; case 0
  1508  0061  1903               	skipnz
  1509  0062  282A               	goto	i1l1056
  1510  0063  3A01               	xorlw	1	; case 1
  1511  0064  1903               	skipnz
  1512  0065  282D               	goto	i1l1058
  1513  0066  3A03               	xorlw	3	; case 2
  1514  0067  1903               	skipnz
  1515  0068  2830               	goto	i1l1060
  1516  0069  3A01               	xorlw	1	; case 3
  1517  006A  1903               	skipnz
  1518  006B  2833               	goto	i1l1062
  1519  006C  3A07               	xorlw	7	; case 4
  1520  006D  1903               	skipnz
  1521  006E  2836               	goto	i1l1064
  1522  006F  3A01               	xorlw	1	; case 5
  1523  0070  1903               	skipnz
  1524  0071  2839               	goto	i1l1066
  1525  0072  3A03               	xorlw	3	; case 6
  1526  0073  1903               	skipnz
  1527  0074  283C               	goto	i1l1068
  1528  0075  3A01               	xorlw	1	; case 7
  1529  0076  1903               	skipnz
  1530  0077  283F               	goto	i1l1070
  1531  0078  3A0F               	xorlw	15	; case 8
  1532  0079  1903               	skipnz
  1533  007A  2842               	goto	i1l1072
  1534  007B  3A01               	xorlw	1	; case 9
  1535  007C  1903               	skipnz
  1536  007D  2845               	goto	i1l1074
  1537  007E  3A03               	xorlw	3	; case 10
  1538  007F  1903               	skipnz
  1539  0080  2848               	goto	i1l1076
  1540  0081  3A01               	xorlw	1	; case 11
  1541  0082  1903               	skipnz
  1542  0083  284B               	goto	i1l1078
  1543  0084  3A07               	xorlw	7	; case 12
  1544  0085  1903               	skipnz
  1545  0086  284E               	goto	i1l1080
  1546  0087  3A01               	xorlw	1	; case 13
  1547  0088  1903               	skipnz
  1548  0089  2851               	goto	i1l1082
  1549  008A  3A03               	xorlw	3	; case 14
  1550  008B  1903               	skipnz
  1551  008C  2833               	goto	i1l1062
  1552  008D  3A01               	xorlw	1	; case 15
  1553  008E  1903               	skipnz
  1554  008F  2854               	goto	i1l1086
  1555  0090  3A1F               	xorlw	31	; case 16
  1556  0091  1903               	skipnz
  1557  0092  2842               	goto	i1l1072
  1558  0093  3A30               	xorlw	48	; case 32
  1559  0094  1903               	skipnz
  1560  0095  2836               	goto	i1l1064
  1561  0096  3A10               	xorlw	16	; case 48
  1562  0097  1903               	skipnz
  1563  0098  284E               	goto	i1l1080
  1564  0099  3A70               	xorlw	112	; case 64
  1565  009A  1903               	skipnz
  1566  009B  2830               	goto	i1l1060
  1567  009C  3A10               	xorlw	16	; case 80
  1568  009D  1903               	skipnz
  1569  009E  2848               	goto	i1l1076
  1570  009F  3A30               	xorlw	48	; case 96
  1571  00A0  1903               	skipnz
  1572  00A1  283C               	goto	i1l1068
  1573  00A2  3A10               	xorlw	16	; case 112
  1574  00A3  1903               	skipnz
  1575  00A4  2833               	goto	i1l1062
  1576  00A5  3AF0               	xorlw	240	; case 128
  1577  00A6  1903               	skipnz
  1578  00A7  282D               	goto	i1l1058
  1579  00A8  3A10               	xorlw	16	; case 144
  1580  00A9  1903               	skipnz
  1581  00AA  2845               	goto	i1l1074
  1582  00AB  3A30               	xorlw	48	; case 160
  1583  00AC  1903               	skipnz
  1584  00AD  2839               	goto	i1l1066
  1585  00AE  3A10               	xorlw	16	; case 176
  1586  00AF  1903               	skipnz
  1587  00B0  2851               	goto	i1l1082
  1588  00B1  3A70               	xorlw	112	; case 192
  1589  00B2  1903               	skipnz
  1590  00B3  2833               	goto	i1l1062
  1591  00B4  3A10               	xorlw	16	; case 208
  1592  00B5  1903               	skipnz
  1593  00B6  284B               	goto	i1l1078
  1594  00B7  3A30               	xorlw	48	; case 224
  1595  00B8  1903               	skipnz
  1596  00B9  283F               	goto	i1l1070
  1597  00BA  3A10               	xorlw	16	; case 240
  1598  00BB  1903               	skipnz
  1599  00BC  2854               	goto	i1l1086
  1600  00BD  282A               	goto	i1l1056
  1601  00BE                     i1l214:
  1602  00BE  0008               	return
  1603  00BF                     __end_of_disp_val:
  1604                           
  1605                           	psect	text7
  1606  01E8                     __ptext7:	
  1607 ;; *************** function _ADC_val *****************
  1608 ;; Defined at:
  1609 ;;		line 9 in file "ADC.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  ADRES_L         1    wreg     unsigned char 
  1612 ;;  ADRES_H         1    0[COMMON] unsigned char 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  ADRES_L         1    0[COMMON] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         1       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0
  1626 ;;      Temps:          1       0       0       0       0
  1627 ;;      Totals:         2       0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_ISR
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _ADC_val
  1639  01E8                     _ADC_val:
  1640  01E8                     i1l1128:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _ADC_val: [wreg]
  1643                           
  1644                           
  1645                           ;ADC.c: 10:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
  1646  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1647  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1648  01EA  081E               	movf	30,w	;volatile
  1649  01EB  00F1               	movwf	??_ADC_val
  1650  01EC  0871               	movf	??_ADC_val,w
  1651  01ED  00A3               	movwf	_VALOR_ADC
  1652                           
  1653                           ;ADC.c: 11:     return VALOR_ADC;
  1654  01EE  0823               	movf	_VALOR_ADC,w
  1655  01EF                     i1l167:
  1656  01EF  0008               	return
  1657  01F0                     __end_of_ADC_val:
  1658                           
  1659                           	psect	text8
  1660  01C6                     __ptext8:	
  1661 ;; *************** function _ADC_nib_2 *****************
  1662 ;; Defined at:
  1663 ;;		line 19 in file "ADC.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  val_ADC_1       1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  val_ADC_1       1    2[COMMON] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      unsigned char 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         1       0       0       0       0
  1679 ;;      Temps:          2       0       0       0       0
  1680 ;;      Totals:         3       0       0       0       0
  1681 ;;Total ram usage:        3 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_ISR
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           
  1691                           ;psect for function _ADC_nib_2
  1692  01C6                     _ADC_nib_2:
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _ADC_nib_2: [wreg+status,2+status,0]
  1696                           ;ADC_nib_2@val_ADC_1 stored from wreg
  1697  01C6  00F2               	movwf	ADC_nib_2@val_ADC_1
  1698  01C7                     i1l1138:
  1699                           
  1700                           ;ADC.c: 20:     VALOR_SWAP = (((val_ADC_1 & 0x0F)<<4) | ((val_ADC_1 & 0x0F)>>4));
  1701  01C7  0872               	movf	ADC_nib_2@val_ADC_1,w
  1702  01C8  390F               	andlw	15
  1703  01C9  00F0               	movwf	??_ADC_nib_2
  1704  01CA  3003               	movlw	3
  1705  01CB                     u16_25:
  1706  01CB  1003               	clrc
  1707  01CC  0DF0               	rlf	??_ADC_nib_2,f
  1708  01CD  3EFF               	addlw	-1
  1709  01CE  1D03               	skipz
  1710  01CF  29CB               	goto	u16_25
  1711  01D0  1003               	clrc
  1712  01D1  0D70               	rlf	??_ADC_nib_2,w
  1713  01D2  00F1               	movwf	??_ADC_nib_2+1
  1714  01D3  0871               	movf	??_ADC_nib_2+1,w
  1715  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1716  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1717  01D6  00A2               	movwf	_VALOR_SWAP
  1718  01D7                     i1l1140:
  1719                           
  1720                           ;ADC.c: 21:     VALOR_NIB2 = (VALOR_SWAP & 15);
  1721  01D7  0822               	movf	_VALOR_SWAP,w
  1722  01D8  390F               	andlw	15
  1723  01D9  00F0               	movwf	??_ADC_nib_2
  1724  01DA  0870               	movf	??_ADC_nib_2,w
  1725  01DB  00A0               	movwf	_VALOR_NIB2
  1726  01DC                     i1l1142:
  1727                           
  1728                           ;ADC.c: 22:     return VALOR_NIB2;
  1729  01DC  0820               	movf	_VALOR_NIB2,w
  1730  01DD                     i1l173:
  1731  01DD  0008               	return
  1732  01DE                     __end_of_ADC_nib_2:
  1733                           
  1734                           	psect	text9
  1735  01DE                     __ptext9:	
  1736 ;; *************** function _ADC_nib_1 *****************
  1737 ;; Defined at:
  1738 ;;		line 14 in file "ADC.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  val_ADC_        1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  val_ADC_        1    1[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      unsigned char 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0
  1754 ;;      Temps:          1       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_ISR
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _ADC_nib_1
  1767  01DE                     _ADC_nib_1:
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _ADC_nib_1: [wreg+status,2]
  1771                           ;ADC_nib_1@val_ADC_ stored from wreg
  1772  01DE  00F1               	movwf	ADC_nib_1@val_ADC_
  1773  01DF                     i1l1132:
  1774                           
  1775                           ;ADC.c: 15:     VALOR_NIB1 = (val_ADC_ & 15);
  1776  01DF  0871               	movf	ADC_nib_1@val_ADC_,w
  1777  01E0  390F               	andlw	15
  1778  01E1  00F0               	movwf	??_ADC_nib_1
  1779  01E2  0870               	movf	??_ADC_nib_1,w
  1780  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1781  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1782  01E5  00A1               	movwf	_VALOR_NIB1
  1783  01E6                     i1l1134:
  1784                           
  1785                           ;ADC.c: 16:     return VALOR_NIB1;
  1786  01E6  0821               	movf	_VALOR_NIB1,w
  1787  01E7                     i1l170:
  1788  01E7  0008               	return
  1789  01E8                     __end_of_ADC_nib_1:
  1790  007E                     btemp	set	126	;btemp
  1791  007E                     wtemp0	set	126
  1792                           
  1793                           	psect	config
  1794                           
  1795                           ;Config register CONFIG1 @ 0x2007
  1796                           ;	Oscillator Selection bits
  1797                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1798                           ;	Watchdog Timer Enable bit
  1799                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1800                           ;	Power-up Timer Enable bit
  1801                           ;	PWRTE = OFF, PWRT disabled
  1802                           ;	RE3/MCLR pin function select bit
  1803                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1804                           ;	Code Protection bit
  1805                           ;	CP = OFF, Program memory code protection is disabled
  1806                           ;	Data Code Protection bit
  1807                           ;	CPD = OFF, Data memory code protection is disabled
  1808                           ;	Brown Out Reset Selection bits
  1809                           ;	BOREN = OFF, BOR disabled
  1810                           ;	Internal External Switchover bit
  1811                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1812                           ;	Fail-Safe Clock Monitor Enabled bit
  1813                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1814                           ;	Low Voltage Programming Enable bit
  1815                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1816                           ;	In-Circuit Debugger Mode bit
  1817                           ;	DEBUG = 0x1, unprogrammed default
  1818  2007                     	org	8199
  1819  2007  20D4               	dw	8404
  1820                           
  1821                           ;Config register CONFIG2 @ 0x2008
  1822                           ;	Brown-out Reset Selection bit
  1823                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1824                           ;	Flash Program Memory Self Write Enable bits
  1825                           ;	WRT = OFF, Write protection off
  1826  2008                     	org	8200
  1827  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC_nib_2
    _Mostrar->_disp_val

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ADC
                               _cont
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cont                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     142
                                              3 COMMON     5     5      0
                          _ADC_nib_1
                          _ADC_nib_2
                            _ADC_val
                            _Mostrar
 ---------------------------------------------------------------------------------
 (3) _Mostrar                                              0     0      0      22
                           _disp_val
 ---------------------------------------------------------------------------------
 (4) _disp_val                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_val                                              3     2      1      76
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _ADC_nib_2                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_nib_1                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _cont
   _setup

 _ISR (ROOT)
   _ADC_nib_1
   _ADC_nib_2
   _ADC_val
   _Mostrar
     _disp_val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 16:35:53 2021

     __size_of_ADC_nib_1 000A       __size_of_ADC_nib_2 0018                      l112 0182  
                    l121 0177                      l124 01F4                      l127 01F9  
                    _ADC 01F5                      u270 0192                      u271 0191  
                    u280 019C                      u281 019B                      _ISR 00BF  
                    fsr0 0004          __end_of_ADC_val 01F0                     ?_ADC 0070  
                   ?_ISR 0070                     l1200 0173                     l1202 0175  
                   l1204 01F0                     l1206 01F5                     l1160 0137  
                   l1170 0149                     l1162 013F                     l1250 0179  
                   l1180 015D                     l1172 014C                     l1164 0140  
                   l1260 0196                     l1252 017E                     l1190 0167  
                   l1182 0161                     l1174 014F                     l1166 0143  
                   l1262 019C                     l1254 0181                     l1192 0168  
                   l1184 0162                     l1176 0152                     l1168 0146  
                   l1256 018C                     l1248 0178                     l1194 0169  
                   l1186 0163                     l1178 0159                     l1258 0192  
                   l1196 016D                     l1188 0164                     l1198 016F  
                   _FLAG 0078                     _IOCB 0096                     i1l95 00C9  
                   i1l99 00D6                     _TMR0 0001                     _cont 01F0  
                   _main 0178                     btemp 007E                     start 000E  
                  ??_ADC 0000                    ??_ISR 0073          __end_of_Mostrar 01C6  
                  ?_cont 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l102 0122                    i1l107 012E                    i1l133 01C5  
                  i1l214 00BE                    i1l170 01E7                    i1l173 01DD  
                  i1l167 01EF                    u20_20 00C9                    u20_21 00C8  
                  u21_20 00CD                    u21_21 00CC                    u22_20 00D6  
                  u22_21 00D5                    u23_20 00DA                    u23_21 00D9  
                  u24_20 00E6                    u24_21 00E5                    u16_25 01CB  
                  u17_20 01AC                    u25_20 0122                    u17_21 01AB  
                  u25_21 0121                    u18_20 01BC                    u26_20 0126  
                  u18_21 01BB                    u26_21 0125                    u19_20 00C3  
                  u19_21 00C2                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u29_27 00EB                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 0137                    pclath 000A                    status 0003  
      __end_of_ADC_nib_1 01E8        __end_of_ADC_nib_2 01DE                    wtemp0 007E  
         ADC_val@ADRES_H 0070           ADC_val@ADRES_L 0070          __initialization 0011  
           __end_of_cont 01F5             __end_of_main 01A3                ??_ADC_val 0071  
                 ??_cont 0000                   ??_main 0000                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1122 0057  
                 i1l1210 00C3                   i1l1132 01DF                   i1l1140 01D7  
                 i1l1060 0030                   i1l1220 00DA                   i1l1134 01E6  
                 i1l1142 01DC                   i1l1070 003F                   i1l1062 0033  
                 i1l1054 0023                   i1l1150 01AC                   i1l1230 00F0  
                 i1l1214 00CD                   i1l1222 00DF                   i1l1128 01E8  
                 i1l1080 004E                   i1l1072 0042                   i1l1064 0036  
                 i1l1056 002A                   i1l1152 01B2                   i1l1232 00F4  
                 i1l1240 011C                   i1l1224 00E0                   i1l1216 00D2  
                 i1l1208 00BF                   i1l1138 01C7                   i1l1082 0051  
                 i1l1074 0045                   i1l1066 0039                   i1l1058 002D  
                 i1l1154 01B6                   i1l1146 01A3                   i1l1242 0126  
                 i1l1234 0103                   i1l1226 00E6                   i1l1076 0048  
                 i1l1068 003C                   i1l1156 01BC                   i1l1148 01A6  
                 i1l1244 0127                   i1l1236 010C                   i1l1228 00E7  
                 i1l1086 0054                   i1l1078 004B                   i1l1158 01C2  
                 i1l1246 0129                   i1l1238 0117                   i1l1284 005F  
                 _INTCON 000B                   _OSCCON 008F                   _TMR0IF 005A  
              ??_Mostrar 0073         __end_of_disp_val 00BF       ADC_nib_2@val_ADC_1 0072  
                 saved_w 007E  __end_of__initialization 001E           __pcstackCOMMON 0070  
          __end_of_setup 0178                  ??_setup 0000               __pbssBANK0 0020  
             __pmaintext 0178               __pintentry 0004                  _ADC_res 007C  
                _ADC_val 01E8                ?_disp_val 0070                _ADC_nib_1 01DE  
              _ADC_nib_2 01C6                  _Mostrar 01A3                  __ptext1 0137  
                __ptext2 01F0                  __ptext3 01F5                  __ptext4 00BF  
                __ptext5 01A3                  __ptext6 0022                  __ptext7 01E8  
                __ptext8 01C6                  __ptext9 01DE             __size_of_ADC 0005  
           __size_of_ISR 0078               ??_disp_val 0070     end_of_initialization 001E  
             ?_ADC_nib_1 0070               ?_ADC_nib_2 0070                _VALOR_ADC 0023  
             _timer_cont 007A                _PORTBbits 0006                _PORTEbits 0009  
    start_initialization 0011              __end_of_ADC 01FA              __end_of_ISR 0137  
            ??_ADC_nib_1 0070              ??_ADC_nib_2 0070        ADC_nib_1@val_ADC_ 0071  
               ?_ADC_val 0070              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0000        __size_of_disp_val 009D                 ?_Mostrar 0070  
         __size_of_setup 0041        interrupt_function 0004                 _NIB1_res 007B  
               _NIB2_res 0024                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F         __size_of_ADC_val 0008  
       __size_of_Mostrar 0023                 _disp_val 0022                 _contador 007D  
          __size_of_cont 0005            __size_of_main 002B               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F               _VALOR_NIB1 0021  
             _VALOR_NIB2 0020               _VALOR_SWAP 0022      disp_val@val_display 0072  
             _OPTION_REG 0081  
