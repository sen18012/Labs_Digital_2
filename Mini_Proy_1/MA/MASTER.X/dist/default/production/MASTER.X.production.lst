

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 21:01:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0019                     _TXREG	set	25
   375  0018                     _RCSTAbits	set	24
   376  000B                     _INTCONbits	set	11
   377  000B                     _INTCON	set	11
   378  000C                     _PIR1bits	set	12
   379  0009                     _PORTE	set	9
   380  0008                     _PORTD	set	8
   381  0007                     _PORTC	set	7
   382  0006                     _PORTB	set	6
   383  0005                     _PORTA	set	5
   384  001A                     _RCREG	set	26
   385  0049                     _RE1	set	73
   386  0048                     _RE0	set	72
   387  0065                     _RCIF	set	101
   388  0098                     _TXSTAbits	set	152
   389  0099                     _SPBRG	set	153
   390  009A                     _SPBRGH	set	154
   391  0081                     _OPTION_REG	set	129
   392  008C                     _PIE1bits	set	140
   393  009F                     _ADCON1	set	159
   394  0089                     _TRISE	set	137
   395  0087                     _TRISC	set	135
   396  0086                     _TRISB	set	134
   397  0085                     _TRISA	set	133
   398  0088                     _TRISD	set	136
   399  04C1                     _TRMT	set	1217
   400  043F                     _TRISC7	set	1087
   401  0189                     _ANSELH	set	393
   402  0188                     _ANSEL	set	392
   403                           
   404                           	psect	strings
   405  0199                     __pstrings:
   406  0199                     stringtab:
   407  0199                     __stringtab:
   408  0199                     stringcode:	
   409                           ;	String table - string pointers are 1 byte each
   410                           
   411  0199                     stringdir:
   412  0199  3001               	movlw	high stringdir
   413  019A  008A               	movwf	10
   414  019B  0804               	movf	4,w
   415  019C  0A84               	incf	4,f
   416  019D  0782               	addwf	2,f
   417  019E                     __stringbase:
   418  019E  3400               	retlw	0
   419  019F                     __end_of__stringtab:
   420  019F                     STR_4:
   421  019F  3453               	retlw	83	;'S'
   422  01A0  3431               	retlw	49	;'1'
   423  01A1  3420               	retlw	32	;' '
   424  01A2  3420               	retlw	32	;' '
   425  01A3  3420               	retlw	32	;' '
   426  01A4  3453               	retlw	83	;'S'
   427  01A5  3432               	retlw	50	;'2'
   428  01A6  3420               	retlw	32	;' '
   429  01A7  3420               	retlw	32	;' '
   430  01A8  3420               	retlw	32	;' '
   431  01A9  3453               	retlw	83	;'S'
   432  01AA  3433               	retlw	51	;'3'
   433  01AB  3400               	retlw	0
   434  01AC                     STR_1:
   435  01AC  3453               	retlw	83	;'S'
   436  01AD  3431               	retlw	49	;'1'
   437  01AE  343A               	retlw	58	;':'
   438  01AF  3400               	retlw	0
   439  01B0                     STR_2:
   440  01B0  3453               	retlw	83	;'S'
   441  01B1  3432               	retlw	50	;'2'
   442  01B2  343A               	retlw	58	;':'
   443  01B3  3400               	retlw	0
   444  01B4                     STR_3:
   445  01B4  3453               	retlw	83	;'S'
   446  01B5  3433               	retlw	51	;'3'
   447  01B6  343A               	retlw	58	;':'
   448  01B7  3400               	retlw	0
   449                           
   450                           	psect	cinit
   451  000F                     start_initialization:	
   452                           ; #config settings
   453                           
   454  000F                     __initialization:
   455                           
   456                           ; Clear objects allocated to COMMON
   457  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   458  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK0
   461  0011  1383               	bcf	3,7	;select IRP bank0
   462  0012  3020               	movlw	low __pbssBANK0
   463  0013  0084               	movwf	4
   464  0014  3044               	movlw	low (__pbssBANK0+36)
   465  0015  120A  118A  221F  120A  118A  	fcall	clear_ram0
   466  001A                     end_of_initialization:	
   467                           ;End of C runtime variable initialization code
   468                           
   469  001A                     __end_of__initialization:
   470  001A  0183               	clrf	3
   471  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMMON
   474  0079                     __pbssCOMMON:
   475  0079                     _USART_LEER:
   476  0079                     	ds	1
   477  007A                     _cont:
   478  007A                     	ds	1
   479                           
   480                           	psect	bssBANK0
   481  0020                     __pbssBANK0:
   482  0020                     _data2:
   483  0020                     	ds	16
   484  0030                     _data1:
   485  0030                     	ds	20
   486                           
   487                           	psect	clrtext
   488  021F                     clear_ram0:	
   489                           ;	Called with FSR containing the base address, and
   490                           ;	W with the last address+1
   491                           
   492  021F  0064               	clrwdt	;clear the watchdog before getting into this loop
   493  0220                     clrloop0:
   494  0220  0180               	clrf	0	;clear RAM location pointed to by FSR
   495  0221  0A84               	incf	4,f	;increment pointer
   496  0222  0604               	xorwf	4,w	;XOR with final address
   497  0223  1903               	btfsc	3,2	;have we reached the end yet?
   498  0224  3400               	retlw	0	;all done for this memory range, return
   499  0225  0604               	xorwf	4,w	;XOR again to restore value
   500  0226  2A20               	goto	clrloop0	;do the next byte
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_setup:
   505  0070                     ?_Lcd_Init:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd_Clear:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd_Write_String:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_USART_STRING:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_USART_ESCRITURA:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_ISR:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ??_ISR:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_main:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_Lcd_Port:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_Lcd_Cmd:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_Lcd_Write_Char:	
   536                           ; 1 bytes @ 0x0
   537                           
   538                           
   539                           ; 1 bytes @ 0x0
   540  0070                     	ds	3
   541  0073                     ??_setup:
   542  0073                     ??_USART_ESCRITURA:	
   543                           ; 1 bytes @ 0x3
   544                           
   545  0073                     ??_Lcd_Port:	
   546                           ; 1 bytes @ 0x3
   547                           
   548  0073                     ?_sprintf:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     Lcd_Port@a:	
   552                           ; 2 bytes @ 0x3
   553                           
   554  0073                     USART_ESCRITURA@a:	
   555                           ; 1 bytes @ 0x3
   556                           
   557  0073                     sprintf@f:	
   558                           ; 1 bytes @ 0x3
   559                           
   560                           
   561                           ; 1 bytes @ 0x3
   562  0073                     	ds	1
   563  0074                     ??_sprintf:
   564  0074                     ??_USART_STRING:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0074                     ??_Lcd_Cmd:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0074                     ??_Lcd_Write_Char:	
   571                           ; 1 bytes @ 0x4
   572                           
   573                           
   574                           ; 1 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     Lcd_Write_Char@a:
   577  0075                     USART_STRING@i:	
   578                           ; 1 bytes @ 0x5
   579                           
   580  0075                     sprintf@ap:	
   581                           ; 1 bytes @ 0x5
   582                           
   583                           
   584                           ; 1 bytes @ 0x5
   585  0075                     	ds	1
   586  0076                     ??_Lcd_Write_String:
   587  0076                     Lcd_Cmd@a:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     USART_STRING@a:	
   591                           ; 1 bytes @ 0x6
   592                           
   593  0076                     sprintf@c:	
   594                           ; 1 bytes @ 0x6
   595                           
   596  0076                     Lcd_Write_String@i:	
   597                           ; 1 bytes @ 0x6
   598                           
   599                           
   600                           ; 2 bytes @ 0x6
   601  0076                     	ds	1
   602  0077                     ??_Lcd_Init:
   603  0077                     ??_Lcd_Clear:	
   604                           ; 1 bytes @ 0x7
   605                           
   606  0077                     ?_Lcd_Set_Cursor:	
   607                           ; 1 bytes @ 0x7
   608                           
   609  0077                     Lcd_Set_Cursor@b:	
   610                           ; 1 bytes @ 0x7
   611                           
   612  0077                     sprintf@sp:	
   613                           ; 1 bytes @ 0x7
   614                           
   615                           
   616                           ; 1 bytes @ 0x7
   617  0077                     	ds	1
   618  0078                     ??_Lcd_Set_Cursor:
   619  0078                     Lcd_Write_String@a:	
   620                           ; 1 bytes @ 0x8
   621                           
   622                           
   623                           ; 1 bytes @ 0x8
   624  0078                     	ds	1
   625                           
   626                           	psect	cstackBANK0
   627  0044                     __pcstackBANK0:
   628  0044                     Lcd_Set_Cursor@a:
   629                           
   630                           ; 1 bytes @ 0x0
   631  0044                     	ds	1
   632  0045                     Lcd_Set_Cursor@temp:
   633                           
   634                           ; 1 bytes @ 0x1
   635  0045                     	ds	1
   636  0046                     ??_main:
   637                           
   638                           ; 1 bytes @ 0x2
   639  0046                     	ds	1
   640                           
   641                           	psect	maintext
   642  001E                     __pmaintext:	
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 90 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : B00/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          0       1       0       0       0
   665 ;;      Totals:         0       1       0       0       0
   666 ;;Total ram usage:        1 bytes
   667 ;; Hardware stack levels required when called:    4
   668 ;; This function calls:
   669 ;;		_Lcd_Clear
   670 ;;		_Lcd_Init
   671 ;;		_Lcd_Set_Cursor
   672 ;;		_Lcd_Write_String
   673 ;;		_USART_ESCRITURA
   674 ;;		_USART_STRING
   675 ;;		_setup
   676 ;;		_sprintf
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _main
   684  001E                     _main:
   685  001E                     l1025:	
   686                           ;incstack = 0
   687                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   688                           
   689                           
   690                           ;main.c: 91:     setup();
   691  001E  120A  118A  20CF  120A  118A  	fcall	_setup
   692  0023                     l1027:
   693                           
   694                           ;main.c: 93:     TRISD = 0x00;
   695  0023  1683               	bsf	3,5	;RP0=1, select bank1
   696  0024  1303               	bcf	3,6	;RP1=0, select bank1
   697  0025  0188               	clrf	8	;volatile
   698  0026                     l1029:
   699                           
   700                           ;main.c: 94:     Lcd_Init();
   701  0026  120A  118A  2084  120A  118A  	fcall	_Lcd_Init
   702  002B                     l1031:
   703                           
   704                           ;main.c: 95:     Lcd_Clear();
   705  002B  120A  118A  2206  120A  118A  	fcall	_Lcd_Clear
   706  0030                     l1033:
   707                           
   708                           ;main.c: 96:     Lcd_Set_Cursor(1, 1);
   709  0030  01F7               	clrf	Lcd_Set_Cursor@b
   710  0031  0AF7               	incf	Lcd_Set_Cursor@b,f
   711  0032  3001               	movlw	1
   712  0033  120A  118A  214E  120A  118A  	fcall	_Lcd_Set_Cursor
   713  0038                     l1035:
   714                           
   715                           ;main.c: 97:     Lcd_Write_String("S1:");
   716  0038  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   717  0039  120A  118A  2174  120A  118A  	fcall	_Lcd_Write_String
   718  003E                     l1037:
   719                           
   720                           ;main.c: 98:     Lcd_Set_Cursor(1, 7);
   721  003E  3007               	movlw	7
   722  003F  1283               	bcf	3,5	;RP0=0, select bank0
   723  0040  1303               	bcf	3,6	;RP1=0, select bank0
   724  0041  00C6               	movwf	??_main
   725  0042  0846               	movf	??_main,w
   726  0043  00F7               	movwf	Lcd_Set_Cursor@b
   727  0044  3001               	movlw	1
   728  0045  120A  118A  214E  120A  118A  	fcall	_Lcd_Set_Cursor
   729  004A                     l1039:
   730                           
   731                           ;main.c: 99:     Lcd_Write_String("S2:");
   732  004A  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   733  004B  120A  118A  2174  120A  118A  	fcall	_Lcd_Write_String
   734  0050                     l1041:
   735                           
   736                           ;main.c: 100:     Lcd_Set_Cursor(1, 14);
   737  0050  300E               	movlw	14
   738  0051  1283               	bcf	3,5	;RP0=0, select bank0
   739  0052  1303               	bcf	3,6	;RP1=0, select bank0
   740  0053  00C6               	movwf	??_main
   741  0054  0846               	movf	??_main,w
   742  0055  00F7               	movwf	Lcd_Set_Cursor@b
   743  0056  3001               	movlw	1
   744  0057  120A  118A  214E  120A  118A  	fcall	_Lcd_Set_Cursor
   745  005C                     l1043:
   746                           
   747                           ;main.c: 101:     Lcd_Write_String("S3:");
   748  005C  3016               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   749  005D  120A  118A  2174  120A  118A  	fcall	_Lcd_Write_String
   750  0062                     l1045:
   751                           
   752                           ;main.c: 108:         sprintf(data1, "S1   S2   S3");
   753  0062  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   754  0063  1283               	bcf	3,5	;RP0=0, select bank0
   755  0064  1303               	bcf	3,6	;RP1=0, select bank0
   756  0065  00C6               	movwf	??_main
   757  0066  0846               	movf	??_main,w
   758  0067  00F3               	movwf	sprintf@f
   759  0068  3030               	movlw	(low (_data1| 0))& (0+255)
   760  0069  120A  118A  2126  120A  118A  	fcall	_sprintf
   761  006E                     l1047:
   762                           
   763                           ;main.c: 109:         USART_STRING(data1);
   764  006E  3030               	movlw	(low (_data1| 0))& (0+255)
   765  006F  120A  118A  21B8  120A  118A  	fcall	_USART_STRING
   766  0074                     l1049:
   767                           
   768                           ;main.c: 110:         USART_ESCRITURA(13);
   769  0074  300D               	movlw	13
   770  0075  120A  118A  2213  120A  118A  	fcall	_USART_ESCRITURA
   771  007A                     l1051:
   772                           
   773                           ;main.c: 111:         USART_ESCRITURA(10);
   774  007A  300A               	movlw	10
   775  007B  120A  118A  2213  120A  118A  	fcall	_USART_ESCRITURA
   776  0080  2862               	goto	l1045
   777  0081  120A  118A  280C   	ljmp	start
   778  0084                     __end_of_main:
   779                           
   780                           	psect	text1
   781  0126                     __ptext1:	
   782 ;; *************** function _sprintf *****************
   783 ;; Defined at:
   784 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  sp              1    wreg     PTR unsigned char 
   787 ;;		 -> data1(20), 
   788 ;;  f               1    3[COMMON] PTR const unsigned char 
   789 ;;		 -> STR_4(13), 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  sp              1    7[COMMON] PTR unsigned char 
   792 ;;		 -> data1(20), 
   793 ;;  tmpval          4    0        struct .
   794 ;;  cp              2    0        PTR const unsigned char 
   795 ;;  len             2    0        unsigned int 
   796 ;;  val             2    0        unsigned int 
   797 ;;  c               1    6[COMMON] unsigned char 
   798 ;;  ap              1    5[COMMON] PTR void [1]
   799 ;;		 -> ?_sprintf(2), 
   800 ;;  flag            1    0        unsigned char 
   801 ;;  prec            1    0        char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    3[COMMON] int 
   804 ;; Registers used:
   805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         1       0       0       0       0
   812 ;;      Locals:         3       0       0       0       0
   813 ;;      Temps:          1       0       0       0       0
   814 ;;      Totals:         5       0       0       0       0
   815 ;;Total ram usage:        5 bytes
   816 ;; Hardware stack levels used:    2
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _sprintf
   827  0126                     _sprintf:
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath]
   831                           ;sprintf@sp stored from wreg
   832  0126  00F7               	movwf	sprintf@sp
   833  0127                     l931:
   834                           
   835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   836  0127  3074               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   837  0128  00F4               	movwf	??_sprintf
   838  0129  0874               	movf	??_sprintf,w
   839  012A  00F5               	movwf	sprintf@ap
   840                           
   841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   842  012B  2937               	goto	l937
   843  012C                     l933:
   844                           
   845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   846  012C  0876               	movf	sprintf@c,w
   847  012D  00F4               	movwf	??_sprintf
   848  012E  0877               	movf	sprintf@sp,w
   849  012F  0084               	movwf	4
   850  0130  0874               	movf	??_sprintf,w
   851  0131  1383               	bcf	3,7	;select IRP bank0
   852  0132  0080               	movwf	0
   853  0133                     l935:
   854  0133  3001               	movlw	1
   855  0134  00F4               	movwf	??_sprintf
   856  0135  0874               	movf	??_sprintf,w
   857  0136  07F7               	addwf	sprintf@sp,f
   858  0137                     l937:	
   859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   860                           
   861                           
   862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   863  0137  3001               	movlw	1
   864  0138  07F3               	addwf	sprintf@f,f
   865  0139  30FF               	movlw	-1
   866  013A  0773               	addwf	sprintf@f,w
   867  013B  0084               	movwf	4
   868  013C  120A  118A  2199  120A  118A  	fcall	stringdir
   869  0141  00F4               	movwf	??_sprintf
   870  0142  0874               	movf	??_sprintf,w
   871  0143  00F6               	movwf	sprintf@c
   872  0144  0876               	movf	sprintf@c,w
   873  0145  1D03               	btfss	3,2
   874  0146  2948               	goto	u141
   875  0147  2949               	goto	u140
   876  0148                     u141:
   877  0148  292C               	goto	l933
   878  0149                     u140:
   879  0149                     l939:
   880                           
   881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
   882  0149  0877               	movf	sprintf@sp,w
   883  014A  0084               	movwf	4
   884  014B  1383               	bcf	3,7	;select IRP bank0
   885  014C  0180               	clrf	0
   886  014D                     l245:
   887  014D  0008               	return
   888  014E                     __end_of_sprintf:
   889                           
   890                           	psect	text2
   891  00CF                     __ptext2:	
   892 ;; *************** function _setup *****************
   893 ;; Defined at:
   894 ;;		line 127 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _setup
   924  00CF                     _setup:
   925  00CF                     l781:	
   926                           ;incstack = 0
   927                           ; Regs used in _setup: [wreg+status,2]
   928                           
   929                           
   930                           ;main.c: 128:     ANSEL = 0b00000011;
   931  00CF  3003               	movlw	3
   932  00D0  1683               	bsf	3,5	;RP0=1, select bank3
   933  00D1  1703               	bsf	3,6	;RP1=1, select bank3
   934  00D2  0088               	movwf	8	;volatile
   935  00D3                     l783:
   936                           
   937                           ;main.c: 129:     ANSELH = 0;
   938  00D3  0189               	clrf	9	;volatile
   939  00D4                     l785:
   940                           
   941                           ;main.c: 130:     TRISA = 0b00000011;
   942  00D4  3003               	movlw	3
   943  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   944  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   945  00D7  0085               	movwf	5	;volatile
   946                           
   947                           ;main.c: 131:     TRISB = 0;
   948  00D8  0186               	clrf	6	;volatile
   949                           
   950                           ;main.c: 132:     TRISC = 0;
   951  00D9  0187               	clrf	7	;volatile
   952                           
   953                           ;main.c: 133:     TRISD = 0;
   954  00DA  0188               	clrf	8	;volatile
   955                           
   956                           ;main.c: 134:     TRISE = 0;
   957  00DB  0189               	clrf	9	;volatile
   958                           
   959                           ;main.c: 135:     PORTA = 0;
   960  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   961  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   962  00DE  0185               	clrf	5	;volatile
   963                           
   964                           ;main.c: 136:     PORTB = 0;
   965  00DF  0186               	clrf	6	;volatile
   966                           
   967                           ;main.c: 137:     PORTC = 0;
   968  00E0  0187               	clrf	7	;volatile
   969                           
   970                           ;main.c: 138:     PORTD = 0;
   971  00E1  0188               	clrf	8	;volatile
   972                           
   973                           ;main.c: 139:     PORTE = 0;
   974  00E2  0189               	clrf	9	;volatile
   975  00E3                     l787:
   976                           
   977                           ;main.c: 140:     TRISC7 = 1;
   978  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   979  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   980  00E5  1787               	bsf	7,7	;volatile
   981                           
   982                           ;main.c: 142:     ADCON1 = 0b00000000;
   983  00E6  019F               	clrf	31	;volatile
   984  00E7                     l789:
   985                           
   986                           ;main.c: 143:     PIE1bits.ADIE = 0;
   987  00E7  130C               	bcf	12,6	;volatile
   988  00E8                     l791:
   989                           
   990                           ;main.c: 144:     PIR1bits.ADIF = 0;
   991  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   992  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   993  00EA  130C               	bcf	12,6	;volatile
   994                           
   995                           ;main.c: 145:     OPTION_REG = 0b00000000;
   996  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   997  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   998  00ED  0181               	clrf	1	;volatile
   999                           
  1000                           ;main.c: 146:     INTCON = 0b00000000;
  1001  00EE  018B               	clrf	11	;volatile
  1002  00EF                     l793:
  1003                           
  1004                           ;main.c: 149:     INTCONbits.PEIE = 1;
  1005  00EF  170B               	bsf	11,6	;volatile
  1006  00F0                     l795:
  1007                           
  1008                           ;main.c: 150:     PIE1bits.RCIE = 1;
  1009  00F0  168C               	bsf	12,5	;volatile
  1010  00F1                     l797:
  1011                           
  1012                           ;main.c: 151:     INTCONbits.GIE = 1;
  1013  00F1  178B               	bsf	11,7	;volatile
  1014                           
  1015                           ;main.c: 154:     SPBRGH = 0;
  1016  00F2  019A               	clrf	26	;volatile
  1017  00F3                     l799:
  1018                           
  1019                           ;main.c: 155:     SPBRG = 12;
  1020  00F3  300C               	movlw	12
  1021  00F4  0099               	movwf	25	;volatile
  1022  00F5                     l801:
  1023                           
  1024                           ;main.c: 157:     TXSTAbits.TXEN = 1;
  1025  00F5  1698               	bsf	24,5	;volatile
  1026  00F6                     l803:
  1027                           
  1028                           ;main.c: 158:     TXSTAbits.SYNC = 0;
  1029  00F6  1218               	bcf	24,4	;volatile
  1030  00F7                     l805:
  1031                           
  1032                           ;main.c: 160:     RCSTAbits.SPEN = 1;
  1033  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00F9  1798               	bsf	24,7	;volatile
  1036  00FA                     l807:
  1037                           
  1038                           ;main.c: 161:     RCSTAbits.CREN = 1;
  1039  00FA  1618               	bsf	24,4	;volatile
  1040  00FB                     l809:
  1041                           
  1042                           ;main.c: 162:     RCREG = 0;
  1043  00FB  019A               	clrf	26	;volatile
  1044  00FC                     l94:
  1045  00FC  0008               	return
  1046  00FD                     __end_of_setup:
  1047                           
  1048                           	psect	text3
  1049  01B8                     __ptext3:	
  1050 ;; *************** function _USART_STRING *****************
  1051 ;; Defined at:
  1052 ;;		line 17 in file "USART.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  a               1    wreg     PTR unsigned char 
  1055 ;;		 -> data1(20), 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  a               1    6[COMMON] PTR unsigned char 
  1058 ;;		 -> data1(20), 
  1059 ;;  i               1    5[COMMON] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         2       0       0       0       0
  1071 ;;      Temps:          1       0       0       0       0
  1072 ;;      Totals:         3       0       0       0       0
  1073 ;;Total ram usage:        3 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    2
  1076 ;; This function calls:
  1077 ;;		_USART_ESCRITURA
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _USART_STRING
  1085  01B8                     _USART_STRING:
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1089                           ;USART_STRING@a stored from wreg
  1090  01B8  00F6               	movwf	USART_STRING@a
  1091  01B9                     l855:
  1092                           
  1093                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  1094  01B9  01F5               	clrf	USART_STRING@i
  1095  01BA  29CA               	goto	l861
  1096  01BB                     l857:
  1097                           
  1098                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  1099  01BB  0875               	movf	USART_STRING@i,w
  1100  01BC  0776               	addwf	USART_STRING@a,w
  1101  01BD  00F4               	movwf	??_USART_STRING
  1102  01BE  0874               	movf	??_USART_STRING,w
  1103  01BF  0084               	movwf	4
  1104  01C0  0800               	movf	0,w
  1105  01C1  120A  118A  2213  120A  118A  	fcall	_USART_ESCRITURA
  1106  01C6                     l859:
  1107                           
  1108                           ;USART.c: 21:     }
  1109  01C6  3001               	movlw	1
  1110  01C7  00F4               	movwf	??_USART_STRING
  1111  01C8  0874               	movf	??_USART_STRING,w
  1112  01C9  07F5               	addwf	USART_STRING@i,f
  1113  01CA                     l861:
  1114  01CA  0875               	movf	USART_STRING@i,w
  1115  01CB  0776               	addwf	USART_STRING@a,w
  1116  01CC  00F4               	movwf	??_USART_STRING
  1117  01CD  0874               	movf	??_USART_STRING,w
  1118  01CE  0084               	movwf	4
  1119  01CF  1383               	bcf	3,7	;select IRP bank0
  1120  01D0  0800               	movf	0,w
  1121  01D1  1D03               	btfss	3,2
  1122  01D2  29D4               	goto	u61
  1123  01D3  29D5               	goto	u60
  1124  01D4                     u61:
  1125  01D4  29BB               	goto	l857
  1126  01D5                     u60:
  1127  01D5                     l155:
  1128  01D5  0008               	return
  1129  01D6                     __end_of_USART_STRING:
  1130                           
  1131                           	psect	text4
  1132  0213                     __ptext4:	
  1133 ;; *************** function _USART_ESCRITURA *****************
  1134 ;; Defined at:
  1135 ;;		line 13 in file "USART.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  a               1    wreg     unsigned char 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  a               1    3[COMMON] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         1       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         1       0       0       0       0
  1153 ;;Total ram usage:        1 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;;		_USART_STRING
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _USART_ESCRITURA
  1166  0213                     _USART_ESCRITURA:
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _USART_ESCRITURA: [wreg]
  1170                           ;USART_ESCRITURA@a stored from wreg
  1171  0213  00F3               	movwf	USART_ESCRITURA@a
  1172  0214                     l757:
  1173  0214                     l146:	
  1174                           ;USART.c: 14:     while(!TRMT);
  1175                           
  1176  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0216  1C98               	btfss	24,1	;volatile
  1179  0217  2A19               	goto	u11
  1180  0218  2A1A               	goto	u10
  1181  0219                     u11:
  1182  0219  2A14               	goto	l146
  1183  021A                     u10:
  1184  021A                     l759:
  1185                           
  1186                           ;USART.c: 15:     TXREG = a;
  1187  021A  0873               	movf	USART_ESCRITURA@a,w
  1188  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1189  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1190  021D  0099               	movwf	25	;volatile
  1191  021E                     l149:
  1192  021E  0008               	return
  1193  021F                     __end_of_USART_ESCRITURA:
  1194                           
  1195                           	psect	text5
  1196  0174                     __ptext5:	
  1197 ;; *************** function _Lcd_Write_String *****************
  1198 ;; Defined at:
  1199 ;;		line 94 in file "LCD.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  a               1    wreg     PTR unsigned char 
  1202 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  a               1    8[COMMON] PTR unsigned char 
  1205 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1206 ;;  i               2    6[COMMON] int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         3       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         3       0       0       0       0
  1220 ;;Total ram usage:        3 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		_Lcd_Write_Char
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _Lcd_Write_String
  1232  0174                     _Lcd_Write_String:
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1236                           ;Lcd_Write_String@a stored from wreg
  1237  0174  00F8               	movwf	Lcd_Write_String@a
  1238  0175                     l1017:
  1239                           
  1240                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  1241  0175  01F6               	clrf	Lcd_Write_String@i
  1242  0176  01F7               	clrf	Lcd_Write_String@i+1
  1243  0177  298B               	goto	l1023
  1244  0178                     l1019:
  1245                           
  1246                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  1247  0178  0876               	movf	Lcd_Write_String@i,w
  1248  0179  0778               	addwf	Lcd_Write_String@a,w
  1249  017A  0084               	movwf	4
  1250  017B  120A  118A  2199  120A  118A  	fcall	stringdir
  1251  0180  120A  118A  21F0  120A  118A  	fcall	_Lcd_Write_Char
  1252  0185                     l1021:
  1253  0185  3001               	movlw	1
  1254  0186  07F6               	addwf	Lcd_Write_String@i,f
  1255  0187  1803               	skipnc
  1256  0188  0AF7               	incf	Lcd_Write_String@i+1,f
  1257  0189  3000               	movlw	0
  1258  018A  07F7               	addwf	Lcd_Write_String@i+1,f
  1259  018B                     l1023:
  1260  018B  0876               	movf	Lcd_Write_String@i,w
  1261  018C  0778               	addwf	Lcd_Write_String@a,w
  1262  018D  0084               	movwf	4
  1263  018E  120A  118A  2199  120A  118A  	fcall	stringdir
  1264  0193  3A00               	xorlw	0
  1265  0194  1D03               	skipz
  1266  0195  2997               	goto	u171
  1267  0196  2998               	goto	u170
  1268  0197                     u171:
  1269  0197  2978               	goto	l1019
  1270  0198                     u170:
  1271  0198                     l129:
  1272  0198  0008               	return
  1273  0199                     __end_of_Lcd_Write_String:
  1274                           
  1275                           	psect	text6
  1276  01F0                     __ptext6:	
  1277 ;; *************** function _Lcd_Write_Char *****************
  1278 ;; Defined at:
  1279 ;;		line 77 in file "LCD.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  a               1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  a               1    5[COMMON] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, pclath, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0
  1295 ;;      Temps:          1       0       0       0       0
  1296 ;;      Totals:         2       0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		_Lcd_Port
  1302 ;; This function is called by:
  1303 ;;		_Lcd_Write_String
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _Lcd_Write_Char
  1309  01F0                     _Lcd_Write_Char:
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1313                           ;Lcd_Write_Char@a stored from wreg
  1314  01F0  00F5               	movwf	Lcd_Write_Char@a
  1315  01F1                     l983:
  1316                           
  1317                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  1318  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1319  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1320  01F3  1409               	bsf	9,0	;volatile
  1321  01F4                     l985:
  1322                           
  1323                           ;LCD.c: 88:    Lcd_Port(a);
  1324  01F4  0875               	movf	Lcd_Write_Char@a,w
  1325  01F5  120A  118A  2227  120A  118A  	fcall	_Lcd_Port
  1326  01FA                     l987:
  1327                           
  1328                           ;LCD.c: 89:    RE1 = 1;
  1329  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1330  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1331  01FC  1489               	bsf	9,1	;volatile
  1332  01FD                     l989:
  1333                           
  1334                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1335  01FD  301A               	movlw	26
  1336  01FE  00F4               	movwf	??_Lcd_Write_Char
  1337  01FF                     u187:
  1338  01FF  0BF4               	decfsz	??_Lcd_Write_Char,f
  1339  0200  29FF               	goto	u187
  1340  0201  0000               	nop
  1341  0202                     l991:
  1342                           
  1343                           ;LCD.c: 91:    RE1 = 0;
  1344  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0204  1089               	bcf	9,1	;volatile
  1347  0205                     l123:
  1348  0205  0008               	return
  1349  0206                     __end_of_Lcd_Write_Char:
  1350                           
  1351                           	psect	text7
  1352  014E                     __ptext7:	
  1353 ;; *************** function _Lcd_Set_Cursor *****************
  1354 ;; Defined at:
  1355 ;;		line 37 in file "LCD.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  a               1    wreg     unsigned char 
  1358 ;;  b               1    7[COMMON] unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  a               1    0[BANK0 ] unsigned char 
  1361 ;;  temp            1    1[BANK0 ] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         1       0       0       0       0
  1372 ;;      Locals:         0       2       0       0       0
  1373 ;;      Temps:          1       0       0       0       0
  1374 ;;      Totals:         2       2       0       0       0
  1375 ;;Total ram usage:        4 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    3
  1378 ;; This function calls:
  1379 ;;		_Lcd_Cmd
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _Lcd_Set_Cursor
  1387  014E                     _Lcd_Set_Cursor:
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1391                           ;Lcd_Set_Cursor@a stored from wreg
  1392  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1393  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0150  00C4               	movwf	Lcd_Set_Cursor@a
  1395  0151                     l1005:
  1396                           
  1397                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  1398  0151  0344               	decf	Lcd_Set_Cursor@a,w
  1399  0152  1D03               	btfss	3,2
  1400  0153  2955               	goto	u151
  1401  0154  2956               	goto	u150
  1402  0155                     u151:
  1403  0155  2962               	goto	l1011
  1404  0156                     u150:
  1405  0156                     l1007:
  1406                           
  1407                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  1408  0156  0877               	movf	Lcd_Set_Cursor@b,w
  1409  0157  3E7F               	addlw	127
  1410  0158  00F8               	movwf	??_Lcd_Set_Cursor
  1411  0159  0878               	movf	??_Lcd_Set_Cursor,w
  1412  015A  00C5               	movwf	Lcd_Set_Cursor@temp
  1413  015B                     l1009:
  1414                           
  1415                           ;LCD.c: 46:   Lcd_Cmd(temp);
  1416  015B  0845               	movf	Lcd_Set_Cursor@temp,w
  1417  015C  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1418                           
  1419                           ;LCD.c: 47:  }
  1420  0161  2973               	goto	l117
  1421  0162                     l1011:
  1422  0162  3002               	movlw	2
  1423  0163  0644               	xorwf	Lcd_Set_Cursor@a,w
  1424  0164  1D03               	btfss	3,2
  1425  0165  2967               	goto	u161
  1426  0166  2968               	goto	u160
  1427  0167                     u161:
  1428  0167  2973               	goto	l117
  1429  0168                     u160:
  1430  0168                     l1013:
  1431                           
  1432                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  1433  0168  0877               	movf	Lcd_Set_Cursor@b,w
  1434  0169  3EBF               	addlw	191
  1435  016A  00F8               	movwf	??_Lcd_Set_Cursor
  1436  016B  0878               	movf	??_Lcd_Set_Cursor,w
  1437  016C  00C5               	movwf	Lcd_Set_Cursor@temp
  1438  016D                     l1015:
  1439                           
  1440                           ;LCD.c: 54:   Lcd_Cmd(temp);
  1441  016D  0845               	movf	Lcd_Set_Cursor@temp,w
  1442  016E  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1443  0173                     l117:
  1444  0173  0008               	return
  1445  0174                     __end_of_Lcd_Set_Cursor:
  1446                           
  1447                           	psect	text8
  1448  0084                     __ptext8:	
  1449 ;; *************** function _Lcd_Init *****************
  1450 ;; Defined at:
  1451 ;;		line 58 in file "LCD.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, pclath, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0
  1467 ;;      Temps:          2       0       0       0       0
  1468 ;;      Totals:         2       0       0       0       0
  1469 ;;Total ram usage:        2 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    3
  1472 ;; This function calls:
  1473 ;;		_Lcd_Cmd
  1474 ;;		_Lcd_Port
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _Lcd_Init
  1482  0084                     _Lcd_Init:
  1483  0084                     l993:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1486                           
  1487                           
  1488                           ;LCD.c: 60:   Lcd_Port(0x00);
  1489  0084  3000               	movlw	0
  1490  0085  120A  118A  2227  120A  118A  	fcall	_Lcd_Port
  1491  008A                     l995:
  1492                           
  1493                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1494  008A  3034               	movlw	52
  1495  008B  00F8               	movwf	??_Lcd_Init+1
  1496  008C  30F1               	movlw	241
  1497  008D  00F7               	movwf	??_Lcd_Init
  1498  008E                     u197:
  1499  008E  0BF7               	decfsz	??_Lcd_Init,f
  1500  008F  288E               	goto	u197
  1501  0090  0BF8               	decfsz	??_Lcd_Init+1,f
  1502  0091  288E               	goto	u197
  1503  0092  2893               	nop2
  1504  0093                     l997:
  1505                           
  1506                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  1507  0093  3030               	movlw	48
  1508  0094  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1509                           
  1510                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1511  0099  300D               	movlw	13
  1512  009A  00F8               	movwf	??_Lcd_Init+1
  1513  009B  30FB               	movlw	251
  1514  009C  00F7               	movwf	??_Lcd_Init
  1515  009D                     u207:
  1516  009D  0BF7               	decfsz	??_Lcd_Init,f
  1517  009E  289D               	goto	u207
  1518  009F  0BF8               	decfsz	??_Lcd_Init+1,f
  1519  00A0  289D               	goto	u207
  1520  00A1  28A2               	nop2
  1521  00A2                     l999:
  1522                           
  1523                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  1524  00A2  3030               	movlw	48
  1525  00A3  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1526  00A8                     l1001:
  1527                           
  1528                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1529  00A8  301D               	movlw	29
  1530  00A9  00F8               	movwf	??_Lcd_Init+1
  1531  00AA  3091               	movlw	145
  1532  00AB  00F7               	movwf	??_Lcd_Init
  1533  00AC                     u217:
  1534  00AC  0BF7               	decfsz	??_Lcd_Init,f
  1535  00AD  28AC               	goto	u217
  1536  00AE  0BF8               	decfsz	??_Lcd_Init+1,f
  1537  00AF  28AC               	goto	u217
  1538                           
  1539                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  1540  00B0  3030               	movlw	48
  1541  00B1  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1542                           
  1543                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  1544  00B6  3038               	movlw	56
  1545  00B7  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1546                           
  1547                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  1548  00BC  300C               	movlw	12
  1549  00BD  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1550                           
  1551                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  1552  00C2  3001               	movlw	1
  1553  00C3  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1554                           
  1555                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  1556  00C8  3006               	movlw	6
  1557  00C9  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1558  00CE                     l120:
  1559  00CE  0008               	return
  1560  00CF                     __end_of_Lcd_Init:
  1561                           
  1562                           	psect	text9
  1563  0206                     __ptext9:	
  1564 ;; *************** function _Lcd_Clear *****************
  1565 ;; Defined at:
  1566 ;;		line 31 in file "LCD.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    3
  1587 ;; This function calls:
  1588 ;;		_Lcd_Cmd
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _Lcd_Clear
  1596  0206                     _Lcd_Clear:
  1597  0206                     l1003:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1600                           
  1601                           
  1602                           ;LCD.c: 33:  Lcd_Cmd(0);
  1603  0206  3000               	movlw	0
  1604  0207  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1605                           
  1606                           ;LCD.c: 34:  Lcd_Cmd(1);
  1607  020C  3001               	movlw	1
  1608  020D  120A  118A  21D6  120A  118A  	fcall	_Lcd_Cmd
  1609  0212                     l111:
  1610  0212  0008               	return
  1611  0213                     __end_of_Lcd_Clear:
  1612                           
  1613                           	psect	text10
  1614  01D6                     __ptext10:	
  1615 ;; *************** function _Lcd_Cmd *****************
  1616 ;; Defined at:
  1617 ;;		line 22 in file "LCD.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  a               1    wreg     unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  a               1    6[COMMON] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         1       0       0       0       0
  1633 ;;      Temps:          2       0       0       0       0
  1634 ;;      Totals:         3       0       0       0       0
  1635 ;;Total ram usage:        3 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		_Lcd_Port
  1640 ;; This function is called by:
  1641 ;;		_Lcd_Clear
  1642 ;;		_Lcd_Set_Cursor
  1643 ;;		_Lcd_Init
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _Lcd_Cmd
  1649  01D6                     _Lcd_Cmd:
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1653                           ;Lcd_Cmd@a stored from wreg
  1654  01D6  00F6               	movwf	Lcd_Cmd@a
  1655  01D7                     l973:
  1656                           
  1657                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  1658  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1659  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1660  01D9  1009               	bcf	9,0	;volatile
  1661  01DA                     l975:
  1662                           
  1663                           ;LCD.c: 25:  Lcd_Port(a);
  1664  01DA  0876               	movf	Lcd_Cmd@a,w
  1665  01DB  120A  118A  2227  120A  118A  	fcall	_Lcd_Port
  1666  01E0                     l977:
  1667                           
  1668                           ;LCD.c: 26:  RE1 = 1;
  1669  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1670  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1671  01E2  1489               	bsf	9,1	;volatile
  1672  01E3                     l979:
  1673                           
  1674                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1675  01E3  300B               	movlw	11
  1676  01E4  00F5               	movwf	??_Lcd_Cmd+1
  1677  01E5  3062               	movlw	98
  1678  01E6  00F4               	movwf	??_Lcd_Cmd
  1679  01E7                     u227:
  1680  01E7  0BF4               	decfsz	??_Lcd_Cmd,f
  1681  01E8  29E7               	goto	u227
  1682  01E9  0BF5               	decfsz	??_Lcd_Cmd+1,f
  1683  01EA  29E7               	goto	u227
  1684  01EB  0000               	nop
  1685  01EC                     l981:
  1686                           
  1687                           ;LCD.c: 28:         RE1 = 0;
  1688  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1689  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1690  01EE  1089               	bcf	9,1	;volatile
  1691  01EF                     l108:
  1692  01EF  0008               	return
  1693  01F0                     __end_of_Lcd_Cmd:
  1694                           
  1695                           	psect	text11
  1696  0227                     __ptext11:	
  1697 ;; *************** function _Lcd_Port *****************
  1698 ;; Defined at:
  1699 ;;		line 17 in file "LCD.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  a               1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  a               1    3[COMMON] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         1       0       0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_Lcd_Cmd
  1724 ;;		_Lcd_Init
  1725 ;;		_Lcd_Write_Char
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _Lcd_Port
  1731  0227                     _Lcd_Port:
  1732                           
  1733                           ;incstack = 0
  1734                           ; Regs used in _Lcd_Port: [wreg]
  1735                           ;Lcd_Port@a stored from wreg
  1736  0227  00F3               	movwf	Lcd_Port@a
  1737  0228                     l971:
  1738                           
  1739                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  1740  0228  0873               	movf	Lcd_Port@a,w
  1741  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1742  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1743  022B  0088               	movwf	8	;volatile
  1744  022C                     l105:
  1745  022C  0008               	return
  1746  022D                     __end_of_Lcd_Port:
  1747                           
  1748                           	psect	text12
  1749  00FD                     __ptext12:	
  1750 ;; *************** function _ISR *****************
  1751 ;; Defined at:
  1752 ;;		line 64 in file "main.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          3       0       0       0       0
  1769 ;;      Totals:         3       0       0       0       0
  1770 ;;Total ram usage:        3 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		Interrupt level 1
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _ISR
  1781  00FD                     _ISR:
  1782  00FD                     i1l863:
  1783                           
  1784                           ;main.c: 65:     if (RCIF == 1) {
  1785  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1786  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1787  00FF  1E8C               	btfss	12,5	;volatile
  1788  0100  2902               	goto	u7_21
  1789  0101  2903               	goto	u7_20
  1790  0102                     u7_21:
  1791  0102  291F               	goto	i1l83
  1792  0103                     u7_20:
  1793  0103                     i1l865:
  1794                           
  1795                           ;main.c: 66:         USART_LEER = RCREG;
  1796  0103  081A               	movf	26,w	;volatile
  1797  0104  00F0               	movwf	??_ISR
  1798  0105  0870               	movf	??_ISR,w
  1799  0106  00F9               	movwf	_USART_LEER
  1800  0107                     i1l867:
  1801                           
  1802                           ;main.c: 67:         if (USART_LEER == '+') {
  1803  0107  302B               	movlw	43
  1804  0108  0679               	xorwf	_USART_LEER,w
  1805  0109  1D03               	btfss	3,2
  1806  010A  290C               	goto	u8_21
  1807  010B  290D               	goto	u8_20
  1808  010C                     u8_21:
  1809  010C  2913               	goto	i1l871
  1810  010D                     u8_20:
  1811  010D                     i1l869:
  1812                           
  1813                           ;main.c: 68:             cont = cont + 1;
  1814  010D  087A               	movf	_cont,w
  1815  010E  3E01               	addlw	1
  1816  010F  00F0               	movwf	??_ISR
  1817  0110  0870               	movf	??_ISR,w
  1818  0111  00FA               	movwf	_cont
  1819                           
  1820                           ;main.c: 69:             }
  1821  0112  291E               	goto	i1l875
  1822  0113                     i1l871:
  1823  0113  302D               	movlw	45
  1824  0114  0679               	xorwf	_USART_LEER,w
  1825  0115  1D03               	btfss	3,2
  1826  0116  2918               	goto	u9_21
  1827  0117  2919               	goto	u9_20
  1828  0118                     u9_21:
  1829  0118  291E               	goto	i1l875
  1830  0119                     u9_20:
  1831  0119                     i1l873:
  1832                           
  1833                           ;main.c: 71:             cont = cont - 1;
  1834  0119  087A               	movf	_cont,w
  1835  011A  3EFF               	addlw	255
  1836  011B  00F0               	movwf	??_ISR
  1837  011C  0870               	movf	??_ISR,w
  1838  011D  00FA               	movwf	_cont
  1839  011E                     i1l875:
  1840                           
  1841                           ;main.c: 73:         USART_LEER = 0;
  1842  011E  01F9               	clrf	_USART_LEER
  1843  011F                     i1l83:
  1844  011F  0872               	movf	??_ISR+2,w
  1845  0120  008A               	movwf	10
  1846  0121  0E71               	swapf	??_ISR+1,w
  1847  0122  0083               	movwf	3
  1848  0123  0EFE               	swapf	btemp,f
  1849  0124  0E7E               	swapf	btemp,w
  1850  0125  0009               	retfie
  1851  0126                     __end_of_ISR:
  1852  007E                     btemp	set	126	;btemp
  1853  007E                     wtemp0	set	126
  1854                           
  1855                           	psect	intentry
  1856  0004                     __pintentry:	
  1857                           ;incstack = 0
  1858                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1859                           
  1860  0004                     interrupt_function:
  1861  007E                     saved_w	set	btemp
  1862  0004  00FE               	movwf	btemp
  1863  0005  0E03               	swapf	3,w
  1864  0006  00F1               	movwf	??_ISR+1
  1865  0007  080A               	movf	10,w
  1866  0008  00F2               	movwf	??_ISR+2
  1867  0009  120A  118A  28FD   	ljmp	_ISR
  1868                           
  1869                           	psect	config
  1870                           
  1871                           ;Config register CONFIG1 @ 0x2007
  1872                           ;	Oscillator Selection bits
  1873                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1874                           ;	Watchdog Timer Enable bit
  1875                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1876                           ;	Power-up Timer Enable bit
  1877                           ;	PWRTE = OFF, PWRT disabled
  1878                           ;	RE3/MCLR pin function select bit
  1879                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1880                           ;	Code Protection bit
  1881                           ;	CP = OFF, Program memory code protection is disabled
  1882                           ;	Data Code Protection bit
  1883                           ;	CPD = OFF, Data memory code protection is disabled
  1884                           ;	Brown Out Reset Selection bits
  1885                           ;	BOREN = ON, BOR enabled
  1886                           ;	Internal External Switchover bit
  1887                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1888                           ;	Fail-Safe Clock Monitor Enabled bit
  1889                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1890                           ;	Low Voltage Programming Enable bit
  1891                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1892                           ;	In-Circuit Debugger Mode bit
  1893                           ;	DEBUG = 0x1, unprogrammed default
  1894  2007                     	org	8199
  1895  2007  23D2               	dw	9170
  1896                           
  1897                           ;Config register CONFIG2 @ 0x2008
  1898                           ;	Brown-out Reset Selection bit
  1899                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1900                           ;	Flash Program Memory Self Write Enable bits
  1901                           ;	WRT = OFF, Write protection off
  1902  2008                     	org	8200
  1903  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      3      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data1(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 20
		 -> data1(BANK0[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1218
                                              2 BANK0      1     1      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             17    16      1     200
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     105
                                              4 COMMON     3     3      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     282
                                              6 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     506
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
   _sprintf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 21:01:07 2021

                        pc 0002                         l94 00FC                         u10 021A  
                       u11 0219                         u60 01D5                         u61 01D4  
                       fsr 0004                        l111 0212                        l120 00CE  
                      l105 022C                        l123 0205                        l108 01EF  
                      l117 0173                        l129 0198                        l146 0214  
                      l155 01D5                        l149 021E                        l245 014D  
                      l801 00F5                        l803 00F6                        l805 00F7  
                      l807 00FA                        l809 00FB                        l931 0127  
                      l757 0214                        l861 01CA                        l781 00CF  
                      l933 012C                        l759 021A                        l855 01B9  
                      l791 00E8                        l783 00D3                        l935 0133  
                      l857 01BB                        l793 00EF                        l785 00D4  
                      l937 0137                        l971 0228                        l859 01C6  
                      l795 00F0                        l787 00E3                        l939 0149  
                      l981 01EC                        l973 01D7                        l797 00F1  
                      l789 00E7                        l975 01DA                        l991 0202  
                      l983 01F1                        l799 00F3                        l977 01E0  
                      l993 0084                        l985 01F4                        l979 01E3  
                      l995 008A                        l987 01FA                        l997 0093  
                      l989 01FD                        l999 00A2                        _RE0 0048  
                      _RE1 0049                        u140 0149                        u141 0148  
                      u150 0156                        u207 009D                        u151 0155  
                      u160 0168                        u217 00AC                        u161 0167  
                      u170 0198                        u227 01E7                        u171 0197  
                      u187 01FF                        _ISR 00FD                        u197 008E  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l1001 00A8                       l1003 0206                       l1011 0162  
                     l1013 0168                       l1005 0151                       l1021 0185  
                     l1015 016D                       l1007 0156                       l1023 018B  
                     l1031 002B                       l1009 015B                       l1017 0175  
                     l1041 0050                       l1033 0030                       l1025 001E  
                     l1019 0178                       l1051 007A                       l1043 005C  
                     l1035 0038                       l1027 0023                       l1045 0062  
                     l1037 003E                       l1029 0026                       l1047 006E  
                     l1039 004A                       l1049 0074                       STR_1 01AC  
                     STR_2 01B0                       STR_3 01B4                       STR_4 019F  
                     _RCIF 0065                       i1l83 011F                       _TRMT 04C1  
                     u7_20 0103                       u7_21 0102                       u8_20 010D  
                     u8_21 010C                       u9_20 0119                       u9_21 0118  
        ?_Lcd_Write_String 0070                       _cont 007A                       _main 001E  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 01F0                      ??_ISR 0070                      ?_main 0070  
                    _ANSEL 0188                      i1l871 0113                      i1l863 00FD  
                    i1l873 0119                      i1l865 0103                      i1l875 011E  
                    i1l867 0107                      i1l869 010D                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _data1 0030                      _data2 0020  
                    _setup 00CF                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 014E           __end_of_Lcd_Init 00CF  
         __end_of_Lcd_Port 022D            __initialization 000F               __end_of_main 0084  
         USART_ESCRITURA@a 0073                     ??_main 0046         __size_of_Lcd_Clear 000D  
                   _ADCON1 009F                     ?_setup 0070                     _ANSELH 0189  
            USART_STRING@a 0076              USART_STRING@i 0075                     _INTCON 000B  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _TRISC7 043F                     saved_w 007E                  ??_sprintf 0074  
          Lcd_Set_Cursor@a 0044            Lcd_Set_Cursor@b 0077    __end_of__initialization 001A  
        __end_of_Lcd_Clear 0213             __pcstackCOMMON 0070              __end_of_setup 00FD  
           _Lcd_Set_Cursor 014E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0073                 __pbssBANK0 0020                 __pmaintext 001E  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0174  
 __size_of_USART_ESCRITURA 000C                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               __stringtab 0199             _Lcd_Write_Char 01F0                    _Lcd_Cmd 01D6  
          ?_Lcd_Set_Cursor 0077                    __ptext1 0126                    __ptext2 00CF  
                  __ptext3 01B8                    __ptext4 0213                    __ptext5 0174  
                  __ptext6 01F0                    __ptext7 014E                    __ptext8 0084  
                  __ptext9 0206               __size_of_ISR 0029                    _sprintf 0126  
                  clrloop0 0220     __end_of_Lcd_Write_Char 0206       end_of_initialization 001A  
                _RCSTAbits 0018                  Lcd_Port@a 0073          ??_USART_ESCRITURA 0073  
            ?_USART_STRING 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078  
        Lcd_Write_String@i 0076                  _TXSTAbits 0098                  _Lcd_Clear 0206  
         _Lcd_Write_String 0174        start_initialization 000F                __end_of_ISR 0126  
           ??_USART_STRING 0074          __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0075                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0044                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0078                  __pstrings 0199                   ?_sprintf 0073  
           __size_of_setup 002E          interrupt_function 0004                  clear_ram0 021F  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
              ??_Lcd_Clear 0077       __end_of_USART_STRING 01D6            _USART_ESCRITURA 0213  
              __stringbase 019E           ??_Lcd_Write_Char 0074                   _Lcd_Init 0084  
                 _Lcd_Port 0227   __end_of_Lcd_Write_String 0199           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 019F                   __ptext10 01D6                   __ptext11 0227  
                 __ptext12 00FD           __size_of_sprintf 0028              __size_of_main 0066  
  __end_of_USART_ESCRITURA 021F                 _INTCONbits 000B                   intlevel1 0000  
                sprintf@ap 0075                  sprintf@sp 0077      __size_of_USART_STRING 001E  
                stringcode 0199         Lcd_Set_Cursor@temp 0045                 _OPTION_REG 0081  
                 sprintf@c 0076                   sprintf@f 0073                   stringdir 0199  
                 stringtab 0199               _USART_STRING 01B8                 _USART_LEER 0079  
         ?_USART_ESCRITURA 0070  
