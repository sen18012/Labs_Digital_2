

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 22:53:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  001E                     _ADRESH	set	30
   284  001F                     _ADCON0bits	set	31
   285  000B                     _INTCON	set	11
   286  000C                     _PIR1bits	set	12
   287  0009                     _PORTE	set	9
   288  0008                     _PORTD	set	8
   289  0007                     _PORTC	set	7
   290  0005                     _PORTA	set	5
   291  0006                     _PORTB	set	6
   292  009E                     _ADRESL	set	158
   293  0081                     _OPTION_REG	set	129
   294  008C                     _PIE1bits	set	140
   295  009F                     _ADCON1	set	159
   296  0089                     _TRISE	set	137
   297  0088                     _TRISD	set	136
   298  0087                     _TRISC	set	135
   299  0086                     _TRISB	set	134
   300  0085                     _TRISA	set	133
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  07F8                     start_initialization:	
   306                           ; #config settings
   307                           
   308  07F8                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   312  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   313  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   314  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   315  07FC                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  07FC                     __end_of__initialization:
   319  07FC  0183               	clrf	3
   320  07FD  120A  118A  2F76   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0070                     __pbssCOMMON:
   324  0070                     _channel:
   325  0070                     	ds	2
   326  0072                     _VALOR_ADC:
   327  0072                     	ds	1
   328  0073                     _ADC_res:
   329  0073                     	ds	1
   330                           
   331                           	psect	cstackCOMMON
   332  0074                     __pcstackCOMMON:
   333  0074                     ?_setup:
   334  0074                     ??_setup:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0074                     ?_ADC_CH:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0074                     ?_ADC_val:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0074                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0074                     ?_ADC_ch:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0074                     ADC_val@ADRES_L:	
   350                           ; 2 bytes @ 0x0
   351                           
   352  0074                     ADC_val@ADRES_H:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0074                     ADC_ch@channel:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 2 bytes @ 0x0
   360  0074                     	ds	1
   361  0075                     ??_ADC_val:
   362                           
   363                           ; 1 bytes @ 0x1
   364  0075                     	ds	1
   365  0076                     ??_ADC_CH:
   366  0076                     ??_ADC_ch:	
   367                           ; 1 bytes @ 0x2
   368                           
   369                           
   370                           ; 1 bytes @ 0x2
   371  0076                     	ds	2
   372  0078                     ??_main:
   373                           
   374                           	psect	maintext
   375  0776                     __pmaintext:	
   376                           ; 1 bytes @ 0x4
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 55 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0
   399 ;;      Totals:         0       0       0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels required when called:    2
   402 ;; This function calls:
   403 ;;		_ADC_CH
   404 ;;		_setup
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _main
   412  0776                     _main:
   413  0776                     l778:	
   414                           ;incstack = 0
   415                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   416                           
   417                           
   418                           ;main.c: 56:     setup();
   419  0776  120A  118A  2788  120A  118A  	fcall	_setup
   420  077B                     l780:
   421                           
   422                           ;main.c: 58:         ADC_CH();
   423  077B  120A  118A  27CC  120A  118A  	fcall	_ADC_CH
   424  0780                     l782:
   425                           
   426                           ;main.c: 59:         PORTB = ADC_res;
   427  0780  0873               	movf	_ADC_res,w
   428  0781  1283               	bcf	3,5	;RP0=0, select bank0
   429  0782  1303               	bcf	3,6	;RP1=0, select bank0
   430  0783  0086               	movwf	6	;volatile
   431  0784  2F7B               	goto	l780
   432  0785  120A  118A  2800   	ljmp	start
   433  0788                     __end_of_main:
   434                           
   435                           	psect	text1
   436  0788                     __ptext1:	
   437 ;; *************** function _setup *****************
   438 ;; Defined at:
   439 ;;		line 68 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _setup
   468  0788                     _setup:
   469  0788                     l696:	
   470                           ;incstack = 0
   471                           ; Regs used in _setup: [wreg+status,2]
   472                           
   473                           
   474                           ;main.c: 69:     ANSEL = 0b00000001;
   475  0788  3001               	movlw	1
   476  0789  1683               	bsf	3,5	;RP0=1, select bank3
   477  078A  1703               	bsf	3,6	;RP1=1, select bank3
   478  078B  0088               	movwf	8	;volatile
   479  078C                     l698:
   480                           
   481                           ;main.c: 70:     ANSELH = 0;
   482  078C  0189               	clrf	9	;volatile
   483  078D                     l700:
   484                           
   485                           ;main.c: 71:     TRISA = 0b00000001;
   486  078D  3001               	movlw	1
   487  078E  1683               	bsf	3,5	;RP0=1, select bank1
   488  078F  1303               	bcf	3,6	;RP1=0, select bank1
   489  0790  0085               	movwf	5	;volatile
   490                           
   491                           ;main.c: 72:     TRISB = 0;
   492  0791  0186               	clrf	6	;volatile
   493                           
   494                           ;main.c: 73:     TRISC = 0;
   495  0792  0187               	clrf	7	;volatile
   496                           
   497                           ;main.c: 74:     TRISD = 0;
   498  0793  0188               	clrf	8	;volatile
   499                           
   500                           ;main.c: 75:     TRISE = 0;
   501  0794  0189               	clrf	9	;volatile
   502                           
   503                           ;main.c: 76:     PORTA = 0;
   504  0795  1283               	bcf	3,5	;RP0=0, select bank0
   505  0796  1303               	bcf	3,6	;RP1=0, select bank0
   506  0797  0185               	clrf	5	;volatile
   507                           
   508                           ;main.c: 77:     PORTB = 0;
   509  0798  0186               	clrf	6	;volatile
   510                           
   511                           ;main.c: 78:     PORTC = 0;
   512  0799  0187               	clrf	7	;volatile
   513                           
   514                           ;main.c: 79:     PORTD = 0;
   515  079A  0188               	clrf	8	;volatile
   516                           
   517                           ;main.c: 80:     PORTE = 0;
   518  079B  0189               	clrf	9	;volatile
   519                           
   520                           ;main.c: 82:     ADCON1 = 0b00000000;
   521  079C  1683               	bsf	3,5	;RP0=1, select bank1
   522  079D  1303               	bcf	3,6	;RP1=0, select bank1
   523  079E  019F               	clrf	31	;volatile
   524  079F                     l702:
   525                           
   526                           ;main.c: 83:     PIE1bits.ADIE = 0;
   527  079F  130C               	bcf	12,6	;volatile
   528  07A0                     l704:
   529                           
   530                           ;main.c: 84:     PIR1bits.ADIF = 0;
   531  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   532  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   533  07A2  130C               	bcf	12,6	;volatile
   534                           
   535                           ;main.c: 85:     OPTION_REG = 0b00000000;
   536  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   537  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   538  07A5  0181               	clrf	1	;volatile
   539                           
   540                           ;main.c: 86:     INTCON = 0b00000000;
   541  07A6  018B               	clrf	11	;volatile
   542  07A7                     l63:
   543  07A7  0008               	return
   544  07A8                     __end_of_setup:
   545                           
   546                           	psect	text2
   547  07CC                     __ptext2:	
   548 ;; *************** function _ADC_CH *****************
   549 ;; Defined at:
   550 ;;		line 90 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          2       0       0       0       0
   567 ;;      Totals:         2       0       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    1
   571 ;; This function calls:
   572 ;;		_ADC_ch
   573 ;;		_ADC_val
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _ADC_CH
   581  07CC                     _ADC_CH:
   582  07CC                     l762:	
   583                           ;incstack = 0
   584                           ; Regs used in _ADC_CH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   585                           
   586                           
   587                           ;main.c: 91:     ADC_ch(0);
   588  07CC  3000               	movlw	0
   589  07CD  00F4               	movwf	ADC_ch@channel
   590  07CE  00F5               	movwf	ADC_ch@channel+1
   591  07CF  120A  118A  27A8  120A  118A  	fcall	_ADC_ch
   592  07D4                     l764:
   593                           
   594                           ;main.c: 92:     ADCON0bits.ADCS0 = 1;
   595  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   596  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   597  07D6  171F               	bsf	31,6	;volatile
   598  07D7                     l766:
   599                           
   600                           ;main.c: 93:     ADCON0bits.ADCS1 = 0;
   601  07D7  139F               	bcf	31,7	;volatile
   602  07D8                     l768:
   603                           
   604                           ;main.c: 94:     ADCON0bits.ADON = 1;
   605  07D8  141F               	bsf	31,0	;volatile
   606  07D9                     l770:
   607                           
   608                           ;main.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   609  07D9  301A               	movlw	26
   610  07DA  00F6               	movwf	??_ADC_CH
   611  07DB                     u37:
   612  07DB  0BF6               	decfsz	??_ADC_CH,f
   613  07DC  2FDB               	goto	u37
   614  07DD  0000               	nop
   615  07DE                     l772:
   616                           
   617                           ;main.c: 96:     ADCON0bits.GO = 1;
   618  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   619  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   620  07E0  149F               	bsf	31,1	;volatile
   621                           
   622                           ;main.c: 97:     while (ADCON0bits.GO != 0) {
   623  07E1  2FF1               	goto	l776
   624  07E2                     l774:
   625                           
   626                           ;main.c: 98:         ADC_res = ADC_val(ADRESL, ADRESH);
   627  07E2  081E               	movf	30,w	;volatile
   628  07E3  00F6               	movwf	??_ADC_CH
   629  07E4  0876               	movf	??_ADC_CH,w
   630  07E5  00F4               	movwf	ADC_val@ADRES_H
   631  07E6  1683               	bsf	3,5	;RP0=1, select bank1
   632  07E7  1303               	bcf	3,6	;RP1=0, select bank1
   633  07E8  081E               	movf	30,w	;volatile
   634  07E9  120A  118A  276E  120A  118A  	fcall	_ADC_val
   635  07EE  00F7               	movwf	??_ADC_CH+1
   636  07EF  0877               	movf	??_ADC_CH+1,w
   637  07F0  00F3               	movwf	_ADC_res
   638  07F1                     l776:
   639                           
   640                           ;main.c: 97:     while (ADCON0bits.GO != 0) {
   641  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   642  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   643  07F3  189F               	btfsc	31,1	;volatile
   644  07F4  2FF6               	goto	u21
   645  07F5  2FF7               	goto	u20
   646  07F6                     u21:
   647  07F6  2FE2               	goto	l774
   648  07F7                     u20:
   649  07F7                     l69:
   650  07F7  0008               	return
   651  07F8                     __end_of_ADC_CH:
   652                           
   653                           	psect	text3
   654  076E                     __ptext3:	
   655 ;; *************** function _ADC_val *****************
   656 ;; Defined at:
   657 ;;		line 12 in file "ADC_S1.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  ADRES_L         1    wreg     unsigned char 
   660 ;;  ADRES_H         1    0[COMMON] unsigned char 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  ADRES_L         1    0[COMMON] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      unsigned char 
   665 ;; Registers used:
   666 ;;		wreg
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         1       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          1       0       0       0       0
   675 ;;      Totals:         2       0       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_ADC_CH
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _ADC_val
   687  076E                     _ADC_val:
   688  076E                     l758:	
   689                           ;incstack = 0
   690                           ; Regs used in _ADC_val: [wreg]
   691                           
   692                           
   693                           ;ADC_S1.c: 13:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
   694  076E  1283               	bcf	3,5	;RP0=0, select bank0
   695  076F  1303               	bcf	3,6	;RP1=0, select bank0
   696  0770  081E               	movf	30,w	;volatile
   697  0771  00F5               	movwf	??_ADC_val
   698  0772  0875               	movf	??_ADC_val,w
   699  0773  00F2               	movwf	_VALOR_ADC
   700                           
   701                           ;ADC_S1.c: 15:     return VALOR_ADC;
   702  0774  0872               	movf	_VALOR_ADC,w
   703  0775                     l82:
   704  0775  0008               	return
   705  0776                     __end_of_ADC_val:
   706                           
   707                           	psect	text4
   708  07A8                     __ptext4:	
   709 ;; *************** function _ADC_ch *****************
   710 ;; Defined at:
   711 ;;		line 18 in file "ADC_S1.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  channel         2    0[COMMON] unsigned short 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  2    0[COMMON] unsigned int 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         2       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0
   728 ;;      Totals:         2       0       0       0       0
   729 ;;Total ram usage:        2 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_ADC_CH
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           
   739                           ;psect for function _ADC_ch
   740  07A8                     _ADC_ch:
   741  07A8                     l748:	
   742                           ;incstack = 0
   743                           ; Regs used in _ADC_ch: [wreg-fsr0h+status,2+status,0]
   744                           
   745                           
   746                           ;ADC_S1.c: 19:      switch (channel) {
   747  07A8  2FBE               	goto	l752
   748  07A9                     l86:	
   749                           ;ADC_S1.c: 20:         case 0:
   750                           
   751                           
   752                           ;ADC_S1.c: 21:             ADCON0bits.CHS3 = 0;
   753  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   754  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   755  07AB  129F               	bcf	31,5	;volatile
   756                           
   757                           ;ADC_S1.c: 22:             ADCON0bits.CHS2 = 0;
   758  07AC  121F               	bcf	31,4	;volatile
   759                           
   760                           ;ADC_S1.c: 23:             ADCON0bits.CHS1 = 0;
   761  07AD  119F               	bcf	31,3	;volatile
   762                           
   763                           ;ADC_S1.c: 24:             ADCON0bits.CHS0 = 0;
   764  07AE  111F               	bcf	31,2	;volatile
   765                           
   766                           ;ADC_S1.c: 26:             break;
   767  07AF  2FCB               	goto	l90
   768  07B0                     l88:	
   769                           ;ADC_S1.c: 27:         case 1:
   770                           
   771                           
   772                           ;ADC_S1.c: 28:             ADCON0bits.CHS3 = 0;
   773  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   774  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   775  07B2  129F               	bcf	31,5	;volatile
   776                           
   777                           ;ADC_S1.c: 29:             ADCON0bits.CHS2 = 0;
   778  07B3  121F               	bcf	31,4	;volatile
   779                           
   780                           ;ADC_S1.c: 30:             ADCON0bits.CHS1 = 0;
   781  07B4  119F               	bcf	31,3	;volatile
   782                           
   783                           ;ADC_S1.c: 31:             ADCON0bits.CHS0 = 1;
   784  07B5  151F               	bsf	31,2	;volatile
   785                           
   786                           ;ADC_S1.c: 32:             break;
   787  07B6  2FCB               	goto	l90
   788  07B7                     l89:	
   789                           ;ADC_S1.c: 33:         default:
   790                           
   791                           
   792                           ;ADC_S1.c: 34:             ADCON0bits.CHS3 = 0;
   793  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   794  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   795  07B9  129F               	bcf	31,5	;volatile
   796                           
   797                           ;ADC_S1.c: 35:             ADCON0bits.CHS2 = 0;
   798  07BA  121F               	bcf	31,4	;volatile
   799                           
   800                           ;ADC_S1.c: 36:             ADCON0bits.CHS1 = 0;
   801  07BB  119F               	bcf	31,3	;volatile
   802                           
   803                           ;ADC_S1.c: 37:             ADCON0bits.CHS0 = 0;
   804  07BC  111F               	bcf	31,2	;volatile
   805                           
   806                           ;ADC_S1.c: 38:             break;
   807  07BD  2FCB               	goto	l90
   808  07BE                     l752:
   809                           
   810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   811                           ; Switch size 1, requested type "simple"
   812                           ; Number of cases is 1, Range of values is 0 to 0
   813                           ; switch strategies available:
   814                           ; Name         Instructions Cycles
   815                           ; simple_byte            4     3 (average)
   816                           ; direct_byte           11     8 (fixed)
   817                           ; jumptable            260     6 (fixed)
   818                           ;	Chosen strategy is simple_byte
   819  07BE  0875               	movf	ADC_ch@channel+1,w
   820  07BF  3A00               	xorlw	0	; case 0
   821  07C0  1903               	skipnz
   822  07C1  2FC3               	goto	l804
   823  07C2  2FB7               	goto	l89
   824  07C3                     l804:
   825                           
   826                           ; Switch size 1, requested type "simple"
   827                           ; Number of cases is 2, Range of values is 0 to 1
   828                           ; switch strategies available:
   829                           ; Name         Instructions Cycles
   830                           ; simple_byte            7     4 (average)
   831                           ; direct_byte           14     8 (fixed)
   832                           ; jumptable            260     6 (fixed)
   833                           ;	Chosen strategy is simple_byte
   834  07C3  0874               	movf	ADC_ch@channel,w
   835  07C4  3A00               	xorlw	0	; case 0
   836  07C5  1903               	skipnz
   837  07C6  2FA9               	goto	l86
   838  07C7  3A01               	xorlw	1	; case 1
   839  07C8  1903               	skipnz
   840  07C9  2FB0               	goto	l88
   841  07CA  2FB7               	goto	l89
   842  07CB                     l90:
   843  07CB  0008               	return
   844  07CC                     __end_of_ADC_ch:
   845  007E                     btemp	set	126	;btemp
   846  007E                     wtemp0	set	126
   847                           
   848                           	psect	config
   849                           
   850                           ;Config register CONFIG1 @ 0x2007
   851                           ;	Oscillator Selection bits
   852                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   853                           ;	Watchdog Timer Enable bit
   854                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   855                           ;	Power-up Timer Enable bit
   856                           ;	PWRTE = OFF, PWRT disabled
   857                           ;	RE3/MCLR pin function select bit
   858                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   859                           ;	Code Protection bit
   860                           ;	CP = OFF, Program memory code protection is disabled
   861                           ;	Data Code Protection bit
   862                           ;	CPD = OFF, Data memory code protection is disabled
   863                           ;	Brown Out Reset Selection bits
   864                           ;	BOREN = ON, BOR enabled
   865                           ;	Internal External Switchover bit
   866                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   867                           ;	Fail-Safe Clock Monitor Enabled bit
   868                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   869                           ;	Low Voltage Programming Enable bit
   870                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   871                           ;	In-Circuit Debugger Mode bit
   872                           ;	DEBUG = 0x1, unprogrammed default
   873  2007                     	org	8199
   874  2007  23D2               	dw	9170
   875                           
   876                           ;Config register CONFIG2 @ 0x2008
   877                           ;	Brown-out Reset Selection bit
   878                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   879                           ;	Flash Program Memory Self Write Enable bits
   880                           ;	WRT = OFF, Write protection off
   881  2008                     	org	8200
   882  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_CH
    _ADC_CH->_ADC_ch
    _ADC_CH->_ADC_val

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     174
                             _ADC_CH
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_CH                                               2     2      0     174
                                              2 COMMON     2     2      0
                             _ADC_ch
                            _ADC_val
 ---------------------------------------------------------------------------------
 (2) _ADC_val                                              3     2      1      76
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_ch                                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH
     _ADC_ch
     _ADC_val
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 22:53:57 2021

                     l63 07A7                       l90 07CB                       l82 0775  
                     l69 07F7                       l86 07A9                       l88 07B0  
                     l89 07B7                       u20 07F7                       u21 07F6  
                     u37 07DB                      l700 078D                      l702 079F  
                    l704 07A0                      l804 07C3                      l752 07BE  
                    l770 07D9                      l762 07CC                      l748 07A8  
                    l772 07DE                      l764 07D4                      l780 077B  
                    l758 076E                      l774 07E2                      l766 07D7  
                    l782 0780                      l776 07F1                      l768 07D8  
                    l696 0788                      l698 078C                      l778 0776  
        __end_of_ADC_val 0776                     _main 0776                     btemp 007E  
                   start 0000                    ?_main 0074                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0788                    status 0003  
                  wtemp0 007E           ADC_val@ADRES_H 0074           ADC_val@ADRES_L 0074  
        __initialization 07F8             __end_of_main 0788                ??_ADC_val 0075  
                 ??_main 0078                   _ADCON1 009F                   _ADC_CH 07CC  
                 _ADRESH 001E                   _ADRESL 009E                   _ADC_ch 07A8  
                 ?_setup 0074                   _ANSELH 0189                   _INTCON 000B  
__end_of__initialization 07FC           __pcstackCOMMON 0074            __end_of_setup 07A8  
                ?_ADC_CH 0074                  ?_ADC_ch 0074                  ??_setup 0074  
             __pmaintext 0776                  _ADC_res 0073                  _ADC_val 076E  
        __size_of_ADC_CH 002C          __size_of_ADC_ch 0024                  _channel 0070  
                __ptext1 0788                  __ptext2 07CC                  __ptext3 076E  
                __ptext4 07A8     end_of_initialization 07FC                _VALOR_ADC 0072  
         __end_of_ADC_CH 07F8           __end_of_ADC_ch 07CC      start_initialization 07F8  
               ??_ADC_CH 0076                 ??_ADC_ch 0076                 ?_ADC_val 0074  
            __pbssCOMMON 0070                ___latbits 0002           __size_of_setup 0020  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_ADC_val 0008            __size_of_main 0012            ADC_ch@channel 0074  
             _OPTION_REG 0081  
