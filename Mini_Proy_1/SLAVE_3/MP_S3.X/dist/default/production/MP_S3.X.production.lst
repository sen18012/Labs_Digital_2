

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 18:22:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  0008                     _PORTDbits	set	8
   371  000C                     _PIR1bits	set	12
   372  000B                     _INTCONbits	set	11
   373  0008                     _PORTD	set	8
   374  0006                     _PORTB	set	6
   375  0005                     _PORTA	set	5
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0063                     _SSPIF	set	99
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  009F                     _ADCON1	set	159
   382  0085                     _TRISAbits	set	133
   383  008C                     _PIE1bits	set	140
   384  0088                     _TRISD	set	136
   385  0086                     _TRISB	set	134
   386  0085                     _TRISA	set	133
   387  043B                     _TRISC3	set	1083
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393  000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396  000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   400  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   402  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK0
   405  0013  1283               	bcf	3,5	;RP0=0, select bank0
   406  0014  1303               	bcf	3,6	;RP1=0, select bank0
   407  0015  01AD               	clrf	__pbssBANK0& (0+127)
   408  0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   409  0017                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  0017                     __end_of__initialization:
   413  0017  0183               	clrf	3
   414  0018  120A  118A  2884   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  0077                     __pbssCOMMON:
   418  0077                     _ADC_con:
   419  0077                     	ds	2
   420  0079                     _VALOR_ADC:
   421  0079                     	ds	1
   422  007A                     _ADC_res:
   423  007A                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  002D                     __pbssBANK0:
   427  002D                     _channel:
   428  002D                     	ds	2
   429                           
   430                           	psect	cstackCOMMON
   431  0070                     __pcstackCOMMON:
   432  0070                     ?_spiWrite:
   433  0070                     ??_spiWrite:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_setup:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_sem:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_isr:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     spiWrite@dat:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0070                     	ds	1
   454  0071                     ??_isr:
   455                           
   456                           ; 1 bytes @ 0x1
   457  0071                     	ds	2
   458  0073                     ??_sem:
   459  0073                     ?_spiInit:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     ?_ADC_chT:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     ?___wmul:	
   466                           ; 2 bytes @ 0x3
   467                           
   468  0073                     spiInit@sDataSample:	
   469                           ; 2 bytes @ 0x3
   470                           
   471  0073                     ADC_chT@channel:	
   472                           ; 1 bytes @ 0x3
   473                           
   474  0073                     ___wmul@multiplier:	
   475                           ; 2 bytes @ 0x3
   476                           
   477                           
   478                           ; 2 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     spiInit@sClockIdle:
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     ??_ADC_chT:
   485  0075                     spiInit@sTransmitEdge:	
   486                           ; 1 bytes @ 0x5
   487                           
   488  0075                     ___wmul@multiplicand:	
   489                           ; 1 bytes @ 0x5
   490                           
   491                           
   492                           ; 2 bytes @ 0x5
   493  0075                     	ds	1
   494  0076                     ??_spiInit:
   495  0076                     spiInit@sType:	
   496                           ; 1 bytes @ 0x6
   497                           
   498                           
   499                           ; 1 bytes @ 0x6
   500  0076                     	ds	1
   501  0077                     ??_setup:
   502  0077                     ??___wmul:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           	psect	cstackBANK0
   507  0020                     __pcstackBANK0:	
   508                           ; 1 bytes @ 0x7
   509                           
   510  0020                     ___wmul@product:
   511                           
   512                           ; 2 bytes @ 0x0
   513  0020                     	ds	2
   514  0022                     ?___awdiv:
   515  0022                     ___awdiv@divisor:	
   516                           ; 2 bytes @ 0x2
   517                           
   518                           
   519                           ; 2 bytes @ 0x2
   520  0022                     	ds	2
   521  0024                     ___awdiv@dividend:
   522                           
   523                           ; 2 bytes @ 0x4
   524  0024                     	ds	2
   525  0026                     ??___awdiv:
   526                           
   527                           ; 1 bytes @ 0x6
   528  0026                     	ds	1
   529  0027                     ___awdiv@counter:
   530                           
   531                           ; 1 bytes @ 0x7
   532  0027                     	ds	1
   533  0028                     ___awdiv@sign:
   534                           
   535                           ; 1 bytes @ 0x8
   536  0028                     	ds	1
   537  0029                     ___awdiv@quotient:
   538                           
   539                           ; 2 bytes @ 0x9
   540  0029                     	ds	2
   541  002B                     ??_main:
   542                           
   543                           ; 1 bytes @ 0xB
   544  002B                     	ds	2
   545                           
   546                           	psect	maintext
   547  0084                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 64 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B00/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       2       0       0       0
   570 ;;      Totals:         0       2       0       0       0
   571 ;;Total ram usage:        2 bytes
   572 ;; Hardware stack levels required when called:    4
   573 ;; This function calls:
   574 ;;		___awdiv
   575 ;;		___wmul
   576 ;;		_sem
   577 ;;		_setup
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _main
   585  0084                     _main:
   586  0084                     l1103:	
   587                           ;incstack = 0
   588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   589                           
   590                           
   591                           ;main.c: 65:     INTCONbits.GIE = 1;
   592  0084  120A  118A  2110  120A  118A  	fcall	_setup
   593  0089                     l1105:
   594                           
   595                           ;main.c: 67:     PIR1bits.SSPIF = 0;
   596  0089  3019               	movlw	25
   597  008A  1283               	bcf	3,5	;RP0=0, select bank0
   598  008B  1303               	bcf	3,6	;RP1=0, select bank0
   599  008C  00AB               	movwf	??_main
   600  008D                     u547:
   601  008D  0BAB               	decfsz	??_main,f
   602  008E  288D               	goto	u547
   603  008F  2890               	nop2
   604  0090                     l1107:
   605                           
   606                           ;main.c: 68:     PIE1bits.SSPIE = 1;
   607  0090  1283               	bcf	3,5	;RP0=0, select bank0
   608  0091  1303               	bcf	3,6	;RP1=0, select bank0
   609  0092  149F               	bsf	31,1	;volatile
   610                           
   611                           ;main.c: 69:     TRISAbits.TRISA5 = 1;
   612  0093  2898               	goto	l1111
   613  0094                     l1109:
   614  0094  081E               	movf	30,w	;volatile
   615  0095  00AB               	movwf	??_main
   616  0096  082B               	movf	??_main,w
   617  0097  00FA               	movwf	_ADC_res
   618  0098                     l1111:
   619                           
   620                           ;main.c: 69:     TRISAbits.TRISA5 = 1;
   621  0098  189F               	btfsc	31,1	;volatile
   622  0099  289B               	goto	u531
   623  009A  289C               	goto	u530
   624  009B                     u531:
   625  009B  2894               	goto	l1109
   626  009C                     u530:
   627  009C                     l1113:
   628  009C  30FF               	movlw	255
   629  009D  00A2               	movwf	___awdiv@divisor
   630  009E  3000               	movlw	0
   631  009F  00A3               	movwf	___awdiv@divisor+1
   632  00A0  081E               	movf	30,w	;volatile
   633  00A1  00AB               	movwf	??_main
   634  00A2  01AC               	clrf	??_main+1
   635  00A3  082B               	movf	??_main,w
   636  00A4  00F3               	movwf	___wmul@multiplier
   637  00A5  082C               	movf	??_main+1,w
   638  00A6  00F4               	movwf	___wmul@multiplier+1
   639  00A7  3096               	movlw	150
   640  00A8  00F5               	movwf	___wmul@multiplicand
   641  00A9  3000               	movlw	0
   642  00AA  00F6               	movwf	___wmul@multiplicand+1
   643  00AB  120A  118A  2142  120A  118A  	fcall	___wmul
   644  00B0  0874               	movf	?___wmul+1,w
   645  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   646  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   647  00B3  00A5               	movwf	___awdiv@dividend+1
   648  00B4  0873               	movf	?___wmul,w
   649  00B5  00A4               	movwf	___awdiv@dividend
   650  00B6  120A  118A  201B  120A  118A  	fcall	___awdiv
   651  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   652  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   653  00BD  0823               	movf	?___awdiv+1,w
   654  00BE  00F8               	movwf	_ADC_con+1
   655  00BF  0822               	movf	?___awdiv,w
   656  00C0  00F7               	movwf	_ADC_con
   657  00C1                     l1115:
   658  00C1  120A  118A  20CA  120A  118A  	fcall	_sem
   659  00C6  2889               	goto	l1105
   660  00C7  120A  118A  280C   	ljmp	start
   661  00CA                     __end_of_main:
   662                           
   663                           	psect	text1
   664  0110                     __ptext1:	
   665 ;; *************** function _setup *****************
   666 ;; Defined at:
   667 ;;		line 84 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    3
   688 ;; This function calls:
   689 ;;		_ADC_chT
   690 ;;		_spiInit
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _setup
   698  0110                     _setup:
   699  0110                     l925:	
   700                           ;incstack = 0
   701                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   702                           
   703  0110  3001               	movlw	1
   704  0111  1683               	bsf	3,5	;RP0=1, select bank3
   705  0112  1703               	bsf	3,6	;RP1=1, select bank3
   706  0113  0088               	movwf	8	;volatile
   707  0114                     l927:
   708  0114  0189               	clrf	9	;volatile
   709  0115                     l929:
   710  0115  3001               	movlw	1
   711  0116  1683               	bsf	3,5	;RP0=1, select bank1
   712  0117  1303               	bcf	3,6	;RP1=0, select bank1
   713  0118  0085               	movwf	5	;volatile
   714  0119  0186               	clrf	6	;volatile
   715  011A  0188               	clrf	8	;volatile
   716  011B  1283               	bcf	3,5	;RP0=0, select bank0
   717  011C  1303               	bcf	3,6	;RP1=0, select bank0
   718  011D  0185               	clrf	5	;volatile
   719  011E  0186               	clrf	6	;volatile
   720  011F  0188               	clrf	8	;volatile
   721  0120                     l931:
   722  0120  3000               	movlw	0
   723  0121  00F3               	movwf	ADC_chT@channel
   724  0122  00F4               	movwf	ADC_chT@channel+1
   725  0123  120A  118A  216D  120A  118A  	fcall	_ADC_chT
   726  0128                     l933:
   727  0128  1283               	bcf	3,5	;RP0=0, select bank0
   728  0129  1303               	bcf	3,6	;RP1=0, select bank0
   729  012A  171F               	bsf	31,6	;volatile
   730  012B                     l935:
   731  012B  139F               	bcf	31,7	;volatile
   732  012C                     l937:
   733  012C  141F               	bsf	31,0	;volatile
   734  012D                     l939:
   735  012D  01F3               	clrf	spiInit@sDataSample
   736  012E  01F4               	clrf	spiInit@sClockIdle
   737  012F  01F5               	clrf	spiInit@sTransmitEdge
   738  0130  3024               	movlw	36
   739  0131  120A  118A  2191  120A  118A  	fcall	_spiInit
   740  0136                     l941:
   741  0136  178B               	bsf	11,7	;volatile
   742  0137                     l943:
   743  0137  170B               	bsf	11,6	;volatile
   744  0138                     l945:
   745  0138  1283               	bcf	3,5	;RP0=0, select bank0
   746  0139  1303               	bcf	3,6	;RP1=0, select bank0
   747  013A  118C               	bcf	12,3	;volatile
   748  013B                     l947:
   749  013B  1683               	bsf	3,5	;RP0=1, select bank1
   750  013C  1303               	bcf	3,6	;RP1=0, select bank1
   751  013D  158C               	bsf	12,3	;volatile
   752  013E                     l949:
   753  013E  1685               	bsf	5,5	;volatile
   754  013F                     l951:
   755                           
   756                           ;main.c: 138:     ADCON1 = 0b00010000;
   757  013F  3010               	movlw	16
   758  0140  009F               	movwf	31	;volatile
   759  0141                     l70:
   760  0141  0008               	return
   761  0142                     __end_of_setup:
   762                           
   763                           	psect	text2
   764  0191                     __ptext2:	
   765 ;; *************** function _spiInit *****************
   766 ;; Defined at:
   767 ;;		line 12 in file "SPI.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  sType           1    wreg     enum E1264
   770 ;;  sDataSample     1    3[COMMON] enum E1272
   771 ;;  sClockIdle      1    4[COMMON] enum E1276
   772 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  sType           1    6[COMMON] enum E1264
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         3       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         4       0       0       0       0
   788 ;;Total ram usage:        4 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    2
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_setup
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _spiInit
   800  0191                     _spiInit:
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   804                           ;spiInit@sType stored from wreg
   805  0191  00F6               	movwf	spiInit@sType
   806  0192                     l915:
   807                           
   808                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle;SPI
      +                          .c: 13: sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 
      +                          = 0;
   809  0192  1683               	bsf	3,5	;RP0=1, select bank1
   810  0193  1303               	bcf	3,6	;RP1=0, select bank1
   811  0194  1287               	bcf	7,5	;volatile
   812                           
   813                           ;SPI.c: 16:     if(sType & 0b00000100)
   814  0195  1D76               	btfss	spiInit@sType,2
   815  0196  2998               	goto	u231
   816  0197  2999               	goto	u230
   817  0198                     u231:
   818  0198  299D               	goto	l921
   819  0199                     u230:
   820  0199                     l917:
   821                           
   822                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   823  0199  0875               	movf	spiInit@sTransmitEdge,w
   824  019A  0094               	movwf	20	;volatile
   825  019B                     l919:
   826                           
   827                           ;SPI.c: 19:         TRISC3 = 1;
   828  019B  1587               	bsf	7,3	;volatile
   829                           
   830                           ;SPI.c: 20:     }
   831  019C  29A1               	goto	l115
   832  019D                     l921:
   833                           
   834                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   835  019D  0873               	movf	spiInit@sDataSample,w
   836  019E  0475               	iorwf	spiInit@sTransmitEdge,w
   837  019F  0094               	movwf	20	;volatile
   838  01A0                     l923:
   839                           
   840                           ;SPI.c: 24:         TRISC3 = 0;
   841  01A0  1187               	bcf	7,3	;volatile
   842  01A1                     l115:	
   843                           ;SPI.c: 25:     }
   844                           
   845                           
   846                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   847  01A1  0876               	movf	spiInit@sType,w
   848  01A2  0474               	iorwf	spiInit@sClockIdle,w
   849  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   850  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   851  01A5  0094               	movwf	20	;volatile
   852  01A6                     l116:
   853  01A6  0008               	return
   854  01A7                     __end_of_spiInit:
   855                           
   856                           	psect	text3
   857  016D                     __ptext3:	
   858 ;; *************** function _ADC_chT *****************
   859 ;; Defined at:
   860 ;;		line 18 in file "ADC.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  channel         2    3[COMMON] unsigned short 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  2    3[COMMON] unsigned int 
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         2       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         2       0       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    2
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_setup
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _ADC_chT
   890  016D                     _ADC_chT:
   891  016D                     l905:	
   892                           ;incstack = 0
   893                           ; Regs used in _ADC_chT: [wreg-fsr0h+status,2+status,0]
   894                           
   895                           
   896                           ;ADC.c: 19:      switch (channel) {
   897  016D  2983               	goto	l909
   898  016E                     l95:	
   899                           ;ADC.c: 20:         case 0:
   900                           
   901                           
   902                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
   903  016E  1283               	bcf	3,5	;RP0=0, select bank0
   904  016F  1303               	bcf	3,6	;RP1=0, select bank0
   905  0170  129F               	bcf	31,5	;volatile
   906                           
   907                           ;ADC.c: 22:             ADCON0bits.CHS2 = 0;
   908  0171  121F               	bcf	31,4	;volatile
   909                           
   910                           ;ADC.c: 23:             ADCON0bits.CHS1 = 0;
   911  0172  119F               	bcf	31,3	;volatile
   912                           
   913                           ;ADC.c: 24:             ADCON0bits.CHS0 = 0;
   914  0173  111F               	bcf	31,2	;volatile
   915                           
   916                           ;ADC.c: 26:             break;
   917  0174  2990               	goto	l99
   918  0175                     l97:	
   919                           ;ADC.c: 27:         case 1:
   920                           
   921                           
   922                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
   923  0175  1283               	bcf	3,5	;RP0=0, select bank0
   924  0176  1303               	bcf	3,6	;RP1=0, select bank0
   925  0177  129F               	bcf	31,5	;volatile
   926                           
   927                           ;ADC.c: 29:             ADCON0bits.CHS2 = 0;
   928  0178  121F               	bcf	31,4	;volatile
   929                           
   930                           ;ADC.c: 30:             ADCON0bits.CHS1 = 0;
   931  0179  119F               	bcf	31,3	;volatile
   932                           
   933                           ;ADC.c: 31:             ADCON0bits.CHS0 = 1;
   934  017A  151F               	bsf	31,2	;volatile
   935                           
   936                           ;ADC.c: 32:             break;
   937  017B  2990               	goto	l99
   938  017C                     l98:	
   939                           ;ADC.c: 33:         default:
   940                           
   941                           
   942                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
   943  017C  1283               	bcf	3,5	;RP0=0, select bank0
   944  017D  1303               	bcf	3,6	;RP1=0, select bank0
   945  017E  129F               	bcf	31,5	;volatile
   946                           
   947                           ;ADC.c: 35:             ADCON0bits.CHS2 = 0;
   948  017F  121F               	bcf	31,4	;volatile
   949                           
   950                           ;ADC.c: 36:             ADCON0bits.CHS1 = 0;
   951  0180  119F               	bcf	31,3	;volatile
   952                           
   953                           ;ADC.c: 37:             ADCON0bits.CHS0 = 0;
   954  0181  111F               	bcf	31,2	;volatile
   955                           
   956                           ;ADC.c: 38:             break;
   957  0182  2990               	goto	l99
   958  0183                     l909:
   959                           
   960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   961                           ; Switch size 1, requested type "simple"
   962                           ; Number of cases is 1, Range of values is 0 to 0
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte            4     3 (average)
   966                           ; direct_byte           11     8 (fixed)
   967                           ; jumptable            260     6 (fixed)
   968                           ;	Chosen strategy is simple_byte
   969  0183  0874               	movf	ADC_chT@channel+1,w
   970  0184  3A00               	xorlw	0	; case 0
   971  0185  1903               	skipnz
   972  0186  2988               	goto	l1137
   973  0187  297C               	goto	l98
   974  0188                     l1137:
   975                           
   976                           ; Switch size 1, requested type "simple"
   977                           ; Number of cases is 2, Range of values is 0 to 1
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte            7     4 (average)
   981                           ; direct_byte           14     8 (fixed)
   982                           ; jumptable            260     6 (fixed)
   983                           ;	Chosen strategy is simple_byte
   984  0188  0873               	movf	ADC_chT@channel,w
   985  0189  3A00               	xorlw	0	; case 0
   986  018A  1903               	skipnz
   987  018B  296E               	goto	l95
   988  018C  3A01               	xorlw	1	; case 1
   989  018D  1903               	skipnz
   990  018E  2975               	goto	l97
   991  018F  297C               	goto	l98
   992  0190                     l99:
   993  0190  0008               	return
   994  0191                     __end_of_ADC_chT:
   995                           
   996                           	psect	text4
   997  00CA                     __ptext4:	
   998 ;; *************** function _sem *****************
   999 ;; Defined at:
  1000 ;;		line 146 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, btemp+1
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    2
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _sem
  1030  00CA                     _sem:
  1031  00CA                     l775:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _sem: [wreg+btemp+1]
  1034                           
  1035                           
  1036                           ;main.c: 147:     if (ADC_con < 26) {
  1037  00CA  0878               	movf	_ADC_con+1,w
  1038  00CB  3A80               	xorlw	128
  1039  00CC  00FF               	movwf	btemp+1
  1040  00CD  3080               	movlw	128
  1041  00CE  027F               	subwf	btemp+1,w
  1042  00CF  1D03               	skipz
  1043  00D0  28D3               	goto	u25
  1044  00D1  301A               	movlw	26
  1045  00D2  0277               	subwf	_ADC_con,w
  1046  00D3                     u25:
  1047  00D3  1803               	skipnc
  1048  00D4  28D6               	goto	u21
  1049  00D5  28D7               	goto	u20
  1050  00D6                     u21:
  1051  00D6  28DD               	goto	l779
  1052  00D7                     u20:
  1053  00D7                     l777:
  1054                           
  1055                           ;main.c: 148:         PORTDbits.RD0 = 0;
  1056  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00D9  1008               	bcf	8,0	;volatile
  1059                           
  1060                           ;main.c: 149:         PORTDbits.RD1 = 0;
  1061  00DA  1088               	bcf	8,1	;volatile
  1062                           
  1063                           ;main.c: 150:         PORTDbits.RD2 = 1;
  1064  00DB  1508               	bsf	8,2	;volatile
  1065                           
  1066                           ;main.c: 151:     } else if (25 <= ADC_con && ADC_con <= 36) {
  1067  00DC  290F               	goto	l78
  1068  00DD                     l779:
  1069  00DD  0878               	movf	_ADC_con+1,w
  1070  00DE  3A80               	xorlw	128
  1071  00DF  00FF               	movwf	btemp+1
  1072  00E0  3080               	movlw	128
  1073  00E1  027F               	subwf	btemp+1,w
  1074  00E2  1D03               	skipz
  1075  00E3  28E6               	goto	u35
  1076  00E4  3019               	movlw	25
  1077  00E5  0277               	subwf	_ADC_con,w
  1078  00E6                     u35:
  1079  00E6  1C03               	skipc
  1080  00E7  28E9               	goto	u31
  1081  00E8  28EA               	goto	u30
  1082  00E9                     u31:
  1083  00E9  28FD               	goto	l785
  1084  00EA                     u30:
  1085  00EA                     l781:
  1086  00EA  0878               	movf	_ADC_con+1,w
  1087  00EB  3A80               	xorlw	128
  1088  00EC  00FF               	movwf	btemp+1
  1089  00ED  3080               	movlw	128
  1090  00EE  027F               	subwf	btemp+1,w
  1091  00EF  1D03               	skipz
  1092  00F0  28F3               	goto	u45
  1093  00F1  3025               	movlw	37
  1094  00F2  0277               	subwf	_ADC_con,w
  1095  00F3                     u45:
  1096  00F3  1803               	skipnc
  1097  00F4  28F6               	goto	u41
  1098  00F5  28F7               	goto	u40
  1099  00F6                     u41:
  1100  00F6  28FD               	goto	l785
  1101  00F7                     u40:
  1102  00F7                     l783:
  1103                           
  1104                           ;main.c: 152:         PORTDbits.RD0 = 0;
  1105  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00F9  1008               	bcf	8,0	;volatile
  1108                           
  1109                           ;main.c: 153:         PORTDbits.RD1 = 1;
  1110  00FA  1488               	bsf	8,1	;volatile
  1111                           
  1112                           ;main.c: 154:         PORTDbits.RD2 = 0;
  1113  00FB  1108               	bcf	8,2	;volatile
  1114                           
  1115                           ;main.c: 155:     } else if (ADC_con > 36) {
  1116  00FC  290F               	goto	l78
  1117  00FD                     l785:
  1118  00FD  0878               	movf	_ADC_con+1,w
  1119  00FE  3A80               	xorlw	128
  1120  00FF  00FF               	movwf	btemp+1
  1121  0100  3080               	movlw	128
  1122  0101  027F               	subwf	btemp+1,w
  1123  0102  1D03               	skipz
  1124  0103  2906               	goto	u55
  1125  0104  3025               	movlw	37
  1126  0105  0277               	subwf	_ADC_con,w
  1127  0106                     u55:
  1128  0106  1C03               	skipc
  1129  0107  2909               	goto	u51
  1130  0108  290A               	goto	u50
  1131  0109                     u51:
  1132  0109  290F               	goto	l78
  1133  010A                     u50:
  1134  010A                     l787:
  1135                           
  1136                           ;main.c: 156:         PORTDbits.RD0 = 1;
  1137  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1138  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1139  010C  1408               	bsf	8,0	;volatile
  1140                           
  1141                           ;main.c: 157:         PORTDbits.RD1 = 0;
  1142  010D  1088               	bcf	8,1	;volatile
  1143                           
  1144                           ;main.c: 158:         PORTDbits.RD2 = 0;
  1145  010E  1108               	bcf	8,2	;volatile
  1146  010F                     l78:
  1147  010F  0008               	return
  1148  0110                     __end_of_sem:
  1149                           
  1150                           	psect	text5
  1151  0142                     __ptext5:	
  1152 ;; *************** function ___wmul *****************
  1153 ;; Defined at:
  1154 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  multiplier      2    3[COMMON] unsigned int 
  1157 ;;  multiplicand    2    5[COMMON] unsigned int 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  product         2    0[BANK0 ] unsigned int 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  2    3[COMMON] unsigned int 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         4       0       0       0       0
  1170 ;;      Locals:         0       2       0       0       0
  1171 ;;      Temps:          0       0       0       0       0
  1172 ;;      Totals:         4       2       0       0       0
  1173 ;;Total ram usage:        6 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    2
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function ___wmul
  1185  0142                     ___wmul:
  1186  0142                     l1045:	
  1187                           ;incstack = 0
  1188                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1189                           
  1190  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0144  01A0               	clrf	___wmul@product
  1193  0145  01A1               	clrf	___wmul@product+1
  1194  0146                     l1047:
  1195  0146  1C73               	btfss	___wmul@multiplier,0
  1196  0147  2949               	goto	u391
  1197  0148  294A               	goto	u390
  1198  0149                     u391:
  1199  0149  2952               	goto	l219
  1200  014A                     u390:
  1201  014A                     l1049:
  1202  014A  0875               	movf	___wmul@multiplicand,w
  1203  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1204  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1205  014D  07A0               	addwf	___wmul@product,f
  1206  014E  1803               	skipnc
  1207  014F  0AA1               	incf	___wmul@product+1,f
  1208  0150  0876               	movf	___wmul@multiplicand+1,w
  1209  0151  07A1               	addwf	___wmul@product+1,f
  1210  0152                     l219:
  1211  0152  3001               	movlw	1
  1212  0153                     u405:
  1213  0153  1003               	clrc
  1214  0154  0DF5               	rlf	___wmul@multiplicand,f
  1215  0155  0DF6               	rlf	___wmul@multiplicand+1,f
  1216  0156  3EFF               	addlw	-1
  1217  0157  1D03               	skipz
  1218  0158  2953               	goto	u405
  1219  0159                     l1051:
  1220  0159  3001               	movlw	1
  1221  015A                     u415:
  1222  015A  1003               	clrc
  1223  015B  0CF4               	rrf	___wmul@multiplier+1,f
  1224  015C  0CF3               	rrf	___wmul@multiplier,f
  1225  015D  3EFF               	addlw	-1
  1226  015E  1D03               	skipz
  1227  015F  295A               	goto	u415
  1228  0160                     l1053:
  1229  0160  0873               	movf	___wmul@multiplier,w
  1230  0161  0474               	iorwf	___wmul@multiplier+1,w
  1231  0162  1D03               	btfss	3,2
  1232  0163  2965               	goto	u421
  1233  0164  2966               	goto	u420
  1234  0165                     u421:
  1235  0165  2946               	goto	l1047
  1236  0166                     u420:
  1237  0166                     l1055:
  1238  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0168  0821               	movf	___wmul@product+1,w
  1241  0169  00F4               	movwf	?___wmul+1
  1242  016A  0820               	movf	___wmul@product,w
  1243  016B  00F3               	movwf	?___wmul
  1244  016C                     l221:
  1245  016C  0008               	return
  1246  016D                     __end_of___wmul:
  1247                           
  1248                           	psect	text6
  1249  001B                     __ptext6:	
  1250 ;; *************** function ___awdiv *****************
  1251 ;; Defined at:
  1252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  divisor         2    2[BANK0 ] int 
  1255 ;;  dividend        2    4[BANK0 ] int 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  quotient        2    9[BANK0 ] int 
  1258 ;;  sign            1    8[BANK0 ] unsigned char 
  1259 ;;  counter         1    7[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2    2[BANK0 ] int 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       4       0       0       0
  1270 ;;      Locals:         0       4       0       0       0
  1271 ;;      Temps:          0       1       0       0       0
  1272 ;;      Totals:         0       9       0       0       0
  1273 ;;Total ram usage:        9 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    2
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function ___awdiv
  1285  001B                     ___awdiv:
  1286  001B                     l1059:	
  1287                           ;incstack = 0
  1288                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1289                           
  1290  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1291  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1292  001D  01A8               	clrf	___awdiv@sign
  1293  001E                     l1061:
  1294  001E  1FA3               	btfss	___awdiv@divisor+1,7
  1295  001F  2821               	goto	u431
  1296  0020  2822               	goto	u430
  1297  0021                     u431:
  1298  0021  2829               	goto	l1067
  1299  0022                     u430:
  1300  0022                     l1063:
  1301  0022  09A2               	comf	___awdiv@divisor,f
  1302  0023  09A3               	comf	___awdiv@divisor+1,f
  1303  0024  0AA2               	incf	___awdiv@divisor,f
  1304  0025  1903               	skipnz
  1305  0026  0AA3               	incf	___awdiv@divisor+1,f
  1306  0027                     l1065:
  1307  0027  01A8               	clrf	___awdiv@sign
  1308  0028  0AA8               	incf	___awdiv@sign,f
  1309  0029                     l1067:
  1310  0029  1FA5               	btfss	___awdiv@dividend+1,7
  1311  002A  282C               	goto	u441
  1312  002B  282D               	goto	u440
  1313  002C                     u441:
  1314  002C  2836               	goto	l1073
  1315  002D                     u440:
  1316  002D                     l1069:
  1317  002D  09A4               	comf	___awdiv@dividend,f
  1318  002E  09A5               	comf	___awdiv@dividend+1,f
  1319  002F  0AA4               	incf	___awdiv@dividend,f
  1320  0030  1903               	skipnz
  1321  0031  0AA5               	incf	___awdiv@dividend+1,f
  1322  0032                     l1071:
  1323  0032  3001               	movlw	1
  1324  0033  00A6               	movwf	??___awdiv
  1325  0034  0826               	movf	??___awdiv,w
  1326  0035  06A8               	xorwf	___awdiv@sign,f
  1327  0036                     l1073:
  1328  0036  01A9               	clrf	___awdiv@quotient
  1329  0037  01AA               	clrf	___awdiv@quotient+1
  1330  0038                     l1075:
  1331  0038  0822               	movf	___awdiv@divisor,w
  1332  0039  0423               	iorwf	___awdiv@divisor+1,w
  1333  003A  1903               	btfsc	3,2
  1334  003B  283D               	goto	u451
  1335  003C  283E               	goto	u450
  1336  003D                     u451:
  1337  003D  2875               	goto	l1095
  1338  003E                     u450:
  1339  003E                     l1077:
  1340  003E  01A7               	clrf	___awdiv@counter
  1341  003F  0AA7               	incf	___awdiv@counter,f
  1342  0040  284C               	goto	l1083
  1343  0041                     l1079:
  1344  0041  3001               	movlw	1
  1345  0042                     u465:
  1346  0042  1003               	clrc
  1347  0043  0DA2               	rlf	___awdiv@divisor,f
  1348  0044  0DA3               	rlf	___awdiv@divisor+1,f
  1349  0045  3EFF               	addlw	-1
  1350  0046  1D03               	skipz
  1351  0047  2842               	goto	u465
  1352  0048                     l1081:
  1353  0048  3001               	movlw	1
  1354  0049  00A6               	movwf	??___awdiv
  1355  004A  0826               	movf	??___awdiv,w
  1356  004B  07A7               	addwf	___awdiv@counter,f
  1357  004C                     l1083:
  1358  004C  1FA3               	btfss	___awdiv@divisor+1,7
  1359  004D  284F               	goto	u471
  1360  004E  2850               	goto	u470
  1361  004F                     u471:
  1362  004F  2841               	goto	l1079
  1363  0050                     u470:
  1364  0050                     l1085:
  1365  0050  3001               	movlw	1
  1366  0051                     u485:
  1367  0051  1003               	clrc
  1368  0052  0DA9               	rlf	___awdiv@quotient,f
  1369  0053  0DAA               	rlf	___awdiv@quotient+1,f
  1370  0054  3EFF               	addlw	-1
  1371  0055  1D03               	skipz
  1372  0056  2851               	goto	u485
  1373  0057  0823               	movf	___awdiv@divisor+1,w
  1374  0058  0225               	subwf	___awdiv@dividend+1,w
  1375  0059  1D03               	skipz
  1376  005A  285D               	goto	u495
  1377  005B  0822               	movf	___awdiv@divisor,w
  1378  005C  0224               	subwf	___awdiv@dividend,w
  1379  005D                     u495:
  1380  005D  1C03               	skipc
  1381  005E  2860               	goto	u491
  1382  005F  2861               	goto	u490
  1383  0060                     u491:
  1384  0060  2868               	goto	l1091
  1385  0061                     u490:
  1386  0061                     l1087:
  1387  0061  0822               	movf	___awdiv@divisor,w
  1388  0062  02A4               	subwf	___awdiv@dividend,f
  1389  0063  0823               	movf	___awdiv@divisor+1,w
  1390  0064  1C03               	skipc
  1391  0065  03A5               	decf	___awdiv@dividend+1,f
  1392  0066  02A5               	subwf	___awdiv@dividend+1,f
  1393  0067                     l1089:
  1394  0067  1429               	bsf	___awdiv@quotient,0
  1395  0068                     l1091:
  1396  0068  3001               	movlw	1
  1397  0069                     u505:
  1398  0069  1003               	clrc
  1399  006A  0CA3               	rrf	___awdiv@divisor+1,f
  1400  006B  0CA2               	rrf	___awdiv@divisor,f
  1401  006C  3EFF               	addlw	-1
  1402  006D  1D03               	skipz
  1403  006E  2869               	goto	u505
  1404  006F                     l1093:
  1405  006F  3001               	movlw	1
  1406  0070  02A7               	subwf	___awdiv@counter,f
  1407  0071  1D03               	btfss	3,2
  1408  0072  2874               	goto	u511
  1409  0073  2875               	goto	u510
  1410  0074                     u511:
  1411  0074  2850               	goto	l1085
  1412  0075                     u510:
  1413  0075                     l1095:
  1414  0075  0828               	movf	___awdiv@sign,w
  1415  0076  1903               	btfsc	3,2
  1416  0077  2879               	goto	u521
  1417  0078  287A               	goto	u520
  1418  0079                     u521:
  1419  0079  287F               	goto	l1099
  1420  007A                     u520:
  1421  007A                     l1097:
  1422  007A  09A9               	comf	___awdiv@quotient,f
  1423  007B  09AA               	comf	___awdiv@quotient+1,f
  1424  007C  0AA9               	incf	___awdiv@quotient,f
  1425  007D  1903               	skipnz
  1426  007E  0AAA               	incf	___awdiv@quotient+1,f
  1427  007F                     l1099:
  1428  007F  082A               	movf	___awdiv@quotient+1,w
  1429  0080  00A3               	movwf	?___awdiv+1
  1430  0081  0829               	movf	___awdiv@quotient,w
  1431  0082  00A2               	movwf	?___awdiv
  1432  0083                     l372:
  1433  0083  0008               	return
  1434  0084                     __end_of___awdiv:
  1435                           
  1436                           	psect	text7
  1437  01A7                     __ptext7:	
  1438 ;; *************** function _isr *****************
  1439 ;; Defined at:
  1440 ;;		line 48 in file "main.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, pclath, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0
  1456 ;;      Temps:          2       0       0       0       0
  1457 ;;      Totals:         2       0       0       0       0
  1458 ;;Total ram usage:        2 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    1
  1461 ;; This function calls:
  1462 ;;		_spiWrite
  1463 ;; This function is called by:
  1464 ;;		Interrupt level 1
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           
  1469                           ;psect for function _isr
  1470  01A7                     _isr:
  1471  01A7                     i1l849:
  1472                           
  1473                           ;main.c: 49:     ANSELH = 0;
  1474  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1475  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1476  01A9  1D8C               	btfss	12,3	;volatile
  1477  01AA  29AC               	goto	u21_21
  1478  01AB  29AD               	goto	u21_20
  1479  01AC                     u21_21:
  1480  01AC  29B6               	goto	i1l56
  1481  01AD                     u21_20:
  1482  01AD                     i1l851:
  1483                           
  1484                           ;main.c: 50:     TRISA = 0b00000001;
  1485  01AD  087A               	movf	_ADC_res,w
  1486  01AE  120A  118A  21BD  120A  118A  	fcall	_spiWrite
  1487  01B3                     i1l853:
  1488                           
  1489                           ;main.c: 51:     TRISB = 0;
  1490  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1491  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1492  01B5  118C               	bcf	12,3	;volatile
  1493  01B6                     i1l56:
  1494  01B6  0872               	movf	??_isr+1,w
  1495  01B7  008A               	movwf	10
  1496  01B8  0E71               	swapf	??_isr,w
  1497  01B9  0083               	movwf	3
  1498  01BA  0EFE               	swapf	btemp,f
  1499  01BB  0E7E               	swapf	btemp,w
  1500  01BC  0009               	retfie
  1501  01BD                     __end_of_isr:
  1502                           
  1503                           	psect	intentry
  1504  0004                     __pintentry:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1507                           
  1508  0004                     interrupt_function:
  1509  007E                     saved_w	set	btemp
  1510  0004  00FE               	movwf	btemp
  1511  0005  0E03               	swapf	3,w
  1512  0006  00F1               	movwf	??_isr
  1513  0007  080A               	movf	10,w
  1514  0008  00F2               	movwf	??_isr+1
  1515  0009  120A  118A  29A7   	ljmp	_isr
  1516                           
  1517                           	psect	text8
  1518  01BD                     __ptext8:	
  1519 ;; *************** function _spiWrite *****************
  1520 ;; Defined at:
  1521 ;;		line 35 in file "SPI.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  dat             1    wreg     unsigned char 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  dat             1    0[COMMON] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         1       0       0       0       0
  1539 ;;Total ram usage:        1 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_isr
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _spiWrite
  1550  01BD                     _spiWrite:
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _spiWrite: [wreg]
  1554                           ;spiWrite@dat stored from wreg
  1555  01BD  00F0               	movwf	spiWrite@dat
  1556  01BE                     i1l745:
  1557                           
  1558                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1559  01BE  0870               	movf	spiWrite@dat,w
  1560  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1561  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1562  01C1  0093               	movwf	19	;volatile
  1563  01C2                     i1l125:
  1564  01C2  0008               	return
  1565  01C3                     __end_of_spiWrite:
  1566  007E                     btemp	set	126	;btemp
  1567  007E                     wtemp0	set	126
  1568                           
  1569                           	psect	config
  1570                           
  1571                           ;Config register CONFIG1 @ 0x2007
  1572                           ;	Oscillator Selection bits
  1573                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1574                           ;	Watchdog Timer Enable bit
  1575                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1576                           ;	Power-up Timer Enable bit
  1577                           ;	PWRTE = OFF, PWRT disabled
  1578                           ;	RE3/MCLR pin function select bit
  1579                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1580                           ;	Code Protection bit
  1581                           ;	CP = OFF, Program memory code protection is disabled
  1582                           ;	Data Code Protection bit
  1583                           ;	CPD = OFF, Data memory code protection is disabled
  1584                           ;	Brown Out Reset Selection bits
  1585                           ;	BOREN = ON, BOR enabled
  1586                           ;	Internal External Switchover bit
  1587                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1588                           ;	Fail-Safe Clock Monitor Enabled bit
  1589                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1590                           ;	Low Voltage Programming Enable bit
  1591                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1592                           ;	In-Circuit Debugger Mode bit
  1593                           ;	DEBUG = 0x1, unprogrammed default
  1594  2007                     	org	8199
  1595  2007  23D6               	dw	9174
  1596                           
  1597                           ;Config register CONFIG2 @ 0x2008
  1598                           ;	Brown-out Reset Selection bit
  1599                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1600                           ;	Flash Program Memory Self Write Enable bits
  1601                           ;	WRT = OFF, Write protection off
  1602  2008                     	org	8200
  1603  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     13      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _setup->_spiInit
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1399
                                             11 BANK0      2     2      0
                            ___awdiv
                             ___wmul
                                _sem
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     458
                            _ADC_chT
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _ADC_chT                                              2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _sem                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _sem
   _setup
     _ADC_chT
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 18:22:27 2021

            _SSPSTATbits 0094                       l70 0141                       l78 010F  
                     l95 016E                       l97 0175                       l98 017C  
                     l99 0190                       u20 00D7                       u21 00D6  
                     u30 00EA                       u31 00E9                       u40 00F7  
                     u41 00F6                       u25 00D3                       u50 010A  
                     u51 0109                       u35 00E6                       u45 00F3  
                     u55 0106             ___awdiv@sign 0028      ___wmul@multiplicand 0075  
                    l115 01A1                      l116 01A6                      l221 016C  
                    l219 0152                      l372 0083                      l905 016D  
                    l921 019D                      l923 01A0                      l915 0192  
                    l931 0120                      l781 00EA                      l909 0183  
                    l917 0199                      l941 0136                      l933 0128  
                    l925 0110                      l783 00F7                      l775 00CA  
                    l919 019B                      l951 013F                      l943 0137  
                    l935 012B                      l927 0114                      l785 00FD  
                    l777 00D7                      l945 0138                      l937 012C  
                    l929 0115                      l787 010A                      l779 00DD  
                    l947 013B                      l939 012D                      l949 013E  
                    u230 0199                      u231 0198                      u420 0166  
                    u421 0165                      u405 0153                      u510 0075  
                    u430 0022                      u511 0074                      u431 0021  
                    u415 015A                      u520 007A                      u440 002D  
                    u521 0079                      u505 0069                      u441 002C  
                    u450 003E                      u530 009C                      u451 003D  
                    u531 009B                      u470 0050                      u390 014A  
                    u471 004F                      u391 0149                      u465 0042  
                    u490 0061                      u491 0060                      u547 008D  
                    u485 0051                      u495 005D                      _isr 01A7  
                    _sem 00CA          __end_of_ADC_chT 0191                     l1111 0098  
                   l1103 0084                     l1113 009C                     l1105 0089  
                   l1051 0159                     l1115 00C1                     l1107 0090  
                   l1061 001E                     l1053 0160                     l1045 0142  
                   l1109 0094                     l1071 0032                     l1063 0022  
                   l1055 0166                     l1047 0146                     l1081 0048  
                   l1073 0036                     l1065 0027                     l1049 014A  
                   l1137 0188                     l1091 0068                     l1083 004C  
                   l1075 0038                     l1067 0029                     l1059 001B  
                   l1093 006F                     l1085 0050                     l1077 003E  
                   l1069 002D                     l1087 0061                     l1079 0041  
                   l1095 0075                     l1097 007A                     l1089 0067  
                   l1099 007F                     ?_isr 0070                     ?_sem 0070  
                   i1l56 01B6                     _main 0084                     btemp 007E  
                   start 000C                    ??_isr 0071                    ??_sem 0073  
                  ?_main 0070          __end_of___awdiv 0084                    _ANSEL 0188  
        ___awdiv@divisor 0022                    i1l125 01C2                    i1l745 01BE  
                  i1l851 01AD                    i1l853 01B3                    i1l849 01A7  
        ___awdiv@counter 0027                    u21_20 01AD                    u21_21 01AC  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063                    _setup 0110                    pclath 000A  
        __end_of_spiInit 01A7                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00CA                ??_ADC_chT 0075  
                 ??_main 002B                   _ADCON1 009F                   _ADRESH 001E  
       ___awdiv@dividend 0024                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   ___wmul 0142                ??___awdiv 0026  
       ___awdiv@quotient 0029                   saved_w 007E         __end_of_spiWrite 01C3  
              ??_spiInit 0076  __end_of__initialization 0017           __pcstackCOMMON 0070  
          __end_of_setup 0142                  ??_setup 0077               __pbssBANK0 002D  
             __pmaintext 0084                  ?___wmul 0073               __pintentry 0004  
                _ADC_chT 016D                  _ADC_con 0077                  _ADC_res 007A  
                _SSPSTAT 0094                ?_spiWrite 0070                  ___awdiv 001B  
        __size_of___wmul 002B                  _channel 002D                  __ptext1 0110  
                __ptext2 0191                  __ptext3 016D                  __ptext4 00CA  
                __ptext5 0142                  __ptext6 001B                  __ptext7 01A7  
                __ptext8 01BD             __size_of_isr 0016             __size_of_sem 0046  
                _spiInit 0191     end_of_initialization 0017               ??_spiWrite 0070  
              _VALOR_ADC 0079                _PORTDbits 0008                _TRISAbits 0085  
            spiWrite@dat 0070           __end_of___wmul 016D      start_initialization 000F  
            __end_of_isr 01BD              __end_of_sem 0110                 ??___wmul 0077  
               ?_ADC_chT 0073              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0022        __size_of_spiWrite 0006  
               ?_spiInit 0073           __size_of_setup 0032     spiInit@sTransmitEdge 0075  
      interrupt_function 0004           ___wmul@product 0020                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_ADC_chT 0024        ___wmul@multiplier 0073         __size_of___awdiv 0069  
         ADC_chT@channel 0073         __size_of_spiInit 0016            __size_of_main 0046  
               _spiWrite 01BD             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000  
