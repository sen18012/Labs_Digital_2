

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 22:18:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0013                     _SSPBUF	set	19
   453  0014                     _SSPCON	set	20
   454  0019                     _TXREG	set	25
   455  0018                     _RCSTAbits	set	24
   456  000B                     _INTCONbits	set	11
   457  000B                     _INTCON	set	11
   458  000C                     _PIR1bits	set	12
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0007                     _PORTC	set	7
   462  0005                     _PORTA	set	5
   463  0006                     _PORTB	set	6
   464  0007                     _PORTCbits	set	7
   465  001A                     _RCREG	set	26
   466  0049                     _RE1	set	73
   467  0048                     _RE0	set	72
   468  0065                     _RCIF	set	101
   469  0094                     _SSPSTATbits	set	148
   470  0094                     _SSPSTAT	set	148
   471  0098                     _TXSTAbits	set	152
   472  0099                     _SPBRG	set	153
   473  009A                     _SPBRGH	set	154
   474  0081                     _OPTION_REG	set	129
   475  008C                     _PIE1bits	set	140
   476  009F                     _ADCON1	set	159
   477  0089                     _TRISE	set	137
   478  0086                     _TRISB	set	134
   479  0085                     _TRISA	set	133
   480  0088                     _TRISD	set	136
   481  043B                     _TRISC3	set	1083
   482  043D                     _TRISC5	set	1085
   483  04C1                     _TRMT	set	1217
   484  0439                     _TRISC1	set	1081
   485  0438                     _TRISC0	set	1080
   486  043F                     _TRISC7	set	1087
   487  043A                     _TRISC2	set	1082
   488  0189                     _ANSELH	set	393
   489  0188                     _ANSEL	set	392
   490                           
   491                           	psect	strings
   492  01D0                     __pstrings:
   493  01D0                     stringtab:
   494  01D0                     __stringtab:
   495  01D0                     stringcode:	
   496                           ;	String table - string pointers are 1 byte each
   497                           
   498  01D0                     stringdir:
   499  01D0  3001               	movlw	high stringdir
   500  01D1  008A               	movwf	10
   501  01D2  0804               	movf	4,w
   502  01D3  0A84               	incf	4,f
   503  01D4  0782               	addwf	2,f
   504  01D5                     __stringbase:
   505  01D5  3400               	retlw	0
   506  01D6                     __end_of__stringtab:
   507  01D6                     STR_1:
   508  01D6  3453               	retlw	83	;'S'
   509  01D7  3431               	retlw	49	;'1'
   510  01D8  343A               	retlw	58	;':'
   511  01D9  3400               	retlw	0
   512  01DA                     STR_2:
   513  01DA  3453               	retlw	83	;'S'
   514  01DB  3432               	retlw	50	;'2'
   515  01DC  343A               	retlw	58	;':'
   516  01DD  3400               	retlw	0
   517  01DE                     STR_3:
   518  01DE  3453               	retlw	83	;'S'
   519  01DF  3433               	retlw	51	;'3'
   520  01E0  343A               	retlw	58	;':'
   521  01E1  3400               	retlw	0
   522                           
   523                           	psect	cinit
   524  000F                     start_initialization:	
   525                           ; #config settings
   526                           
   527  000F                     __initialization:
   528                           
   529                           ; Clear objects allocated to COMMON
   530  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   531  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK0
   534  0011  1383               	bcf	3,7	;select IRP bank0
   535  0012  3020               	movlw	low __pbssBANK0
   536  0013  0084               	movwf	4
   537  0014  3044               	movlw	low (__pbssBANK0+36)
   538  0015  120A  118A  21F8  120A  118A  	fcall	clear_ram0
   539  001A                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  001A                     __end_of__initialization:
   543  001A  0183               	clrf	3
   544  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  0079                     __pbssCOMMON:
   548  0079                     _USART_LEER:
   549  0079                     	ds	1
   550  007A                     _cont:
   551  007A                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554  0020                     __pbssBANK0:
   555  0020                     _data1:
   556  0020                     	ds	20
   557  0034                     _data2:
   558  0034                     	ds	16
   559                           
   560                           	psect	clrtext
   561  01F8                     clear_ram0:	
   562                           ;	Called with FSR containing the base address, and
   563                           ;	W with the last address+1
   564                           
   565  01F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   566  01F9                     clrloop0:
   567  01F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   568  01FA  0A84               	incf	4,f	;increment pointer
   569  01FB  0604               	xorwf	4,w	;XOR with final address
   570  01FC  1903               	btfsc	3,2	;have we reached the end yet?
   571  01FD  3400               	retlw	0	;all done for this memory range, return
   572  01FE  0604               	xorwf	4,w	;XOR again to restore value
   573  01FF  29F9               	goto	clrloop0	;do the next byte
   574                           
   575                           	psect	cstackCOMMON
   576  0070                     __pcstackCOMMON:
   577  0070                     ?_setup:
   578  0070                     ?_Lcd_Init:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_Lcd_Clear:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Lcd_Write_String:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_spiRead:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_ISR:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ??_ISR:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_main:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Lcd_Port:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Cmd:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_Lcd_Write_Char:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_spiReceiveWait:	
   609                           ; 1 bytes @ 0x0
   610                           
   611                           
   612                           ; 1 bytes @ 0x0
   613  0070                     	ds	3
   614  0073                     ??_spiRead:
   615  0073                     ?_spiInit:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     ??_Lcd_Port:	
   619                           ; 1 bytes @ 0x3
   620                           
   621  0073                     ??_spiReceiveWait:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     Lcd_Port@a:	
   625                           ; 1 bytes @ 0x3
   626                           
   627  0073                     spiInit@sDataSample:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  0073                     	ds	1
   633  0074                     ??_Lcd_Cmd:
   634  0074                     ??_Lcd_Write_Char:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     spiInit@sClockIdle:	
   638                           ; 1 bytes @ 0x4
   639                           
   640                           
   641                           ; 1 bytes @ 0x4
   642  0074                     	ds	1
   643  0075                     Lcd_Write_Char@a:
   644  0075                     spiInit@sTransmitEdge:	
   645                           ; 1 bytes @ 0x5
   646                           
   647                           
   648                           ; 1 bytes @ 0x5
   649  0075                     	ds	1
   650  0076                     ??_Lcd_Write_String:
   651  0076                     ??_spiInit:	
   652                           ; 1 bytes @ 0x6
   653                           
   654  0076                     Lcd_Cmd@a:	
   655                           ; 1 bytes @ 0x6
   656                           
   657  0076                     spiInit@sType:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     Lcd_Write_String@i:	
   661                           ; 1 bytes @ 0x6
   662                           
   663                           
   664                           ; 2 bytes @ 0x6
   665  0076                     	ds	1
   666  0077                     ??_setup:
   667  0077                     ??_Lcd_Init:	
   668                           ; 1 bytes @ 0x7
   669                           
   670  0077                     ??_Lcd_Clear:	
   671                           ; 1 bytes @ 0x7
   672                           
   673  0077                     ?_Lcd_Set_Cursor:	
   674                           ; 1 bytes @ 0x7
   675                           
   676  0077                     Lcd_Set_Cursor@b:	
   677                           ; 1 bytes @ 0x7
   678                           
   679                           
   680                           ; 1 bytes @ 0x7
   681  0077                     	ds	1
   682  0078                     ??_Lcd_Set_Cursor:
   683  0078                     Lcd_Write_String@a:	
   684                           ; 1 bytes @ 0x8
   685                           
   686                           
   687                           ; 1 bytes @ 0x8
   688  0078                     	ds	1
   689                           
   690                           	psect	cstackBANK0
   691  0044                     __pcstackBANK0:
   692  0044                     Lcd_Set_Cursor@a:
   693                           
   694                           ; 1 bytes @ 0x0
   695  0044                     	ds	1
   696  0045                     Lcd_Set_Cursor@temp:
   697                           
   698                           ; 1 bytes @ 0x1
   699  0045                     	ds	1
   700  0046                     ??_main:
   701                           
   702                           ; 1 bytes @ 0x2
   703  0046                     	ds	2
   704                           
   705                           	psect	maintext
   706  001E                     __pmaintext:	
   707 ;;
   708 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   709 ;;
   710 ;; *************** function _main *****************
   711 ;; Defined at:
   712 ;;		line 91 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : B00/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       2       0       0       0
   729 ;;      Totals:         0       2       0       0       0
   730 ;;Total ram usage:        2 bytes
   731 ;; Hardware stack levels required when called:    4
   732 ;; This function calls:
   733 ;;		_Lcd_Clear
   734 ;;		_Lcd_Init
   735 ;;		_Lcd_Set_Cursor
   736 ;;		_Lcd_Write_String
   737 ;;		_setup
   738 ;;		_spiRead
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _main
   746  001E                     _main:
   747  001E                     l1143:	
   748                           ;incstack = 0
   749                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   750                           
   751                           
   752                           ;main.c: 92:     setup();
   753  001E  120A  118A  20D3  120A  118A  	fcall	_setup
   754  0023                     l1145:
   755                           
   756                           ;main.c: 94:     TRISD = 0x00;
   757  0023  1683               	bsf	3,5	;RP0=1, select bank1
   758  0024  1303               	bcf	3,6	;RP1=0, select bank1
   759  0025  0188               	clrf	8	;volatile
   760  0026                     l1147:
   761                           
   762                           ;main.c: 95:     Lcd_Init();
   763  0026  120A  118A  2088  120A  118A  	fcall	_Lcd_Init
   764  002B                     l1149:
   765                           
   766                           ;main.c: 96:     Lcd_Clear();
   767  002B  120A  118A  21E2  120A  118A  	fcall	_Lcd_Clear
   768  0030                     l1151:
   769                           
   770                           ;main.c: 97:     Lcd_Set_Cursor(1, 1);
   771  0030  01F7               	clrf	Lcd_Set_Cursor@b
   772  0031  0AF7               	incf	Lcd_Set_Cursor@b,f
   773  0032  3001               	movlw	1
   774  0033  120A  118A  213F  120A  118A  	fcall	_Lcd_Set_Cursor
   775  0038                     l1153:
   776                           
   777                           ;main.c: 98:     Lcd_Write_String("S1:");
   778  0038  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   779  0039  120A  118A  2165  120A  118A  	fcall	_Lcd_Write_String
   780  003E                     l1155:
   781                           
   782                           ;main.c: 99:     Lcd_Set_Cursor(1, 7);
   783  003E  3007               	movlw	7
   784  003F  1283               	bcf	3,5	;RP0=0, select bank0
   785  0040  1303               	bcf	3,6	;RP1=0, select bank0
   786  0041  00C6               	movwf	??_main
   787  0042  0846               	movf	??_main,w
   788  0043  00F7               	movwf	Lcd_Set_Cursor@b
   789  0044  3001               	movlw	1
   790  0045  120A  118A  213F  120A  118A  	fcall	_Lcd_Set_Cursor
   791  004A                     l1157:
   792                           
   793                           ;main.c: 100:     Lcd_Write_String("S2:");
   794  004A  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   795  004B  120A  118A  2165  120A  118A  	fcall	_Lcd_Write_String
   796  0050                     l1159:
   797                           
   798                           ;main.c: 101:     Lcd_Set_Cursor(1, 14);
   799  0050  300E               	movlw	14
   800  0051  1283               	bcf	3,5	;RP0=0, select bank0
   801  0052  1303               	bcf	3,6	;RP1=0, select bank0
   802  0053  00C6               	movwf	??_main
   803  0054  0846               	movf	??_main,w
   804  0055  00F7               	movwf	Lcd_Set_Cursor@b
   805  0056  3001               	movlw	1
   806  0057  120A  118A  213F  120A  118A  	fcall	_Lcd_Set_Cursor
   807  005C                     l1161:
   808                           
   809                           ;main.c: 102:     Lcd_Write_String("S3:");
   810  005C  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   811  005D  120A  118A  2165  120A  118A  	fcall	_Lcd_Write_String
   812  0062                     l1163:
   813                           
   814                           ;main.c: 104:        PORTCbits.RC2 = 0;
   815  0062  1283               	bcf	3,5	;RP0=0, select bank0
   816  0063  1303               	bcf	3,6	;RP1=0, select bank0
   817  0064  1107               	bcf	7,2	;volatile
   818  0065                     l1165:
   819                           
   820                           ;main.c: 105:        _delay((unsigned long)((1)*(8000000/4000.0)));
   821  0065  3003               	movlw	3
   822  0066  1283               	bcf	3,5	;RP0=0, select bank0
   823  0067  1303               	bcf	3,6	;RP1=0, select bank0
   824  0068  00C7               	movwf	??_main+1
   825  0069  3097               	movlw	151
   826  006A  00C6               	movwf	??_main
   827  006B                     u197:
   828  006B  0BC6               	decfsz	??_main,f
   829  006C  286B               	goto	u197
   830  006D  0BC7               	decfsz	??_main+1,f
   831  006E  286B               	goto	u197
   832  006F                     l1167:
   833                           
   834                           ;main.c: 108:        PORTB = spiRead();
   835  006F  120A  118A  21EF  120A  118A  	fcall	_spiRead
   836  0074  1283               	bcf	3,5	;RP0=0, select bank0
   837  0075  1303               	bcf	3,6	;RP1=0, select bank0
   838  0076  0086               	movwf	6	;volatile
   839  0077                     l1169:
   840                           
   841                           ;main.c: 110:        _delay((unsigned long)((1)*(8000000/4000.0)));
   842  0077  3003               	movlw	3
   843  0078  1283               	bcf	3,5	;RP0=0, select bank0
   844  0079  1303               	bcf	3,6	;RP1=0, select bank0
   845  007A  00C7               	movwf	??_main+1
   846  007B  3097               	movlw	151
   847  007C  00C6               	movwf	??_main
   848  007D                     u207:
   849  007D  0BC6               	decfsz	??_main,f
   850  007E  287D               	goto	u207
   851  007F  0BC7               	decfsz	??_main+1,f
   852  0080  287D               	goto	u207
   853  0081                     l1171:
   854                           
   855                           ;main.c: 111:        PORTCbits.RC2 = 1;
   856  0081  1283               	bcf	3,5	;RP0=0, select bank0
   857  0082  1303               	bcf	3,6	;RP1=0, select bank0
   858  0083  1507               	bsf	7,2	;volatile
   859  0084  2862               	goto	l1163
   860  0085  120A  118A  280C   	ljmp	start
   861  0088                     __end_of_main:
   862                           
   863                           	psect	text1
   864  01EF                     __ptext1:	
   865 ;; *************** function _spiRead *****************
   866 ;; Defined at:
   867 ;;		line 49 in file "SPI_M.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      unsigned char 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    2
   888 ;; This function calls:
   889 ;;		_spiReceiveWait
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _spiRead
   897  01EF                     _spiRead:
   898  01EF                     l903:	
   899                           ;incstack = 0
   900                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   901                           
   902                           
   903                           ;SPI_M.c: 51:     spiReceiveWait();
   904  01EF  120A  118A  2200  120A  118A  	fcall	_spiReceiveWait
   905  01F4                     l905:
   906                           
   907                           ;SPI_M.c: 52:     return(SSPBUF);
   908  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   909  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   910  01F6  0813               	movf	19,w	;volatile
   911  01F7                     l195:
   912  01F7  0008               	return
   913  01F8                     __end_of_spiRead:
   914                           
   915                           	psect	text2
   916  0200                     __ptext2:	
   917 ;; *************** function _spiReceiveWait *****************
   918 ;; Defined at:
   919 ;;		line 31 in file "SPI_M.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		None
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_spiRead
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _spiReceiveWait
   949  0200                     _spiReceiveWait:
   950  0200                     l819:	
   951                           ;incstack = 0
   952                           ; Regs used in _spiReceiveWait: []
   953                           
   954  0200                     l181:	
   955                           ;SPI_M.c: 33:     while ( !SSPSTATbits.BF );
   956                           
   957  0200  1683               	bsf	3,5	;RP0=1, select bank1
   958  0201  1303               	bcf	3,6	;RP1=0, select bank1
   959  0202  1C14               	btfss	20,0	;volatile
   960  0203  2A05               	goto	u21
   961  0204  2A06               	goto	u20
   962  0205                     u21:
   963  0205  2A00               	goto	l181
   964  0206                     u20:
   965  0206                     l184:
   966  0206  0008               	return
   967  0207                     __end_of_spiReceiveWait:
   968                           
   969                           	psect	text3
   970  00D3                     __ptext3:	
   971 ;; *************** function _setup *****************
   972 ;; Defined at:
   973 ;;		line 132 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		_spiInit
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _setup
  1003  00D3                     _setup:
  1004  00D3                     l989:	
  1005                           ;incstack = 0
  1006                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1007                           
  1008                           
  1009                           ;main.c: 133:     ANSEL = 0b00000011;
  1010  00D3  3003               	movlw	3
  1011  00D4  1683               	bsf	3,5	;RP0=1, select bank3
  1012  00D5  1703               	bsf	3,6	;RP1=1, select bank3
  1013  00D6  0088               	movwf	8	;volatile
  1014  00D7                     l991:
  1015                           
  1016                           ;main.c: 134:     ANSELH = 0;
  1017  00D7  0189               	clrf	9	;volatile
  1018  00D8                     l993:
  1019                           
  1020                           ;main.c: 135:     TRISA = 0b00000011;
  1021  00D8  3003               	movlw	3
  1022  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1023  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1024  00DB  0085               	movwf	5	;volatile
  1025                           
  1026                           ;main.c: 136:     TRISB = 0;
  1027  00DC  0186               	clrf	6	;volatile
  1028  00DD                     l995:
  1029                           
  1030                           ;main.c: 138:     TRISC2 = 0;
  1031  00DD  1107               	bcf	7,2	;volatile
  1032                           
  1033                           ;main.c: 139:     TRISD = 0;
  1034  00DE  0188               	clrf	8	;volatile
  1035                           
  1036                           ;main.c: 140:     TRISE = 0;
  1037  00DF  0189               	clrf	9	;volatile
  1038                           
  1039                           ;main.c: 141:     PORTA = 0;
  1040  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00E2  0185               	clrf	5	;volatile
  1043                           
  1044                           ;main.c: 142:     PORTB = 0;
  1045  00E3  0186               	clrf	6	;volatile
  1046                           
  1047                           ;main.c: 143:     PORTC = 0;
  1048  00E4  0187               	clrf	7	;volatile
  1049                           
  1050                           ;main.c: 144:     PORTD = 0;
  1051  00E5  0188               	clrf	8	;volatile
  1052                           
  1053                           ;main.c: 145:     PORTE = 0;
  1054  00E6  0189               	clrf	9	;volatile
  1055  00E7                     l997:
  1056                           
  1057                           ;main.c: 146:     TRISC7 = 1;
  1058  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1059  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1060  00E9  1787               	bsf	7,7	;volatile
  1061                           
  1062                           ;main.c: 148:     ADCON1 = 0b00000000;
  1063  00EA  019F               	clrf	31	;volatile
  1064  00EB                     l999:
  1065                           
  1066                           ;main.c: 149:     PIE1bits.ADIE = 0;
  1067  00EB  130C               	bcf	12,6	;volatile
  1068  00EC                     l1001:
  1069                           
  1070                           ;main.c: 150:     PIR1bits.ADIF = 0;
  1071  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1072  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1073  00EE  130C               	bcf	12,6	;volatile
  1074                           
  1075                           ;main.c: 151:     OPTION_REG = 0b00000000;
  1076  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1077  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1078  00F1  0181               	clrf	1	;volatile
  1079                           
  1080                           ;main.c: 152:     INTCON = 0b00000000;
  1081  00F2  018B               	clrf	11	;volatile
  1082  00F3                     l1003:
  1083                           
  1084                           ;main.c: 155:     INTCONbits.PEIE = 1;
  1085  00F3  170B               	bsf	11,6	;volatile
  1086  00F4                     l1005:
  1087                           
  1088                           ;main.c: 156:     PIE1bits.RCIE = 1;
  1089  00F4  168C               	bsf	12,5	;volatile
  1090  00F5                     l1007:
  1091                           
  1092                           ;main.c: 157:     INTCONbits.GIE = 1;
  1093  00F5  178B               	bsf	11,7	;volatile
  1094                           
  1095                           ;main.c: 160:     SPBRGH = 0;
  1096  00F6  019A               	clrf	26	;volatile
  1097  00F7                     l1009:
  1098                           
  1099                           ;main.c: 161:     SPBRG = 12;
  1100  00F7  300C               	movlw	12
  1101  00F8  0099               	movwf	25	;volatile
  1102  00F9                     l1011:
  1103                           
  1104                           ;main.c: 163:     TXSTAbits.TXEN = 1;
  1105  00F9  1698               	bsf	24,5	;volatile
  1106  00FA                     l1013:
  1107                           
  1108                           ;main.c: 164:     TXSTAbits.SYNC = 0;
  1109  00FA  1218               	bcf	24,4	;volatile
  1110  00FB                     l1015:
  1111                           
  1112                           ;main.c: 166:     RCSTAbits.SPEN = 1;
  1113  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00FD  1798               	bsf	24,7	;volatile
  1116  00FE                     l1017:
  1117                           
  1118                           ;main.c: 167:     RCSTAbits.CREN = 1;
  1119  00FE  1618               	bsf	24,4	;volatile
  1120  00FF                     l1019:
  1121                           
  1122                           ;main.c: 168:     RCREG = 0;
  1123  00FF  019A               	clrf	26	;volatile
  1124  0100                     l1021:
  1125                           
  1126                           ;main.c: 170:     TRISC0 = 0;
  1127  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0102  1007               	bcf	7,0	;volatile
  1130  0103                     l1023:
  1131                           
  1132                           ;main.c: 171:     TRISC1 = 0;
  1133  0103  1087               	bcf	7,1	;volatile
  1134  0104                     l1025:
  1135                           
  1136                           ;main.c: 172:     TRISC2 = 0;
  1137  0104  1107               	bcf	7,2	;volatile
  1138  0105                     l1027:
  1139                           
  1140                           ;main.c: 173:     PORTCbits.RC0 = 1;
  1141  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0107  1407               	bsf	7,0	;volatile
  1144  0108                     l1029:
  1145                           
  1146                           ;main.c: 174:     PORTCbits.RC1 = 1;
  1147  0108  1487               	bsf	7,1	;volatile
  1148  0109                     l1031:
  1149                           
  1150                           ;main.c: 175:     PORTCbits.RC2 = 1;
  1151  0109  1507               	bsf	7,2	;volatile
  1152  010A                     l1033:
  1153                           
  1154                           ;main.c: 176:     PORTCbits.RC7 = 1;
  1155  010A  1787               	bsf	7,7	;volatile
  1156  010B                     l1035:
  1157                           
  1158                           ;main.c: 177:     PORTCbits.RC2 = 1;
  1159  010B  1507               	bsf	7,2	;volatile
  1160  010C                     l1037:
  1161                           
  1162                           ;main.c: 179:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1163  010C  01F3               	clrf	spiInit@sDataSample
  1164  010D  01F4               	clrf	spiInit@sClockIdle
  1165  010E  01F5               	clrf	spiInit@sTransmitEdge
  1166  010F  3020               	movlw	32
  1167  0110  120A  118A  21A4  120A  118A  	fcall	_spiInit
  1168  0115                     l100:
  1169  0115  0008               	return
  1170  0116                     __end_of_setup:
  1171                           
  1172                           	psect	text4
  1173  01A4                     __ptext4:	
  1174 ;; *************** function _spiInit *****************
  1175 ;; Defined at:
  1176 ;;		line 14 in file "SPI_M.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  sType           1    wreg     enum E1264
  1179 ;;  sDataSample     1    3[COMMON] enum E1272
  1180 ;;  sClockIdle      1    4[COMMON] enum E1276
  1181 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  sType           1    6[COMMON] enum E1264
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         3       0       0       0       0
  1194 ;;      Locals:         1       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0
  1196 ;;      Totals:         4       0       0       0       0
  1197 ;;Total ram usage:        4 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_setup
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _spiInit
  1209  01A4                     _spiInit:
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1213                           ;spiInit@sType stored from wreg
  1214  01A4  00F6               	movwf	spiInit@sType
  1215  01A5                     l979:
  1216                           
  1217                           ;SPI_M.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_M.c: 15: {;SPI_M.c: 16:     TRISC5 = 0;
  1218  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1219  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1220  01A7  1287               	bcf	7,5	;volatile
  1221                           
  1222                           ;SPI_M.c: 17:     if(sType & 0b00000100)
  1223  01A8  1D76               	btfss	spiInit@sType,2
  1224  01A9  29AB               	goto	u121
  1225  01AA  29AC               	goto	u120
  1226  01AB                     u121:
  1227  01AB  29B0               	goto	l985
  1228  01AC                     u120:
  1229  01AC                     l981:
  1230                           
  1231                           ;SPI_M.c: 18:     {;SPI_M.c: 19:         SSPSTAT = sTransmitEdge;
  1232  01AC  0875               	movf	spiInit@sTransmitEdge,w
  1233  01AD  0094               	movwf	20	;volatile
  1234  01AE                     l983:
  1235                           
  1236                           ;SPI_M.c: 20:         TRISC3 = 1;
  1237  01AE  1587               	bsf	7,3	;volatile
  1238                           
  1239                           ;SPI_M.c: 21:     }
  1240  01AF  29B4               	goto	l177
  1241  01B0                     l985:
  1242                           
  1243                           ;SPI_M.c: 23:     {;SPI_M.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  1244  01B0  0873               	movf	spiInit@sDataSample,w
  1245  01B1  0475               	iorwf	spiInit@sTransmitEdge,w
  1246  01B2  0094               	movwf	20	;volatile
  1247  01B3                     l987:
  1248                           
  1249                           ;SPI_M.c: 25:         TRISC3 = 0;
  1250  01B3  1187               	bcf	7,3	;volatile
  1251  01B4                     l177:	
  1252                           ;SPI_M.c: 26:     }
  1253                           
  1254                           
  1255                           ;SPI_M.c: 28:     SSPCON = sType | sClockIdle;
  1256  01B4  0876               	movf	spiInit@sType,w
  1257  01B5  0474               	iorwf	spiInit@sClockIdle,w
  1258  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1259  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1260  01B8  0094               	movwf	20	;volatile
  1261  01B9                     l178:
  1262  01B9  0008               	return
  1263  01BA                     __end_of_spiInit:
  1264                           
  1265                           	psect	text5
  1266  0165                     __ptext5:	
  1267 ;; *************** function _Lcd_Write_String *****************
  1268 ;; Defined at:
  1269 ;;		line 94 in file "LCD.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  a               1    wreg     PTR unsigned char 
  1272 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  a               1    8[COMMON] PTR unsigned char 
  1275 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1276 ;;  i               2    6[COMMON] int 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         3       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0
  1289 ;;      Totals:         3       0       0       0       0
  1290 ;;Total ram usage:        3 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    3
  1293 ;; This function calls:
  1294 ;;		_Lcd_Write_Char
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _Lcd_Write_String
  1302  0165                     _Lcd_Write_String:
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1306                           ;Lcd_Write_String@a stored from wreg
  1307  0165  00F8               	movwf	Lcd_Write_String@a
  1308  0166                     l1135:
  1309                           
  1310                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  1311  0166  01F6               	clrf	Lcd_Write_String@i
  1312  0167  01F7               	clrf	Lcd_Write_String@i+1
  1313  0168  297C               	goto	l1141
  1314  0169                     l1137:
  1315                           
  1316                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  1317  0169  0876               	movf	Lcd_Write_String@i,w
  1318  016A  0778               	addwf	Lcd_Write_String@a,w
  1319  016B  0084               	movwf	4
  1320  016C  120A  118A  21D0  120A  118A  	fcall	stringdir
  1321  0171  120A  118A  21BA  120A  118A  	fcall	_Lcd_Write_Char
  1322  0176                     l1139:
  1323  0176  3001               	movlw	1
  1324  0177  07F6               	addwf	Lcd_Write_String@i,f
  1325  0178  1803               	skipnc
  1326  0179  0AF7               	incf	Lcd_Write_String@i+1,f
  1327  017A  3000               	movlw	0
  1328  017B  07F7               	addwf	Lcd_Write_String@i+1,f
  1329  017C                     l1141:
  1330  017C  0876               	movf	Lcd_Write_String@i,w
  1331  017D  0778               	addwf	Lcd_Write_String@a,w
  1332  017E  0084               	movwf	4
  1333  017F  120A  118A  21D0  120A  118A  	fcall	stringdir
  1334  0184  3A00               	xorlw	0
  1335  0185  1D03               	skipz
  1336  0186  2988               	goto	u181
  1337  0187  2989               	goto	u180
  1338  0188                     u181:
  1339  0188  2969               	goto	l1137
  1340  0189                     u180:
  1341  0189                     l135:
  1342  0189  0008               	return
  1343  018A                     __end_of_Lcd_Write_String:
  1344                           
  1345                           	psect	text6
  1346  01BA                     __ptext6:	
  1347 ;; *************** function _Lcd_Write_Char *****************
  1348 ;; Defined at:
  1349 ;;		line 77 in file "LCD.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  a               1    wreg     unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  a               1    5[COMMON] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         1       0       0       0       0
  1365 ;;      Temps:          1       0       0       0       0
  1366 ;;      Totals:         2       0       0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    2
  1370 ;; This function calls:
  1371 ;;		_Lcd_Port
  1372 ;; This function is called by:
  1373 ;;		_Lcd_Write_String
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _Lcd_Write_Char
  1379  01BA                     _Lcd_Write_Char:
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1383                           ;Lcd_Write_Char@a stored from wreg
  1384  01BA  00F5               	movwf	Lcd_Write_Char@a
  1385  01BB                     l1101:
  1386                           
  1387                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  1388  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1389  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1390  01BD  1409               	bsf	9,0	;volatile
  1391  01BE                     l1103:
  1392                           
  1393                           ;LCD.c: 88:    Lcd_Port(a);
  1394  01BE  0875               	movf	Lcd_Write_Char@a,w
  1395  01BF  120A  118A  2207  120A  118A  	fcall	_Lcd_Port
  1396  01C4                     l1105:
  1397                           
  1398                           ;LCD.c: 89:    RE1 = 1;
  1399  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1400  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1401  01C6  1489               	bsf	9,1	;volatile
  1402  01C7                     l1107:
  1403                           
  1404                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1405  01C7  301A               	movlw	26
  1406  01C8  00F4               	movwf	??_Lcd_Write_Char
  1407  01C9                     u217:
  1408  01C9  0BF4               	decfsz	??_Lcd_Write_Char,f
  1409  01CA  29C9               	goto	u217
  1410  01CB  0000               	nop
  1411  01CC                     l1109:
  1412                           
  1413                           ;LCD.c: 91:    RE1 = 0;
  1414  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1415  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1416  01CE  1089               	bcf	9,1	;volatile
  1417  01CF                     l129:
  1418  01CF  0008               	return
  1419  01D0                     __end_of_Lcd_Write_Char:
  1420                           
  1421                           	psect	text7
  1422  013F                     __ptext7:	
  1423 ;; *************** function _Lcd_Set_Cursor *****************
  1424 ;; Defined at:
  1425 ;;		line 37 in file "LCD.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  a               1    wreg     unsigned char 
  1428 ;;  b               1    7[COMMON] unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  a               1    0[BANK0 ] unsigned char 
  1431 ;;  temp            1    1[BANK0 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         1       0       0       0       0
  1442 ;;      Locals:         0       2       0       0       0
  1443 ;;      Temps:          1       0       0       0       0
  1444 ;;      Totals:         2       2       0       0       0
  1445 ;;Total ram usage:        4 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    3
  1448 ;; This function calls:
  1449 ;;		_Lcd_Cmd
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _Lcd_Set_Cursor
  1457  013F                     _Lcd_Set_Cursor:
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1461                           ;Lcd_Set_Cursor@a stored from wreg
  1462  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0141  00C4               	movwf	Lcd_Set_Cursor@a
  1465  0142                     l1123:
  1466                           
  1467                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  1468  0142  0344               	decf	Lcd_Set_Cursor@a,w
  1469  0143  1D03               	btfss	3,2
  1470  0144  2946               	goto	u161
  1471  0145  2947               	goto	u160
  1472  0146                     u161:
  1473  0146  2953               	goto	l1129
  1474  0147                     u160:
  1475  0147                     l1125:
  1476                           
  1477                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  1478  0147  0877               	movf	Lcd_Set_Cursor@b,w
  1479  0148  3E7F               	addlw	127
  1480  0149  00F8               	movwf	??_Lcd_Set_Cursor
  1481  014A  0878               	movf	??_Lcd_Set_Cursor,w
  1482  014B  00C5               	movwf	Lcd_Set_Cursor@temp
  1483  014C                     l1127:
  1484                           
  1485                           ;LCD.c: 46:   Lcd_Cmd(temp);
  1486  014C  0845               	movf	Lcd_Set_Cursor@temp,w
  1487  014D  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1488                           
  1489                           ;LCD.c: 47:  }
  1490  0152  2964               	goto	l123
  1491  0153                     l1129:
  1492  0153  3002               	movlw	2
  1493  0154  0644               	xorwf	Lcd_Set_Cursor@a,w
  1494  0155  1D03               	btfss	3,2
  1495  0156  2958               	goto	u171
  1496  0157  2959               	goto	u170
  1497  0158                     u171:
  1498  0158  2964               	goto	l123
  1499  0159                     u170:
  1500  0159                     l1131:
  1501                           
  1502                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  1503  0159  0877               	movf	Lcd_Set_Cursor@b,w
  1504  015A  3EBF               	addlw	191
  1505  015B  00F8               	movwf	??_Lcd_Set_Cursor
  1506  015C  0878               	movf	??_Lcd_Set_Cursor,w
  1507  015D  00C5               	movwf	Lcd_Set_Cursor@temp
  1508  015E                     l1133:
  1509                           
  1510                           ;LCD.c: 54:   Lcd_Cmd(temp);
  1511  015E  0845               	movf	Lcd_Set_Cursor@temp,w
  1512  015F  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1513  0164                     l123:
  1514  0164  0008               	return
  1515  0165                     __end_of_Lcd_Set_Cursor:
  1516                           
  1517                           	psect	text8
  1518  0088                     __ptext8:	
  1519 ;; *************** function _Lcd_Init *****************
  1520 ;; Defined at:
  1521 ;;		line 58 in file "LCD.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0
  1537 ;;      Temps:          2       0       0       0       0
  1538 ;;      Totals:         2       0       0       0       0
  1539 ;;Total ram usage:        2 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    3
  1542 ;; This function calls:
  1543 ;;		_Lcd_Cmd
  1544 ;;		_Lcd_Port
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _Lcd_Init
  1552  0088                     _Lcd_Init:
  1553  0088                     l1111:	
  1554                           ;incstack = 0
  1555                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1556                           
  1557                           
  1558                           ;LCD.c: 60:   Lcd_Port(0x00);
  1559  0088  3000               	movlw	0
  1560  0089  120A  118A  2207  120A  118A  	fcall	_Lcd_Port
  1561  008E                     l1113:
  1562                           
  1563                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1564  008E  3034               	movlw	52
  1565  008F  00F8               	movwf	??_Lcd_Init+1
  1566  0090  30F1               	movlw	241
  1567  0091  00F7               	movwf	??_Lcd_Init
  1568  0092                     u227:
  1569  0092  0BF7               	decfsz	??_Lcd_Init,f
  1570  0093  2892               	goto	u227
  1571  0094  0BF8               	decfsz	??_Lcd_Init+1,f
  1572  0095  2892               	goto	u227
  1573  0096  2897               	nop2
  1574  0097                     l1115:
  1575                           
  1576                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  1577  0097  3030               	movlw	48
  1578  0098  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1579                           
  1580                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1581  009D  300D               	movlw	13
  1582  009E  00F8               	movwf	??_Lcd_Init+1
  1583  009F  30FB               	movlw	251
  1584  00A0  00F7               	movwf	??_Lcd_Init
  1585  00A1                     u237:
  1586  00A1  0BF7               	decfsz	??_Lcd_Init,f
  1587  00A2  28A1               	goto	u237
  1588  00A3  0BF8               	decfsz	??_Lcd_Init+1,f
  1589  00A4  28A1               	goto	u237
  1590  00A5  28A6               	nop2
  1591  00A6                     l1117:
  1592                           
  1593                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  1594  00A6  3030               	movlw	48
  1595  00A7  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1596  00AC                     l1119:
  1597                           
  1598                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1599  00AC  301D               	movlw	29
  1600  00AD  00F8               	movwf	??_Lcd_Init+1
  1601  00AE  3091               	movlw	145
  1602  00AF  00F7               	movwf	??_Lcd_Init
  1603  00B0                     u247:
  1604  00B0  0BF7               	decfsz	??_Lcd_Init,f
  1605  00B1  28B0               	goto	u247
  1606  00B2  0BF8               	decfsz	??_Lcd_Init+1,f
  1607  00B3  28B0               	goto	u247
  1608                           
  1609                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  1610  00B4  3030               	movlw	48
  1611  00B5  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1612                           
  1613                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  1614  00BA  3038               	movlw	56
  1615  00BB  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1616                           
  1617                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  1618  00C0  300C               	movlw	12
  1619  00C1  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1620                           
  1621                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  1622  00C6  3001               	movlw	1
  1623  00C7  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1624                           
  1625                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  1626  00CC  3006               	movlw	6
  1627  00CD  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1628  00D2                     l126:
  1629  00D2  0008               	return
  1630  00D3                     __end_of_Lcd_Init:
  1631                           
  1632                           	psect	text9
  1633  01E2                     __ptext9:	
  1634 ;; *************** function _Lcd_Clear *****************
  1635 ;; Defined at:
  1636 ;;		line 31 in file "LCD.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		_Lcd_Cmd
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _Lcd_Clear
  1666  01E2                     _Lcd_Clear:
  1667  01E2                     l1121:	
  1668                           ;incstack = 0
  1669                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1670                           
  1671                           
  1672                           ;LCD.c: 33:  Lcd_Cmd(0);
  1673  01E2  3000               	movlw	0
  1674  01E3  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1675                           
  1676                           ;LCD.c: 34:  Lcd_Cmd(1);
  1677  01E8  3001               	movlw	1
  1678  01E9  120A  118A  218A  120A  118A  	fcall	_Lcd_Cmd
  1679  01EE                     l117:
  1680  01EE  0008               	return
  1681  01EF                     __end_of_Lcd_Clear:
  1682                           
  1683                           	psect	text10
  1684  018A                     __ptext10:	
  1685 ;; *************** function _Lcd_Cmd *****************
  1686 ;; Defined at:
  1687 ;;		line 22 in file "LCD.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  a               1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  a               1    6[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0
  1703 ;;      Temps:          2       0       0       0       0
  1704 ;;      Totals:         3       0       0       0       0
  1705 ;;Total ram usage:        3 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    2
  1708 ;; This function calls:
  1709 ;;		_Lcd_Port
  1710 ;; This function is called by:
  1711 ;;		_Lcd_Clear
  1712 ;;		_Lcd_Set_Cursor
  1713 ;;		_Lcd_Init
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _Lcd_Cmd
  1719  018A                     _Lcd_Cmd:
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1723                           ;Lcd_Cmd@a stored from wreg
  1724  018A  00F6               	movwf	Lcd_Cmd@a
  1725  018B                     l1091:
  1726                           
  1727                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  1728  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1729  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1730  018D  1009               	bcf	9,0	;volatile
  1731  018E                     l1093:
  1732                           
  1733                           ;LCD.c: 25:  Lcd_Port(a);
  1734  018E  0876               	movf	Lcd_Cmd@a,w
  1735  018F  120A  118A  2207  120A  118A  	fcall	_Lcd_Port
  1736  0194                     l1095:
  1737                           
  1738                           ;LCD.c: 26:  RE1 = 1;
  1739  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0196  1489               	bsf	9,1	;volatile
  1742  0197                     l1097:
  1743                           
  1744                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1745  0197  300B               	movlw	11
  1746  0198  00F5               	movwf	??_Lcd_Cmd+1
  1747  0199  3062               	movlw	98
  1748  019A  00F4               	movwf	??_Lcd_Cmd
  1749  019B                     u257:
  1750  019B  0BF4               	decfsz	??_Lcd_Cmd,f
  1751  019C  299B               	goto	u257
  1752  019D  0BF5               	decfsz	??_Lcd_Cmd+1,f
  1753  019E  299B               	goto	u257
  1754  019F  0000               	nop
  1755  01A0                     l1099:
  1756                           
  1757                           ;LCD.c: 28:         RE1 = 0;
  1758  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1759  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1760  01A2  1089               	bcf	9,1	;volatile
  1761  01A3                     l114:
  1762  01A3  0008               	return
  1763  01A4                     __end_of_Lcd_Cmd:
  1764                           
  1765                           	psect	text11
  1766  0207                     __ptext11:	
  1767 ;; *************** function _Lcd_Port *****************
  1768 ;; Defined at:
  1769 ;;		line 17 in file "LCD.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  a               1    wreg     unsigned char 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  a               1    3[COMMON] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         1       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         1       0       0       0       0
  1787 ;;Total ram usage:        1 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_Lcd_Cmd
  1794 ;;		_Lcd_Init
  1795 ;;		_Lcd_Write_Char
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _Lcd_Port
  1801  0207                     _Lcd_Port:
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _Lcd_Port: [wreg]
  1805                           ;Lcd_Port@a stored from wreg
  1806  0207  00F3               	movwf	Lcd_Port@a
  1807  0208                     l1089:
  1808                           
  1809                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  1810  0208  0873               	movf	Lcd_Port@a,w
  1811  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1812  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1813  020B  0088               	movwf	8	;volatile
  1814  020C                     l111:
  1815  020C  0008               	return
  1816  020D                     __end_of_Lcd_Port:
  1817                           
  1818                           	psect	text12
  1819  0116                     __ptext12:	
  1820 ;; *************** function _ISR *****************
  1821 ;; Defined at:
  1822 ;;		line 65 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          3       0       0       0       0
  1839 ;;      Totals:         3       0       0       0       0
  1840 ;;Total ram usage:        3 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		Interrupt level 1
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _ISR
  1851  0116                     _ISR:
  1852  0116                     i1l913:
  1853                           
  1854                           ;main.c: 66:     if (RCIF == 1) {
  1855  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0118  1E8C               	btfss	12,5	;volatile
  1858  0119  291B               	goto	u7_21
  1859  011A  291C               	goto	u7_20
  1860  011B                     u7_21:
  1861  011B  2938               	goto	i1l89
  1862  011C                     u7_20:
  1863  011C                     i1l915:
  1864                           
  1865                           ;main.c: 67:         USART_LEER = RCREG;
  1866  011C  081A               	movf	26,w	;volatile
  1867  011D  00F0               	movwf	??_ISR
  1868  011E  0870               	movf	??_ISR,w
  1869  011F  00F9               	movwf	_USART_LEER
  1870  0120                     i1l917:
  1871                           
  1872                           ;main.c: 68:         if (USART_LEER == '+') {
  1873  0120  302B               	movlw	43
  1874  0121  0679               	xorwf	_USART_LEER,w
  1875  0122  1D03               	btfss	3,2
  1876  0123  2925               	goto	u8_21
  1877  0124  2926               	goto	u8_20
  1878  0125                     u8_21:
  1879  0125  292C               	goto	i1l921
  1880  0126                     u8_20:
  1881  0126                     i1l919:
  1882                           
  1883                           ;main.c: 69:             cont = cont + 1;
  1884  0126  087A               	movf	_cont,w
  1885  0127  3E01               	addlw	1
  1886  0128  00F0               	movwf	??_ISR
  1887  0129  0870               	movf	??_ISR,w
  1888  012A  00FA               	movwf	_cont
  1889                           
  1890                           ;main.c: 70:             }
  1891  012B  2937               	goto	i1l925
  1892  012C                     i1l921:
  1893  012C  302D               	movlw	45
  1894  012D  0679               	xorwf	_USART_LEER,w
  1895  012E  1D03               	btfss	3,2
  1896  012F  2931               	goto	u9_21
  1897  0130  2932               	goto	u9_20
  1898  0131                     u9_21:
  1899  0131  2937               	goto	i1l925
  1900  0132                     u9_20:
  1901  0132                     i1l923:
  1902                           
  1903                           ;main.c: 72:             cont = cont - 1;
  1904  0132  087A               	movf	_cont,w
  1905  0133  3EFF               	addlw	255
  1906  0134  00F0               	movwf	??_ISR
  1907  0135  0870               	movf	??_ISR,w
  1908  0136  00FA               	movwf	_cont
  1909  0137                     i1l925:
  1910                           
  1911                           ;main.c: 74:         USART_LEER = 0;
  1912  0137  01F9               	clrf	_USART_LEER
  1913  0138                     i1l89:
  1914  0138  0872               	movf	??_ISR+2,w
  1915  0139  008A               	movwf	10
  1916  013A  0E71               	swapf	??_ISR+1,w
  1917  013B  0083               	movwf	3
  1918  013C  0EFE               	swapf	btemp,f
  1919  013D  0E7E               	swapf	btemp,w
  1920  013E  0009               	retfie
  1921  013F                     __end_of_ISR:
  1922  007E                     btemp	set	126	;btemp
  1923  007E                     wtemp0	set	126
  1924                           
  1925                           	psect	intentry
  1926  0004                     __pintentry:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1929                           
  1930  0004                     interrupt_function:
  1931  007E                     saved_w	set	btemp
  1932  0004  00FE               	movwf	btemp
  1933  0005  0E03               	swapf	3,w
  1934  0006  00F1               	movwf	??_ISR+1
  1935  0007  080A               	movf	10,w
  1936  0008  00F2               	movwf	??_ISR+2
  1937  0009  120A  118A  2916   	ljmp	_ISR
  1938                           
  1939                           	psect	config
  1940                           
  1941                           ;Config register CONFIG1 @ 0x2007
  1942                           ;	Oscillator Selection bits
  1943                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1944                           ;	Watchdog Timer Enable bit
  1945                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1946                           ;	Power-up Timer Enable bit
  1947                           ;	PWRTE = OFF, PWRT disabled
  1948                           ;	RE3/MCLR pin function select bit
  1949                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1950                           ;	Code Protection bit
  1951                           ;	CP = OFF, Program memory code protection is disabled
  1952                           ;	Data Code Protection bit
  1953                           ;	CPD = OFF, Data memory code protection is disabled
  1954                           ;	Brown Out Reset Selection bits
  1955                           ;	BOREN = ON, BOR enabled
  1956                           ;	Internal External Switchover bit
  1957                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1958                           ;	Fail-Safe Clock Monitor Enabled bit
  1959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1960                           ;	Low Voltage Programming Enable bit
  1961                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1962                           ;	In-Circuit Debugger Mode bit
  1963                           ;	DEBUG = 0x1, unprogrammed default
  1964  2007                     	org	8199
  1965  2007  23D2               	dw	9170
  1966                           
  1967                           ;Config register CONFIG2 @ 0x2008
  1968                           ;	Brown-out Reset Selection bit
  1969                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1970                           ;	Flash Program Memory Self Write Enable bits
  1971                           ;	WRT = OFF, Write protection off
  1972  2008                     	org	8200
  1973  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      4      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1258
                                              2 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     282
                                              6 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     506
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 22:18:42 2021

                        pc 0002                _SSPSTATbits 0094                         u20 0206  
                       u21 0205                         fsr 0004                        l100 0115  
                      l111 020C                        l114 01A3                        l123 0164  
                      l117 01EE                        l126 00D2                        l135 0189  
                      l129 01CF                        l181 0200                        l184 0206  
                      l177 01B4                        l178 01B9                        l195 01F7  
                      l903 01EF                        l905 01F4                        l819 0200  
                      l981 01AC                        l983 01AE                        l991 00D7  
                      l985 01B0                        l993 00D8                        l987 01B3  
                      l979 01A5                        l995 00DD                        l997 00E7  
                      l989 00D3                        l999 00EB                        _RE0 0048  
                      _RE1 0049                        u120 01AC                        u121 01AB  
                      u207 007D                        u160 0147                        u161 0146  
                      u217 01C9                        u170 0159                        u227 0092  
                      u171 0158                        u180 0189                        u237 00A1  
                      u181 0188                        u247 00B0                        u257 019B  
                      _ISR 0116                        u197 006B                        fsr0 0004  
                      indf 0000                       ?_ISR 0070                       l1001 00EC  
                     l1011 00F9                       l1003 00F3                       l1101 01BB  
                     l1021 0100                       l1013 00FA                       l1005 00F4  
                     l1111 0088                       l1103 01BE                       l1031 0109  
                     l1023 0103                       l1015 00FB                       l1007 00F5  
                     l1121 01E2                       l1113 008E                       l1105 01C4  
                     l1033 010A                       l1025 0104                       l1017 00FE  
                     l1009 00F7                       l1115 0097                       l1131 0159  
                     l1123 0142                       l1107 01C7                       l1035 010B  
                     l1027 0105                       l1019 00FF                       l1117 00A6  
                     l1133 015E                       l1125 0147                       l1109 01CC  
                     l1141 017C                       l1037 010C                       l1029 0108  
                     l1119 00AC                       l1127 014C                       l1135 0166  
                     l1151 0030                       l1143 001E                       l1129 0153  
                     l1137 0169                       l1161 005C                       l1153 0038  
                     l1145 0023                       l1091 018B                       l1139 0176  
                     l1171 0081                       l1163 0062                       l1155 003E  
                     l1147 0026                       l1093 018E                       l1165 0065  
                     l1157 004A                       l1149 002B                       l1095 0194  
                     l1167 006F                       l1159 0050                       l1089 0208  
                     l1097 0197                       l1169 0077                       l1099 01A0  
                     STR_1 01D6                       STR_2 01DA                       STR_3 01DE  
                     _RCIF 0065                       i1l89 0138                       _TRMT 04C1  
                     u7_20 011C                       u7_21 011B                       u8_20 0126  
                     u8_21 0125                       u9_20 0132                       u9_21 0131  
        ?_Lcd_Write_String 0070                       _cont 007A                       _main 001E  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 01A4                      ??_ISR 0070                      ?_main 0070  
                    _ANSEL 0188                      i1l921 012C                      i1l913 0116  
                    i1l923 0132                      i1l915 011C                      i1l925 0137  
                    i1l917 0120                      i1l919 0126                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _data1 0020                      _data2 0034                      _setup 00D3  
                    pclath 000A            __end_of_spiInit 01BA            __end_of_spiRead 01F8  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 00D3  
         __end_of_Lcd_Port 020D            __initialization 000F               __end_of_main 0088  
                   ??_main 0046         __size_of_Lcd_Clear 000D                     _ADCON1 009F  
                   ?_setup 0070                     _ANSELH 0189                     _INTCON 000B  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _TRISC0 0438                     _TRISC1 0439                     _TRISC2 043A  
                   _TRISC3 043B                     _TRISC5 043D                     _TRISC7 043F  
                   _SSPCON 0014                     _SSPBUF 0013                     saved_w 007E  
                ??_spiInit 0076                  ??_spiRead 0073            Lcd_Set_Cursor@a 0044  
          Lcd_Set_Cursor@b 0077    __end_of__initialization 001A          __end_of_Lcd_Clear 01EF  
           __pcstackCOMMON 0070              __end_of_setup 0116             _Lcd_Set_Cursor 013F  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0077  
               __pbssBANK0 0020                 __pmaintext 001E                 __pintentry 0004  
  __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0165  
               ??_Lcd_Init 0077                 ??_Lcd_Port 0073                    _SSPSTAT 0094  
               __stringtab 01D0             _Lcd_Write_Char 01BA                    _Lcd_Cmd 018A  
          ?_Lcd_Set_Cursor 0077                    __ptext1 01EF                    __ptext2 0200  
                  __ptext3 00D3                    __ptext4 01A4                    __ptext5 0165  
                  __ptext6 01BA                    __ptext7 013F                    __ptext8 0088  
                  __ptext9 01E2               __size_of_ISR 0029                    _spiInit 01A4  
                  _spiRead 01EF                    clrloop0 01F9     __end_of_Lcd_Write_Char 01D0  
     end_of_initialization 001A                  _RCSTAbits 0018                  Lcd_Port@a 0073  
                _PORTCbits 0007            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078  
        Lcd_Write_String@i 0076                  _TXSTAbits 0098                  _Lcd_Clear 01E2  
           _spiReceiveWait 0200           _Lcd_Write_String 0165        start_initialization 000F  
              __end_of_ISR 013F          __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 0207                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0075  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0044  
                 ?_Lcd_Cmd 0070            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0078  
                __pstrings 01D0                   ?_spiInit 0073                   ?_spiRead 0070  
           __size_of_setup 0043       spiInit@sTransmitEdge 0075          interrupt_function 0004  
                clear_ram0 01F8                   _PIE1bits 008C         spiInit@sDataSample 0073  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
              __stringbase 01D5           ??_Lcd_Write_Char 0074                   _Lcd_Init 0088  
                 _Lcd_Port 0207   __end_of_Lcd_Write_String 018A           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 01D6                   __ptext10 018A                   __ptext11 0207  
                 __ptext12 0116           __size_of_spiInit 0016           __size_of_spiRead 0009  
            __size_of_main 006A               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0073  
                stringcode 01D0         Lcd_Set_Cursor@temp 0045                 _OPTION_REG 0081  
                 stringdir 01D0                   stringtab 01D0                 _USART_LEER 0079  
