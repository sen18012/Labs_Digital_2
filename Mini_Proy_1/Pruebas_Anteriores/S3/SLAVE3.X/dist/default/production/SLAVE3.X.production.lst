

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 23:07:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  001E                     _ADRESH	set	30
   287  001F                     _ADCON0bits	set	31
   288  0008                     _PORTDbits	set	8
   289  000B                     _INTCON	set	11
   290  000C                     _PIR1bits	set	12
   291  0009                     _PORTE	set	9
   292  0008                     _PORTD	set	8
   293  0007                     _PORTC	set	7
   294  0006                     _PORTB	set	6
   295  0005                     _PORTA	set	5
   296  0081                     _OPTION_REG	set	129
   297  008C                     _PIE1bits	set	140
   298  009F                     _ADCON1	set	159
   299  0089                     _TRISE	set	137
   300  0088                     _TRISD	set	136
   301  0087                     _TRISC	set	135
   302  0086                     _TRISB	set	134
   303  0085                     _TRISA	set	133
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	cinit
   308  07F5                     start_initialization:	
   309                           ; #config settings
   310                           
   311  07F5                     __initialization:
   312                           
   313                           ; Clear objects allocated to BANK0
   314  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   315  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   316  07F7  01A0               	clrf	__pbssBANK0& (0+127)
   317  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   318  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   319  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   320  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   321  07FC                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  07FC                     __end_of__initialization:
   325  07FC  0183               	clrf	3
   326  07FD  120A  118A  2EA7   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssBANK0
   329  0020                     __pbssBANK0:
   330  0020                     _channel:
   331  0020                     	ds	2
   332  0022                     _VALOR_ADC:
   333  0022                     	ds	1
   334  0023                     _ADC_con:
   335  0023                     	ds	1
   336  0024                     _ADC_res:
   337  0024                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_setup:
   342  0070                     ??_setup:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_ADC_CH:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_sem:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ??_sem:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_ADC_chT:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?___wmul:	
   361                           ; 2 bytes @ 0x0
   362                           
   363  0070                     ADC_chT@channel:	
   364                           ; 2 bytes @ 0x0
   365                           
   366  0070                     ___wmul@multiplier:	
   367                           ; 2 bytes @ 0x0
   368                           
   369                           
   370                           ; 2 bytes @ 0x0
   371  0070                     	ds	2
   372  0072                     ??_ADC_chT:
   373  0072                     ___wmul@multiplicand:	
   374                           ; 1 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378  0072                     	ds	2
   379  0074                     ??___wmul:
   380  0074                     ___wmul@product:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 2 bytes @ 0x4
   385  0074                     	ds	2
   386  0076                     ?___awdiv:
   387  0076                     ___awdiv@divisor:	
   388                           ; 2 bytes @ 0x6
   389                           
   390                           
   391                           ; 2 bytes @ 0x6
   392  0076                     	ds	2
   393  0078                     ___awdiv@dividend:
   394                           
   395                           ; 2 bytes @ 0x8
   396  0078                     	ds	2
   397  007A                     ??___awdiv:
   398                           
   399                           ; 1 bytes @ 0xA
   400  007A                     	ds	1
   401  007B                     ??_ADC_CH:
   402                           
   403                           ; 1 bytes @ 0xB
   404  007B                     	ds	3
   405  007E                     ??_main:
   406                           
   407                           	psect	cstackBANK0
   408  0025                     __pcstackBANK0:	
   409                           ; 1 bytes @ 0xE
   410                           
   411  0025                     ___awdiv@counter:
   412                           
   413                           ; 1 bytes @ 0x0
   414  0025                     	ds	1
   415  0026                     ___awdiv@sign:
   416                           
   417                           ; 1 bytes @ 0x1
   418  0026                     	ds	1
   419  0027                     ___awdiv@quotient:
   420                           
   421                           ; 2 bytes @ 0x2
   422  0027                     	ds	2
   423                           
   424                           	psect	maintext
   425  06A7                     __pmaintext:	
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 57 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0
   448 ;;      Totals:         0       0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels required when called:    2
   451 ;; This function calls:
   452 ;;		_ADC_CH
   453 ;;		_setup
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _main
   461  06A7                     _main:
   462  06A7                     l934:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;main.c: 58:     setup();
   468  06A7  120A  118A  26B5  120A  118A  	fcall	_setup
   469  06AC                     l936:
   470                           
   471                           ;main.c: 60:         ADC_CH();
   472  06AC  120A  118A  2745  120A  118A  	fcall	_ADC_CH
   473  06B1  2EAC               	goto	l936
   474  06B2  120A  118A  2800   	ljmp	start
   475  06B5                     __end_of_main:
   476                           
   477                           	psect	text1
   478  06B5                     __ptext1:	
   479 ;; *************** function _setup *****************
   480 ;; Defined at:
   481 ;;		line 70 in file "main.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _setup
   510  06B5                     _setup:
   511  06B5                     l772:	
   512                           ;incstack = 0
   513                           ; Regs used in _setup: [wreg+status,2]
   514                           
   515                           
   516                           ;main.c: 71:     ANSEL = 0b00000001;
   517  06B5  3001               	movlw	1
   518  06B6  1683               	bsf	3,5	;RP0=1, select bank3
   519  06B7  1703               	bsf	3,6	;RP1=1, select bank3
   520  06B8  0088               	movwf	8	;volatile
   521  06B9                     l774:
   522                           
   523                           ;main.c: 72:     ANSELH = 0;
   524  06B9  0189               	clrf	9	;volatile
   525  06BA                     l776:
   526                           
   527                           ;main.c: 73:     TRISA = 0b00000001;
   528  06BA  3001               	movlw	1
   529  06BB  1683               	bsf	3,5	;RP0=1, select bank1
   530  06BC  1303               	bcf	3,6	;RP1=0, select bank1
   531  06BD  0085               	movwf	5	;volatile
   532                           
   533                           ;main.c: 74:     TRISB = 0;
   534  06BE  0186               	clrf	6	;volatile
   535                           
   536                           ;main.c: 75:     TRISC = 0;
   537  06BF  0187               	clrf	7	;volatile
   538                           
   539                           ;main.c: 76:     TRISD = 0;
   540  06C0  0188               	clrf	8	;volatile
   541                           
   542                           ;main.c: 77:     TRISE = 0;
   543  06C1  0189               	clrf	9	;volatile
   544                           
   545                           ;main.c: 78:     PORTA = 0;
   546  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   547  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   548  06C4  0185               	clrf	5	;volatile
   549                           
   550                           ;main.c: 79:     PORTB = 0;
   551  06C5  0186               	clrf	6	;volatile
   552                           
   553                           ;main.c: 80:     PORTC = 0;
   554  06C6  0187               	clrf	7	;volatile
   555                           
   556                           ;main.c: 81:     PORTD = 0;
   557  06C7  0188               	clrf	8	;volatile
   558                           
   559                           ;main.c: 82:     PORTE = 0;
   560  06C8  0189               	clrf	9	;volatile
   561  06C9                     l778:
   562                           
   563                           ;main.c: 84:     ADCON1 = 0b00010000;
   564  06C9  3010               	movlw	16
   565  06CA  1683               	bsf	3,5	;RP0=1, select bank1
   566  06CB  1303               	bcf	3,6	;RP1=0, select bank1
   567  06CC  009F               	movwf	31	;volatile
   568  06CD                     l780:
   569                           
   570                           ;main.c: 85:     PIE1bits.ADIE = 0;
   571  06CD  130C               	bcf	12,6	;volatile
   572  06CE                     l782:
   573                           
   574                           ;main.c: 86:     PIR1bits.ADIF = 0;
   575  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   576  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   577  06D0  130C               	bcf	12,6	;volatile
   578  06D1                     l784:
   579                           
   580                           ;main.c: 87:     OPTION_REG = 0b00000000;
   581  06D1  1683               	bsf	3,5	;RP0=1, select bank1
   582  06D2  1303               	bcf	3,6	;RP1=0, select bank1
   583  06D3  0181               	clrf	1	;volatile
   584  06D4                     l786:
   585                           
   586                           ;main.c: 88:     INTCON = 0b00000000;
   587  06D4  018B               	clrf	11	;volatile
   588  06D5                     l63:
   589  06D5  0008               	return
   590  06D6                     __end_of_setup:
   591                           
   592                           	psect	text2
   593  0745                     __ptext2:	
   594 ;; *************** function _ADC_CH *****************
   595 ;; Defined at:
   596 ;;		line 110 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          3       0       0       0       0
   613 ;;      Totals:         3       0       0       0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    1
   617 ;; This function calls:
   618 ;;		_ADC_chT
   619 ;;		___awdiv
   620 ;;		___wmul
   621 ;;		_sem
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _ADC_CH
   629  0745                     _ADC_CH:
   630  0745                     l916:	
   631                           ;incstack = 0
   632                           ; Regs used in _ADC_CH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   633                           
   634                           
   635                           ;main.c: 111:     ADC_chT(0);
   636  0745  3000               	movlw	0
   637  0746  00F0               	movwf	ADC_chT@channel
   638  0747  00F1               	movwf	ADC_chT@channel+1
   639  0748  120A  118A  26D6  120A  118A  	fcall	_ADC_chT
   640  074D                     l918:
   641                           
   642                           ;main.c: 112:     ADCON0bits.ADCS0 = 1;
   643  074D  1283               	bcf	3,5	;RP0=0, select bank0
   644  074E  1303               	bcf	3,6	;RP1=0, select bank0
   645  074F  171F               	bsf	31,6	;volatile
   646  0750                     l920:
   647                           
   648                           ;main.c: 113:     ADCON0bits.ADCS1 = 0;
   649  0750  139F               	bcf	31,7	;volatile
   650  0751                     l922:
   651                           
   652                           ;main.c: 114:     ADCON0bits.ADON = 1;
   653  0751  141F               	bsf	31,0	;volatile
   654  0752                     l924:
   655                           
   656                           ;main.c: 115:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   657  0752  301A               	movlw	26
   658  0753  00FB               	movwf	??_ADC_CH
   659  0754                     u397:
   660  0754  0BFB               	decfsz	??_ADC_CH,f
   661  0755  2F54               	goto	u397
   662  0756  0000               	nop
   663  0757                     l926:
   664                           
   665                           ;main.c: 116:     ADCON0bits.GO = 1;
   666  0757  1283               	bcf	3,5	;RP0=0, select bank0
   667  0758  1303               	bcf	3,6	;RP1=0, select bank0
   668  0759  149F               	bsf	31,1	;volatile
   669                           
   670                           ;main.c: 117:     while (ADCON0bits.GO != 0) {
   671  075A  2F5F               	goto	l930
   672  075B                     l928:
   673                           
   674                           ;main.c: 118:         ADC_res = ADRESH;
   675  075B  081E               	movf	30,w	;volatile
   676  075C  00FB               	movwf	??_ADC_CH
   677  075D  087B               	movf	??_ADC_CH,w
   678  075E  00A4               	movwf	_ADC_res
   679  075F                     l930:
   680                           
   681                           ;main.c: 117:     while (ADCON0bits.GO != 0) {
   682  075F  189F               	btfsc	31,1	;volatile
   683  0760  2F62               	goto	u381
   684  0761  2F63               	goto	u380
   685  0762                     u381:
   686  0762  2F5B               	goto	l928
   687  0763                     u380:
   688  0763                     l932:
   689                           
   690                           ;main.c: 121:     ADC_con = ((ADRESH*150)/255);
   691  0763  30FF               	movlw	255
   692  0764  00F6               	movwf	___awdiv@divisor
   693  0765  3000               	movlw	0
   694  0766  00F7               	movwf	___awdiv@divisor+1
   695  0767  081E               	movf	30,w	;volatile
   696  0768  00FB               	movwf	??_ADC_CH
   697  0769  01FC               	clrf	??_ADC_CH+1
   698  076A  087B               	movf	??_ADC_CH,w
   699  076B  00F0               	movwf	___wmul@multiplier
   700  076C  087C               	movf	??_ADC_CH+1,w
   701  076D  00F1               	movwf	___wmul@multiplier+1
   702  076E  3096               	movlw	150
   703  076F  00F2               	movwf	___wmul@multiplicand
   704  0770  3000               	movlw	0
   705  0771  00F3               	movwf	___wmul@multiplicand+1
   706  0772  120A  118A  26FA  120A  118A  	fcall	___wmul
   707  0777  0871               	movf	?___wmul+1,w
   708  0778  00F9               	movwf	___awdiv@dividend+1
   709  0779  0870               	movf	?___wmul,w
   710  077A  00F8               	movwf	___awdiv@dividend
   711  077B  120A  118A  278C  120A  118A  	fcall	___awdiv
   712  0780  0876               	movf	?___awdiv,w
   713  0781  00FD               	movwf	??_ADC_CH+2
   714  0782  087D               	movf	??_ADC_CH+2,w
   715  0783  1283               	bcf	3,5	;RP0=0, select bank0
   716  0784  1303               	bcf	3,6	;RP1=0, select bank0
   717  0785  00A3               	movwf	_ADC_con
   718                           
   719                           ;main.c: 122:     sem();
   720  0786  120A  118A  271F  120A  118A  	fcall	_sem
   721  078B                     l77:
   722  078B  0008               	return
   723  078C                     __end_of_ADC_CH:
   724                           
   725                           	psect	text3
   726  071F                     __ptext3:	
   727 ;; *************** function _sem *****************
   728 ;; Defined at:
   729 ;;		line 92 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_ADC_CH
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _sem
   758  071F                     _sem:
   759  071F                     l834:	
   760                           ;incstack = 0
   761                           ; Regs used in _sem: [wreg]
   762                           
   763                           
   764                           ;main.c: 93:     if (ADC_con < 26){
   765  071F  301A               	movlw	26
   766  0720  1283               	bcf	3,5	;RP0=0, select bank0
   767  0721  1303               	bcf	3,6	;RP1=0, select bank0
   768  0722  0223               	subwf	_ADC_con,w
   769  0723  1803               	skipnc
   770  0724  2F26               	goto	u201
   771  0725  2F27               	goto	u200
   772  0726                     u201:
   773  0726  2F2B               	goto	l838
   774  0727                     u200:
   775  0727                     l836:
   776                           
   777                           ;main.c: 94:         PORTDbits.RD0 = 0;
   778  0727  1008               	bcf	8,0	;volatile
   779                           
   780                           ;main.c: 95:         PORTDbits.RD1 = 0;
   781  0728  1088               	bcf	8,1	;volatile
   782                           
   783                           ;main.c: 96:         PORTDbits.RD2 = 1;
   784  0729  1508               	bsf	8,2	;volatile
   785                           
   786                           ;main.c: 97:     }
   787  072A  2F44               	goto	l71
   788  072B                     l838:
   789  072B  3019               	movlw	25
   790  072C  0223               	subwf	_ADC_con,w
   791  072D  1C03               	skipc
   792  072E  2F30               	goto	u211
   793  072F  2F31               	goto	u210
   794  0730                     u211:
   795  0730  2F3B               	goto	l844
   796  0731                     u210:
   797  0731                     l840:
   798  0731  3025               	movlw	37
   799  0732  0223               	subwf	_ADC_con,w
   800  0733  1803               	skipnc
   801  0734  2F36               	goto	u221
   802  0735  2F37               	goto	u220
   803  0736                     u221:
   804  0736  2F3B               	goto	l844
   805  0737                     u220:
   806  0737                     l842:
   807                           
   808                           ;main.c: 99:         PORTDbits.RD0 = 0;
   809  0737  1008               	bcf	8,0	;volatile
   810                           
   811                           ;main.c: 100:         PORTDbits.RD1 = 1;
   812  0738  1488               	bsf	8,1	;volatile
   813                           
   814                           ;main.c: 101:         PORTDbits.RD2 = 0;
   815  0739  1108               	bcf	8,2	;volatile
   816                           
   817                           ;main.c: 102:     }
   818  073A  2F44               	goto	l71
   819  073B                     l844:
   820  073B  3025               	movlw	37
   821  073C  0223               	subwf	_ADC_con,w
   822  073D  1C03               	skipc
   823  073E  2F40               	goto	u231
   824  073F  2F41               	goto	u230
   825  0740                     u231:
   826  0740  2F44               	goto	l71
   827  0741                     u230:
   828  0741                     l846:
   829                           
   830                           ;main.c: 104:         PORTDbits.RD0 = 1;
   831  0741  1408               	bsf	8,0	;volatile
   832                           
   833                           ;main.c: 105:         PORTDbits.RD1 = 0;
   834  0742  1088               	bcf	8,1	;volatile
   835                           
   836                           ;main.c: 106:         PORTDbits.RD2 = 0;
   837  0743  1108               	bcf	8,2	;volatile
   838  0744                     l71:
   839  0744  0008               	return
   840  0745                     __end_of_sem:
   841                           
   842                           	psect	text4
   843  06FA                     __ptext4:	
   844 ;; *************** function ___wmul *****************
   845 ;; Defined at:
   846 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  multiplier      2    0[COMMON] unsigned int 
   849 ;;  multiplicand    2    2[COMMON] unsigned int 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  product         2    4[COMMON] unsigned int 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  2    0[COMMON] unsigned int 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         4       0       0       0       0
   862 ;;      Locals:         2       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         6       0       0       0       0
   865 ;;Total ram usage:        6 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_ADC_CH
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function ___wmul
   876  06FA                     ___wmul:
   877  06FA                     l858:	
   878                           ;incstack = 0
   879                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   880                           
   881  06FA  01F4               	clrf	___wmul@product
   882  06FB  01F5               	clrf	___wmul@product+1
   883  06FC                     l860:
   884  06FC  1C70               	btfss	___wmul@multiplier,0
   885  06FD  2EFF               	goto	u241
   886  06FE  2F00               	goto	u240
   887  06FF                     u241:
   888  06FF  2F06               	goto	l184
   889  0700                     u240:
   890  0700                     l862:
   891  0700  0872               	movf	___wmul@multiplicand,w
   892  0701  07F4               	addwf	___wmul@product,f
   893  0702  1803               	skipnc
   894  0703  0AF5               	incf	___wmul@product+1,f
   895  0704  0873               	movf	___wmul@multiplicand+1,w
   896  0705  07F5               	addwf	___wmul@product+1,f
   897  0706                     l184:
   898  0706  3001               	movlw	1
   899  0707                     u255:
   900  0707  1003               	clrc
   901  0708  0DF2               	rlf	___wmul@multiplicand,f
   902  0709  0DF3               	rlf	___wmul@multiplicand+1,f
   903  070A  3EFF               	addlw	-1
   904  070B  1D03               	skipz
   905  070C  2F07               	goto	u255
   906  070D                     l864:
   907  070D  3001               	movlw	1
   908  070E                     u265:
   909  070E  1003               	clrc
   910  070F  0CF1               	rrf	___wmul@multiplier+1,f
   911  0710  0CF0               	rrf	___wmul@multiplier,f
   912  0711  3EFF               	addlw	-1
   913  0712  1D03               	skipz
   914  0713  2F0E               	goto	u265
   915  0714                     l866:
   916  0714  0870               	movf	___wmul@multiplier,w
   917  0715  0471               	iorwf	___wmul@multiplier+1,w
   918  0716  1D03               	btfss	3,2
   919  0717  2F19               	goto	u271
   920  0718  2F1A               	goto	u270
   921  0719                     u271:
   922  0719  2EFC               	goto	l860
   923  071A                     u270:
   924  071A                     l868:
   925  071A  0875               	movf	___wmul@product+1,w
   926  071B  00F1               	movwf	?___wmul+1
   927  071C  0874               	movf	___wmul@product,w
   928  071D  00F0               	movwf	?___wmul
   929  071E                     l186:
   930  071E  0008               	return
   931  071F                     __end_of___wmul:
   932                           
   933                           	psect	text5
   934  078C                     __ptext5:	
   935 ;; *************** function ___awdiv *****************
   936 ;; Defined at:
   937 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  divisor         2    6[COMMON] int 
   940 ;;  dividend        2    8[COMMON] int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  quotient        2    2[BANK0 ] int 
   943 ;;  sign            1    1[BANK0 ] unsigned char 
   944 ;;  counter         1    0[BANK0 ] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    6[COMMON] int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         4       0       0       0       0
   955 ;;      Locals:         0       4       0       0       0
   956 ;;      Temps:          1       0       0       0       0
   957 ;;      Totals:         5       4       0       0       0
   958 ;;Total ram usage:        9 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_ADC_CH
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function ___awdiv
   969  078C                     ___awdiv:
   970  078C                     l872:	
   971                           ;incstack = 0
   972                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   973                           
   974  078C  1283               	bcf	3,5	;RP0=0, select bank0
   975  078D  1303               	bcf	3,6	;RP1=0, select bank0
   976  078E  01A6               	clrf	___awdiv@sign
   977  078F                     l874:
   978  078F  1FF7               	btfss	___awdiv@divisor+1,7
   979  0790  2F92               	goto	u281
   980  0791  2F93               	goto	u280
   981  0792                     u281:
   982  0792  2F9A               	goto	l880
   983  0793                     u280:
   984  0793                     l876:
   985  0793  09F6               	comf	___awdiv@divisor,f
   986  0794  09F7               	comf	___awdiv@divisor+1,f
   987  0795  0AF6               	incf	___awdiv@divisor,f
   988  0796  1903               	skipnz
   989  0797  0AF7               	incf	___awdiv@divisor+1,f
   990  0798                     l878:
   991  0798  01A6               	clrf	___awdiv@sign
   992  0799  0AA6               	incf	___awdiv@sign,f
   993  079A                     l880:
   994  079A  1FF9               	btfss	___awdiv@dividend+1,7
   995  079B  2F9D               	goto	u291
   996  079C  2F9E               	goto	u290
   997  079D                     u291:
   998  079D  2FA7               	goto	l886
   999  079E                     u290:
  1000  079E                     l882:
  1001  079E  09F8               	comf	___awdiv@dividend,f
  1002  079F  09F9               	comf	___awdiv@dividend+1,f
  1003  07A0  0AF8               	incf	___awdiv@dividend,f
  1004  07A1  1903               	skipnz
  1005  07A2  0AF9               	incf	___awdiv@dividend+1,f
  1006  07A3                     l884:
  1007  07A3  3001               	movlw	1
  1008  07A4  00FA               	movwf	??___awdiv
  1009  07A5  087A               	movf	??___awdiv,w
  1010  07A6  06A6               	xorwf	___awdiv@sign,f
  1011  07A7                     l886:
  1012  07A7  01A7               	clrf	___awdiv@quotient
  1013  07A8  01A8               	clrf	___awdiv@quotient+1
  1014  07A9                     l888:
  1015  07A9  0876               	movf	___awdiv@divisor,w
  1016  07AA  0477               	iorwf	___awdiv@divisor+1,w
  1017  07AB  1903               	btfsc	3,2
  1018  07AC  2FAE               	goto	u301
  1019  07AD  2FAF               	goto	u300
  1020  07AE                     u301:
  1021  07AE  2FE6               	goto	l908
  1022  07AF                     u300:
  1023  07AF                     l890:
  1024  07AF  01A5               	clrf	___awdiv@counter
  1025  07B0  0AA5               	incf	___awdiv@counter,f
  1026  07B1  2FBD               	goto	l896
  1027  07B2                     l892:
  1028  07B2  3001               	movlw	1
  1029  07B3                     u315:
  1030  07B3  1003               	clrc
  1031  07B4  0DF6               	rlf	___awdiv@divisor,f
  1032  07B5  0DF7               	rlf	___awdiv@divisor+1,f
  1033  07B6  3EFF               	addlw	-1
  1034  07B7  1D03               	skipz
  1035  07B8  2FB3               	goto	u315
  1036  07B9                     l894:
  1037  07B9  3001               	movlw	1
  1038  07BA  00FA               	movwf	??___awdiv
  1039  07BB  087A               	movf	??___awdiv,w
  1040  07BC  07A5               	addwf	___awdiv@counter,f
  1041  07BD                     l896:
  1042  07BD  1FF7               	btfss	___awdiv@divisor+1,7
  1043  07BE  2FC0               	goto	u321
  1044  07BF  2FC1               	goto	u320
  1045  07C0                     u321:
  1046  07C0  2FB2               	goto	l892
  1047  07C1                     u320:
  1048  07C1                     l898:
  1049  07C1  3001               	movlw	1
  1050  07C2                     u335:
  1051  07C2  1003               	clrc
  1052  07C3  0DA7               	rlf	___awdiv@quotient,f
  1053  07C4  0DA8               	rlf	___awdiv@quotient+1,f
  1054  07C5  3EFF               	addlw	-1
  1055  07C6  1D03               	skipz
  1056  07C7  2FC2               	goto	u335
  1057  07C8  0877               	movf	___awdiv@divisor+1,w
  1058  07C9  0279               	subwf	___awdiv@dividend+1,w
  1059  07CA  1D03               	skipz
  1060  07CB  2FCE               	goto	u345
  1061  07CC  0876               	movf	___awdiv@divisor,w
  1062  07CD  0278               	subwf	___awdiv@dividend,w
  1063  07CE                     u345:
  1064  07CE  1C03               	skipc
  1065  07CF  2FD1               	goto	u341
  1066  07D0  2FD2               	goto	u340
  1067  07D1                     u341:
  1068  07D1  2FD9               	goto	l904
  1069  07D2                     u340:
  1070  07D2                     l900:
  1071  07D2  0876               	movf	___awdiv@divisor,w
  1072  07D3  02F8               	subwf	___awdiv@dividend,f
  1073  07D4  0877               	movf	___awdiv@divisor+1,w
  1074  07D5  1C03               	skipc
  1075  07D6  03F9               	decf	___awdiv@dividend+1,f
  1076  07D7  02F9               	subwf	___awdiv@dividend+1,f
  1077  07D8                     l902:
  1078  07D8  1427               	bsf	___awdiv@quotient,0
  1079  07D9                     l904:
  1080  07D9  3001               	movlw	1
  1081  07DA                     u355:
  1082  07DA  1003               	clrc
  1083  07DB  0CF7               	rrf	___awdiv@divisor+1,f
  1084  07DC  0CF6               	rrf	___awdiv@divisor,f
  1085  07DD  3EFF               	addlw	-1
  1086  07DE  1D03               	skipz
  1087  07DF  2FDA               	goto	u355
  1088  07E0                     l906:
  1089  07E0  3001               	movlw	1
  1090  07E1  02A5               	subwf	___awdiv@counter,f
  1091  07E2  1D03               	btfss	3,2
  1092  07E3  2FE5               	goto	u361
  1093  07E4  2FE6               	goto	u360
  1094  07E5                     u361:
  1095  07E5  2FC1               	goto	l898
  1096  07E6                     u360:
  1097  07E6                     l908:
  1098  07E6  0826               	movf	___awdiv@sign,w
  1099  07E7  1903               	btfsc	3,2
  1100  07E8  2FEA               	goto	u371
  1101  07E9  2FEB               	goto	u370
  1102  07EA                     u371:
  1103  07EA  2FF0               	goto	l912
  1104  07EB                     u370:
  1105  07EB                     l910:
  1106  07EB  09A7               	comf	___awdiv@quotient,f
  1107  07EC  09A8               	comf	___awdiv@quotient+1,f
  1108  07ED  0AA7               	incf	___awdiv@quotient,f
  1109  07EE  1903               	skipnz
  1110  07EF  0AA8               	incf	___awdiv@quotient+1,f
  1111  07F0                     l912:
  1112  07F0  0828               	movf	___awdiv@quotient+1,w
  1113  07F1  00F7               	movwf	?___awdiv+1
  1114  07F2  0827               	movf	___awdiv@quotient,w
  1115  07F3  00F6               	movwf	?___awdiv
  1116  07F4                     l337:
  1117  07F4  0008               	return
  1118  07F5                     __end_of___awdiv:
  1119                           
  1120                           	psect	text6
  1121  06D6                     __ptext6:	
  1122 ;; *************** function _ADC_chT *****************
  1123 ;; Defined at:
  1124 ;;		line 18 in file "ADC_S3.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  channel         2    0[COMMON] unsigned short 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  2    0[COMMON] unsigned int 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         2       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_ADC_CH
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _ADC_chT
  1153  06D6                     _ADC_chT:
  1154  06D6                     l848:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _ADC_chT: [wreg-fsr0h+status,2+status,0]
  1157                           
  1158                           
  1159                           ;ADC_S3.c: 19:      switch (channel) {
  1160  06D6  2EEC               	goto	l852
  1161  06D7                     l94:	
  1162                           ;ADC_S3.c: 20:         case 0:
  1163                           
  1164                           
  1165                           ;ADC_S3.c: 21:             ADCON0bits.CHS3 = 0;
  1166  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1167  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1168  06D9  129F               	bcf	31,5	;volatile
  1169                           
  1170                           ;ADC_S3.c: 22:             ADCON0bits.CHS2 = 0;
  1171  06DA  121F               	bcf	31,4	;volatile
  1172                           
  1173                           ;ADC_S3.c: 23:             ADCON0bits.CHS1 = 0;
  1174  06DB  119F               	bcf	31,3	;volatile
  1175                           
  1176                           ;ADC_S3.c: 24:             ADCON0bits.CHS0 = 0;
  1177  06DC  111F               	bcf	31,2	;volatile
  1178                           
  1179                           ;ADC_S3.c: 26:             break;
  1180  06DD  2EF9               	goto	l98
  1181  06DE                     l96:	
  1182                           ;ADC_S3.c: 27:         case 1:
  1183                           
  1184                           
  1185                           ;ADC_S3.c: 28:             ADCON0bits.CHS3 = 0;
  1186  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1187  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1188  06E0  129F               	bcf	31,5	;volatile
  1189                           
  1190                           ;ADC_S3.c: 29:             ADCON0bits.CHS2 = 0;
  1191  06E1  121F               	bcf	31,4	;volatile
  1192                           
  1193                           ;ADC_S3.c: 30:             ADCON0bits.CHS1 = 0;
  1194  06E2  119F               	bcf	31,3	;volatile
  1195                           
  1196                           ;ADC_S3.c: 31:             ADCON0bits.CHS0 = 1;
  1197  06E3  151F               	bsf	31,2	;volatile
  1198                           
  1199                           ;ADC_S3.c: 32:             break;
  1200  06E4  2EF9               	goto	l98
  1201  06E5                     l97:	
  1202                           ;ADC_S3.c: 33:         default:
  1203                           
  1204                           
  1205                           ;ADC_S3.c: 34:             ADCON0bits.CHS3 = 0;
  1206  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1207  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1208  06E7  129F               	bcf	31,5	;volatile
  1209                           
  1210                           ;ADC_S3.c: 35:             ADCON0bits.CHS2 = 0;
  1211  06E8  121F               	bcf	31,4	;volatile
  1212                           
  1213                           ;ADC_S3.c: 36:             ADCON0bits.CHS1 = 0;
  1214  06E9  119F               	bcf	31,3	;volatile
  1215                           
  1216                           ;ADC_S3.c: 37:             ADCON0bits.CHS0 = 0;
  1217  06EA  111F               	bcf	31,2	;volatile
  1218                           
  1219                           ;ADC_S3.c: 38:             break;
  1220  06EB  2EF9               	goto	l98
  1221  06EC                     l852:
  1222                           
  1223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1224                           ; Switch size 1, requested type "simple"
  1225                           ; Number of cases is 1, Range of values is 0 to 0
  1226                           ; switch strategies available:
  1227                           ; Name         Instructions Cycles
  1228                           ; simple_byte            4     3 (average)
  1229                           ; direct_byte           11     8 (fixed)
  1230                           ; jumptable            260     6 (fixed)
  1231                           ;	Chosen strategy is simple_byte
  1232  06EC  0871               	movf	ADC_chT@channel+1,w
  1233  06ED  3A00               	xorlw	0	; case 0
  1234  06EE  1903               	skipnz
  1235  06EF  2EF1               	goto	l962
  1236  06F0  2EE5               	goto	l97
  1237  06F1                     l962:
  1238                           
  1239                           ; Switch size 1, requested type "simple"
  1240                           ; Number of cases is 2, Range of values is 0 to 1
  1241                           ; switch strategies available:
  1242                           ; Name         Instructions Cycles
  1243                           ; simple_byte            7     4 (average)
  1244                           ; direct_byte           14     8 (fixed)
  1245                           ; jumptable            260     6 (fixed)
  1246                           ;	Chosen strategy is simple_byte
  1247  06F1  0870               	movf	ADC_chT@channel,w
  1248  06F2  3A00               	xorlw	0	; case 0
  1249  06F3  1903               	skipnz
  1250  06F4  2ED7               	goto	l94
  1251  06F5  3A01               	xorlw	1	; case 1
  1252  06F6  1903               	skipnz
  1253  06F7  2EDE               	goto	l96
  1254  06F8  2EE5               	goto	l97
  1255  06F9                     l98:
  1256  06F9  0008               	return
  1257  06FA                     __end_of_ADC_chT:
  1258  007E                     btemp	set	126	;btemp
  1259  007E                     wtemp0	set	126
  1260                           
  1261                           	psect	config
  1262                           
  1263                           ;Config register CONFIG1 @ 0x2007
  1264                           ;	Oscillator Selection bits
  1265                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1266                           ;	Watchdog Timer Enable bit
  1267                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1268                           ;	Power-up Timer Enable bit
  1269                           ;	PWRTE = OFF, PWRT disabled
  1270                           ;	RE3/MCLR pin function select bit
  1271                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1272                           ;	Code Protection bit
  1273                           ;	CP = OFF, Program memory code protection is disabled
  1274                           ;	Data Code Protection bit
  1275                           ;	CPD = OFF, Data memory code protection is disabled
  1276                           ;	Brown Out Reset Selection bits
  1277                           ;	BOREN = ON, BOR enabled
  1278                           ;	Internal External Switchover bit
  1279                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1280                           ;	Fail-Safe Clock Monitor Enabled bit
  1281                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1282                           ;	Low Voltage Programming Enable bit
  1283                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1284                           ;	In-Circuit Debugger Mode bit
  1285                           ;	DEBUG = 0x1, unprogrammed default
  1286  2007                     	org	8199
  1287  2007  23D2               	dw	9170
  1288                           
  1289                           ;Config register CONFIG2 @ 0x2008
  1290                           ;	Brown-out Reset Selection bit
  1291                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1292                           ;	Flash Program Memory Self Write Enable bits
  1293                           ;	WRT = OFF, Write protection off
  1294  2008                     	org	8200
  1295  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_CH
    _ADC_CH->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _ADC_CH->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     794
                             _ADC_CH
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_CH                                               3     3      0     794
                                             11 COMMON     3     3      0
                            _ADC_chT
                            ___awdiv
                             ___wmul
                                _sem
 ---------------------------------------------------------------------------------
 (2) _sem                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_chT                                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH
     _ADC_chT
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _sem
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 23:07:22 2021

                     l71 0744                       l63 06D5                       l77 078B  
                     l94 06D7                       l96 06DE                       l97 06E5  
                     l98 06F9             ___awdiv@sign 0026      ___wmul@multiplicand 0072  
                    l184 0706                      l337 07F4                      l186 071E  
                    l900 07D2                      l910 07EB                      l902 07D8  
                    l912 07F0                      l904 07D9                      l840 0731  
                    l920 0750                      l906 07E0                      l842 0737  
                    l834 071F                      l930 075F                      l922 0751  
                    l852 06EC                      l908 07E6                      l860 06FC  
                    l844 073B                      l836 0727                      l932 0763  
                    l924 0752                      l916 0745                      l780 06CD  
                    l772 06B5                      l862 0700                      l846 0741  
                    l838 072B                      l926 0757                      l918 074D  
                    l782 06CE                      l774 06B9                      l934 06A7  
                    l848 06D6                      l880 079A                      l872 078C  
                    l864 070D                      l928 075B                      l784 06D1  
                    l776 06BA                      l936 06AC                      l962 06F1  
                    l890 07AF                      l882 079E                      l874 078F  
                    l866 0714                      l858 06FA                      l786 06D4  
                    l778 06C9                      l892 07B2                      l884 07A3  
                    l876 0793                      l868 071A                      l894 07B9  
                    l886 07A7                      l878 0798                      l896 07BD  
                    l888 07A9                      l898 07C1                      u200 0727  
                    u201 0726                      u210 0731                      u211 0730  
                    u300 07AF                      u220 0737                      u301 07AE  
                    u221 0736                      u230 0741                      u231 0740  
                    u320 07C1                      u240 0700                      u321 07C0  
                    u241 06FF                      u315 07B3                      u340 07D2  
                    u341 07D1                      u270 071A                      u335 07C2  
                    u271 0719                      u255 0707                      u360 07E6  
                    u280 0793                      u361 07E5                      u345 07CE  
                    u281 0792                      u265 070E                      u370 07EB  
                    u290 079E                      u371 07EA                      u355 07DA  
                    u291 079D                      u380 0763                      u381 0762  
                    u397 0754                      _sem 071F          __end_of_ADC_chT 06FA  
                   ?_sem 0070                     _main 06A7                     btemp 007E  
                   start 0000                    ??_sem 0070                    ?_main 0070  
        __end_of___awdiv 07F5                    _ANSEL 0188          ___awdiv@divisor 0076  
        ___awdiv@counter 0025                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 06B5  
                  status 0003                    wtemp0 007E          __initialization 07F5  
           __end_of_main 06B5                ??_ADC_chT 0072                   ??_main 007E  
                 _ADCON1 009F                   _ADC_CH 0745                   _ADRESH 001E  
       ___awdiv@dividend 0078                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   ___wmul 06FA                ??___awdiv 007A  
       ___awdiv@quotient 0027  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 06D6                  ?_ADC_CH 0070                  ??_setup 0070  
             __pbssBANK0 0020               __pmaintext 06A7                  ?___wmul 0070  
                _ADC_chT 06D6                  _ADC_con 0023                  _ADC_res 0024  
        __size_of_ADC_CH 0047                  ___awdiv 078C          __size_of___wmul 0025  
                _channel 0020                  __ptext1 06B5                  __ptext2 0745  
                __ptext3 071F                  __ptext4 06FA                  __ptext5 078C  
                __ptext6 06D6             __size_of_sem 0026     end_of_initialization 07FC  
              _VALOR_ADC 0022                _PORTDbits 0008           __end_of_ADC_CH 078C  
         __end_of___wmul 071F      start_initialization 07F5              __end_of_sem 0745  
               ??_ADC_CH 007B                 ??___wmul 0074                 ?_ADC_chT 0070  
              ___latbits 0002            __pcstackBANK0 0025                 ?___awdiv 0076  
         __size_of_setup 0021           ___wmul@product 0074                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F         __size_of_ADC_chT 0024  
      ___wmul@multiplier 0070         __size_of___awdiv 0069           ADC_chT@channel 0070  
          __size_of_main 000E               _OPTION_REG 0081  
