

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 12:19:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  001E                     _ADRESH	set	30
   368  001F                     _ADCON0bits	set	31
   369  000B                     _INTCONbits	set	11
   370  000B                     _INTCON	set	11
   371  000C                     _PIR1bits	set	12
   372  0009                     _PORTE	set	9
   373  0006                     _PORTB	set	6
   374  0005                     _PORTA	set	5
   375  0008                     _PORTD	set	8
   376  0063                     _SSPIF	set	99
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  009E                     _ADRESL	set	158
   380  0085                     _TRISAbits	set	133
   381  0081                     _OPTION_REG	set	129
   382  008C                     _PIE1bits	set	140
   383  009F                     _ADCON1	set	159
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395                           ; #config settings
   396                           
   397  000F                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   403  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   404  0013                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0013                     __end_of__initialization:
   408  0013  0183               	clrf	3
   409  0014  120A  118A  28C3   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0077                     __pbssCOMMON:
   413  0077                     _channel:
   414  0077                     	ds	2
   415  0079                     _VALOR_ADC:
   416  0079                     	ds	1
   417  007A                     _ADC_res:
   418  007A                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_spiWrite:
   423  0070                     ??_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_setup:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_ADC_CH:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_isr:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ADC_val@ADRES_L:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     spiWrite@dat:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     ??_isr:
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	2
   451  0073                     ?_spiInit:
   452  0073                     ?_ADC_val:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ?_ADC_ch:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     ADC_val@ADRES_H:	
   459                           ; 2 bytes @ 0x3
   460                           
   461  0073                     spiInit@sDataSample:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     ADC_ch@channel:	
   465                           ; 1 bytes @ 0x3
   466                           
   467                           
   468                           ; 2 bytes @ 0x3
   469  0073                     	ds	1
   470  0074                     ??_ADC_val:
   471  0074                     spiInit@sClockIdle:	
   472                           ; 1 bytes @ 0x4
   473                           
   474                           
   475                           ; 1 bytes @ 0x4
   476  0074                     	ds	1
   477  0075                     ??_ADC_CH:
   478  0075                     ??_ADC_ch:	
   479                           ; 1 bytes @ 0x5
   480                           
   481  0075                     spiInit@sTransmitEdge:	
   482                           ; 1 bytes @ 0x5
   483                           
   484                           
   485                           ; 1 bytes @ 0x5
   486  0075                     	ds	1
   487  0076                     ??_spiInit:
   488  0076                     spiInit@sType:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 1 bytes @ 0x6
   493  0076                     	ds	1
   494  0077                     ??_setup:
   495  0077                     ??_main:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           	psect	maintext
   500  00C3                     __pmaintext:	
   501                           ; 1 bytes @ 0x7
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 62 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B00/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0
   524 ;;      Totals:         0       0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels required when called:    4
   527 ;; This function calls:
   528 ;;		_ADC_CH
   529 ;;		_setup
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _main
   537  00C3                     _main:
   538  00C3                     l900:	
   539                           ;incstack = 0
   540                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   541                           
   542                           
   543                           ;main.c: 63: 
   544  00C3  120A  118A  2017  120A  118A  	fcall	_setup
   545  00C8                     l902:
   546                           
   547                           ;main.c: 65: 
   548  00C8  120A  118A  2047  120A  118A  	fcall	_ADC_CH
   549  00CD                     l904:
   550                           
   551                           ;main.c: 66: }
   552  00CD  087A               	movf	_ADC_res,w
   553  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   554  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   555  00D0  0088               	movwf	8	;volatile
   556  00D1  28C8               	goto	l902
   557  00D2  120A  118A  280C   	ljmp	start
   558  00D5                     __end_of_main:
   559                           
   560                           	psect	text1
   561  0017                     __ptext1:	
   562 ;; *************** function _setup *****************
   563 ;; Defined at:
   564 ;;		line 75 in file "main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0
   581 ;;      Totals:         0       0       0       0       0
   582 ;;Total ram usage:        0 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    3
   585 ;; This function calls:
   586 ;;		_spiInit
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _setup
   594  0017                     _setup:
   595  0017                     l862:	
   596                           ;incstack = 0
   597                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   598                           
   599                           
   600                           ;main.c: 76:         ADC_res = ADC_val(ADRESL, ADRESH);
   601  0017  3001               	movlw	1
   602  0018  1683               	bsf	3,5	;RP0=1, select bank3
   603  0019  1703               	bsf	3,6	;RP1=1, select bank3
   604  001A  0088               	movwf	8	;volatile
   605  001B                     l864:
   606                           
   607                           ;main.c: 77: 
   608  001B  0189               	clrf	9	;volatile
   609  001C                     l866:
   610                           
   611                           ;main.c: 78:     }
   612  001C  3001               	movlw	1
   613  001D  1683               	bsf	3,5	;RP0=1, select bank1
   614  001E  1303               	bcf	3,6	;RP1=0, select bank1
   615  001F  0085               	movwf	5	;volatile
   616                           
   617                           ;main.c: 79: }
   618  0020  0186               	clrf	6	;volatile
   619  0021  0188               	clrf	8	;volatile
   620  0022  0189               	clrf	9	;volatile
   621  0023  1283               	bcf	3,5	;RP0=0, select bank0
   622  0024  1303               	bcf	3,6	;RP1=0, select bank0
   623  0025  0185               	clrf	5	;volatile
   624  0026  0186               	clrf	6	;volatile
   625  0027  0188               	clrf	8	;volatile
   626  0028  0189               	clrf	9	;volatile
   627  0029  1683               	bsf	3,5	;RP0=1, select bank1
   628  002A  1303               	bcf	3,6	;RP1=0, select bank1
   629  002B  019F               	clrf	31	;volatile
   630  002C                     l868:
   631  002C  130C               	bcf	12,6	;volatile
   632  002D                     l870:
   633  002D  1283               	bcf	3,5	;RP0=0, select bank0
   634  002E  1303               	bcf	3,6	;RP1=0, select bank0
   635  002F  130C               	bcf	12,6	;volatile
   636  0030  1683               	bsf	3,5	;RP0=1, select bank1
   637  0031  1303               	bcf	3,6	;RP1=0, select bank1
   638  0032  0181               	clrf	1	;volatile
   639  0033  018B               	clrf	11	;volatile
   640  0034                     l872:
   641  0034  178B               	bsf	11,7	;volatile
   642  0035                     l874:
   643  0035  170B               	bsf	11,6	;volatile
   644  0036                     l876:
   645  0036  1283               	bcf	3,5	;RP0=0, select bank0
   646  0037  1303               	bcf	3,6	;RP1=0, select bank0
   647  0038  118C               	bcf	12,3	;volatile
   648  0039                     l878:
   649  0039  1683               	bsf	3,5	;RP0=1, select bank1
   650  003A  1303               	bcf	3,6	;RP1=0, select bank1
   651  003B  158C               	bsf	12,3	;volatile
   652  003C                     l880:
   653  003C  1685               	bsf	5,5	;volatile
   654  003D                     l882:
   655  003D  01F3               	clrf	spiInit@sDataSample
   656  003E  01F4               	clrf	spiInit@sClockIdle
   657  003F  01F5               	clrf	spiInit@sTransmitEdge
   658  0040  3024               	movlw	36
   659  0041  120A  118A  2097  120A  118A  	fcall	_spiInit
   660  0046                     l75:
   661  0046  0008               	return
   662  0047                     __end_of_setup:
   663                           
   664                           	psect	text2
   665  0097                     __ptext2:	
   666 ;; *************** function _spiInit *****************
   667 ;; Defined at:
   668 ;;		line 14 in file "SPI_S1.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  sType           1    wreg     enum E1264
   671 ;;  sDataSample     1    3[COMMON] enum E1272
   672 ;;  sClockIdle      1    4[COMMON] enum E1276
   673 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  sType           1    6[COMMON] enum E1264
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         3       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         4       0       0       0       0
   689 ;;Total ram usage:        4 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    2
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_setup
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _spiInit
   701  0097                     _spiInit:
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   705                           ;spiInit@sType stored from wreg
   706  0097  00F6               	movwf	spiInit@sType
   707  0098                     l838:
   708                           
   709                           ;SPI_S1.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle 
      +                          sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_S1.c: 15: {;SPI_S1.c: 16:     TRISC5 = 
      +                          0;
   710  0098  1683               	bsf	3,5	;RP0=1, select bank1
   711  0099  1303               	bcf	3,6	;RP1=0, select bank1
   712  009A  1287               	bcf	7,5	;volatile
   713                           
   714                           ;SPI_S1.c: 17:     if(sType & 0b00000100)
   715  009B  1D76               	btfss	spiInit@sType,2
   716  009C  289E               	goto	u51
   717  009D  289F               	goto	u50
   718  009E                     u51:
   719  009E  28A3               	goto	l844
   720  009F                     u50:
   721  009F                     l840:
   722                           
   723                           ;SPI_S1.c: 18:     {;SPI_S1.c: 19:         SSPSTAT = sTransmitEdge;
   724  009F  0875               	movf	spiInit@sTransmitEdge,w
   725  00A0  0094               	movwf	20	;volatile
   726  00A1                     l842:
   727                           
   728                           ;SPI_S1.c: 20:         TRISC3 = 1;
   729  00A1  1587               	bsf	7,3	;volatile
   730                           
   731                           ;SPI_S1.c: 21:     }
   732  00A2  28A7               	goto	l118
   733  00A3                     l844:
   734                           
   735                           ;SPI_S1.c: 23:     {;SPI_S1.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   736  00A3  0873               	movf	spiInit@sDataSample,w
   737  00A4  0475               	iorwf	spiInit@sTransmitEdge,w
   738  00A5  0094               	movwf	20	;volatile
   739  00A6                     l846:
   740                           
   741                           ;SPI_S1.c: 25:         TRISC3 = 0;
   742  00A6  1187               	bcf	7,3	;volatile
   743  00A7                     l118:	
   744                           ;SPI_S1.c: 26:     }
   745                           
   746                           
   747                           ;SPI_S1.c: 28:     SSPCON = sType | sClockIdle;
   748  00A7  0876               	movf	spiInit@sType,w
   749  00A8  0474               	iorwf	spiInit@sClockIdle,w
   750  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   751  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   752  00AB  0094               	movwf	20	;volatile
   753  00AC                     l119:
   754  00AC  0008               	return
   755  00AD                     __end_of_spiInit:
   756                           
   757                           	psect	text3
   758  0047                     __ptext3:	
   759 ;; *************** function _ADC_CH *****************
   760 ;; Defined at:
   761 ;;		line 106 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          2       0       0       0       0
   778 ;;      Totals:         2       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    3
   782 ;; This function calls:
   783 ;;		_ADC_ch
   784 ;;		_ADC_val
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _ADC_CH
   792  0047                     _ADC_CH:
   793  0047                     l884:	
   794                           ;incstack = 0
   795                           ; Regs used in _ADC_CH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   796                           
   797  0047  3000               	movlw	0
   798  0048  00F3               	movwf	ADC_ch@channel
   799  0049  00F4               	movwf	ADC_ch@channel+1
   800  004A  120A  118A  2073  120A  118A  	fcall	_ADC_ch
   801  004F                     l886:
   802  004F  1283               	bcf	3,5	;RP0=0, select bank0
   803  0050  1303               	bcf	3,6	;RP1=0, select bank0
   804  0051  171F               	bsf	31,6	;volatile
   805  0052                     l888:
   806  0052  139F               	bcf	31,7	;volatile
   807  0053                     l890:
   808  0053  141F               	bsf	31,0	;volatile
   809  0054                     l892:
   810  0054  301A               	movlw	26
   811  0055  00F5               	movwf	??_ADC_CH
   812  0056                     u77:
   813  0056  0BF5               	decfsz	??_ADC_CH,f
   814  0057  2856               	goto	u77
   815  0058  0000               	nop
   816  0059                     l894:
   817  0059  1283               	bcf	3,5	;RP0=0, select bank0
   818  005A  1303               	bcf	3,6	;RP1=0, select bank0
   819  005B  149F               	bsf	31,1	;volatile
   820  005C  286C               	goto	l898
   821  005D                     l896:
   822  005D  081E               	movf	30,w	;volatile
   823  005E  00F5               	movwf	??_ADC_CH
   824  005F  0875               	movf	??_ADC_CH,w
   825  0060  00F3               	movwf	ADC_val@ADRES_H
   826  0061  1683               	bsf	3,5	;RP0=1, select bank1
   827  0062  1303               	bcf	3,6	;RP1=0, select bank1
   828  0063  081E               	movf	30,w	;volatile
   829  0064  120A  118A  20D5  120A  118A  	fcall	_ADC_val
   830  0069  00F6               	movwf	??_ADC_CH+1
   831  006A  0876               	movf	??_ADC_CH+1,w
   832  006B  00FA               	movwf	_ADC_res
   833  006C                     l898:
   834  006C  1283               	bcf	3,5	;RP0=0, select bank0
   835  006D  1303               	bcf	3,6	;RP1=0, select bank0
   836  006E  189F               	btfsc	31,1	;volatile
   837  006F  2871               	goto	u61
   838  0070  2872               	goto	u60
   839  0071                     u61:
   840  0071  285D               	goto	l896
   841  0072                     u60:
   842  0072                     l81:
   843  0072  0008               	return
   844  0073                     __end_of_ADC_CH:
   845                           
   846                           	psect	text4
   847  00D5                     __ptext4:	
   848 ;; *************** function _ADC_val *****************
   849 ;; Defined at:
   850 ;;		line 12 in file "ADC_S1.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  ADRES_L         1    wreg     unsigned char 
   853 ;;  ADRES_H         1    3[COMMON] unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  ADRES_L         1    0[COMMON] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      unsigned char 
   858 ;; Registers used:
   859 ;;		wreg
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         1       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          1       0       0       0       0
   868 ;;      Totals:         2       0       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    2
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_ADC_CH
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _ADC_val
   881  00D5                     _ADC_val:
   882  00D5                     l858:	
   883                           ;incstack = 0
   884                           ; Regs used in _ADC_val: [wreg]
   885                           
   886                           
   887                           ;ADC_S1.c: 13:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
   888  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   889  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   890  00D7  081E               	movf	30,w	;volatile
   891  00D8  00F4               	movwf	??_ADC_val
   892  00D9  0874               	movf	??_ADC_val,w
   893  00DA  00F9               	movwf	_VALOR_ADC
   894                           
   895                           ;ADC_S1.c: 15:     return VALOR_ADC;
   896  00DB  0879               	movf	_VALOR_ADC,w
   897  00DC                     l94:
   898  00DC  0008               	return
   899  00DD                     __end_of_ADC_val:
   900                           
   901                           	psect	text5
   902  0073                     __ptext5:	
   903 ;; *************** function _ADC_ch *****************
   904 ;; Defined at:
   905 ;;		line 18 in file "ADC_S1.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  channel         2    3[COMMON] unsigned short 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2    3[COMMON] unsigned int 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         2       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         2       0       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    2
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_ADC_CH
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _ADC_ch
   935  0073                     _ADC_ch:
   936  0073                     l848:	
   937                           ;incstack = 0
   938                           ; Regs used in _ADC_ch: [wreg-fsr0h+status,2+status,0]
   939                           
   940                           
   941                           ;ADC_S1.c: 19:      switch (channel) {
   942  0073  2889               	goto	l852
   943  0074                     l98:	
   944                           ;ADC_S1.c: 20:         case 0:
   945                           
   946                           
   947                           ;ADC_S1.c: 21:             ADCON0bits.CHS3 = 0;
   948  0074  1283               	bcf	3,5	;RP0=0, select bank0
   949  0075  1303               	bcf	3,6	;RP1=0, select bank0
   950  0076  129F               	bcf	31,5	;volatile
   951                           
   952                           ;ADC_S1.c: 22:             ADCON0bits.CHS2 = 0;
   953  0077  121F               	bcf	31,4	;volatile
   954                           
   955                           ;ADC_S1.c: 23:             ADCON0bits.CHS1 = 0;
   956  0078  119F               	bcf	31,3	;volatile
   957                           
   958                           ;ADC_S1.c: 24:             ADCON0bits.CHS0 = 0;
   959  0079  111F               	bcf	31,2	;volatile
   960                           
   961                           ;ADC_S1.c: 26:             break;
   962  007A  2896               	goto	l102
   963  007B                     l100:	
   964                           ;ADC_S1.c: 27:         case 1:
   965                           
   966                           
   967                           ;ADC_S1.c: 28:             ADCON0bits.CHS3 = 0;
   968  007B  1283               	bcf	3,5	;RP0=0, select bank0
   969  007C  1303               	bcf	3,6	;RP1=0, select bank0
   970  007D  129F               	bcf	31,5	;volatile
   971                           
   972                           ;ADC_S1.c: 29:             ADCON0bits.CHS2 = 0;
   973  007E  121F               	bcf	31,4	;volatile
   974                           
   975                           ;ADC_S1.c: 30:             ADCON0bits.CHS1 = 0;
   976  007F  119F               	bcf	31,3	;volatile
   977                           
   978                           ;ADC_S1.c: 31:             ADCON0bits.CHS0 = 1;
   979  0080  151F               	bsf	31,2	;volatile
   980                           
   981                           ;ADC_S1.c: 32:             break;
   982  0081  2896               	goto	l102
   983  0082                     l101:	
   984                           ;ADC_S1.c: 33:         default:
   985                           
   986                           
   987                           ;ADC_S1.c: 34:             ADCON0bits.CHS3 = 0;
   988  0082  1283               	bcf	3,5	;RP0=0, select bank0
   989  0083  1303               	bcf	3,6	;RP1=0, select bank0
   990  0084  129F               	bcf	31,5	;volatile
   991                           
   992                           ;ADC_S1.c: 35:             ADCON0bits.CHS2 = 0;
   993  0085  121F               	bcf	31,4	;volatile
   994                           
   995                           ;ADC_S1.c: 36:             ADCON0bits.CHS1 = 0;
   996  0086  119F               	bcf	31,3	;volatile
   997                           
   998                           ;ADC_S1.c: 37:             ADCON0bits.CHS0 = 0;
   999  0087  111F               	bcf	31,2	;volatile
  1000                           
  1001                           ;ADC_S1.c: 38:             break;
  1002  0088  2896               	goto	l102
  1003  0089                     l852:
  1004                           
  1005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1006                           ; Switch size 1, requested type "simple"
  1007                           ; Number of cases is 1, Range of values is 0 to 0
  1008                           ; switch strategies available:
  1009                           ; Name         Instructions Cycles
  1010                           ; simple_byte            4     3 (average)
  1011                           ; direct_byte           11     8 (fixed)
  1012                           ; jumptable            260     6 (fixed)
  1013                           ;	Chosen strategy is simple_byte
  1014  0089  0874               	movf	ADC_ch@channel+1,w
  1015  008A  3A00               	xorlw	0	; case 0
  1016  008B  1903               	skipnz
  1017  008C  288E               	goto	l926
  1018  008D  2882               	goto	l101
  1019  008E                     l926:
  1020                           
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 2, Range of values is 0 to 1
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte            7     4 (average)
  1026                           ; direct_byte           14     8 (fixed)
  1027                           ; jumptable            260     6 (fixed)
  1028                           ;	Chosen strategy is simple_byte
  1029  008E  0873               	movf	ADC_ch@channel,w
  1030  008F  3A00               	xorlw	0	; case 0
  1031  0090  1903               	skipnz
  1032  0091  2874               	goto	l98
  1033  0092  3A01               	xorlw	1	; case 1
  1034  0093  1903               	skipnz
  1035  0094  287B               	goto	l100
  1036  0095  2882               	goto	l101
  1037  0096                     l102:
  1038  0096  0008               	return
  1039  0097                     __end_of_ADC_ch:
  1040                           
  1041                           	psect	text6
  1042  00AD                     __ptext6:	
  1043 ;; *************** function _isr *****************
  1044 ;; Defined at:
  1045 ;;		line 46 in file "main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          2       0       0       0       0
  1062 ;;      Totals:         2       0       0       0       0
  1063 ;;Total ram usage:        2 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    1
  1066 ;; This function calls:
  1067 ;;		_spiWrite
  1068 ;; This function is called by:
  1069 ;;		Interrupt level 1
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _isr
  1075  00AD                     _isr:
  1076  00AD                     i1l794:
  1077                           
  1078                           ;main.c: 47: 
  1079  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1080  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1081  00AF  1D8C               	btfss	12,3	;volatile
  1082  00B0  28B2               	goto	u4_21
  1083  00B1  28B3               	goto	u4_20
  1084  00B2                     u4_21:
  1085  00B2  28BC               	goto	i1l64
  1086  00B3                     u4_20:
  1087  00B3                     i1l796:
  1088                           
  1089                           ;main.c: 49:     PORTE = 0;
  1090  00B3  087A               	movf	_ADC_res,w
  1091  00B4  120A  118A  20DD  120A  118A  	fcall	_spiWrite
  1092  00B9                     i1l798:
  1093                           
  1094                           ;main.c: 50: 
  1095  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1096  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1097  00BB  118C               	bcf	12,3	;volatile
  1098  00BC                     i1l64:
  1099  00BC  0872               	movf	??_isr+1,w
  1100  00BD  008A               	movwf	10
  1101  00BE  0E71               	swapf	??_isr,w
  1102  00BF  0083               	movwf	3
  1103  00C0  0EFE               	swapf	btemp,f
  1104  00C1  0E7E               	swapf	btemp,w
  1105  00C2  0009               	retfie
  1106  00C3                     __end_of_isr:
  1107                           
  1108                           	psect	intentry
  1109  0004                     __pintentry:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1112                           
  1113  0004                     interrupt_function:
  1114  007E                     saved_w	set	btemp
  1115  0004  00FE               	movwf	btemp
  1116  0005  0E03               	swapf	3,w
  1117  0006  00F1               	movwf	??_isr
  1118  0007  080A               	movf	10,w
  1119  0008  00F2               	movwf	??_isr+1
  1120  0009  120A  118A  28AD   	ljmp	_isr
  1121                           
  1122                           	psect	text7
  1123  00DD                     __ptext7:	
  1124 ;; *************** function _spiWrite *****************
  1125 ;; Defined at:
  1126 ;;		line 36 in file "SPI_S1.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  dat             1    wreg     unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  dat             1    0[COMMON] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         1       0       0       0       0
  1144 ;;Total ram usage:        1 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_isr
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _spiWrite
  1155  00DD                     _spiWrite:
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _spiWrite: [wreg]
  1159                           ;spiWrite@dat stored from wreg
  1160  00DD  00F0               	movwf	spiWrite@dat
  1161  00DE                     i1l752:
  1162                           
  1163                           ;SPI_S1.c: 36: void spiWrite(char dat);SPI_S1.c: 37: {;SPI_S1.c: 38:     SSPBUF = dat;
  1164  00DE  0870               	movf	spiWrite@dat,w
  1165  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00E1  0093               	movwf	19	;volatile
  1168  00E2                     i1l128:
  1169  00E2  0008               	return
  1170  00E3                     __end_of_spiWrite:
  1171  007E                     btemp	set	126	;btemp
  1172  007E                     wtemp0	set	126
  1173                           
  1174                           	psect	config
  1175                           
  1176                           ;Config register CONFIG1 @ 0x2007
  1177                           ;	Oscillator Selection bits
  1178                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1179                           ;	Watchdog Timer Enable bit
  1180                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1181                           ;	Power-up Timer Enable bit
  1182                           ;	PWRTE = OFF, PWRT disabled
  1183                           ;	RE3/MCLR pin function select bit
  1184                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1185                           ;	Code Protection bit
  1186                           ;	CP = OFF, Program memory code protection is disabled
  1187                           ;	Data Code Protection bit
  1188                           ;	CPD = OFF, Data memory code protection is disabled
  1189                           ;	Brown Out Reset Selection bits
  1190                           ;	BOREN = ON, BOR enabled
  1191                           ;	Internal External Switchover bit
  1192                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1193                           ;	Fail-Safe Clock Monitor Enabled bit
  1194                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1195                           ;	Low Voltage Programming Enable bit
  1196                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1197                           ;	In-Circuit Debugger Mode bit
  1198                           ;	DEBUG = 0x1, unprogrammed default
  1199  2007                     	org	8199
  1200  2007  23D2               	dw	9170
  1201                           
  1202                           ;Config register CONFIG2 @ 0x2008
  1203                           ;	Brown-out Reset Selection bit
  1204                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1205                           ;	Flash Program Memory Self Write Enable bits
  1206                           ;	WRT = OFF, Write protection off
  1207  2008                     	org	8200
  1208  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_CH
    _setup->_spiInit
    _ADC_CH->_ADC_ch
    _ADC_CH->_ADC_val

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     534
                             _ADC_CH
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_CH                                               2     2      0     174
                                              5 COMMON     2     2      0
                             _ADC_ch
                            _ADC_val
 ---------------------------------------------------------------------------------
 (2) _ADC_val                                              3     2      1      76
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_ch                                               2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH
     _ADC_ch
     _ADC_val
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 12:19:12 2021

            _SSPSTATbits 0094                       l81 0072                       l75 0046  
                     l94 00DC                       l98 0074                       u50 009F  
                     u51 009E                       u60 0072                       u61 0071  
                     u77 0056                      l100 007B                      l101 0082  
                    l102 0096                      l118 00A7                      l119 00AC  
                    l900 00C3                      l902 00C8                      l840 009F  
                    l904 00CD                      l842 00A1                      l852 0089  
                    l844 00A3                      l926 008E                      l846 00A6  
                    l838 0098                      l870 002D                      l862 0017  
                    l848 0073                      l880 003C                      l872 0034  
                    l864 001B                      l858 00D5                      l890 0053  
                    l882 003D                      l874 0035                      l866 001C  
                    l892 0054                      l884 0047                      l876 0036  
                    l868 002C                      l894 0059                      l886 004F  
                    l878 0039                      l896 005D                      l888 0052  
                    l898 006C                      _isr 00AD          __end_of_ADC_val 00DD  
                   ?_isr 0070                     i1l64 00BC                     u4_20 00B3  
                   u4_21 00B2                     _main 00C3                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l128 00E2                    i1l752 00DE  
                  i1l794 00AD                    i1l796 00B3                    i1l798 00B9  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _setup 0017                    pclath 000A          __end_of_spiInit 00AD  
                  status 0003                    wtemp0 007E           ADC_val@ADRES_H 0073  
         ADC_val@ADRES_L 0070          __initialization 000F             __end_of_main 00D5  
              ??_ADC_val 0074                   ??_main 0077                   _ADCON1 009F  
                 _ADC_CH 0047                   _ADRESH 001E                   _ADRESL 009E  
                 _ADC_ch 0073                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00E3                ??_spiInit 0076  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 0047                  ?_ADC_CH 0070  
                ?_ADC_ch 0073                  ??_setup 0077               __pmaintext 00C3  
             __pintentry 0004                  _ADC_res 007A                  _ADC_val 00D5  
        __size_of_ADC_CH 002C                  _SSPSTAT 0094          __size_of_ADC_ch 0024  
              ?_spiWrite 0070                  _channel 0077                  __ptext1 0017  
                __ptext2 0097                  __ptext3 0047                  __ptext4 00D5  
                __ptext5 0073                  __ptext6 00AD                  __ptext7 00DD  
           __size_of_isr 0016                  _spiInit 0097     end_of_initialization 0013  
             ??_spiWrite 0070                _VALOR_ADC 0079                _TRISAbits 0085  
            spiWrite@dat 0070           __end_of_ADC_CH 0073           __end_of_ADC_ch 0097  
    start_initialization 000F              __end_of_isr 00C3                 ??_ADC_CH 0075  
               ??_ADC_ch 0075                 ?_ADC_val 0073              __pbssCOMMON 0077  
              ___latbits 0002        __size_of_spiWrite 0006                 ?_spiInit 0073  
         __size_of_setup 0030     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_ADC_val 0008         __size_of_spiInit 0016  
          __size_of_main 0012                 _spiWrite 00DD             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B            ADC_ch@channel 0073  
               intlevel1 0000               _OPTION_REG 0081  
