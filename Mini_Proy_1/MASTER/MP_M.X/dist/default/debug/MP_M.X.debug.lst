

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 16:36:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465                           
   466                           	psect	idataBANK0
   467  0196                     __pidataBANK0:
   468                           
   469                           ;initializer for _hablar
   470  0196  3403               	retlw	3
   471                           
   472                           	psect	strings
   473  0003                     __pstrings:
   474  0003                     stringtab:
   475  0003                     __stringtab:
   476                           
   477                           ;	String table - string pointers are 1 byte each
   478  0003  1BFF               	btfsc	btemp+1,7
   479  0004  280D               	ljmp	stringcode
   480  0005  1383               	bcf	3,7
   481  0006  187F               	btfsc	btemp+1,0
   482  0007  1783               	bsf	3,7
   483  0008  0800               	movf	0,w
   484  0009  0A84               	incf	4,f
   485  000A  1903               	skipnz
   486  000B  0AFF               	incf	btemp+1,f
   487  000C  0008               	return
   488  000D                     stringcode:
   489  000D                     stringdir:
   490  000D  3000               	movlw	high stringdir
   491  000E  008A               	movwf	10
   492  000F  0804               	movf	4,w
   493  0010  0A84               	incf	4,f
   494  0011  0782               	addwf	2,f
   495  0012                     __stringbase:
   496  0012  3400               	retlw	0
   497  0013                     __end_of__stringtab:
   498  0013                     _dpowers:
   499  0013  3401               	retlw	1
   500  0014  3400               	retlw	0
   501  0015  340A               	retlw	10
   502  0016  3400               	retlw	0
   503  0017  3464               	retlw	100
   504  0018  3400               	retlw	0
   505  0019  34E8               	retlw	232
   506  001A  3403               	retlw	3
   507  001B  3410               	retlw	16
   508  001C  3427               	retlw	39
   509  001D                     __end_of_dpowers:
   510  0019                     _TXREG	set	25
   511  0013                     _SSPBUF	set	19
   512  0014                     _SSPCON	set	20
   513  001A                     _RCREG	set	26
   514  0018                     _RCSTAbits	set	24
   515  000B                     _INTCONbits	set	11
   516  0007                     _PORTCbits	set	7
   517  0008                     _PORTD	set	8
   518  0009                     _PORTE	set	9
   519  0007                     _PORTC	set	7
   520  0006                     _PORTB	set	6
   521  0049                     _RE1	set	73
   522  0048                     _RE0	set	72
   523  0065                     _RCIF	set	101
   524  0094                     _SSPSTATbits	set	148
   525  0094                     _SSPSTAT	set	148
   526  0098                     _TXSTAbits	set	152
   527  0099                     _SPBRG	set	153
   528  009A                     _SPBRGH	set	154
   529  008C                     _PIE1bits	set	140
   530  0089                     _TRISE	set	137
   531  0086                     _TRISB	set	134
   532  0088                     _TRISD	set	136
   533  04C1                     _TRMT	set	1217
   534  043B                     _TRISC3	set	1083
   535  043D                     _TRISC5	set	1085
   536  043A                     _TRISC2	set	1082
   537  0439                     _TRISC1	set	1081
   538  0438                     _TRISC0	set	1080
   539  0189                     _ANSELH	set	393
   540  0188                     _ANSEL	set	392
   541  001D                     STR_4:
   542  001D  3425               	retlw	37	;'%'
   543  001E  342E               	retlw	46	;'.'
   544  001F  3433               	retlw	51	;'3'
   545  0020  3469               	retlw	105	;'i'
   546  0021  3420               	retlw	32	;' '
   547  0022  3420               	retlw	32	;' '
   548  0023  3425               	retlw	37	;'%'
   549  0024  342E               	retlw	46	;'.'
   550  0025  3433               	retlw	51	;'3'
   551  0026  3469               	retlw	105	;'i'
   552  0027  3420               	retlw	32	;' '
   553  0028  3420               	retlw	32	;' '
   554  0029  3425               	retlw	37	;'%'
   555  002A  342E               	retlw	46	;'.'
   556  002B  3433               	retlw	51	;'3'
   557  002C  3469               	retlw	105	;'i'
   558  002D  3400               	retlw	0
   559  002E                     STR_1:
   560  002E  3453               	retlw	83	;'S'
   561  002F  3431               	retlw	49	;'1'
   562  0030  343A               	retlw	58	;':'
   563  0031  3400               	retlw	0
   564  0032                     STR_2:
   565  0032  3453               	retlw	83	;'S'
   566  0033  3432               	retlw	50	;'2'
   567  0034  343A               	retlw	58	;':'
   568  0035  3400               	retlw	0
   569  0036                     STR_3:
   570  0036  3453               	retlw	83	;'S'
   571  0037  3433               	retlw	51	;'3'
   572  0038  343A               	retlw	58	;':'
   573  0039  3400               	retlw	0
   574                           
   575                           	psect	cinit
   576  07ED                     start_initialization:	
   577                           ; #config settings
   578                           
   579  07ED                     __initialization:
   580                           
   581                           ; Initialize objects allocated to BANK0
   582  07ED  120A  118A  2196  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   583  07F2  00DA               	movwf	__pdataBANK0& (0+127)
   584                           
   585                           ; Clear objects allocated to BANK0
   586  07F3  1383               	bcf	3,7	;select IRP bank0
   587  07F4  3020               	movlw	low __pbssBANK0
   588  07F5  0084               	movwf	4
   589  07F6  3041               	movlw	low (__pbssBANK0+33)
   590  07F7  120A  118A  21AA  120A  118A  	fcall	clear_ram0
   591  07FC                     end_of_initialization:	
   592                           ;End of C runtime variable initialization code
   593                           
   594  07FC                     __end_of__initialization:
   595  07FC  0183               	clrf	3
   596  07FD  120A  118A  2D28   	ljmp	_main	;jump to C main() function
   597                           
   598                           	psect	bssBANK0
   599  0020                     __pbssBANK0:
   600  0020                     _TEMP:
   601  0020                     	ds	4
   602  0024                     _ADC:
   603  0024                     	ds	4
   604  0028                     _cont:
   605  0028                     	ds	1
   606  0029                     _USART_LEER:
   607  0029                     	ds	1
   608  002A                     _S3:
   609  002A                     	ds	1
   610  002B                     _S2:
   611  002B                     	ds	1
   612  002C                     _S1:
   613  002C                     	ds	1
   614  002D                     _data:
   615  002D                     	ds	20
   616                           
   617                           	psect	dataBANK0
   618  005A                     __pdataBANK0:
   619  005A                     _hablar:
   620  005A                     	ds	1
   621                           
   622                           	psect	clrtext
   623  01AA                     clear_ram0:	
   624                           ;	Called with FSR containing the base address, and
   625                           ;	W with the last address+1
   626                           
   627  01AA  0064               	clrwdt	;clear the watchdog before getting into this loop
   628  01AB                     clrloop0:
   629  01AB  0180               	clrf	0	;clear RAM location pointed to by FSR
   630  01AC  0A84               	incf	4,f	;increment pointer
   631  01AD  0604               	xorwf	4,w	;XOR with final address
   632  01AE  1903               	btfsc	3,2	;have we reached the end yet?
   633  01AF  3400               	retlw	0	;all done for this memory range, return
   634  01B0  0604               	xorwf	4,w	;XOR again to restore value
   635  01B1  29AB               	goto	clrloop0	;do the next byte
   636                           
   637                           	psect	cstackCOMMON
   638  0070                     __pcstackCOMMON:
   639  0070                     ?_isdigit:
   640  0070                     ?_setup:	
   641                           ; 1 bit 
   642                           
   643  0070                     ?_Lcd_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_Lcd_Clear:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LEER_S1:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_LEER_S2:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_LEER_S3:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_USART_STRING:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_USART_ESCRITURA:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_USART_ESCRITURA:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_spiInit:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_spiWrite:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_spiWrite:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_spiRead:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_spiRead:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_isdigit:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_main:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_spiReceiveWait:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_spiReceiveWait:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Lcd_Port:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_Lcd_Port:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Lcd_Cmd:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_Lcd_Write_Char:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?___bmul:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?___wmul:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?___lwdiv:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     spiInit@sDataSample:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     spiWrite@dat:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     USART_ESCRITURA@a:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     Lcd_Port@a:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ___bmul@multiplicand:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     _isdigit$955:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ___wmul@multiplier:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ___lwdiv@divisor:	
   737                           ; 2 bytes @ 0x0
   738                           
   739                           
   740                           ; 2 bytes @ 0x0
   741  0070                     	ds	1
   742  0071                     ??_LEER_S2:
   743  0071                     ??_LEER_S3:	
   744                           ; 1 bytes @ 0x1
   745                           
   746  0071                     ??_USART_STRING:	
   747                           ; 1 bytes @ 0x1
   748                           
   749  0071                     ??_Lcd_Cmd:	
   750                           ; 1 bytes @ 0x1
   751                           
   752  0071                     ??_Lcd_Write_Char:	
   753                           ; 1 bytes @ 0x1
   754                           
   755  0071                     ??___bmul:	
   756                           ; 1 bytes @ 0x1
   757                           
   758  0071                     spiInit@sClockIdle:	
   759                           ; 1 bytes @ 0x1
   760                           
   761  0071                     isdigit@c:	
   762                           ; 1 bytes @ 0x1
   763                           
   764                           
   765                           ; 1 bytes @ 0x1
   766  0071                     	ds	1
   767  0072                     spiInit@sTransmitEdge:
   768  0072                     USART_STRING@a:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     Lcd_Write_Char@a:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0072                     ___bmul@product:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0072                     ___wmul@multiplicand:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     ___lwdiv@dividend:	
   781                           ; 2 bytes @ 0x2
   782                           
   783                           
   784                           ; 2 bytes @ 0x2
   785  0072                     	ds	1
   786  0073                     ?_Lcd_Write_String:
   787  0073                     ??_spiInit:	
   788                           ; 1 bytes @ 0x3
   789                           
   790  0073                     spiInit@sType:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     USART_STRING@i:	
   794                           ; 1 bytes @ 0x3
   795                           
   796  0073                     Lcd_Cmd@a:	
   797                           ; 1 bytes @ 0x3
   798                           
   799  0073                     ___bmul@multiplier:	
   800                           ; 1 bytes @ 0x3
   801                           
   802  0073                     Lcd_Write_String@a:	
   803                           ; 1 bytes @ 0x3
   804                           
   805                           
   806                           ; 2 bytes @ 0x3
   807  0073                     	ds	1
   808  0074                     ??_setup:
   809  0074                     ??_Lcd_Init:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ??_Lcd_Clear:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ?_Lcd_Set_Cursor:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ??___wmul:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0074                     ??___lwdiv:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     Lcd_Set_Cursor@b:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     ___wmul@product:	
   828                           ; 1 bytes @ 0x4
   829                           
   830                           
   831                           ; 2 bytes @ 0x4
   832  0074                     	ds	1
   833  0075                     ??_Lcd_Set_Cursor:
   834  0075                     ??_Lcd_Write_String:	
   835                           ; 1 bytes @ 0x5
   836                           
   837  0075                     ___lwdiv@quotient:	
   838                           ; 1 bytes @ 0x5
   839                           
   840                           
   841                           ; 2 bytes @ 0x5
   842  0075                     	ds	1
   843  0076                     ?___awdiv:
   844  0076                     Lcd_Set_Cursor@a:	
   845                           ; 2 bytes @ 0x6
   846                           
   847  0076                     ___awdiv@divisor:	
   848                           ; 1 bytes @ 0x6
   849                           
   850                           
   851                           ; 2 bytes @ 0x6
   852  0076                     	ds	1
   853  0077                     Lcd_Set_Cursor@temp:
   854  0077                     ___lwdiv@counter:	
   855                           ; 1 bytes @ 0x7
   856                           
   857                           
   858                           ; 1 bytes @ 0x7
   859  0077                     	ds	1
   860  0078                     ?___lwmod:
   861  0078                     Lcd_Write_String@i:	
   862                           ; 2 bytes @ 0x8
   863                           
   864  0078                     ___awdiv@dividend:	
   865                           ; 2 bytes @ 0x8
   866                           
   867  0078                     ___lwmod@divisor:	
   868                           ; 2 bytes @ 0x8
   869                           
   870                           
   871                           ; 2 bytes @ 0x8
   872  0078                     	ds	2
   873  007A                     ??___awdiv:
   874  007A                     ___lwmod@dividend:	
   875                           ; 1 bytes @ 0xA
   876                           
   877                           
   878                           ; 2 bytes @ 0xA
   879  007A                     	ds	1
   880  007B                     ??_LEER_S1:
   881                           
   882                           ; 1 bytes @ 0xB
   883  007B                     	ds	1
   884  007C                     ??___lwmod:
   885                           
   886                           ; 1 bytes @ 0xC
   887  007C                     	ds	1
   888  007D                     ___lwmod@counter:
   889                           
   890                           ; 1 bytes @ 0xD
   891  007D                     	ds	1
   892                           
   893                           	psect	cstackBANK0
   894  0041                     __pcstackBANK0:
   895  0041                     ?_sprintf:
   896  0041                     sprintf@f:	
   897                           ; 2 bytes @ 0x0
   898                           
   899  0041                     ___awdiv@counter:	
   900                           ; 1 bytes @ 0x0
   901                           
   902                           
   903                           ; 1 bytes @ 0x0
   904  0041                     	ds	1
   905  0042                     ___awdiv@sign:
   906                           
   907                           ; 1 bytes @ 0x1
   908  0042                     	ds	1
   909  0043                     ___awdiv@quotient:
   910                           
   911                           ; 2 bytes @ 0x2
   912  0043                     	ds	2
   913  0045                     ?___xxtofl:
   914  0045                     ___xxtofl@val:	
   915                           ; 4 bytes @ 0x4
   916                           
   917                           
   918                           ; 4 bytes @ 0x4
   919  0045                     	ds	3
   920  0048                     ??_sprintf:
   921                           
   922                           ; 1 bytes @ 0x7
   923  0048                     	ds	1
   924  0049                     ??___xxtofl:
   925                           
   926                           ; 1 bytes @ 0x8
   927  0049                     	ds	2
   928  004B                     sprintf@ap:
   929                           
   930                           ; 1 bytes @ 0xA
   931  004B                     	ds	1
   932  004C                     sprintf@flag:
   933                           
   934                           ; 1 bytes @ 0xB
   935  004C                     	ds	1
   936  004D                     sprintf@sp:
   937  004D                     ___xxtofl@sign:	
   938                           ; 1 bytes @ 0xC
   939                           
   940                           
   941                           ; 1 bytes @ 0xC
   942  004D                     	ds	1
   943  004E                     ___xxtofl@exp:
   944  004E                     sprintf@val:	
   945                           ; 1 bytes @ 0xD
   946                           
   947                           
   948                           ; 2 bytes @ 0xD
   949  004E                     	ds	1
   950  004F                     ___xxtofl@arg:
   951                           
   952                           ; 4 bytes @ 0xE
   953  004F                     	ds	1
   954  0050                     sprintf@prec:
   955                           
   956                           ; 1 bytes @ 0xF
   957  0050                     	ds	1
   958  0051                     sprintf@c:
   959                           
   960                           ; 1 bytes @ 0x10
   961  0051                     	ds	2
   962  0053                     ??_main:
   963                           
   964                           ; 1 bytes @ 0x12
   965  0053                     	ds	7
   966                           
   967                           	psect	maintext
   968  0528                     __pmaintext:	
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 101 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : B00/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          0       7       0       0       0
   991 ;;      Totals:         0       7       0       0       0
   992 ;;Total ram usage:        7 bytes
   993 ;; Hardware stack levels required when called:    3
   994 ;; This function calls:
   995 ;;		_LEER_S1
   996 ;;		_LEER_S2
   997 ;;		_LEER_S3
   998 ;;		_Lcd_Clear
   999 ;;		_Lcd_Init
  1000 ;;		_Lcd_Set_Cursor
  1001 ;;		_Lcd_Write_String
  1002 ;;		_USART_ESCRITURA
  1003 ;;		_USART_STRING
  1004 ;;		_setup
  1005 ;;		_sprintf
  1006 ;; This function is called by:
  1007 ;;		Startup code after reset
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _main
  1013  0528                     _main:
  1014  0528                     l1769:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1017                           
  1018                           
  1019                           ;main.c: 102:     setup();
  1020  0528  120A  118A  22A8  120A  118A  	fcall	_setup
  1021  052D                     l1771:
  1022                           
  1023                           ;main.c: 103:     TRISD = 0x00;
  1024  052D  1683               	bsf	3,5	;RP0=1, select bank1
  1025  052E  1303               	bcf	3,6	;RP1=0, select bank1
  1026  052F  0188               	clrf	8	;volatile
  1027  0530                     l1773:
  1028                           
  1029                           ;main.c: 104:     Lcd_Init();
  1030  0530  120A  118A  2406  120A  118A  	fcall	_Lcd_Init
  1031  0535                     l1775:
  1032                           
  1033                           ;main.c: 105:     Lcd_Clear();
  1034  0535  120A  118A  21C7  120A  118A  	fcall	_Lcd_Clear
  1035  053A                     l1777:
  1036                           
  1037                           ;main.c: 106:     Lcd_Set_Cursor(1, 1);
  1038  053A  01F4               	clrf	Lcd_Set_Cursor@b
  1039  053B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1040  053C  3001               	movlw	1
  1041  053D  120A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  1042  0542                     l1779:
  1043                           
  1044                           ;main.c: 107:     Lcd_Write_String("S1:");
  1045  0542  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1046  0543  00F3               	movwf	Lcd_Write_String@a
  1047  0544  3080               	movlw	128
  1048  0545  00F4               	movwf	Lcd_Write_String@a+1
  1049  0546  120A  118A  2380  120A  118A  	fcall	_Lcd_Write_String
  1050  054B                     l1781:
  1051                           
  1052                           ;main.c: 108:     Lcd_Set_Cursor(1, 7);
  1053  054B  3007               	movlw	7
  1054  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1055  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1056  054E  00D3               	movwf	??_main
  1057  054F  0853               	movf	??_main,w
  1058  0550  00F4               	movwf	Lcd_Set_Cursor@b
  1059  0551  3001               	movlw	1
  1060  0552  120A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  1061  0557                     l1783:
  1062                           
  1063                           ;main.c: 109:     Lcd_Write_String("S2:");
  1064  0557  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1065  0558  00F3               	movwf	Lcd_Write_String@a
  1066  0559  3080               	movlw	128
  1067  055A  00F4               	movwf	Lcd_Write_String@a+1
  1068  055B  120A  118A  2380  120A  118A  	fcall	_Lcd_Write_String
  1069  0560                     l1785:
  1070                           
  1071                           ;main.c: 110:     Lcd_Set_Cursor(1, 14);
  1072  0560  300E               	movlw	14
  1073  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0563  00D3               	movwf	??_main
  1076  0564  0853               	movf	??_main,w
  1077  0565  00F4               	movwf	Lcd_Set_Cursor@b
  1078  0566  3001               	movlw	1
  1079  0567  120A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  1080  056C                     l1787:
  1081                           
  1082                           ;main.c: 111:     Lcd_Write_String("S3:");
  1083  056C  3024               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1084  056D  00F3               	movwf	Lcd_Write_String@a
  1085  056E  3080               	movlw	128
  1086  056F  00F4               	movwf	Lcd_Write_String@a+1
  1087  0570  120A  118A  2380  120A  118A  	fcall	_Lcd_Write_String
  1088  0575                     l1789:
  1089                           
  1090                           ;main.c: 114:         LEER_S1();
  1091  0575  120A  118A  24BA  120A  118A  	fcall	_LEER_S1
  1092  057A                     l1791:
  1093                           
  1094                           ;main.c: 115:         LEER_S2();
  1095  057A  120A  118A  22DA  120A  118A  	fcall	_LEER_S2
  1096  057F                     l1793:
  1097                           
  1098                           ;main.c: 116:         LEER_S3();
  1099  057F  120A  118A  2310  120A  118A  	fcall	_LEER_S3
  1100  0584                     l1795:
  1101                           
  1102                           ;main.c: 117:         PORTB = S1;
  1103  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0586  082C               	movf	_S1,w
  1106  0587  0086               	movwf	6	;volatile
  1107  0588                     l1797:
  1108                           
  1109                           ;main.c: 119:        sprintf(data, "%.3i  %.3i  %.3i", S1, S2, S3);
  1110  0588  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1111  0589  00D3               	movwf	??_main
  1112  058A  0853               	movf	??_main,w
  1113  058B  00C1               	movwf	sprintf@f
  1114  058C  082C               	movf	_S1,w
  1115  058D  00D4               	movwf	??_main+1
  1116  058E  01D5               	clrf	??_main+2
  1117  058F  0854               	movf	??_main+1,w
  1118  0590  00C2               	movwf	?_sprintf+1
  1119  0591  0855               	movf	??_main+2,w
  1120  0592  00C3               	movwf	?_sprintf+2
  1121  0593  082B               	movf	_S2,w
  1122  0594  00D6               	movwf	??_main+3
  1123  0595  01D7               	clrf	??_main+4
  1124  0596  0856               	movf	??_main+3,w
  1125  0597  00C4               	movwf	?_sprintf+3
  1126  0598  0857               	movf	??_main+4,w
  1127  0599  00C5               	movwf	?_sprintf+4
  1128  059A  082A               	movf	_S3,w
  1129  059B  00D8               	movwf	??_main+5
  1130  059C  01D9               	clrf	??_main+6
  1131  059D  0858               	movf	??_main+5,w
  1132  059E  00C6               	movwf	?_sprintf+5
  1133  059F  0859               	movf	??_main+6,w
  1134  05A0  00C7               	movwf	?_sprintf+6
  1135  05A1  302D               	movlw	(low (_data| 0))& (0+255)
  1136  05A2  120A  118A  268A  120A  118A  	fcall	_sprintf
  1137  05A7                     l1799:
  1138                           
  1139                           ;main.c: 120:        USART_STRING(data);
  1140  05A7  302D               	movlw	(low (_data| 0))& (0+255)
  1141  05A8  120A  118A  2241  120A  118A  	fcall	_USART_STRING
  1142  05AD                     l1801:
  1143                           
  1144                           ;main.c: 121:        USART_ESCRITURA(13);
  1145  05AD  300D               	movlw	13
  1146  05AE  120A  118A  21BB  120A  118A  	fcall	_USART_ESCRITURA
  1147  05B3                     l1803:
  1148                           
  1149                           ;main.c: 122:        USART_ESCRITURA(10);
  1150  05B3  300A               	movlw	10
  1151  05B4  120A  118A  21BB  120A  118A  	fcall	_USART_ESCRITURA
  1152  05B9                     l1805:
  1153                           
  1154                           ;main.c: 126:        Lcd_Set_Cursor(2, 1);
  1155  05B9  01F4               	clrf	Lcd_Set_Cursor@b
  1156  05BA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1157  05BB  3002               	movlw	2
  1158  05BC  120A  118A  225F  120A  118A  	fcall	_Lcd_Set_Cursor
  1159  05C1                     l1807:
  1160                           
  1161                           ;main.c: 127:        Lcd_Write_String(data);
  1162  05C1  302D               	movlw	(low (_data| 0))& (0+255)
  1163  05C2  00F3               	movwf	Lcd_Write_String@a
  1164  05C3  3000               	movlw	0
  1165  05C4  00F4               	movwf	Lcd_Write_String@a+1
  1166  05C5  120A  118A  2380  120A  118A  	fcall	_Lcd_Write_String
  1167  05CA  2D75               	goto	l1789
  1168  05CB  120A  118A  2800   	ljmp	start
  1169  05CE                     __end_of_main:
  1170                           
  1171                           	psect	text1
  1172  068A                     __ptext1:	
  1173 ;; *************** function _sprintf *****************
  1174 ;; Defined at:
  1175 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  sp              1    wreg     PTR unsigned char 
  1178 ;;		 -> data(20), 
  1179 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1180 ;;		 -> STR_4(17), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  1183 ;;		 -> data(20), 
  1184 ;;  tmpval          4    0        struct .
  1185 ;;  val             2   13[BANK0 ] unsigned int 
  1186 ;;  cp              2    0        PTR const unsigned char 
  1187 ;;  len             2    0        unsigned int 
  1188 ;;  c               1   16[BANK0 ] unsigned char 
  1189 ;;  prec            1   15[BANK0 ] char 
  1190 ;;  flag            1   11[BANK0 ] unsigned char 
  1191 ;;  ap              1   10[BANK0 ] PTR void [1]
  1192 ;;		 -> ?_sprintf(2), 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2    0[BANK0 ] int 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         0       7       0       0       0
  1203 ;;      Locals:         0       7       0       0       0
  1204 ;;      Temps:          0       3       0       0       0
  1205 ;;      Totals:         0      17       0       0       0
  1206 ;;Total ram usage:       17 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    1
  1209 ;; This function calls:
  1210 ;;		___bmul
  1211 ;;		___lwdiv
  1212 ;;		___lwmod
  1213 ;;		_isdigit
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _sprintf
  1221  068A                     _sprintf:
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1225                           ;sprintf@sp stored from wreg
  1226  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1227  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1228  068C  00CD               	movwf	sprintf@sp
  1229  068D                     l1671:
  1230                           
  1231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1232  068D  3042               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1233  068E  00C8               	movwf	??_sprintf
  1234  068F  0848               	movf	??_sprintf,w
  1235  0690  00CB               	movwf	sprintf@ap
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1238  0691  2FD6               	goto	l1749
  1239  0692                     l1673:
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1242  0692  3025               	movlw	37
  1243  0693  0651               	xorwf	sprintf@c,w
  1244  0694  1903               	btfsc	3,2
  1245  0695  2E97               	goto	u1221
  1246  0696  2E98               	goto	u1220
  1247  0697                     u1221:
  1248  0697  2EA4               	goto	l1679
  1249  0698                     u1220:
  1250  0698                     l1675:
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1253  0698  0851               	movf	sprintf@c,w
  1254  0699  00C8               	movwf	??_sprintf
  1255  069A  084D               	movf	sprintf@sp,w
  1256  069B  0084               	movwf	4
  1257  069C  0848               	movf	??_sprintf,w
  1258  069D  1383               	bcf	3,7	;select IRP bank0
  1259  069E  0080               	movwf	0
  1260  069F                     l1677:
  1261  069F  3001               	movlw	1
  1262  06A0  00C8               	movwf	??_sprintf
  1263  06A1  0848               	movf	??_sprintf,w
  1264  06A2  07CD               	addwf	sprintf@sp,f
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1267  06A3  2FD6               	goto	l1749
  1268  06A4                     l1679:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1271  06A4  01CC               	clrf	sprintf@flag
  1272  06A5                     l1681:
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1275  06A5  0841               	movf	sprintf@f,w
  1276  06A6  0084               	movwf	4
  1277  06A7  120A  118A  200D  120A  118A  	fcall	stringdir
  1278  06AC  3A2E               	xorlw	46
  1279  06AD  1D03               	skipz
  1280  06AE  2EB0               	goto	u1231
  1281  06AF  2EB1               	goto	u1230
  1282  06B0                     u1231:
  1283  06B0  2EE8               	goto	l1695
  1284  06B1                     u1230:
  1285  06B1                     l1683:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1288  06B1  3001               	movlw	1
  1289  06B2  00C8               	movwf	??_sprintf
  1290  06B3  0848               	movf	??_sprintf,w
  1291  06B4  07C1               	addwf	sprintf@f,f
  1292  06B5                     l1685:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1295  06B5  01D0               	clrf	sprintf@prec
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1298  06B6  2ED7               	goto	l1693
  1299  06B7                     l1687:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1302  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1303  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1304  06B9  0850               	movf	sprintf@prec,w
  1305  06BA  00C8               	movwf	??_sprintf
  1306  06BB  0848               	movf	??_sprintf,w
  1307  06BC  00F0               	movwf	___bmul@multiplicand
  1308  06BD  300A               	movlw	10
  1309  06BE  120A  118A  21E6  120A  118A  	fcall	___bmul
  1310  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1311  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1312  06C5  00C9               	movwf	??_sprintf+1
  1313  06C6  0849               	movf	??_sprintf+1,w
  1314  06C7  00D0               	movwf	sprintf@prec
  1315  06C8                     l1689:
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1318  06C8  0841               	movf	sprintf@f,w
  1319  06C9  0084               	movwf	4
  1320  06CA  120A  118A  200D  120A  118A  	fcall	stringdir
  1321  06CF  3ED0               	addlw	-48
  1322  06D0  00C8               	movwf	??_sprintf
  1323  06D1  0848               	movf	??_sprintf,w
  1324  06D2  07D0               	addwf	sprintf@prec,f
  1325  06D3                     l1691:
  1326  06D3  3001               	movlw	1
  1327  06D4  00C8               	movwf	??_sprintf
  1328  06D5  0848               	movf	??_sprintf,w
  1329  06D6  07C1               	addwf	sprintf@f,f
  1330  06D7                     l1693:
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1333  06D7  0841               	movf	sprintf@f,w
  1334  06D8  0084               	movwf	4
  1335  06D9  120A  118A  200D  120A  118A  	fcall	stringdir
  1336  06DE  120A  118A  21D4  120A  118A  	fcall	_isdigit
  1337  06E3  1803               	btfsc	3,0
  1338  06E4  2EE6               	goto	u1241
  1339  06E5  2EE7               	goto	u1240
  1340  06E6                     u1241:
  1341  06E6  2EB7               	goto	l1687
  1342  06E7                     u1240:
  1343  06E7  2EE9               	goto	l1699
  1344  06E8                     l1695:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1347  06E8  01D0               	clrf	sprintf@prec
  1348  06E9                     l1699:
  1349  06E9  3001               	movlw	1
  1350  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1351  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1352  06EC  07C1               	addwf	sprintf@f,f
  1353  06ED  30FF               	movlw	-1
  1354  06EE  0741               	addwf	sprintf@f,w
  1355  06EF  0084               	movwf	4
  1356  06F0  120A  118A  200D  120A  118A  	fcall	stringdir
  1357  06F5  00D1               	movwf	sprintf@c
  1358  06F6  00C8               	movwf	??_sprintf
  1359  06F7  01C9               	clrf	??_sprintf+1
  1360                           
  1361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1362                           ; Switch size 1, requested type "simple"
  1363                           ; Number of cases is 1, Range of values is 0 to 0
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte            4     3 (average)
  1367                           ; direct_byte           11     8 (fixed)
  1368                           ; jumptable            260     6 (fixed)
  1369                           ;	Chosen strategy is simple_byte
  1370  06F8  0849               	movf	??_sprintf+1,w
  1371  06F9  3A00               	xorlw	0	; case 0
  1372  06FA  1903               	skipnz
  1373  06FB  2EFD               	goto	l1839
  1374  06FC  2FD6               	goto	l1749
  1375  06FD                     l1839:
  1376                           
  1377                           ; Switch size 1, requested type "simple"
  1378                           ; Number of cases is 3, Range of values is 0 to 105
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           10     6 (average)
  1382                           ; jumptable            260     6 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  06FD  0848               	movf	??_sprintf,w
  1385  06FE  3A00               	xorlw	0	; case 0
  1386  06FF  1903               	skipnz
  1387  0700  2FE8               	goto	l1751
  1388  0701  3A64               	xorlw	100	; case 100
  1389  0702  1903               	skipnz
  1390  0703  2F08               	goto	l1701
  1391  0704  3A0D               	xorlw	13	; case 105
  1392  0705  1903               	skipnz
  1393  0706  2F08               	goto	l1701
  1394  0707  2FD6               	goto	l1749
  1395  0708                     l1701:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1398  0708  084B               	movf	sprintf@ap,w
  1399  0709  0084               	movwf	4
  1400  070A  1383               	bcf	3,7	;select IRP bank0
  1401  070B  0800               	movf	0,w
  1402  070C  00CE               	movwf	sprintf@val
  1403  070D  0A84               	incf	4,f
  1404  070E  0800               	movf	0,w
  1405  070F  00CF               	movwf	sprintf@val+1
  1406  0710                     l1703:
  1407  0710  3002               	movlw	2
  1408  0711  00C8               	movwf	??_sprintf
  1409  0712  0848               	movf	??_sprintf,w
  1410  0713  07CB               	addwf	sprintf@ap,f
  1411  0714                     l1705:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1414  0714  1FCF               	btfss	sprintf@val+1,7
  1415  0715  2F17               	goto	u1251
  1416  0716  2F18               	goto	u1250
  1417  0717                     u1251:
  1418  0717  2F21               	goto	l1711
  1419  0718                     u1250:
  1420  0718                     l1707:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1423  0718  3003               	movlw	3
  1424  0719  00C8               	movwf	??_sprintf
  1425  071A  0848               	movf	??_sprintf,w
  1426  071B  04CC               	iorwf	sprintf@flag,f
  1427  071C                     l1709:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1430  071C  09CE               	comf	sprintf@val,f
  1431  071D  09CF               	comf	sprintf@val+1,f
  1432  071E  0ACE               	incf	sprintf@val,f
  1433  071F  1903               	skipnz
  1434  0720  0ACF               	incf	sprintf@val+1,f
  1435  0721                     l1711:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1438  0721  0850               	movf	sprintf@prec,w
  1439  0722  1D03               	btfss	3,2
  1440  0723  2F25               	goto	u1261
  1441  0724  2F26               	goto	u1260
  1442  0725                     u1261:
  1443  0725  2F30               	goto	l1717
  1444  0726                     u1260:
  1445  0726                     l1713:
  1446  0726  084E               	movf	sprintf@val,w
  1447  0727  044F               	iorwf	sprintf@val+1,w
  1448  0728  1D03               	btfss	3,2
  1449  0729  2F2B               	goto	u1271
  1450  072A  2F2C               	goto	u1270
  1451  072B                     u1271:
  1452  072B  2F30               	goto	l1717
  1453  072C                     u1270:
  1454  072C                     l1715:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1457  072C  3001               	movlw	1
  1458  072D  00C8               	movwf	??_sprintf
  1459  072E  0848               	movf	??_sprintf,w
  1460  072F  07D0               	addwf	sprintf@prec,f
  1461  0730                     l1717:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1464  0730  01D1               	clrf	sprintf@c
  1465  0731  0AD1               	incf	sprintf@c,f
  1466  0732                     l1721:
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1469  0732  0851               	movf	sprintf@c,w
  1470  0733  00C8               	movwf	??_sprintf
  1471  0734  0748               	addwf	??_sprintf,w
  1472  0735  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1473  0736  0084               	movwf	4
  1474  0737  120A  118A  200D  120A  118A  	fcall	stringdir
  1475  073C  00C9               	movwf	??_sprintf+1
  1476  073D  120A  118A  200D  120A  118A  	fcall	stringdir
  1477  0742  00CA               	movwf	??_sprintf+2
  1478  0743  084A               	movf	??_sprintf+2,w
  1479  0744  024F               	subwf	sprintf@val+1,w
  1480  0745  1D03               	skipz
  1481  0746  2F49               	goto	u1285
  1482  0747  0849               	movf	??_sprintf+1,w
  1483  0748  024E               	subwf	sprintf@val,w
  1484  0749                     u1285:
  1485  0749  1803               	skipnc
  1486  074A  2F4C               	goto	u1281
  1487  074B  2F4D               	goto	u1280
  1488  074C                     u1281:
  1489  074C  2F4E               	goto	l1725
  1490  074D                     u1280:
  1491  074D  2F58               	goto	l1727
  1492  074E                     l1725:
  1493  074E  3001               	movlw	1
  1494  074F  00C8               	movwf	??_sprintf
  1495  0750  0848               	movf	??_sprintf,w
  1496  0751  07D1               	addwf	sprintf@c,f
  1497  0752  3005               	movlw	5
  1498  0753  0651               	xorwf	sprintf@c,w
  1499  0754  1D03               	btfss	3,2
  1500  0755  2F57               	goto	u1291
  1501  0756  2F58               	goto	u1290
  1502  0757                     u1291:
  1503  0757  2F32               	goto	l1721
  1504  0758                     u1290:
  1505  0758                     l1727:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1508  0758  0850               	movf	sprintf@prec,w
  1509  0759  00C8               	movwf	??_sprintf
  1510  075A  01C9               	clrf	??_sprintf+1
  1511  075B  1BC8               	btfsc	??_sprintf,7
  1512  075C  03C9               	decf	??_sprintf+1,f
  1513  075D  0849               	movf	??_sprintf+1,w
  1514  075E  3A80               	xorlw	128
  1515  075F  3C80               	sublw	128
  1516  0760  1D03               	skipz
  1517  0761  2F64               	goto	u1305
  1518  0762  0848               	movf	??_sprintf,w
  1519  0763  0251               	subwf	sprintf@c,w
  1520  0764                     u1305:
  1521  0764  1803               	skipnc
  1522  0765  2F67               	goto	u1301
  1523  0766  2F68               	goto	u1300
  1524  0767                     u1301:
  1525  0767  2F69               	goto	l1731
  1526  0768                     u1300:
  1527  0768                     l1729:
  1528  0768  2F83               	goto	l1735
  1529  0769                     l1731:
  1530  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1531  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1532  076B  0850               	movf	sprintf@prec,w
  1533  076C  00C8               	movwf	??_sprintf
  1534  076D  01C9               	clrf	??_sprintf+1
  1535  076E  1BC8               	btfsc	??_sprintf,7
  1536  076F  03C9               	decf	??_sprintf+1,f
  1537  0770  0849               	movf	??_sprintf+1,w
  1538  0771  3A80               	xorlw	128
  1539  0772  00CA               	movwf	??_sprintf+2
  1540  0773  3080               	movlw	128
  1541  0774  024A               	subwf	??_sprintf+2,w
  1542  0775  1D03               	skipz
  1543  0776  2F79               	goto	u1315
  1544  0777  0851               	movf	sprintf@c,w
  1545  0778  0248               	subwf	??_sprintf,w
  1546  0779                     u1315:
  1547  0779  1803               	skipnc
  1548  077A  2F7C               	goto	u1311
  1549  077B  2F7D               	goto	u1310
  1550  077C                     u1311:
  1551  077C  2F83               	goto	l1735
  1552  077D                     u1310:
  1553  077D                     l1733:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1556  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1557  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1558  077F  0851               	movf	sprintf@c,w
  1559  0780  00C8               	movwf	??_sprintf
  1560  0781  0848               	movf	??_sprintf,w
  1561  0782  00D0               	movwf	sprintf@prec
  1562  0783                     l1735:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1565  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0785  084C               	movf	sprintf@flag,w
  1568  0786  3903               	andlw	3
  1569  0787  1903               	btfsc	3,2
  1570  0788  2F8A               	goto	u1321
  1571  0789  2F8B               	goto	u1320
  1572  078A                     u1321:
  1573  078A  2FCD               	goto	l1747
  1574  078B                     u1320:
  1575  078B                     l1737:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1578  078B  302D               	movlw	45
  1579  078C  00C8               	movwf	??_sprintf
  1580  078D  084D               	movf	sprintf@sp,w
  1581  078E  0084               	movwf	4
  1582  078F  0848               	movf	??_sprintf,w
  1583  0790  1383               	bcf	3,7	;select IRP bank0
  1584  0791  0080               	movwf	0
  1585  0792                     l1739:
  1586  0792  3001               	movlw	1
  1587  0793  00C8               	movwf	??_sprintf
  1588  0794  0848               	movf	??_sprintf,w
  1589  0795  07CD               	addwf	sprintf@sp,f
  1590  0796  2FCD               	goto	l1747
  1591  0797                     l1741:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1594  0797  300A               	movlw	10
  1595  0798  00F8               	movwf	___lwmod@divisor
  1596  0799  3000               	movlw	0
  1597  079A  00F9               	movwf	___lwmod@divisor+1
  1598  079B  0850               	movf	sprintf@prec,w
  1599  079C  00C8               	movwf	??_sprintf
  1600  079D  0748               	addwf	??_sprintf,w
  1601  079E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1602  079F  0084               	movwf	4
  1603  07A0  120A  118A  200D  120A  118A  	fcall	stringdir
  1604  07A5  00F0               	movwf	___lwdiv@divisor
  1605  07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1606  07AB  00F1               	movwf	___lwdiv@divisor+1
  1607  07AC  084F               	movf	sprintf@val+1,w
  1608  07AD  00F3               	movwf	___lwdiv@dividend+1
  1609  07AE  084E               	movf	sprintf@val,w
  1610  07AF  00F2               	movwf	___lwdiv@dividend
  1611  07B0  120A  118A  23C2  120A  118A  	fcall	___lwdiv
  1612  07B5  0871               	movf	?___lwdiv+1,w
  1613  07B6  00FB               	movwf	___lwmod@dividend+1
  1614  07B7  0870               	movf	?___lwdiv,w
  1615  07B8  00FA               	movwf	___lwmod@dividend
  1616  07B9  120A  118A  2346  120A  118A  	fcall	___lwmod
  1617  07BE  0878               	movf	?___lwmod,w
  1618  07BF  3E30               	addlw	48
  1619  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1620  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1621  07C2  00C9               	movwf	??_sprintf+1
  1622  07C3  0849               	movf	??_sprintf+1,w
  1623  07C4  00D1               	movwf	sprintf@c
  1624  07C5                     l1743:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1627  07C5  0851               	movf	sprintf@c,w
  1628  07C6  00C8               	movwf	??_sprintf
  1629  07C7  084D               	movf	sprintf@sp,w
  1630  07C8  0084               	movwf	4
  1631  07C9  0848               	movf	??_sprintf,w
  1632  07CA  1383               	bcf	3,7	;select IRP bank0
  1633  07CB  0080               	movwf	0
  1634  07CC  2F92               	goto	l1739
  1635  07CD                     l1747:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1638  07CD  30FF               	movlw	255
  1639  07CE  00C8               	movwf	??_sprintf
  1640  07CF  0848               	movf	??_sprintf,w
  1641  07D0  07D0               	addwf	sprintf@prec,f
  1642  07D1  0A50               	incf	sprintf@prec,w
  1643  07D2  1D03               	btfss	3,2
  1644  07D3  2FD5               	goto	u1331
  1645  07D4  2FD6               	goto	u1330
  1646  07D5                     u1331:
  1647  07D5  2F97               	goto	l1741
  1648  07D6                     u1330:
  1649  07D6                     l1749:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1652  07D6  3001               	movlw	1
  1653  07D7  07C1               	addwf	sprintf@f,f
  1654  07D8  30FF               	movlw	-1
  1655  07D9  0741               	addwf	sprintf@f,w
  1656  07DA  0084               	movwf	4
  1657  07DB  120A  118A  200D  120A  118A  	fcall	stringdir
  1658  07E0  00C8               	movwf	??_sprintf
  1659  07E1  0848               	movf	??_sprintf,w
  1660  07E2  00D1               	movwf	sprintf@c
  1661  07E3  0851               	movf	sprintf@c,w
  1662  07E4  1D03               	btfss	3,2
  1663  07E5  2FE7               	goto	u1341
  1664  07E6  2FE8               	goto	u1340
  1665  07E7                     u1341:
  1666  07E7  2E92               	goto	l1673
  1667  07E8                     u1340:
  1668  07E8                     l1751:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1671  07E8  084D               	movf	sprintf@sp,w
  1672  07E9  0084               	movwf	4
  1673  07EA  1383               	bcf	3,7	;select IRP bank0
  1674  07EB  0180               	clrf	0
  1675  07EC                     l324:
  1676  07EC  0008               	return
  1677  07ED                     __end_of_sprintf:
  1678                           
  1679                           	psect	text2
  1680  01D4                     __ptext2:	
  1681 ;; *************** function _isdigit *****************
  1682 ;; Defined at:
  1683 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  c               1    wreg     unsigned char 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  c               1    1[COMMON] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;		None               void
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         2       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0
  1700 ;;      Totals:         2       0       0       0       0
  1701 ;;Total ram usage:        2 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_sprintf
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _isdigit
  1712  01D4                     _isdigit:
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1716                           ;isdigit@c stored from wreg
  1717  01D4  00F1               	movwf	isdigit@c
  1718  01D5                     l1391:
  1719  01D5  01F0               	clrf	_isdigit$955
  1720  01D6                     l1393:
  1721  01D6  303A               	movlw	58
  1722  01D7  0271               	subwf	isdigit@c,w
  1723  01D8  1803               	skipnc
  1724  01D9  29DB               	goto	u721
  1725  01DA  29DC               	goto	u720
  1726  01DB                     u721:
  1727  01DB  29E4               	goto	l1399
  1728  01DC                     u720:
  1729  01DC                     l1395:
  1730  01DC  3030               	movlw	48
  1731  01DD  0271               	subwf	isdigit@c,w
  1732  01DE  1C03               	skipc
  1733  01DF  29E1               	goto	u731
  1734  01E0  29E2               	goto	u730
  1735  01E1                     u731:
  1736  01E1  29E4               	goto	l1399
  1737  01E2                     u730:
  1738  01E2                     l1397:
  1739  01E2  01F0               	clrf	_isdigit$955
  1740  01E3  0AF0               	incf	_isdigit$955,f
  1741  01E4                     l1399:
  1742  01E4  0C70               	rrf	_isdigit$955,w
  1743  01E5                     l781:
  1744  01E5  0008               	return
  1745  01E6                     __end_of_isdigit:
  1746                           
  1747                           	psect	text3
  1748  0346                     __ptext3:	
  1749 ;; *************** function ___lwmod *****************
  1750 ;; Defined at:
  1751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  divisor         2    8[COMMON] unsigned int 
  1754 ;;  dividend        2   10[COMMON] unsigned int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  counter         1   13[COMMON] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    8[COMMON] unsigned int 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         4       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0
  1768 ;;      Temps:          1       0       0       0       0
  1769 ;;      Totals:         6       0       0       0       0
  1770 ;;Total ram usage:        6 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_sprintf
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function ___lwmod
  1781  0346                     ___lwmod:
  1782  0346                     l1501:	
  1783                           ;incstack = 0
  1784                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1785                           
  1786  0346  0878               	movf	___lwmod@divisor,w
  1787  0347  0479               	iorwf	___lwmod@divisor+1,w
  1788  0348  1903               	btfsc	3,2
  1789  0349  2B4B               	goto	u971
  1790  034A  2B4C               	goto	u970
  1791  034B                     u971:
  1792  034B  2B7B               	goto	l1519
  1793  034C                     u970:
  1794  034C                     l1503:
  1795  034C  01FD               	clrf	___lwmod@counter
  1796  034D  0AFD               	incf	___lwmod@counter,f
  1797  034E  2B5A               	goto	l1509
  1798  034F                     l1505:
  1799  034F  3001               	movlw	1
  1800  0350                     u985:
  1801  0350  1003               	clrc
  1802  0351  0DF8               	rlf	___lwmod@divisor,f
  1803  0352  0DF9               	rlf	___lwmod@divisor+1,f
  1804  0353  3EFF               	addlw	-1
  1805  0354  1D03               	skipz
  1806  0355  2B50               	goto	u985
  1807  0356                     l1507:
  1808  0356  3001               	movlw	1
  1809  0357  00FC               	movwf	??___lwmod
  1810  0358  087C               	movf	??___lwmod,w
  1811  0359  07FD               	addwf	___lwmod@counter,f
  1812  035A                     l1509:
  1813  035A  1FF9               	btfss	___lwmod@divisor+1,7
  1814  035B  2B5D               	goto	u991
  1815  035C  2B5E               	goto	u990
  1816  035D                     u991:
  1817  035D  2B4F               	goto	l1505
  1818  035E                     u990:
  1819  035E                     l1511:
  1820  035E  0879               	movf	___lwmod@divisor+1,w
  1821  035F  027B               	subwf	___lwmod@dividend+1,w
  1822  0360  1D03               	skipz
  1823  0361  2B64               	goto	u1005
  1824  0362  0878               	movf	___lwmod@divisor,w
  1825  0363  027A               	subwf	___lwmod@dividend,w
  1826  0364                     u1005:
  1827  0364  1C03               	skipc
  1828  0365  2B67               	goto	u1001
  1829  0366  2B68               	goto	u1000
  1830  0367                     u1001:
  1831  0367  2B6E               	goto	l1515
  1832  0368                     u1000:
  1833  0368                     l1513:
  1834  0368  0878               	movf	___lwmod@divisor,w
  1835  0369  02FA               	subwf	___lwmod@dividend,f
  1836  036A  0879               	movf	___lwmod@divisor+1,w
  1837  036B  1C03               	skipc
  1838  036C  03FB               	decf	___lwmod@dividend+1,f
  1839  036D  02FB               	subwf	___lwmod@dividend+1,f
  1840  036E                     l1515:
  1841  036E  3001               	movlw	1
  1842  036F                     u1015:
  1843  036F  1003               	clrc
  1844  0370  0CF9               	rrf	___lwmod@divisor+1,f
  1845  0371  0CF8               	rrf	___lwmod@divisor,f
  1846  0372  3EFF               	addlw	-1
  1847  0373  1D03               	skipz
  1848  0374  2B6F               	goto	u1015
  1849  0375                     l1517:
  1850  0375  3001               	movlw	1
  1851  0376  02FD               	subwf	___lwmod@counter,f
  1852  0377  1D03               	btfss	3,2
  1853  0378  2B7A               	goto	u1021
  1854  0379  2B7B               	goto	u1020
  1855  037A                     u1021:
  1856  037A  2B5E               	goto	l1511
  1857  037B                     u1020:
  1858  037B                     l1519:
  1859  037B  087B               	movf	___lwmod@dividend+1,w
  1860  037C  00F9               	movwf	?___lwmod+1
  1861  037D  087A               	movf	___lwmod@dividend,w
  1862  037E  00F8               	movwf	?___lwmod
  1863  037F                     l610:
  1864  037F  0008               	return
  1865  0380                     __end_of___lwmod:
  1866                           
  1867                           	psect	text4
  1868  03C2                     __ptext4:	
  1869 ;; *************** function ___lwdiv *****************
  1870 ;; Defined at:
  1871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  divisor         2    0[COMMON] unsigned int 
  1874 ;;  dividend        2    2[COMMON] unsigned int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  quotient        2    5[COMMON] unsigned int 
  1877 ;;  counter         1    7[COMMON] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2    0[COMMON] unsigned int 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         4       0       0       0       0
  1888 ;;      Locals:         3       0       0       0       0
  1889 ;;      Temps:          1       0       0       0       0
  1890 ;;      Totals:         8       0       0       0       0
  1891 ;;Total ram usage:        8 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_sprintf
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function ___lwdiv
  1902  03C2                     ___lwdiv:
  1903  03C2                     l1475:	
  1904                           ;incstack = 0
  1905                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1906                           
  1907  03C2  01F5               	clrf	___lwdiv@quotient
  1908  03C3  01F6               	clrf	___lwdiv@quotient+1
  1909  03C4                     l1477:
  1910  03C4  0870               	movf	___lwdiv@divisor,w
  1911  03C5  0471               	iorwf	___lwdiv@divisor+1,w
  1912  03C6  1903               	btfsc	3,2
  1913  03C7  2BC9               	goto	u901
  1914  03C8  2BCA               	goto	u900
  1915  03C9                     u901:
  1916  03C9  2C01               	goto	l1497
  1917  03CA                     u900:
  1918  03CA                     l1479:
  1919  03CA  01F7               	clrf	___lwdiv@counter
  1920  03CB  0AF7               	incf	___lwdiv@counter,f
  1921  03CC  2BD8               	goto	l1485
  1922  03CD                     l1481:
  1923  03CD  3001               	movlw	1
  1924  03CE                     u915:
  1925  03CE  1003               	clrc
  1926  03CF  0DF0               	rlf	___lwdiv@divisor,f
  1927  03D0  0DF1               	rlf	___lwdiv@divisor+1,f
  1928  03D1  3EFF               	addlw	-1
  1929  03D2  1D03               	skipz
  1930  03D3  2BCE               	goto	u915
  1931  03D4                     l1483:
  1932  03D4  3001               	movlw	1
  1933  03D5  00F4               	movwf	??___lwdiv
  1934  03D6  0874               	movf	??___lwdiv,w
  1935  03D7  07F7               	addwf	___lwdiv@counter,f
  1936  03D8                     l1485:
  1937  03D8  1FF1               	btfss	___lwdiv@divisor+1,7
  1938  03D9  2BDB               	goto	u921
  1939  03DA  2BDC               	goto	u920
  1940  03DB                     u921:
  1941  03DB  2BCD               	goto	l1481
  1942  03DC                     u920:
  1943  03DC                     l1487:
  1944  03DC  3001               	movlw	1
  1945  03DD                     u935:
  1946  03DD  1003               	clrc
  1947  03DE  0DF5               	rlf	___lwdiv@quotient,f
  1948  03DF  0DF6               	rlf	___lwdiv@quotient+1,f
  1949  03E0  3EFF               	addlw	-1
  1950  03E1  1D03               	skipz
  1951  03E2  2BDD               	goto	u935
  1952  03E3  0871               	movf	___lwdiv@divisor+1,w
  1953  03E4  0273               	subwf	___lwdiv@dividend+1,w
  1954  03E5  1D03               	skipz
  1955  03E6  2BE9               	goto	u945
  1956  03E7  0870               	movf	___lwdiv@divisor,w
  1957  03E8  0272               	subwf	___lwdiv@dividend,w
  1958  03E9                     u945:
  1959  03E9  1C03               	skipc
  1960  03EA  2BEC               	goto	u941
  1961  03EB  2BED               	goto	u940
  1962  03EC                     u941:
  1963  03EC  2BF4               	goto	l1493
  1964  03ED                     u940:
  1965  03ED                     l1489:
  1966  03ED  0870               	movf	___lwdiv@divisor,w
  1967  03EE  02F2               	subwf	___lwdiv@dividend,f
  1968  03EF  0871               	movf	___lwdiv@divisor+1,w
  1969  03F0  1C03               	skipc
  1970  03F1  03F3               	decf	___lwdiv@dividend+1,f
  1971  03F2  02F3               	subwf	___lwdiv@dividend+1,f
  1972  03F3                     l1491:
  1973  03F3  1475               	bsf	___lwdiv@quotient,0
  1974  03F4                     l1493:
  1975  03F4  3001               	movlw	1
  1976  03F5                     u955:
  1977  03F5  1003               	clrc
  1978  03F6  0CF1               	rrf	___lwdiv@divisor+1,f
  1979  03F7  0CF0               	rrf	___lwdiv@divisor,f
  1980  03F8  3EFF               	addlw	-1
  1981  03F9  1D03               	skipz
  1982  03FA  2BF5               	goto	u955
  1983  03FB                     l1495:
  1984  03FB  3001               	movlw	1
  1985  03FC  02F7               	subwf	___lwdiv@counter,f
  1986  03FD  1D03               	btfss	3,2
  1987  03FE  2C00               	goto	u961
  1988  03FF  2C01               	goto	u960
  1989  0400                     u961:
  1990  0400  2BDC               	goto	l1487
  1991  0401                     u960:
  1992  0401                     l1497:
  1993  0401  0876               	movf	___lwdiv@quotient+1,w
  1994  0402  00F1               	movwf	?___lwdiv+1
  1995  0403  0875               	movf	___lwdiv@quotient,w
  1996  0404  00F0               	movwf	?___lwdiv
  1997  0405                     l600:
  1998  0405  0008               	return
  1999  0406                     __end_of___lwdiv:
  2000                           
  2001                           	psect	text5
  2002  01E6                     __ptext5:	
  2003 ;; *************** function ___bmul *****************
  2004 ;; Defined at:
  2005 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  multiplier      1    wreg     unsigned char 
  2008 ;;  multiplicand    1    0[COMMON] unsigned char 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  multiplier      1    3[COMMON] unsigned char 
  2011 ;;  product         1    2[COMMON] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      unsigned char 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         1       0       0       0       0
  2022 ;;      Locals:         2       0       0       0       0
  2023 ;;      Temps:          1       0       0       0       0
  2024 ;;      Totals:         4       0       0       0       0
  2025 ;;Total ram usage:        4 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_sprintf
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function ___bmul
  2036  01E6                     ___bmul:
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2040                           ;___bmul@multiplier stored from wreg
  2041  01E6  00F3               	movwf	___bmul@multiplier
  2042  01E7                     l1417:
  2043  01E7  01F2               	clrf	___bmul@product
  2044  01E8                     l1419:
  2045  01E8  1C73               	btfss	___bmul@multiplier,0
  2046  01E9  29EB               	goto	u781
  2047  01EA  29EC               	goto	u780
  2048  01EB                     u781:
  2049  01EB  29F0               	goto	l1423
  2050  01EC                     u780:
  2051  01EC                     l1421:
  2052  01EC  0870               	movf	___bmul@multiplicand,w
  2053  01ED  00F1               	movwf	??___bmul
  2054  01EE  0871               	movf	??___bmul,w
  2055  01EF  07F2               	addwf	___bmul@product,f
  2056  01F0                     l1423:
  2057  01F0  1003               	clrc
  2058  01F1  0DF0               	rlf	___bmul@multiplicand,f
  2059  01F2                     l1425:
  2060  01F2  1003               	clrc
  2061  01F3  0CF3               	rrf	___bmul@multiplier,f
  2062  01F4  0873               	movf	___bmul@multiplier,w
  2063  01F5  1D03               	btfss	3,2
  2064  01F6  29F8               	goto	u791
  2065  01F7  29F9               	goto	u790
  2066  01F8                     u791:
  2067  01F8  29E8               	goto	l1419
  2068  01F9                     u790:
  2069  01F9                     l1427:
  2070  01F9  0872               	movf	___bmul@product,w
  2071  01FA                     l354:
  2072  01FA  0008               	return
  2073  01FB                     __end_of___bmul:
  2074                           
  2075                           	psect	text6
  2076  02A8                     __ptext6:	
  2077 ;; *************** function _setup *****************
  2078 ;; Defined at:
  2079 ;;		line 134 in file "main.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, pclath, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		_spiInit
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _setup
  2109  02A8                     _setup:
  2110  02A8                     l1567:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2113                           
  2114                           
  2115                           ;main.c: 135:     ANSEL = 0;
  2116  02A8  1683               	bsf	3,5	;RP0=1, select bank3
  2117  02A9  1703               	bsf	3,6	;RP1=1, select bank3
  2118  02AA  0188               	clrf	8	;volatile
  2119                           
  2120                           ;main.c: 136:     ANSELH = 0;
  2121  02AB  0189               	clrf	9	;volatile
  2122                           
  2123                           ;main.c: 137:     TRISB = 0;
  2124  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2125  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2126  02AE  0186               	clrf	6	;volatile
  2127                           
  2128                           ;main.c: 138:     TRISE = 0;
  2129  02AF  0189               	clrf	9	;volatile
  2130                           
  2131                           ;main.c: 139:     TRISD = 0;
  2132  02B0  0188               	clrf	8	;volatile
  2133                           
  2134                           ;main.c: 141:     PORTC = 0;
  2135  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2136  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2137  02B3  0187               	clrf	7	;volatile
  2138                           
  2139                           ;main.c: 142:     PORTE = 0;
  2140  02B4  0189               	clrf	9	;volatile
  2141                           
  2142                           ;main.c: 143:     PORTD = 0;
  2143  02B5  0188               	clrf	8	;volatile
  2144                           
  2145                           ;main.c: 144:     PORTB = 0;
  2146  02B6  0186               	clrf	6	;volatile
  2147  02B7                     l1569:
  2148                           
  2149                           ;main.c: 146:     TRISC0 = 0;
  2150  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2151  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2152  02B9  1007               	bcf	7,0	;volatile
  2153  02BA                     l1571:
  2154                           
  2155                           ;main.c: 147:     TRISC1 = 0;
  2156  02BA  1087               	bcf	7,1	;volatile
  2157  02BB                     l1573:
  2158                           
  2159                           ;main.c: 148:     TRISC2 = 0;
  2160  02BB  1107               	bcf	7,2	;volatile
  2161  02BC                     l1575:
  2162                           
  2163                           ;main.c: 149:     PORTCbits.RC0 = 1;
  2164  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2165  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2166  02BE  1407               	bsf	7,0	;volatile
  2167  02BF                     l1577:
  2168                           
  2169                           ;main.c: 150:     PORTCbits.RC1 = 1;
  2170  02BF  1487               	bsf	7,1	;volatile
  2171  02C0                     l1579:
  2172                           
  2173                           ;main.c: 151:     PORTCbits.RC2 = 1;
  2174  02C0  1507               	bsf	7,2	;volatile
  2175  02C1                     l1581:
  2176                           
  2177                           ;main.c: 154:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  2178  02C1  01F0               	clrf	spiInit@sDataSample
  2179  02C2  01F1               	clrf	spiInit@sClockIdle
  2180  02C3  01F2               	clrf	spiInit@sTransmitEdge
  2181  02C4  3020               	movlw	32
  2182  02C5  120A  118A  2211  120A  118A  	fcall	_spiInit
  2183  02CA                     l1583:
  2184                           
  2185                           ;main.c: 157:     INTCONbits.PEIE = 1;
  2186  02CA  170B               	bsf	11,6	;volatile
  2187  02CB                     l1585:
  2188                           
  2189                           ;main.c: 158:     PIE1bits.RCIE = 1;
  2190  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2191  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2192  02CD  168C               	bsf	12,5	;volatile
  2193  02CE                     l1587:
  2194                           
  2195                           ;main.c: 159:     INTCONbits.GIE = 1;
  2196  02CE  178B               	bsf	11,7	;volatile
  2197  02CF                     l1589:
  2198                           
  2199                           ;main.c: 162:     SPBRGH = 0;
  2200  02CF  019A               	clrf	26	;volatile
  2201  02D0                     l1591:
  2202                           
  2203                           ;main.c: 163:     SPBRG = 12;
  2204  02D0  300C               	movlw	12
  2205  02D1  0099               	movwf	25	;volatile
  2206  02D2                     l1593:
  2207                           
  2208                           ;main.c: 165:     TXSTAbits.TXEN = 1;
  2209  02D2  1698               	bsf	24,5	;volatile
  2210  02D3                     l1595:
  2211                           
  2212                           ;main.c: 166:     TXSTAbits.SYNC = 0;
  2213  02D3  1218               	bcf	24,4	;volatile
  2214  02D4                     l1597:
  2215                           
  2216                           ;main.c: 168:     RCSTAbits.SPEN = 1;
  2217  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2218  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2219  02D6  1798               	bsf	24,7	;volatile
  2220  02D7                     l1599:
  2221                           
  2222                           ;main.c: 169:     RCSTAbits.CREN = 1;
  2223  02D7  1618               	bsf	24,4	;volatile
  2224  02D8                     l1601:
  2225                           
  2226                           ;main.c: 170:     RCREG = 0;
  2227  02D8  019A               	clrf	26	;volatile
  2228  02D9                     l99:
  2229  02D9  0008               	return
  2230  02DA                     __end_of_setup:
  2231                           
  2232                           	psect	text7
  2233  0211                     __ptext7:	
  2234 ;; *************** function _spiInit *****************
  2235 ;; Defined at:
  2236 ;;		line 14 in file "SPI.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  sType           1    wreg     enum E1264
  2239 ;;  sDataSample     1    0[COMMON] enum E1272
  2240 ;;  sClockIdle      1    1[COMMON] enum E1276
  2241 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  sType           1    3[COMMON] enum E1264
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         3       0       0       0       0
  2254 ;;      Locals:         1       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         4       0       0       0       0
  2257 ;;Total ram usage:        4 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_setup
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _spiInit
  2268  0211                     _spiInit:
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2272                           ;spiInit@sType stored from wreg
  2273  0211  00F3               	movwf	spiInit@sType
  2274  0212                     l1353:
  2275                           
  2276                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  2277  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2279  0214  1287               	bcf	7,5	;volatile
  2280                           
  2281                           ;SPI.c: 17:     if(sType & 0b00000100)
  2282  0215  1D73               	btfss	spiInit@sType,2
  2283  0216  2A18               	goto	u711
  2284  0217  2A19               	goto	u710
  2285  0218                     u711:
  2286  0218  2A1D               	goto	l1359
  2287  0219                     u710:
  2288  0219                     l1355:
  2289                           
  2290                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  2291  0219  0872               	movf	spiInit@sTransmitEdge,w
  2292  021A  0094               	movwf	20	;volatile
  2293  021B                     l1357:
  2294                           
  2295                           ;SPI.c: 20:         TRISC3 = 1;
  2296  021B  1587               	bsf	7,3	;volatile
  2297                           
  2298                           ;SPI.c: 21:     }
  2299  021C  2A21               	goto	l124
  2300  021D                     l1359:
  2301                           
  2302                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  2303  021D  0870               	movf	spiInit@sDataSample,w
  2304  021E  0472               	iorwf	spiInit@sTransmitEdge,w
  2305  021F  0094               	movwf	20	;volatile
  2306  0220                     l1361:
  2307                           
  2308                           ;SPI.c: 25:         TRISC3 = 0;
  2309  0220  1187               	bcf	7,3	;volatile
  2310  0221                     l124:	
  2311                           ;SPI.c: 26:     }
  2312                           
  2313                           
  2314                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  2315  0221  0873               	movf	spiInit@sType,w
  2316  0222  0471               	iorwf	spiInit@sClockIdle,w
  2317  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0225  0094               	movwf	20	;volatile
  2320  0226                     l125:
  2321  0226  0008               	return
  2322  0227                     __end_of_spiInit:
  2323                           
  2324                           	psect	text8
  2325  0241                     __ptext8:	
  2326 ;; *************** function _USART_STRING *****************
  2327 ;; Defined at:
  2328 ;;		line 17 in file "USART.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  a               1    wreg     PTR unsigned char 
  2331 ;;		 -> data(20), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  a               1    2[COMMON] PTR unsigned char 
  2334 ;;		 -> data(20), 
  2335 ;;  i               1    3[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         2       0       0       0       0
  2347 ;;      Temps:          1       0       0       0       0
  2348 ;;      Totals:         3       0       0       0       0
  2349 ;;Total ram usage:        3 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    1
  2352 ;; This function calls:
  2353 ;;		_USART_ESCRITURA
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _USART_STRING
  2361  0241                     _USART_STRING:
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2365                           ;USART_STRING@a stored from wreg
  2366  0241  00F2               	movwf	USART_STRING@a
  2367  0242                     l1761:
  2368                           
  2369                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  2370  0242  01F3               	clrf	USART_STRING@i
  2371  0243  2A53               	goto	l1767
  2372  0244                     l1763:
  2373                           
  2374                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  2375  0244  0873               	movf	USART_STRING@i,w
  2376  0245  0772               	addwf	USART_STRING@a,w
  2377  0246  00F1               	movwf	??_USART_STRING
  2378  0247  0871               	movf	??_USART_STRING,w
  2379  0248  0084               	movwf	4
  2380  0249  0800               	movf	0,w
  2381  024A  120A  118A  21BB  120A  118A  	fcall	_USART_ESCRITURA
  2382  024F                     l1765:
  2383                           
  2384                           ;USART.c: 21:     }
  2385  024F  3001               	movlw	1
  2386  0250  00F1               	movwf	??_USART_STRING
  2387  0251  0871               	movf	??_USART_STRING,w
  2388  0252  07F3               	addwf	USART_STRING@i,f
  2389  0253                     l1767:
  2390  0253  0873               	movf	USART_STRING@i,w
  2391  0254  0772               	addwf	USART_STRING@a,w
  2392  0255  00F1               	movwf	??_USART_STRING
  2393  0256  0871               	movf	??_USART_STRING,w
  2394  0257  0084               	movwf	4
  2395  0258  1383               	bcf	3,7	;select IRP bank0
  2396  0259  0800               	movf	0,w
  2397  025A  1D03               	btfss	3,2
  2398  025B  2A5D               	goto	u1351
  2399  025C  2A5E               	goto	u1350
  2400  025D                     u1351:
  2401  025D  2A44               	goto	l1763
  2402  025E                     u1350:
  2403  025E                     l168:
  2404  025E  0008               	return
  2405  025F                     __end_of_USART_STRING:
  2406                           
  2407                           	psect	text9
  2408  01BB                     __ptext9:	
  2409 ;; *************** function _USART_ESCRITURA *****************
  2410 ;; Defined at:
  2411 ;;		line 13 in file "USART.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  a               1    wreg     unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  a               1    0[COMMON] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;;		_USART_STRING
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _USART_ESCRITURA
  2441  01BB                     _USART_ESCRITURA:
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _USART_ESCRITURA: [wreg]
  2445                           ;USART_ESCRITURA@a stored from wreg
  2446  01BB  00F0               	movwf	USART_ESCRITURA@a
  2447  01BC                     l1349:
  2448  01BC                     l159:	
  2449                           ;USART.c: 14:     while(!TRMT);
  2450                           
  2451  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2452  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  2453  01BE  1C98               	btfss	24,1	;volatile
  2454  01BF  29C1               	goto	u701
  2455  01C0  29C2               	goto	u700
  2456  01C1                     u701:
  2457  01C1  29BC               	goto	l159
  2458  01C2                     u700:
  2459  01C2                     l1351:
  2460                           
  2461                           ;USART.c: 15:     TXREG = a;
  2462  01C2  0870               	movf	USART_ESCRITURA@a,w
  2463  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2464  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2465  01C5  0099               	movwf	25	;volatile
  2466  01C6                     l162:
  2467  01C6  0008               	return
  2468  01C7                     __end_of_USART_ESCRITURA:
  2469                           
  2470                           	psect	text10
  2471  0380                     __ptext10:	
  2472 ;; *************** function _Lcd_Write_String *****************
  2473 ;; Defined at:
  2474 ;;		line 94 in file "LCD.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  a               2    3[COMMON] PTR unsigned char 
  2477 ;;		 -> data(20), STR_3(4), STR_2(4), STR_1(4), 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  i               2    8[COMMON] int 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         2       0       0       0       0
  2490 ;;      Locals:         2       0       0       0       0
  2491 ;;      Temps:          3       0       0       0       0
  2492 ;;      Totals:         7       0       0       0       0
  2493 ;;Total ram usage:        7 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    2
  2496 ;; This function calls:
  2497 ;;		_Lcd_Write_Char
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function _Lcd_Write_String
  2505  0380                     _Lcd_Write_String:
  2506  0380                     l1627:	
  2507                           ;incstack = 0
  2508                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2509                           
  2510                           
  2511                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  2512  0380  01F8               	clrf	Lcd_Write_String@i
  2513  0381  01F9               	clrf	Lcd_Write_String@i+1
  2514  0382  2BA5               	goto	l1633
  2515  0383                     l1629:
  2516                           
  2517                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  2518  0383  0878               	movf	Lcd_Write_String@i,w
  2519  0384  0773               	addwf	Lcd_Write_String@a,w
  2520  0385  00F6               	movwf	??_Lcd_Write_String+1
  2521  0386  0874               	movf	Lcd_Write_String@a+1,w
  2522  0387  00F5               	movwf	??_Lcd_Write_String
  2523  0388  1803               	skipnc
  2524  0389  0AF5               	incf	??_Lcd_Write_String,f
  2525  038A  1FF8               	btfss	Lcd_Write_String@i,7
  2526  038B  2B8D               	goto	u1190
  2527  038C  03F5               	decf	??_Lcd_Write_String,f
  2528  038D                     u1190:
  2529  038D  0875               	movf	??_Lcd_Write_String,w
  2530  038E  00F7               	movwf	??_Lcd_Write_String+2
  2531  038F  0877               	movf	??_Lcd_Write_String+2,w
  2532  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0392  00FF               	movwf	btemp+1
  2535  0393  0876               	movf	??_Lcd_Write_String+1,w
  2536  0394  0084               	movwf	4
  2537  0395  120A  118A  2003  120A  118A  	fcall	stringtab
  2538  039A  120A  118A  21FB  120A  118A  	fcall	_Lcd_Write_Char
  2539  039F                     l1631:
  2540  039F  3001               	movlw	1
  2541  03A0  07F8               	addwf	Lcd_Write_String@i,f
  2542  03A1  1803               	skipnc
  2543  03A2  0AF9               	incf	Lcd_Write_String@i+1,f
  2544  03A3  3000               	movlw	0
  2545  03A4  07F9               	addwf	Lcd_Write_String@i+1,f
  2546  03A5                     l1633:
  2547  03A5  0878               	movf	Lcd_Write_String@i,w
  2548  03A6  0773               	addwf	Lcd_Write_String@a,w
  2549  03A7  00F6               	movwf	??_Lcd_Write_String+1
  2550  03A8  0874               	movf	Lcd_Write_String@a+1,w
  2551  03A9  00F5               	movwf	??_Lcd_Write_String
  2552  03AA  1803               	skipnc
  2553  03AB  0AF5               	incf	??_Lcd_Write_String,f
  2554  03AC  1FF8               	btfss	Lcd_Write_String@i,7
  2555  03AD  2BAF               	goto	u1200
  2556  03AE  03F5               	decf	??_Lcd_Write_String,f
  2557  03AF                     u1200:
  2558  03AF  0875               	movf	??_Lcd_Write_String,w
  2559  03B0  00F7               	movwf	??_Lcd_Write_String+2
  2560  03B1  0877               	movf	??_Lcd_Write_String+2,w
  2561  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2562  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2563  03B4  00FF               	movwf	btemp+1
  2564  03B5  0876               	movf	??_Lcd_Write_String+1,w
  2565  03B6  0084               	movwf	4
  2566  03B7  120A  118A  2003  120A  118A  	fcall	stringtab
  2567  03BC  3A00               	xorlw	0
  2568  03BD  1D03               	skipz
  2569  03BE  2BC0               	goto	u1211
  2570  03BF  2BC1               	goto	u1210
  2571  03C0                     u1211:
  2572  03C0  2B83               	goto	l1629
  2573  03C1                     u1210:
  2574  03C1                     l203:
  2575  03C1  0008               	return
  2576  03C2                     __end_of_Lcd_Write_String:
  2577                           
  2578                           	psect	text11
  2579  01FB                     __ptext11:	
  2580 ;; *************** function _Lcd_Write_Char *****************
  2581 ;; Defined at:
  2582 ;;		line 77 in file "LCD.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  a               1    wreg     unsigned char 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  a               1    2[COMMON] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, pclath, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         0       0       0       0       0
  2597 ;;      Locals:         1       0       0       0       0
  2598 ;;      Temps:          1       0       0       0       0
  2599 ;;      Totals:         2       0       0       0       0
  2600 ;;Total ram usage:        2 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    1
  2603 ;; This function calls:
  2604 ;;		_Lcd_Port
  2605 ;; This function is called by:
  2606 ;;		_Lcd_Write_String
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _Lcd_Write_Char
  2612  01FB                     _Lcd_Write_Char:
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2616                           ;Lcd_Write_Char@a stored from wreg
  2617  01FB  00F2               	movwf	Lcd_Write_Char@a
  2618  01FC                     l1381:
  2619                           
  2620                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  2621  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2622  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2623  01FE  1409               	bsf	9,0	;volatile
  2624  01FF                     l1383:
  2625                           
  2626                           ;LCD.c: 88:    Lcd_Port(a);
  2627  01FF  0872               	movf	Lcd_Write_Char@a,w
  2628  0200  120A  118A  219D  120A  118A  	fcall	_Lcd_Port
  2629  0205                     l1385:
  2630                           
  2631                           ;LCD.c: 89:    RE1 = 1;
  2632  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0207  1489               	bsf	9,1	;volatile
  2635  0208                     l1387:
  2636                           
  2637                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2638  0208  301A               	movlw	26
  2639  0209  00F1               	movwf	??_Lcd_Write_Char
  2640  020A                     u1367:
  2641  020A  0BF1               	decfsz	??_Lcd_Write_Char,f
  2642  020B  2A0A               	goto	u1367
  2643  020C  0000               	nop
  2644  020D                     l1389:
  2645                           
  2646                           ;LCD.c: 91:    RE1 = 0;
  2647  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2648  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2649  020F  1089               	bcf	9,1	;volatile
  2650  0210                     l197:
  2651  0210  0008               	return
  2652  0211                     __end_of_Lcd_Write_Char:
  2653                           
  2654                           	psect	text12
  2655  025F                     __ptext12:	
  2656 ;; *************** function _Lcd_Set_Cursor *****************
  2657 ;; Defined at:
  2658 ;;		line 37 in file "LCD.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  a               1    wreg     unsigned char 
  2661 ;;  b               1    4[COMMON] unsigned char 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  a               1    6[COMMON] unsigned char 
  2664 ;;  temp            1    7[COMMON] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         1       0       0       0       0
  2675 ;;      Locals:         2       0       0       0       0
  2676 ;;      Temps:          1       0       0       0       0
  2677 ;;      Totals:         4       0       0       0       0
  2678 ;;Total ram usage:        4 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    2
  2681 ;; This function calls:
  2682 ;;		_Lcd_Cmd
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           
  2689                           ;psect for function _Lcd_Set_Cursor
  2690  025F                     _Lcd_Set_Cursor:
  2691                           
  2692                           ;incstack = 0
  2693                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2694                           ;Lcd_Set_Cursor@a stored from wreg
  2695  025F  00F6               	movwf	Lcd_Set_Cursor@a
  2696  0260                     l1615:
  2697                           
  2698                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  2699  0260  0376               	decf	Lcd_Set_Cursor@a,w
  2700  0261  1D03               	btfss	3,2
  2701  0262  2A64               	goto	u1171
  2702  0263  2A65               	goto	u1170
  2703  0264                     u1171:
  2704  0264  2A71               	goto	l1621
  2705  0265                     u1170:
  2706  0265                     l1617:
  2707                           
  2708                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  2709  0265  0874               	movf	Lcd_Set_Cursor@b,w
  2710  0266  3E7F               	addlw	127
  2711  0267  00F5               	movwf	??_Lcd_Set_Cursor
  2712  0268  0875               	movf	??_Lcd_Set_Cursor,w
  2713  0269  00F7               	movwf	Lcd_Set_Cursor@temp
  2714  026A                     l1619:
  2715                           
  2716                           ;LCD.c: 46:   Lcd_Cmd(temp);
  2717  026A  0877               	movf	Lcd_Set_Cursor@temp,w
  2718  026B  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2719                           
  2720                           ;LCD.c: 47:  }
  2721  0270  2A82               	goto	l191
  2722  0271                     l1621:
  2723  0271  3002               	movlw	2
  2724  0272  0676               	xorwf	Lcd_Set_Cursor@a,w
  2725  0273  1D03               	btfss	3,2
  2726  0274  2A76               	goto	u1181
  2727  0275  2A77               	goto	u1180
  2728  0276                     u1181:
  2729  0276  2A82               	goto	l191
  2730  0277                     u1180:
  2731  0277                     l1623:
  2732                           
  2733                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  2734  0277  0874               	movf	Lcd_Set_Cursor@b,w
  2735  0278  3EBF               	addlw	191
  2736  0279  00F5               	movwf	??_Lcd_Set_Cursor
  2737  027A  0875               	movf	??_Lcd_Set_Cursor,w
  2738  027B  00F7               	movwf	Lcd_Set_Cursor@temp
  2739  027C                     l1625:
  2740                           
  2741                           ;LCD.c: 54:   Lcd_Cmd(temp);
  2742  027C  0877               	movf	Lcd_Set_Cursor@temp,w
  2743  027D  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2744  0282                     l191:
  2745  0282  0008               	return
  2746  0283                     __end_of_Lcd_Set_Cursor:
  2747                           
  2748                           	psect	text13
  2749  0406                     __ptext13:	
  2750 ;; *************** function _Lcd_Init *****************
  2751 ;; Defined at:
  2752 ;;		line 58 in file "LCD.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          2       0       0       0       0
  2769 ;;      Totals:         2       0       0       0       0
  2770 ;;Total ram usage:        2 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    2
  2773 ;; This function calls:
  2774 ;;		_Lcd_Cmd
  2775 ;;		_Lcd_Port
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _Lcd_Init
  2783  0406                     _Lcd_Init:
  2784  0406                     l1603:	
  2785                           ;incstack = 0
  2786                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2787                           
  2788                           
  2789                           ;LCD.c: 60:   Lcd_Port(0x00);
  2790  0406  3000               	movlw	0
  2791  0407  120A  118A  219D  120A  118A  	fcall	_Lcd_Port
  2792  040C                     l1605:
  2793                           
  2794                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2795  040C  3034               	movlw	52
  2796  040D  00F5               	movwf	??_Lcd_Init+1
  2797  040E  30F1               	movlw	241
  2798  040F  00F4               	movwf	??_Lcd_Init
  2799  0410                     u1377:
  2800  0410  0BF4               	decfsz	??_Lcd_Init,f
  2801  0411  2C10               	goto	u1377
  2802  0412  0BF5               	decfsz	??_Lcd_Init+1,f
  2803  0413  2C10               	goto	u1377
  2804  0414  2C15               	nop2
  2805  0415                     l1607:
  2806                           
  2807                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  2808  0415  3030               	movlw	48
  2809  0416  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2810                           
  2811                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2812  041B  300D               	movlw	13
  2813  041C  00F5               	movwf	??_Lcd_Init+1
  2814  041D  30FB               	movlw	251
  2815  041E  00F4               	movwf	??_Lcd_Init
  2816  041F                     u1387:
  2817  041F  0BF4               	decfsz	??_Lcd_Init,f
  2818  0420  2C1F               	goto	u1387
  2819  0421  0BF5               	decfsz	??_Lcd_Init+1,f
  2820  0422  2C1F               	goto	u1387
  2821  0423  2C24               	nop2
  2822  0424                     l1609:
  2823                           
  2824                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  2825  0424  3030               	movlw	48
  2826  0425  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2827  042A                     l1611:
  2828                           
  2829                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2830  042A  301D               	movlw	29
  2831  042B  00F5               	movwf	??_Lcd_Init+1
  2832  042C  3091               	movlw	145
  2833  042D  00F4               	movwf	??_Lcd_Init
  2834  042E                     u1397:
  2835  042E  0BF4               	decfsz	??_Lcd_Init,f
  2836  042F  2C2E               	goto	u1397
  2837  0430  0BF5               	decfsz	??_Lcd_Init+1,f
  2838  0431  2C2E               	goto	u1397
  2839                           
  2840                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  2841  0432  3030               	movlw	48
  2842  0433  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2843                           
  2844                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  2845  0438  3038               	movlw	56
  2846  0439  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2847                           
  2848                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  2849  043E  300C               	movlw	12
  2850  043F  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2851                           
  2852                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  2853  0444  3001               	movlw	1
  2854  0445  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2855                           
  2856                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  2857  044A  3006               	movlw	6
  2858  044B  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2859  0450                     l194:
  2860  0450  0008               	return
  2861  0451                     __end_of_Lcd_Init:
  2862                           
  2863                           	psect	text14
  2864  01C7                     __ptext14:	
  2865 ;; *************** function _Lcd_Clear *****************
  2866 ;; Defined at:
  2867 ;;		line 31 in file "LCD.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		_Lcd_Cmd
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _Lcd_Clear
  2897  01C7                     _Lcd_Clear:
  2898  01C7                     l1613:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2901                           
  2902                           
  2903                           ;LCD.c: 33:  Lcd_Cmd(0);
  2904  01C7  3000               	movlw	0
  2905  01C8  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2906                           
  2907                           ;LCD.c: 34:  Lcd_Cmd(1);
  2908  01CD  3001               	movlw	1
  2909  01CE  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd
  2910  01D3                     l185:
  2911  01D3  0008               	return
  2912  01D4                     __end_of_Lcd_Clear:
  2913                           
  2914                           	psect	text15
  2915  0227                     __ptext15:	
  2916 ;; *************** function _Lcd_Cmd *****************
  2917 ;; Defined at:
  2918 ;;		line 22 in file "LCD.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  a               1    wreg     unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  a               1    3[COMMON] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       0       0       0       0
  2933 ;;      Locals:         1       0       0       0       0
  2934 ;;      Temps:          2       0       0       0       0
  2935 ;;      Totals:         3       0       0       0       0
  2936 ;;Total ram usage:        3 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		_Lcd_Port
  2941 ;; This function is called by:
  2942 ;;		_Lcd_Clear
  2943 ;;		_Lcd_Set_Cursor
  2944 ;;		_Lcd_Init
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _Lcd_Cmd
  2950  0227                     _Lcd_Cmd:
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2954                           ;Lcd_Cmd@a stored from wreg
  2955  0227  00F3               	movwf	Lcd_Cmd@a
  2956  0228                     l1371:
  2957                           
  2958                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  2959  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2961  022A  1009               	bcf	9,0	;volatile
  2962  022B                     l1373:
  2963                           
  2964                           ;LCD.c: 25:  Lcd_Port(a);
  2965  022B  0873               	movf	Lcd_Cmd@a,w
  2966  022C  120A  118A  219D  120A  118A  	fcall	_Lcd_Port
  2967  0231                     l1375:
  2968                           
  2969                           ;LCD.c: 26:  RE1 = 1;
  2970  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0233  1489               	bsf	9,1	;volatile
  2973  0234                     l1377:
  2974                           
  2975                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2976  0234  300B               	movlw	11
  2977  0235  00F2               	movwf	??_Lcd_Cmd+1
  2978  0236  3062               	movlw	98
  2979  0237  00F1               	movwf	??_Lcd_Cmd
  2980  0238                     u1407:
  2981  0238  0BF1               	decfsz	??_Lcd_Cmd,f
  2982  0239  2A38               	goto	u1407
  2983  023A  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2984  023B  2A38               	goto	u1407
  2985  023C  0000               	nop
  2986  023D                     l1379:
  2987                           
  2988                           ;LCD.c: 28:         RE1 = 0;
  2989  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2990  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2991  023F  1089               	bcf	9,1	;volatile
  2992  0240                     l182:
  2993  0240  0008               	return
  2994  0241                     __end_of_Lcd_Cmd:
  2995                           
  2996                           	psect	text16
  2997  019D                     __ptext16:	
  2998 ;; *************** function _Lcd_Port *****************
  2999 ;; Defined at:
  3000 ;;		line 17 in file "LCD.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  a               1    wreg     unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  a               1    0[COMMON] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       0       0       0       0
  3015 ;;      Locals:         1       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0
  3017 ;;      Totals:         1       0       0       0       0
  3018 ;;Total ram usage:        1 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_Lcd_Cmd
  3024 ;;		_Lcd_Init
  3025 ;;		_Lcd_Write_Char
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _Lcd_Port
  3031  019D                     _Lcd_Port:
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _Lcd_Port: [wreg]
  3035                           ;Lcd_Port@a stored from wreg
  3036  019D  00F0               	movwf	Lcd_Port@a
  3037  019E                     l1347:
  3038                           
  3039                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  3040  019E  0870               	movf	Lcd_Port@a,w
  3041  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3042  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3043  01A1  0088               	movwf	8	;volatile
  3044  01A2                     l179:
  3045  01A2  0008               	return
  3046  01A3                     __end_of_Lcd_Port:
  3047                           
  3048                           	psect	text17
  3049  0310                     __ptext17:	
  3050 ;; *************** function _LEER_S3 *****************
  3051 ;; Defined at:
  3052 ;;		line 200 in file "main.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          3       0       0       0       0
  3069 ;;      Totals:         3       0       0       0       0
  3070 ;;Total ram usage:        3 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		_spiRead
  3075 ;;		_spiWrite
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function _LEER_S3
  3083  0310                     _LEER_S3:
  3084  0310                     l1661:	
  3085                           ;incstack = 0
  3086                           ; Regs used in _LEER_S3: [wreg+status,2+status,0+pclath+cstack]
  3087                           
  3088                           
  3089                           ;main.c: 201:     PORTCbits.RC2 = 0;
  3090  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0312  1107               	bcf	7,2	;volatile
  3093  0313                     l1663:
  3094                           
  3095                           ;main.c: 202:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3096  0313  3003               	movlw	3
  3097  0314  00F2               	movwf	??_LEER_S3+1
  3098  0315  3097               	movlw	151
  3099  0316  00F1               	movwf	??_LEER_S3
  3100  0317                     u1417:
  3101  0317  0BF1               	decfsz	??_LEER_S3,f
  3102  0318  2B17               	goto	u1417
  3103  0319  0BF2               	decfsz	??_LEER_S3+1,f
  3104  031A  2B17               	goto	u1417
  3105  031B  2B1C               	nop2
  3106  031C                     l1665:
  3107                           
  3108                           ;main.c: 204:     spiWrite(hablar);
  3109  031C  3003               	movlw	3
  3110  031D  120A  118A  2197  120A  118A  	fcall	_spiWrite
  3111  0322                     l1667:
  3112                           
  3113                           ;main.c: 205:     S3 = spiRead();
  3114  0322  120A  118A  21B2  120A  118A  	fcall	_spiRead
  3115  0327  00F1               	movwf	??_LEER_S3
  3116  0328  0871               	movf	??_LEER_S3,w
  3117  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3118  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3119  032B  00AA               	movwf	_S3
  3120                           
  3121                           ;main.c: 208:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3122  032C  3003               	movlw	3
  3123  032D  00F2               	movwf	??_LEER_S3+1
  3124  032E  3097               	movlw	151
  3125  032F  00F1               	movwf	??_LEER_S3
  3126  0330                     u1427:
  3127  0330  0BF1               	decfsz	??_LEER_S3,f
  3128  0331  2B30               	goto	u1427
  3129  0332  0BF2               	decfsz	??_LEER_S3+1,f
  3130  0333  2B30               	goto	u1427
  3131  0334  2B35               	nop2
  3132  0335                     l1669:
  3133                           
  3134                           ;main.c: 209:     PORTCbits.RC2 = 1;
  3135  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0337  1507               	bsf	7,2	;volatile
  3138                           
  3139                           ;main.c: 210:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3140  0338  3002               	movlw	2
  3141  0339  00F3               	movwf	??_LEER_S3+2
  3142  033A  3004               	movlw	4
  3143  033B  00F2               	movwf	??_LEER_S3+1
  3144  033C  30BA               	movlw	186
  3145  033D  00F1               	movwf	??_LEER_S3
  3146  033E                     u1437:
  3147  033E  0BF1               	decfsz	??_LEER_S3,f
  3148  033F  2B3E               	goto	u1437
  3149  0340  0BF2               	decfsz	??_LEER_S3+1,f
  3150  0341  2B3E               	goto	u1437
  3151  0342  0BF3               	decfsz	??_LEER_S3+2,f
  3152  0343  2B3E               	goto	u1437
  3153  0344  0000               	nop
  3154  0345                     l108:
  3155  0345  0008               	return
  3156  0346                     __end_of_LEER_S3:
  3157                           
  3158                           	psect	text18
  3159  02DA                     __ptext18:	
  3160 ;; *************** function _LEER_S2 *****************
  3161 ;; Defined at:
  3162 ;;		line 188 in file "main.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0
  3178 ;;      Temps:          3       0       0       0       0
  3179 ;;      Totals:         3       0       0       0       0
  3180 ;;Total ram usage:        3 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    2
  3183 ;; This function calls:
  3184 ;;		_spiRead
  3185 ;;		_spiWrite
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _LEER_S2
  3193  02DA                     _LEER_S2:
  3194  02DA                     l1651:	
  3195                           ;incstack = 0
  3196                           ; Regs used in _LEER_S2: [wreg+status,2+status,0+pclath+cstack]
  3197                           
  3198                           
  3199                           ;main.c: 189:     PORTCbits.RC1 = 0;
  3200  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3201  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3202  02DC  1087               	bcf	7,1	;volatile
  3203  02DD                     l1653:
  3204                           
  3205                           ;main.c: 190:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3206  02DD  3003               	movlw	3
  3207  02DE  00F2               	movwf	??_LEER_S2+1
  3208  02DF  3097               	movlw	151
  3209  02E0  00F1               	movwf	??_LEER_S2
  3210  02E1                     u1447:
  3211  02E1  0BF1               	decfsz	??_LEER_S2,f
  3212  02E2  2AE1               	goto	u1447
  3213  02E3  0BF2               	decfsz	??_LEER_S2+1,f
  3214  02E4  2AE1               	goto	u1447
  3215  02E5  2AE6               	nop2
  3216  02E6                     l1655:
  3217                           
  3218                           ;main.c: 192:     spiWrite(hablar);
  3219  02E6  3003               	movlw	3
  3220  02E7  120A  118A  2197  120A  118A  	fcall	_spiWrite
  3221  02EC                     l1657:
  3222                           
  3223                           ;main.c: 193:     S2 = spiRead();
  3224  02EC  120A  118A  21B2  120A  118A  	fcall	_spiRead
  3225  02F1  00F1               	movwf	??_LEER_S2
  3226  02F2  0871               	movf	??_LEER_S2,w
  3227  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3228  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3229  02F5  00AB               	movwf	_S2
  3230                           
  3231                           ;main.c: 195:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3232  02F6  3003               	movlw	3
  3233  02F7  00F2               	movwf	??_LEER_S2+1
  3234  02F8  3097               	movlw	151
  3235  02F9  00F1               	movwf	??_LEER_S2
  3236  02FA                     u1457:
  3237  02FA  0BF1               	decfsz	??_LEER_S2,f
  3238  02FB  2AFA               	goto	u1457
  3239  02FC  0BF2               	decfsz	??_LEER_S2+1,f
  3240  02FD  2AFA               	goto	u1457
  3241  02FE  2AFF               	nop2
  3242  02FF                     l1659:
  3243                           
  3244                           ;main.c: 196:     PORTCbits.RC1 = 1;
  3245  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0301  1487               	bsf	7,1	;volatile
  3248                           
  3249                           ;main.c: 197:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3250  0302  3002               	movlw	2
  3251  0303  00F3               	movwf	??_LEER_S2+2
  3252  0304  3004               	movlw	4
  3253  0305  00F2               	movwf	??_LEER_S2+1
  3254  0306  30BA               	movlw	186
  3255  0307  00F1               	movwf	??_LEER_S2
  3256  0308                     u1467:
  3257  0308  0BF1               	decfsz	??_LEER_S2,f
  3258  0309  2B08               	goto	u1467
  3259  030A  0BF2               	decfsz	??_LEER_S2+1,f
  3260  030B  2B08               	goto	u1467
  3261  030C  0BF3               	decfsz	??_LEER_S2+2,f
  3262  030D  2B08               	goto	u1467
  3263  030E  0000               	nop
  3264  030F                     l105:
  3265  030F  0008               	return
  3266  0310                     __end_of_LEER_S2:
  3267                           
  3268                           	psect	text19
  3269  04BA                     __ptext19:	
  3270 ;; *************** function _LEER_S1 *****************
  3271 ;; Defined at:
  3272 ;;		line 175 in file "main.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0, pclath, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0
  3288 ;;      Temps:          3       0       0       0       0
  3289 ;;      Totals:         3       0       0       0       0
  3290 ;;Total ram usage:        3 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    2
  3293 ;; This function calls:
  3294 ;;		___awdiv
  3295 ;;		___wmul
  3296 ;;		___xxtofl
  3297 ;;		_spiRead
  3298 ;;		_spiWrite
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _LEER_S1
  3306  04BA                     _LEER_S1:
  3307  04BA                     l1635:	
  3308                           ;incstack = 0
  3309                           ; Regs used in _LEER_S1: [wreg+status,2+status,0+pclath+cstack]
  3310                           
  3311                           
  3312                           ;main.c: 176:     PORTCbits.RC0 = 0;
  3313  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3314  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3315  04BC  1007               	bcf	7,0	;volatile
  3316  04BD                     l1637:
  3317                           
  3318                           ;main.c: 177:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3319  04BD  3003               	movlw	3
  3320  04BE  00FC               	movwf	??_LEER_S1+1
  3321  04BF  3097               	movlw	151
  3322  04C0  00FB               	movwf	??_LEER_S1
  3323  04C1                     u1477:
  3324  04C1  0BFB               	decfsz	??_LEER_S1,f
  3325  04C2  2CC1               	goto	u1477
  3326  04C3  0BFC               	decfsz	??_LEER_S1+1,f
  3327  04C4  2CC1               	goto	u1477
  3328  04C5  2CC6               	nop2
  3329  04C6                     l1639:
  3330                           
  3331                           ;main.c: 179:     spiWrite(hablar);
  3332  04C6  3003               	movlw	3
  3333  04C7  120A  118A  2197  120A  118A  	fcall	_spiWrite
  3334  04CC                     l1641:
  3335                           
  3336                           ;main.c: 180:     S1 = spiRead();
  3337  04CC  120A  118A  21B2  120A  118A  	fcall	_spiRead
  3338  04D1  00FB               	movwf	??_LEER_S1
  3339  04D2  087B               	movf	??_LEER_S1,w
  3340  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3341  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3342  04D5  00AC               	movwf	_S1
  3343  04D6                     l1643:
  3344                           
  3345                           ;main.c: 181:     ADC = ((S1 * 5) / 255);
  3346  04D6  3005               	movlw	5
  3347  04D7  00F2               	movwf	___wmul@multiplicand
  3348  04D8  3000               	movlw	0
  3349  04D9  00F3               	movwf	___wmul@multiplicand+1
  3350  04DA  082C               	movf	_S1,w
  3351  04DB  00FB               	movwf	??_LEER_S1
  3352  04DC  01FC               	clrf	??_LEER_S1+1
  3353  04DD  087B               	movf	??_LEER_S1,w
  3354  04DE  00F0               	movwf	___wmul@multiplier
  3355  04DF  087C               	movf	??_LEER_S1+1,w
  3356  04E0  00F1               	movwf	___wmul@multiplier+1
  3357  04E1  120A  118A  2283  120A  118A  	fcall	___wmul
  3358  04E6  0871               	movf	?___wmul+1,w
  3359  04E7  00F9               	movwf	___awdiv@dividend+1
  3360  04E8  0870               	movf	?___wmul,w
  3361  04E9  00F8               	movwf	___awdiv@dividend
  3362  04EA  30FF               	movlw	255
  3363  04EB  00F6               	movwf	___awdiv@divisor
  3364  04EC  3000               	movlw	0
  3365  04ED  00F7               	movwf	___awdiv@divisor+1
  3366  04EE  120A  118A  2451  120A  118A  	fcall	___awdiv
  3367  04F3  0876               	movf	?___awdiv,w
  3368  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3369  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3370  04F6  00C5               	movwf	___xxtofl@val
  3371  04F7  0877               	movf	?___awdiv+1,w
  3372  04F8  00C6               	movwf	___xxtofl@val+1
  3373  04F9  3000               	movlw	0
  3374  04FA  1BC6               	btfsc	___xxtofl@val+1,7
  3375  04FB  30FF               	movlw	255
  3376  04FC  00C7               	movwf	___xxtofl@val+2
  3377  04FD  00C8               	movwf	___xxtofl@val+3
  3378  04FE  3001               	movlw	1
  3379  04FF  120A  118A  25CE  120A  118A  	fcall	___xxtofl
  3380  0504  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0505  1303               	bcf	3,6	;RP1=0, select bank0
  3382  0506  0848               	movf	?___xxtofl+3,w
  3383  0507  00A7               	movwf	_ADC+3
  3384  0508  0847               	movf	?___xxtofl+2,w
  3385  0509  00A6               	movwf	_ADC+2
  3386  050A  0846               	movf	?___xxtofl+1,w
  3387  050B  00A5               	movwf	_ADC+1
  3388  050C  0845               	movf	?___xxtofl,w
  3389  050D  00A4               	movwf	_ADC
  3390  050E                     l1645:
  3391                           
  3392                           ;main.c: 183:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3393  050E  3003               	movlw	3
  3394  050F  00FC               	movwf	??_LEER_S1+1
  3395  0510  3097               	movlw	151
  3396  0511  00FB               	movwf	??_LEER_S1
  3397  0512                     u1487:
  3398  0512  0BFB               	decfsz	??_LEER_S1,f
  3399  0513  2D12               	goto	u1487
  3400  0514  0BFC               	decfsz	??_LEER_S1+1,f
  3401  0515  2D12               	goto	u1487
  3402  0516  2D17               	nop2
  3403  0517                     l1647:
  3404                           
  3405                           ;main.c: 184:     PORTCbits.RC0 = 1;
  3406  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0519  1407               	bsf	7,0	;volatile
  3409  051A                     l1649:
  3410                           
  3411                           ;main.c: 185:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3412  051A  3002               	movlw	2
  3413  051B  00FD               	movwf	??_LEER_S1+2
  3414  051C  3004               	movlw	4
  3415  051D  00FC               	movwf	??_LEER_S1+1
  3416  051E  30BA               	movlw	186
  3417  051F  00FB               	movwf	??_LEER_S1
  3418  0520                     u1497:
  3419  0520  0BFB               	decfsz	??_LEER_S1,f
  3420  0521  2D20               	goto	u1497
  3421  0522  0BFC               	decfsz	??_LEER_S1+1,f
  3422  0523  2D20               	goto	u1497
  3423  0524  0BFD               	decfsz	??_LEER_S1+2,f
  3424  0525  2D20               	goto	u1497
  3425  0526  0000               	nop
  3426  0527                     l102:
  3427  0527  0008               	return
  3428  0528                     __end_of_LEER_S1:
  3429                           
  3430                           	psect	text20
  3431  0197                     __ptext20:	
  3432 ;; *************** function _spiWrite *****************
  3433 ;; Defined at:
  3434 ;;		line 36 in file "SPI.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  dat             1    wreg     unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  dat             1    0[COMMON] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         0       0       0       0       0
  3449 ;;      Locals:         1       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0
  3451 ;;      Totals:         1       0       0       0       0
  3452 ;;Total ram usage:        1 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_LEER_S1
  3458 ;;		_LEER_S2
  3459 ;;		_LEER_S3
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _spiWrite
  3465  0197                     _spiWrite:
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _spiWrite: [wreg]
  3469                           ;spiWrite@dat stored from wreg
  3470  0197  00F0               	movwf	spiWrite@dat
  3471  0198                     l1363:
  3472                           
  3473                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  3474  0198  0870               	movf	spiWrite@dat,w
  3475  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3476  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3477  019B  0093               	movwf	19	;volatile
  3478  019C                     l134:
  3479  019C  0008               	return
  3480  019D                     __end_of_spiWrite:
  3481                           
  3482                           	psect	text21
  3483  01B2                     __ptext21:	
  3484 ;; *************** function _spiRead *****************
  3485 ;; Defined at:
  3486 ;;		line 49 in file "SPI.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      unsigned char 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0, pclath, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3500 ;;      Params:         0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    1
  3507 ;; This function calls:
  3508 ;;		_spiReceiveWait
  3509 ;; This function is called by:
  3510 ;;		_LEER_S1
  3511 ;;		_LEER_S2
  3512 ;;		_LEER_S3
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function _spiRead
  3518  01B2                     _spiRead:
  3519  01B2                     l1365:	
  3520                           ;incstack = 0
  3521                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  3522                           
  3523                           
  3524                           ;SPI.c: 51:     spiReceiveWait();
  3525  01B2  120A  118A  21A3  120A  118A  	fcall	_spiReceiveWait
  3526  01B7                     l1367:
  3527                           
  3528                           ;SPI.c: 52:     return(SSPBUF);
  3529  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3530  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3531  01B9  0813               	movf	19,w	;volatile
  3532  01BA                     l142:
  3533  01BA  0008               	return
  3534  01BB                     __end_of_spiRead:
  3535                           
  3536                           	psect	text22
  3537  01A3                     __ptext22:	
  3538 ;; *************** function _spiReceiveWait *****************
  3539 ;; Defined at:
  3540 ;;		line 31 in file "SPI.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		None
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_spiRead
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _spiReceiveWait
  3569  01A3                     _spiReceiveWait:
  3570  01A3                     l1345:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _spiReceiveWait: []
  3573                           
  3574  01A3                     l128:	
  3575                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  3576                           
  3577  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  3578  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  3579  01A5  1C14               	btfss	20,0	;volatile
  3580  01A6  29A8               	goto	u691
  3581  01A7  29A9               	goto	u690
  3582  01A8                     u691:
  3583  01A8  29A3               	goto	l128
  3584  01A9                     u690:
  3585  01A9                     l131:
  3586  01A9  0008               	return
  3587  01AA                     __end_of_spiReceiveWait:
  3588                           
  3589                           	psect	text23
  3590  05CE                     __ptext23:	
  3591 ;; *************** function ___xxtofl *****************
  3592 ;; Defined at:
  3593 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  sign            1    wreg     unsigned char 
  3596 ;;  val             4    4[BANK0 ] long 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  sign            1   12[BANK0 ] unsigned char 
  3599 ;;  arg             4   14[BANK0 ] unsigned long 
  3600 ;;  exp             1   13[BANK0 ] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  4    4[BANK0 ] unsigned char 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3610 ;;      Params:         0       4       0       0       0
  3611 ;;      Locals:         0       6       0       0       0
  3612 ;;      Temps:          0       4       0       0       0
  3613 ;;      Totals:         0      14       0       0       0
  3614 ;;Total ram usage:       14 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_LEER_S1
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function ___xxtofl
  3625  05CE                     ___xxtofl:
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3629                           ;___xxtofl@sign stored from wreg
  3630  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3631  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3632  05D0  00CD               	movwf	___xxtofl@sign
  3633  05D1                     l1523:
  3634  05D1  084D               	movf	___xxtofl@sign,w
  3635  05D2  1903               	btfsc	3,2
  3636  05D3  2DD5               	goto	u1031
  3637  05D4  2DD6               	goto	u1030
  3638  05D5                     u1031:
  3639  05D5  2DEA               	goto	l1529
  3640  05D6                     u1030:
  3641  05D6                     l1525:
  3642  05D6  1FC8               	btfss	___xxtofl@val+3,7
  3643  05D7  2DD9               	goto	u1041
  3644  05D8  2DDA               	goto	u1040
  3645  05D9                     u1041:
  3646  05D9  2DEA               	goto	l1529
  3647  05DA                     u1040:
  3648  05DA                     l1527:
  3649  05DA  0945               	comf	___xxtofl@val,w
  3650  05DB  00CF               	movwf	___xxtofl@arg
  3651  05DC  0946               	comf	___xxtofl@val+1,w
  3652  05DD  00D0               	movwf	___xxtofl@arg+1
  3653  05DE  0947               	comf	___xxtofl@val+2,w
  3654  05DF  00D1               	movwf	___xxtofl@arg+2
  3655  05E0  0948               	comf	___xxtofl@val+3,w
  3656  05E1  00D2               	movwf	___xxtofl@arg+3
  3657  05E2  0ACF               	incf	___xxtofl@arg,f
  3658  05E3  1903               	skipnz
  3659  05E4  0AD0               	incf	___xxtofl@arg+1,f
  3660  05E5  1903               	skipnz
  3661  05E6  0AD1               	incf	___xxtofl@arg+2,f
  3662  05E7  1903               	skipnz
  3663  05E8  0AD2               	incf	___xxtofl@arg+3,f
  3664  05E9  2DF2               	goto	l761
  3665  05EA                     l1529:
  3666  05EA  0848               	movf	___xxtofl@val+3,w
  3667  05EB  00D2               	movwf	___xxtofl@arg+3
  3668  05EC  0847               	movf	___xxtofl@val+2,w
  3669  05ED  00D1               	movwf	___xxtofl@arg+2
  3670  05EE  0846               	movf	___xxtofl@val+1,w
  3671  05EF  00D0               	movwf	___xxtofl@arg+1
  3672  05F0  0845               	movf	___xxtofl@val,w
  3673  05F1  00CF               	movwf	___xxtofl@arg
  3674  05F2                     l761:
  3675  05F2  0848               	movf	___xxtofl@val+3,w
  3676  05F3  0447               	iorwf	___xxtofl@val+2,w
  3677  05F4  0446               	iorwf	___xxtofl@val+1,w
  3678  05F5  0445               	iorwf	___xxtofl@val,w
  3679  05F6  1D03               	skipz
  3680  05F7  2DF9               	goto	u1051
  3681  05F8  2DFA               	goto	u1050
  3682  05F9                     u1051:
  3683  05F9  2E03               	goto	l1535
  3684  05FA                     u1050:
  3685  05FA                     l1531:
  3686  05FA  3000               	movlw	0
  3687  05FB  00C8               	movwf	?___xxtofl+3
  3688  05FC  3000               	movlw	0
  3689  05FD  00C7               	movwf	?___xxtofl+2
  3690  05FE  3000               	movlw	0
  3691  05FF  00C6               	movwf	?___xxtofl+1
  3692  0600  3000               	movlw	0
  3693  0601  00C5               	movwf	?___xxtofl
  3694  0602  2E89               	goto	l763
  3695  0603                     l1535:
  3696  0603  3096               	movlw	150
  3697  0604  00C9               	movwf	??___xxtofl
  3698  0605  0849               	movf	??___xxtofl,w
  3699  0606  00CE               	movwf	___xxtofl@exp
  3700  0607  2E15               	goto	l1539
  3701  0608                     l1537:
  3702  0608  3001               	movlw	1
  3703  0609  00C9               	movwf	??___xxtofl
  3704  060A  0849               	movf	??___xxtofl,w
  3705  060B  07CE               	addwf	___xxtofl@exp,f
  3706  060C  3001               	movlw	1
  3707  060D                     u1065:
  3708  060D  1003               	clrc
  3709  060E  0CD2               	rrf	___xxtofl@arg+3,f
  3710  060F  0CD1               	rrf	___xxtofl@arg+2,f
  3711  0610  0CD0               	rrf	___xxtofl@arg+1,f
  3712  0611  0CCF               	rrf	___xxtofl@arg,f
  3713  0612  3EFF               	addlw	-1
  3714  0613  1D03               	skipz
  3715  0614  2E0D               	goto	u1065
  3716  0615                     l1539:
  3717  0615  30FE               	movlw	254
  3718  0616  0552               	andwf	___xxtofl@arg+3,w
  3719  0617  1D03               	btfss	3,2
  3720  0618  2E1A               	goto	u1071
  3721  0619  2E1B               	goto	u1070
  3722  061A                     u1071:
  3723  061A  2E08               	goto	l1537
  3724  061B                     u1070:
  3725  061B  2E37               	goto	l767
  3726  061C                     l1541:
  3727  061C  3001               	movlw	1
  3728  061D  00C9               	movwf	??___xxtofl
  3729  061E  0849               	movf	??___xxtofl,w
  3730  061F  07CE               	addwf	___xxtofl@exp,f
  3731  0620                     l1543:
  3732  0620  3001               	movlw	1
  3733  0621  07CF               	addwf	___xxtofl@arg,f
  3734  0622  3000               	movlw	0
  3735  0623  1803               	skipnc
  3736  0624  3001               	movlw	1
  3737  0625  07D0               	addwf	___xxtofl@arg+1,f
  3738  0626  3000               	movlw	0
  3739  0627  1803               	skipnc
  3740  0628  3001               	movlw	1
  3741  0629  07D1               	addwf	___xxtofl@arg+2,f
  3742  062A  3000               	movlw	0
  3743  062B  1803               	skipnc
  3744  062C  3001               	movlw	1
  3745  062D  07D2               	addwf	___xxtofl@arg+3,f
  3746  062E                     l1545:
  3747  062E  3001               	movlw	1
  3748  062F                     u1085:
  3749  062F  1003               	clrc
  3750  0630  0CD2               	rrf	___xxtofl@arg+3,f
  3751  0631  0CD1               	rrf	___xxtofl@arg+2,f
  3752  0632  0CD0               	rrf	___xxtofl@arg+1,f
  3753  0633  0CCF               	rrf	___xxtofl@arg,f
  3754  0634  3EFF               	addlw	-1
  3755  0635  1D03               	skipz
  3756  0636  2E2F               	goto	u1085
  3757  0637                     l767:
  3758  0637  30FF               	movlw	255
  3759  0638  0552               	andwf	___xxtofl@arg+3,w
  3760  0639  1D03               	btfss	3,2
  3761  063A  2E3C               	goto	u1091
  3762  063B  2E3D               	goto	u1090
  3763  063C                     u1091:
  3764  063C  2E1C               	goto	l1541
  3765  063D                     u1090:
  3766  063D  2E49               	goto	l1549
  3767  063E                     l1547:
  3768  063E  3001               	movlw	1
  3769  063F  02CE               	subwf	___xxtofl@exp,f
  3770  0640  3001               	movlw	1
  3771  0641  00C9               	movwf	??___xxtofl
  3772  0642                     u1105:
  3773  0642  1003               	clrc
  3774  0643  0DCF               	rlf	___xxtofl@arg,f
  3775  0644  0DD0               	rlf	___xxtofl@arg+1,f
  3776  0645  0DD1               	rlf	___xxtofl@arg+2,f
  3777  0646  0DD2               	rlf	___xxtofl@arg+3,f
  3778  0647  0BC9               	decfsz	??___xxtofl,f
  3779  0648  2E42               	goto	u1105
  3780  0649                     l1549:
  3781  0649  1BD1               	btfsc	___xxtofl@arg+2,7
  3782  064A  2E4C               	goto	u1111
  3783  064B  2E4D               	goto	u1110
  3784  064C                     u1111:
  3785  064C  2E53               	goto	l774
  3786  064D                     u1110:
  3787  064D                     l1551:
  3788  064D  3002               	movlw	2
  3789  064E  024E               	subwf	___xxtofl@exp,w
  3790  064F  1803               	skipnc
  3791  0650  2E52               	goto	u1121
  3792  0651  2E53               	goto	u1120
  3793  0652                     u1121:
  3794  0652  2E3E               	goto	l1547
  3795  0653                     u1120:
  3796  0653                     l774:
  3797  0653  184E               	btfsc	___xxtofl@exp,0
  3798  0654  2E56               	goto	u1131
  3799  0655  2E57               	goto	u1130
  3800  0656                     u1131:
  3801  0656  2E5F               	goto	l775
  3802  0657                     u1130:
  3803  0657                     l1553:
  3804  0657  30FF               	movlw	255
  3805  0658  05CF               	andwf	___xxtofl@arg,f
  3806  0659  30FF               	movlw	255
  3807  065A  05D0               	andwf	___xxtofl@arg+1,f
  3808  065B  307F               	movlw	127
  3809  065C  05D1               	andwf	___xxtofl@arg+2,f
  3810  065D  30FF               	movlw	255
  3811  065E  05D2               	andwf	___xxtofl@arg+3,f
  3812  065F                     l775:
  3813  065F  1003               	clrc
  3814  0660  0CCE               	rrf	___xxtofl@exp,f
  3815  0661                     l1555:
  3816  0661  084E               	movf	___xxtofl@exp,w
  3817  0662  00C9               	movwf	??___xxtofl
  3818  0663  01CA               	clrf	??___xxtofl+1
  3819  0664  01CB               	clrf	??___xxtofl+2
  3820  0665  01CC               	clrf	??___xxtofl+3
  3821  0666  3018               	movlw	24
  3822  0667                     u1145:
  3823  0667  1003               	clrc
  3824  0668  0DC9               	rlf	??___xxtofl,f
  3825  0669  0DCA               	rlf	??___xxtofl+1,f
  3826  066A  0DCB               	rlf	??___xxtofl+2,f
  3827  066B  0DCC               	rlf	??___xxtofl+3,f
  3828  066C                     u1140:
  3829  066C  3EFF               	addlw	-1
  3830  066D  1D03               	skipz
  3831  066E  2E67               	goto	u1145
  3832  066F  0849               	movf	??___xxtofl,w
  3833  0670  04CF               	iorwf	___xxtofl@arg,f
  3834  0671  084A               	movf	??___xxtofl+1,w
  3835  0672  04D0               	iorwf	___xxtofl@arg+1,f
  3836  0673  084B               	movf	??___xxtofl+2,w
  3837  0674  04D1               	iorwf	___xxtofl@arg+2,f
  3838  0675  084C               	movf	??___xxtofl+3,w
  3839  0676  04D2               	iorwf	___xxtofl@arg+3,f
  3840  0677                     l1557:
  3841  0677  084D               	movf	___xxtofl@sign,w
  3842  0678  1903               	btfsc	3,2
  3843  0679  2E7B               	goto	u1151
  3844  067A  2E7C               	goto	u1150
  3845  067B                     u1151:
  3846  067B  2E81               	goto	l1563
  3847  067C                     u1150:
  3848  067C                     l1559:
  3849  067C  1FC8               	btfss	___xxtofl@val+3,7
  3850  067D  2E7F               	goto	u1161
  3851  067E  2E80               	goto	u1160
  3852  067F                     u1161:
  3853  067F  2E81               	goto	l1563
  3854  0680                     u1160:
  3855  0680                     l1561:
  3856  0680  17D2               	bsf	___xxtofl@arg+3,7
  3857  0681                     l1563:
  3858  0681  0852               	movf	___xxtofl@arg+3,w
  3859  0682  00C8               	movwf	?___xxtofl+3
  3860  0683  0851               	movf	___xxtofl@arg+2,w
  3861  0684  00C7               	movwf	?___xxtofl+2
  3862  0685  0850               	movf	___xxtofl@arg+1,w
  3863  0686  00C6               	movwf	?___xxtofl+1
  3864  0687  084F               	movf	___xxtofl@arg,w
  3865  0688  00C5               	movwf	?___xxtofl
  3866  0689                     l763:
  3867  0689  0008               	return
  3868  068A                     __end_of___xxtofl:
  3869                           
  3870                           	psect	text24
  3871  0283                     __ptext24:	
  3872 ;; *************** function ___wmul *****************
  3873 ;; Defined at:
  3874 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  multiplier      2    0[COMMON] unsigned int 
  3877 ;;  multiplicand    2    2[COMMON] unsigned int 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  product         2    4[COMMON] unsigned int 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  2    0[COMMON] unsigned int 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         4       0       0       0       0
  3890 ;;      Locals:         2       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0
  3892 ;;      Totals:         6       0       0       0       0
  3893 ;;Total ram usage:        6 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_LEER_S1
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function ___wmul
  3904  0283                     ___wmul:
  3905  0283                     l1403:	
  3906                           ;incstack = 0
  3907                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3908                           
  3909  0283  01F4               	clrf	___wmul@product
  3910  0284  01F5               	clrf	___wmul@product+1
  3911  0285                     l1405:
  3912  0285  1C70               	btfss	___wmul@multiplier,0
  3913  0286  2A88               	goto	u741
  3914  0287  2A89               	goto	u740
  3915  0288                     u741:
  3916  0288  2A8F               	goto	l328
  3917  0289                     u740:
  3918  0289                     l1407:
  3919  0289  0872               	movf	___wmul@multiplicand,w
  3920  028A  07F4               	addwf	___wmul@product,f
  3921  028B  1803               	skipnc
  3922  028C  0AF5               	incf	___wmul@product+1,f
  3923  028D  0873               	movf	___wmul@multiplicand+1,w
  3924  028E  07F5               	addwf	___wmul@product+1,f
  3925  028F                     l328:
  3926  028F  3001               	movlw	1
  3927  0290                     u755:
  3928  0290  1003               	clrc
  3929  0291  0DF2               	rlf	___wmul@multiplicand,f
  3930  0292  0DF3               	rlf	___wmul@multiplicand+1,f
  3931  0293  3EFF               	addlw	-1
  3932  0294  1D03               	skipz
  3933  0295  2A90               	goto	u755
  3934  0296                     l1409:
  3935  0296  3001               	movlw	1
  3936  0297                     u765:
  3937  0297  1003               	clrc
  3938  0298  0CF1               	rrf	___wmul@multiplier+1,f
  3939  0299  0CF0               	rrf	___wmul@multiplier,f
  3940  029A  3EFF               	addlw	-1
  3941  029B  1D03               	skipz
  3942  029C  2A97               	goto	u765
  3943  029D                     l1411:
  3944  029D  0870               	movf	___wmul@multiplier,w
  3945  029E  0471               	iorwf	___wmul@multiplier+1,w
  3946  029F  1D03               	btfss	3,2
  3947  02A0  2AA2               	goto	u771
  3948  02A1  2AA3               	goto	u770
  3949  02A2                     u771:
  3950  02A2  2A85               	goto	l1405
  3951  02A3                     u770:
  3952  02A3                     l1413:
  3953  02A3  0875               	movf	___wmul@product+1,w
  3954  02A4  00F1               	movwf	?___wmul+1
  3955  02A5  0874               	movf	___wmul@product,w
  3956  02A6  00F0               	movwf	?___wmul
  3957  02A7                     l330:
  3958  02A7  0008               	return
  3959  02A8                     __end_of___wmul:
  3960                           
  3961                           	psect	text25
  3962  0451                     __ptext25:	
  3963 ;; *************** function ___awdiv *****************
  3964 ;; Defined at:
  3965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  divisor         2    6[COMMON] int 
  3968 ;;  dividend        2    8[COMMON] int 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  quotient        2    2[BANK0 ] int 
  3971 ;;  sign            1    1[BANK0 ] unsigned char 
  3972 ;;  counter         1    0[BANK0 ] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  2    6[COMMON] int 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         4       0       0       0       0
  3983 ;;      Locals:         0       4       0       0       0
  3984 ;;      Temps:          1       0       0       0       0
  3985 ;;      Totals:         5       4       0       0       0
  3986 ;;Total ram usage:        9 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_LEER_S1
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function ___awdiv
  3997  0451                     ___awdiv:
  3998  0451                     l1431:	
  3999                           ;incstack = 0
  4000                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4001                           
  4002  0451  1283               	bcf	3,5	;RP0=0, select bank0
  4003  0452  1303               	bcf	3,6	;RP1=0, select bank0
  4004  0453  01C2               	clrf	___awdiv@sign
  4005  0454                     l1433:
  4006  0454  1FF7               	btfss	___awdiv@divisor+1,7
  4007  0455  2C57               	goto	u801
  4008  0456  2C58               	goto	u800
  4009  0457                     u801:
  4010  0457  2C5F               	goto	l1439
  4011  0458                     u800:
  4012  0458                     l1435:
  4013  0458  09F6               	comf	___awdiv@divisor,f
  4014  0459  09F7               	comf	___awdiv@divisor+1,f
  4015  045A  0AF6               	incf	___awdiv@divisor,f
  4016  045B  1903               	skipnz
  4017  045C  0AF7               	incf	___awdiv@divisor+1,f
  4018  045D                     l1437:
  4019  045D  01C2               	clrf	___awdiv@sign
  4020  045E  0AC2               	incf	___awdiv@sign,f
  4021  045F                     l1439:
  4022  045F  1FF9               	btfss	___awdiv@dividend+1,7
  4023  0460  2C62               	goto	u811
  4024  0461  2C63               	goto	u810
  4025  0462                     u811:
  4026  0462  2C6C               	goto	l1445
  4027  0463                     u810:
  4028  0463                     l1441:
  4029  0463  09F8               	comf	___awdiv@dividend,f
  4030  0464  09F9               	comf	___awdiv@dividend+1,f
  4031  0465  0AF8               	incf	___awdiv@dividend,f
  4032  0466  1903               	skipnz
  4033  0467  0AF9               	incf	___awdiv@dividend+1,f
  4034  0468                     l1443:
  4035  0468  3001               	movlw	1
  4036  0469  00FA               	movwf	??___awdiv
  4037  046A  087A               	movf	??___awdiv,w
  4038  046B  06C2               	xorwf	___awdiv@sign,f
  4039  046C                     l1445:
  4040  046C  01C3               	clrf	___awdiv@quotient
  4041  046D  01C4               	clrf	___awdiv@quotient+1
  4042  046E                     l1447:
  4043  046E  0876               	movf	___awdiv@divisor,w
  4044  046F  0477               	iorwf	___awdiv@divisor+1,w
  4045  0470  1903               	btfsc	3,2
  4046  0471  2C73               	goto	u821
  4047  0472  2C74               	goto	u820
  4048  0473                     u821:
  4049  0473  2CAB               	goto	l1467
  4050  0474                     u820:
  4051  0474                     l1449:
  4052  0474  01C1               	clrf	___awdiv@counter
  4053  0475  0AC1               	incf	___awdiv@counter,f
  4054  0476  2C82               	goto	l1455
  4055  0477                     l1451:
  4056  0477  3001               	movlw	1
  4057  0478                     u835:
  4058  0478  1003               	clrc
  4059  0479  0DF6               	rlf	___awdiv@divisor,f
  4060  047A  0DF7               	rlf	___awdiv@divisor+1,f
  4061  047B  3EFF               	addlw	-1
  4062  047C  1D03               	skipz
  4063  047D  2C78               	goto	u835
  4064  047E                     l1453:
  4065  047E  3001               	movlw	1
  4066  047F  00FA               	movwf	??___awdiv
  4067  0480  087A               	movf	??___awdiv,w
  4068  0481  07C1               	addwf	___awdiv@counter,f
  4069  0482                     l1455:
  4070  0482  1FF7               	btfss	___awdiv@divisor+1,7
  4071  0483  2C85               	goto	u841
  4072  0484  2C86               	goto	u840
  4073  0485                     u841:
  4074  0485  2C77               	goto	l1451
  4075  0486                     u840:
  4076  0486                     l1457:
  4077  0486  3001               	movlw	1
  4078  0487                     u855:
  4079  0487  1003               	clrc
  4080  0488  0DC3               	rlf	___awdiv@quotient,f
  4081  0489  0DC4               	rlf	___awdiv@quotient+1,f
  4082  048A  3EFF               	addlw	-1
  4083  048B  1D03               	skipz
  4084  048C  2C87               	goto	u855
  4085  048D  0877               	movf	___awdiv@divisor+1,w
  4086  048E  0279               	subwf	___awdiv@dividend+1,w
  4087  048F  1D03               	skipz
  4088  0490  2C93               	goto	u865
  4089  0491  0876               	movf	___awdiv@divisor,w
  4090  0492  0278               	subwf	___awdiv@dividend,w
  4091  0493                     u865:
  4092  0493  1C03               	skipc
  4093  0494  2C96               	goto	u861
  4094  0495  2C97               	goto	u860
  4095  0496                     u861:
  4096  0496  2C9E               	goto	l1463
  4097  0497                     u860:
  4098  0497                     l1459:
  4099  0497  0876               	movf	___awdiv@divisor,w
  4100  0498  02F8               	subwf	___awdiv@dividend,f
  4101  0499  0877               	movf	___awdiv@divisor+1,w
  4102  049A  1C03               	skipc
  4103  049B  03F9               	decf	___awdiv@dividend+1,f
  4104  049C  02F9               	subwf	___awdiv@dividend+1,f
  4105  049D                     l1461:
  4106  049D  1443               	bsf	___awdiv@quotient,0
  4107  049E                     l1463:
  4108  049E  3001               	movlw	1
  4109  049F                     u875:
  4110  049F  1003               	clrc
  4111  04A0  0CF7               	rrf	___awdiv@divisor+1,f
  4112  04A1  0CF6               	rrf	___awdiv@divisor,f
  4113  04A2  3EFF               	addlw	-1
  4114  04A3  1D03               	skipz
  4115  04A4  2C9F               	goto	u875
  4116  04A5                     l1465:
  4117  04A5  3001               	movlw	1
  4118  04A6  02C1               	subwf	___awdiv@counter,f
  4119  04A7  1D03               	btfss	3,2
  4120  04A8  2CAA               	goto	u881
  4121  04A9  2CAB               	goto	u880
  4122  04AA                     u881:
  4123  04AA  2C86               	goto	l1457
  4124  04AB                     u880:
  4125  04AB                     l1467:
  4126  04AB  0842               	movf	___awdiv@sign,w
  4127  04AC  1903               	btfsc	3,2
  4128  04AD  2CAF               	goto	u891
  4129  04AE  2CB0               	goto	u890
  4130  04AF                     u891:
  4131  04AF  2CB5               	goto	l1471
  4132  04B0                     u890:
  4133  04B0                     l1469:
  4134  04B0  09C3               	comf	___awdiv@quotient,f
  4135  04B1  09C4               	comf	___awdiv@quotient+1,f
  4136  04B2  0AC3               	incf	___awdiv@quotient,f
  4137  04B3  1903               	skipnz
  4138  04B4  0AC4               	incf	___awdiv@quotient+1,f
  4139  04B5                     l1471:
  4140  04B5  0844               	movf	___awdiv@quotient+1,w
  4141  04B6  00F7               	movwf	?___awdiv+1
  4142  04B7  0843               	movf	___awdiv@quotient,w
  4143  04B8  00F6               	movwf	?___awdiv
  4144  04B9                     l481:
  4145  04B9  0008               	return
  4146  04BA                     __end_of___awdiv:
  4147  007E                     btemp	set	126	;btemp
  4148  007E                     wtemp0	set	126
  4149                           
  4150                           	psect	config
  4151                           
  4152                           ;Config register CONFIG1 @ 0x2007
  4153                           ;	Oscillator Selection bits
  4154                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  4155                           ;	Watchdog Timer Enable bit
  4156                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4157                           ;	Power-up Timer Enable bit
  4158                           ;	PWRTE = OFF, PWRT disabled
  4159                           ;	RE3/MCLR pin function select bit
  4160                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4161                           ;	Code Protection bit
  4162                           ;	CP = OFF, Program memory code protection is disabled
  4163                           ;	Data Code Protection bit
  4164                           ;	CPD = OFF, Data memory code protection is disabled
  4165                           ;	Brown Out Reset Selection bits
  4166                           ;	BOREN = OFF, BOR disabled
  4167                           ;	Internal External Switchover bit
  4168                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4169                           ;	Fail-Safe Clock Monitor Enabled bit
  4170                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4171                           ;	Low Voltage Programming Enable bit
  4172                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4173                           ;	In-Circuit Debugger Mode bit
  4174                           ;	DEBUG = 0x1, unprogrammed default
  4175  2007                     	org	8199
  4176  2007  20D6               	dw	8406
  4177                           
  4178                           ;Config register CONFIG2 @ 0x2008
  4179                           ;	Brown-out Reset Selection bit
  4180                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4181                           ;	Flash Program Memory Self Write Enable bits
  4182                           ;	WRT = OFF, Write protection off
  4183  2008                     	org	8200
  4184  2008  3FFF               	dw	16383

Data Sizes:
    Strings     29
    Constant    10
    Data        1
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data(BANK0[20]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_LEER_S1
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LEER_S3->_spiWrite
    _LEER_S2->_spiWrite
    _LEER_S1->___awdiv
    ___xxtofl->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _LEER_S1->___xxtofl
    ___xxtofl->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    4414
                                             18 BANK0      7     7      0
                            _LEER_S1
                            _LEER_S2
                            _LEER_S3
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1697
                                              0 BANK0     17    10      7
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     145
                                              1 COMMON     3     3      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LEER_S3                                              3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _LEER_S2                                              3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _LEER_S1                                              3     3      0    1116
                                             11 COMMON     3     3      0
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              4 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEER_S1
     ___awdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LEER_S2
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LEER_S3
     _spiRead
       _spiReceiveWait
     _spiWrite
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
     _spiInit
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      49      12        0.0%
ABS                  0      0      49       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 16:36:15 2021

                        pc 0002             ___bmul@product 0072                _SSPSTATbits 0094  
                       _S1 002C                         _S2 002B                         _S3 002A  
                       l99 02D9               ___awdiv@sign 0042                         fsr 0004  
      ___wmul@multiplicand 0072                        l102 0527                        l105 030F  
                      l131 01A9                        l203 03C1                        l108 0345  
                      l124 0221                        l125 0226                        l142 01BA  
                      l134 019C                        l128 01A3                        l330 02A7  
                      l162 01C6                        l324 07EC                        l182 0240  
                      l191 0282                        l159 01BC                        _ADC 0024  
                      l328 028F                        l168 025E                        l600 0405  
                      l185 01D3                        l194 0450                        l354 01FA  
                      l610 037F                        l179 01A2                        l197 0210  
                      l481 04B9                        l761 05F2                        l763 0689  
                      l781 01E5                        l774 0653                        l775 065F  
                      l767 0637                        _RE0 0048                        _RE1 0049  
                      u700 01C2                        u701 01C1                        u710 0219  
                      u711 0218                        u800 0458                        u720 01DC  
                      u801 0457                        u721 01DB                        u810 0463  
                      u730 01E2                        u811 0462                        u731 01E1  
                      u820 0474                        u740 0289                        u900 03CA  
                      u821 0473                        u741 0288                        u901 03C9  
                      u840 0486                        u920 03DC                        u841 0485  
                      u921 03DB                        u770 02A3                        u690 01A9  
                      u835 0478                        u771 02A2                        u755 0290  
                      u691 01A8                        u915 03CE                        u860 0497  
                      u780 01EC                        u940 03ED                        u861 0496  
                      u765 0297                        u781 01EB                        u941 03EC  
                      u790 01F9                        u855 0487                        u791 01F8  
                      u935 03DD                        u880 04AB                        u960 0401  
                      u881 04AA                        u865 0493                        u961 0400  
                      u945 03E9                        u890 04B0                        u970 034C  
                      u891 04AF                        u875 049F                        u955 03F5  
                      u971 034B                        u990 035E                        u991 035D  
                      u985 0350                        fsr0 0004                        indf 0000  
          __end_of_LEER_S1 0528            __end_of_LEER_S2 0310            __end_of_LEER_S3 0346  
                     l1411 029D                       l1403 0283                       l1413 02A3  
                     l1405 0285                       l1421 01EC                       l1501 0346  
                     l1431 0451                       l1407 0289                       l1351 01C2  
                     l1423 01F0                       l1511 035E                       l1503 034C  
                     l1441 0463                       l1433 0454                       l1409 0296  
                     l1345 01A3                       l1361 0220                       l1353 0212  
                     l1601 02D8                       l1425 01F2                       l1417 01E7  
                     l1513 0368                       l1505 034F                       l1451 0477  
                     l1443 0468                       l1435 0458                       l1531 05FA  
                     l1523 05D1                       l1363 0198                       l1347 019E  
                     l1371 0228                       l1611 042A                       l1603 0406  
                     l1355 0219                       l1427 01F9                       l1419 01E8  
                     l1515 036E                       l1507 0356                       l1461 049D  
                     l1453 047E                       l1445 046C                       l1437 045D  
                     l1541 061C                       l1525 05D6                       l1365 01B2  
                     l1373 022B                       l1613 01C7                       l1605 040C  
                     l1621 0271                       l1381 01FC                       l1349 01BC  
                     l1357 021B                       l1517 0375                       l1509 035A  
                     l1701 0708                       l1471 04B5                       l1463 049E  
                     l1455 0482                       l1447 046E                       l1439 045F  
                     l1551 064D                       l1543 0620                       l1535 0603  
                     l1527 05DA                       l1367 01B7                       l1375 0231  
                     l1607 0415                       l1623 0277                       l1615 0260  
                     l1383 01FF                       l1631 039F                       l1359 021D  
                     l1519 037B                       l1391 01D5                       l1711 0721  
                     l1703 0710                       l1465 04A5                       l1457 0486  
                     l1449 0474                       l1561 0680                       l1553 0657  
                     l1545 062E                       l1537 0608                       l1529 05EA  
                     l1641 04CC                       l1377 0234                       l1609 0424  
                     l1625 027C                       l1617 0265                       l1385 0205  
                     l1633 03A5                       l1481 03CD                       l1393 01D6  
                     l1721 0732                       l1713 0726                       l1705 0714  
                     l1801 05AD                       l1459 0497                       l1467 04AB  
                     l1563 0681                       l1555 0661                       l1547 063E  
                     l1539 0615                       l1643 04D6                       l1635 04BA  
                     l1651 02DA                       l1379 023D                       l1619 026A  
                     l1387 0208                       l1627 0380                       l1571 02BA  
                     l1491 03F3                       l1483 03D4                       l1475 03C2  
                     l1395 01DC                       l1731 0769                       l1715 072C  
                     l1707 0718                       l1803 05B3                       l1469 04B0  
                     l1557 0677                       l1549 0649                       l1645 050E  
                     l1637 04BD                       l1653 02DD                       l1661 0310  
                     l1389 020D                       l1629 0383                       l1581 02C1  
                     l1573 02BB                       l1493 03F4                       l1485 03D8  
                     l1477 03C4                       l1397 01E2                       l1741 0797  
                     l1733 077D                       l1725 074E                       l1717 0730  
                     l1709 071C                       l1805 05B9                       l1559 067C  
                     l1647 0517                       l1639 04C6                       l1655 02E6  
                     l1663 0313                       l1591 02D0                       l1583 02CA  
                     l1575 02BC                       l1567 02A8                       l1495 03FB  
                     l1487 03DC                       l1479 03CA                       l1399 01E4  
                     l1743 07C5                       l1735 0783                       l1727 0758  
                     l1751 07E8                       l1671 068D                       l1807 05C1  
                     l1649 051A                       l1657 02EC                       l1665 031C  
                     l1761 0242                       l1593 02D2                       l1585 02CB  
                     l1577 02BF                       l1569 02B7                       l1489 03ED  
                     l1497 0401                       l1737 078B                       l1729 0768  
                     l1681 06A5                       l1673 0692                       l1659 02FF  
                     l1667 0322                       l1763 0244                       l1595 02D3  
                     l1587 02CE                       l1579 02C0                       l1739 0792  
                     l1747 07CD                       l1691 06D3                       l1683 06B1  
                     l1675 0698                       l1771 052D                       l1669 0335  
                     l1765 024F                       l1597 02D4                       l1589 02CF  
                     l1693 06D7                       l1685 06B5                       l1677 069F  
                     l1749 07D6                       l1781 054B                       l1773 0530  
                     l1767 0253                       l1599 02D7                       l1839 06FD  
                     l1687 06B7                       l1695 06E8                       l1679 06A4  
                     l1791 057A                       l1783 0557                       l1775 0535  
                     l1689 06C8                       l1793 057F                       l1785 0560  
                     l1777 053A                       l1769 0528                       l1699 06E9  
                     l1795 0584                       l1787 056C                       l1779 0542  
                     l1797 0588                       l1789 0575                       l1799 05A7  
                     STR_1 002E                       STR_2 0032                       STR_3 0036  
                     STR_4 001D                       u1000 0368                       u1001 0367  
                     u1020 037B                       u1021 037A                       u1005 0364  
                     u1110 064D                       u1030 05D6                       u1111 064C  
                     u1031 05D5                       u1015 036F                       u1120 0653  
                     u1040 05DA                       u1200 03AF                       u1121 0652  
                     u1105 0642                       u1041 05D9                       u1130 0657  
                     u1050 05FA                       u1210 03C1                       u1131 0656  
                     u1051 05F9                       u1211 03C0                       u1140 066C  
                     u1300 0768                       u1220 0698                       u1301 0767  
                     u1221 0697                       u1150 067C                       u1070 061B  
                     u1310 077D                       u1230 06B1                       u1151 067B  
                     u1071 061A                       u1311 077C                       u1231 06B0  
                     u1160 0680                       u1320 078B                       u1240 06E7  
                     u1161 067F                       u1145 0667                       u1065 060D  
                     u1321 078A                       u1305 0764                       u1241 06E6  
                     u1090 063D                       u1170 0265                       u1330 07D6  
                     u1250 0718                       u1091 063C                       u1171 0264  
                     u1331 07D5                       u1315 0779                       u1251 0717  
                     u1180 0277                       u1340 07E8                       u1260 0726  
                     u1085 062F                       u1181 0276                       u1341 07E7  
                     u1261 0725                       u1190 038D                       u1350 025E  
                     u1270 072C                       u1407 0238                       u1351 025D  
                     u1271 072B                       u1280 074D                       u1417 0317  
                     u1281 074C                       u1290 0758                       u1427 0330  
                     u1291 0757                       u1437 033E                       u1285 0749  
                     u1447 02E1                       u1367 020A                       u1457 02FA  
                     u1377 0410                       u1467 0308                       u1387 041F  
                     u1477 04C1                       u1397 042E                       u1487 0512  
                     u1497 0520                       _RCIF 0065                       _TEMP 0020  
                     _TRMT 04C1                       _data 002D          ?_Lcd_Write_String 0073  
                     _cont 0028                       _main 0528                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0241  
        ___bmul@multiplier 0073                      ?_main 0070            __end_of___awdiv 04BA  
                    _ANSEL 0188            ___awdiv@divisor 0076            __end_of___lwdiv 0406  
          __end_of___lwmod 0380            ___awdiv@counter 0041                      _RCREG 001A  
                    _SPBRG 0099                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 001D            __end_of_isdigit 01E6  
                    _setup 02A8                      pclath 000A            __end_of_spiInit 0227  
          __end_of_spiRead 01BB                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07ED           __end_of_Lcd_Init 0451           __end_of_Lcd_Port 01A3  
          __initialization 07ED               __end_of_main 05CE           USART_ESCRITURA@a 0070  
                   ??_main 0053         __size_of_Lcd_Clear 000D                  ??_LEER_S1 007B  
                ??_LEER_S2 0071                  ??_LEER_S3 0071           ___awdiv@dividend 0078  
                   ?_setup 0070                     _ANSELH 0189              USART_STRING@a 0072  
            USART_STRING@i 0073                  ??_Lcd_Cmd 0071                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0016                     _TRISC0 0438                     _TRISC1 0439  
                   _TRISC2 043A                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 068A  
                   ___bmul 01E6                     ___wmul 0283                  ??___awdiv 007A  
                   _hablar 005A                  ??___lwdiv 0074                  ??___lwmod 007C  
         ___awdiv@quotient 0043                  ??_isdigit 0070           __end_of_spiWrite 019D  
                ??_spiInit 0073                  ??_spiRead 0070                  ??_sprintf 0048  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074               ___xxtofl@arg 004F  
             ___xxtofl@exp 004E               ___xxtofl@val 0045    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 01D4        ___bmul@multiplicand 0070             __pcstackCOMMON 0070  
             __pidataBANK0 0196              __end_of_setup 02DA             _Lcd_Set_Cursor 025F  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0074  
               __pbssBANK0 0020                 __pmaintext 0528                    ?___bmul 0070  
                  ?___wmul 0070    __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 0283   __size_of_USART_ESCRITURA 000C                    _LEER_S1 04BA  
                  _LEER_S2 02DA                    _LEER_S3 0310                  ?___xxtofl 0045  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 01FB                    _Lcd_Cmd 0227  
                ?_spiWrite 0070            __size_of___bmul 0015                    ___awdiv 0451  
          __size_of___wmul 0025                    ___lwdiv 03C2                    ___lwmod 0346  
          ?_Lcd_Set_Cursor 0074                    __ptext1 068A                    __ptext2 01D4  
                  __ptext3 0346                    __ptext4 03C2                    __ptext5 01E6  
                  __ptext6 02A8                    __ptext7 0211                    __ptext8 0241  
                  __ptext9 01BB                    _dpowers 0013                    _isdigit 01D4  
               ??___xxtofl 0049                    _spiInit 0211                    _spiRead 01B2  
                  _sprintf 068A                    clrloop0 01AB     __end_of_Lcd_Write_Char 0211  
     end_of_initialization 07FC                  _RCSTAbits 0018                 ??_spiWrite 0070  
                Lcd_Port@a 0070                  _PORTCbits 0007              ___xxtofl@sign 004D  
        ??_USART_ESCRITURA 0070                spiWrite@dat 0070              ?_USART_STRING 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
                _TXSTAbits 0098                  _Lcd_Clear 01C7             _spiReceiveWait 01A3  
           __end_of___bmul 01FB             __end_of___wmul 02A8           _Lcd_Write_String 0380  
      start_initialization 07ED             ??_USART_STRING 0071          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 01AA                 ?_Lcd_Clear 0070  
                 ??___bmul 0071                   ??___wmul 0074                __pdataBANK0 005A  
          Lcd_Write_Char@a 0072                   ?_LEER_S1 0070                   ?_LEER_S2 0070  
                 ?_LEER_S3 0070                  ___latbits 0002              __pcstackBANK0 0041  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 004C  
              sprintf@prec 0050           ___lwdiv@dividend 0072            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0075                   ?___awdiv 0076                   ?___lwdiv 0070  
                 ?___lwmod 0078          __size_of_spiWrite 0006                  __pstrings 0003  
                 ?_isdigit 0070                   ?_spiInit 0070                   ?_spiRead 0070  
         ___lwdiv@quotient 0075                   ?_sprintf 0041             __size_of_setup 0032  
     spiInit@sTransmitEdge 0072             ___wmul@product 0074                  clear_ram0 01AA  
                 _PIE1bits 008C         spiInit@sDataSample 0070                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074       __end_of_USART_STRING 025F            _USART_ESCRITURA 01BB  
              __stringbase 0012          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
         __size_of_LEER_S1 006E           __size_of_LEER_S2 0036           __size_of_LEER_S3 0036  
                 _Lcd_Init 0406                   _Lcd_Port 019D   __end_of_Lcd_Write_String 03C2  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                _isdigit$955 0070  
               sprintf@val 004E                   ___xxtofl 05CE           __size_of_isdigit 0012  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 0380  
                 __ptext11 01FB                   __ptext20 0197                   __ptext12 025F  
                 __ptext21 01B2                   __ptext13 0406                   __ptext22 01A3  
                 __ptext14 01C7                   __ptext23 05CE                   __ptext15 0227  
                 __ptext24 0283                   __ptext16 019D                   __ptext25 0451  
                 __ptext17 0310                   __ptext18 02DA                   __ptext19 04BA  
         __size_of_spiInit 0016           __size_of_spiRead 0009           __size_of_sprintf 0163  
            __size_of_main 00A6    __end_of_USART_ESCRITURA 01C7                   _spiWrite 0197  
             spiInit@sType 0073          spiInit@sClockIdle 0071                 _INTCONbits 000B  
                 isdigit@c 0071                  sprintf@ap 004B                  sprintf@sp 004D  
         ___lwmod@dividend 007A           ??_spiReceiveWait 0070      __size_of_USART_STRING 001E  
                stringcode 000D         Lcd_Set_Cursor@temp 0077                   sprintf@c 0051  
                 sprintf@f 0041            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003               _USART_STRING 0241  
               _USART_LEER 0029           ?_USART_ESCRITURA 0070  
