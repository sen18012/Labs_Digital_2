

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 18:37:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462                           
   463                           	psect	strings
   464  0003                     __pstrings:
   465  0003                     stringtab:
   466  0003                     __stringtab:
   467                           
   468                           ;	String table - string pointers are 1 byte each
   469  0003  1BFF               	btfsc	btemp+1,7
   470  0004  280D               	ljmp	stringcode
   471  0005  1383               	bcf	3,7
   472  0006  187F               	btfsc	btemp+1,0
   473  0007  1783               	bsf	3,7
   474  0008  0800               	movf	0,w
   475  0009  0A84               	incf	4,f
   476  000A  1903               	skipnz
   477  000B  0AFF               	incf	btemp+1,f
   478  000C  0008               	return
   479  000D                     stringcode:
   480  000D                     stringdir:
   481  000D  3000               	movlw	high stringdir
   482  000E  008A               	movwf	10
   483  000F  0804               	movf	4,w
   484  0010  0A84               	incf	4,f
   485  0011  0782               	addwf	2,f
   486  0012                     __stringbase:
   487  0012  3400               	retlw	0
   488  0013                     __end_of__stringtab:
   489  0013                     _dpowers:
   490  0013  3401               	retlw	1
   491  0014  3400               	retlw	0
   492  0015  340A               	retlw	10
   493  0016  3400               	retlw	0
   494  0017  3464               	retlw	100
   495  0018  3400               	retlw	0
   496  0019  34E8               	retlw	232
   497  001A  3403               	retlw	3
   498  001B  3410               	retlw	16
   499  001C  3427               	retlw	39
   500  001D                     __end_of_dpowers:
   501  0019                     _TXREG	set	25
   502  0013                     _SSPBUF	set	19
   503  0014                     _SSPCON	set	20
   504  001A                     _RCREG	set	26
   505  0018                     _RCSTAbits	set	24
   506  000B                     _INTCONbits	set	11
   507  0007                     _PORTCbits	set	7
   508  0008                     _PORTD	set	8
   509  0009                     _PORTE	set	9
   510  0007                     _PORTC	set	7
   511  0006                     _PORTB	set	6
   512  0049                     _RE1	set	73
   513  0048                     _RE0	set	72
   514  0065                     _RCIF	set	101
   515  0094                     _SSPSTATbits	set	148
   516  0094                     _SSPSTAT	set	148
   517  0098                     _TXSTAbits	set	152
   518  0099                     _SPBRG	set	153
   519  009A                     _SPBRGH	set	154
   520  008C                     _PIE1bits	set	140
   521  0089                     _TRISE	set	137
   522  0086                     _TRISB	set	134
   523  0088                     _TRISD	set	136
   524  04C1                     _TRMT	set	1217
   525  043B                     _TRISC3	set	1083
   526  043D                     _TRISC5	set	1085
   527  043A                     _TRISC2	set	1082
   528  0439                     _TRISC1	set	1081
   529  0438                     _TRISC0	set	1080
   530  0189                     _ANSELH	set	393
   531  0188                     _ANSEL	set	392
   532  001D                     STR_4:
   533  001D  3425               	retlw	37	;'%'
   534  001E  342E               	retlw	46	;'.'
   535  001F  3432               	retlw	50	;'2'
   536  0020  3469               	retlw	105	;'i'
   537  0021  3456               	retlw	86	;'V'
   538  0022  3420               	retlw	32	;' '
   539  0023  3420               	retlw	32	;' '
   540  0024  3420               	retlw	32	;' '
   541  0025  3425               	retlw	37	;'%'
   542  0026  342E               	retlw	46	;'.'
   543  0027  3433               	retlw	51	;'3'
   544  0028  3469               	retlw	105	;'i'
   545  0029  3420               	retlw	32	;' '
   546  002A  3420               	retlw	32	;' '
   547  002B  3420               	retlw	32	;' '
   548  002C  3420               	retlw	32	;' '
   549  002D  3425               	retlw	37	;'%'
   550  002E  342E               	retlw	46	;'.'
   551  002F  3432               	retlw	50	;'2'
   552  0030  3469               	retlw	105	;'i'
   553  0031  3400               	retlw	0
   554  0032                     STR_1:
   555  0032  3453               	retlw	83	;'S'
   556  0033  3431               	retlw	49	;'1'
   557  0034  343A               	retlw	58	;':'
   558  0035  3400               	retlw	0
   559  0036                     STR_2:
   560  0036  3453               	retlw	83	;'S'
   561  0037  3432               	retlw	50	;'2'
   562  0038  343A               	retlw	58	;':'
   563  0039  3400               	retlw	0
   564  003A                     STR_3:
   565  003A  3453               	retlw	83	;'S'
   566  003B  3433               	retlw	51	;'3'
   567  003C  343A               	retlw	58	;':'
   568  003D  3400               	retlw	0
   569                           
   570                           	psect	cinit
   571  07F3                     start_initialization:	
   572                           ; #config settings
   573                           
   574  07F3                     __initialization:
   575                           
   576                           ; Clear objects allocated to BANK0
   577  07F3  1383               	bcf	3,7	;select IRP bank0
   578  07F4  3020               	movlw	low __pbssBANK0
   579  07F5  0084               	movwf	4
   580  07F6  3056               	movlw	low (__pbssBANK0+54)
   581  07F7  120A  118A  2265  120A  118A  	fcall	clear_ram0
   582  07FC                     end_of_initialization:	
   583                           ;End of C runtime variable initialization code
   584                           
   585  07FC                     __end_of__initialization:
   586  07FC  0183               	clrf	3
   587  07FD  120A  118A  2DF0   	ljmp	_main	;jump to C main() function
   588                           
   589                           	psect	bssBANK0
   590  0020                     __pbssBANK0:
   591  0020                     _data_S3:
   592  0020                     	ds	8
   593  0028                     _data_S2:
   594  0028                     	ds	8
   595  0030                     _data_S1:
   596  0030                     	ds	8
   597  0038                     _TEMP:
   598  0038                     	ds	2
   599  003A                     _ADC:
   600  003A                     	ds	2
   601  003C                     _hablar:
   602  003C                     	ds	1
   603  003D                     _cont:
   604  003D                     	ds	1
   605  003E                     _USART_LEER:
   606  003E                     	ds	1
   607  003F                     _S3:
   608  003F                     	ds	1
   609  0040                     _S2:
   610  0040                     	ds	1
   611  0041                     _S1:
   612  0041                     	ds	1
   613  0042                     _data:
   614  0042                     	ds	20
   615                           
   616                           	psect	clrtext
   617  0265                     clear_ram0:	
   618                           ;	Called with FSR containing the base address, and
   619                           ;	W with the last address+1
   620                           
   621  0265  0064               	clrwdt	;clear the watchdog before getting into this loop
   622  0266                     clrloop0:
   623  0266  0180               	clrf	0	;clear RAM location pointed to by FSR
   624  0267  0A84               	incf	4,f	;increment pointer
   625  0268  0604               	xorwf	4,w	;XOR with final address
   626  0269  1903               	btfsc	3,2	;have we reached the end yet?
   627  026A  3400               	retlw	0	;all done for this memory range, return
   628  026B  0604               	xorwf	4,w	;XOR again to restore value
   629  026C  2A66               	goto	clrloop0	;do the next byte
   630                           
   631                           	psect	cstackCOMMON
   632  0070                     __pcstackCOMMON:
   633  0070                     ?_isdigit:
   634  0070                     ?_setup:	
   635                           ; 1 bit 
   636                           
   637  0070                     ?_Lcd_Init:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_Lcd_Clear:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_LEER_S1:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_LEER_S2:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LEER_S3:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_USART_STRING:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_USART_ESCRITURA:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_USART_ESCRITURA:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_spiInit:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_spiWrite:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_spiWrite:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_spiRead:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_spiRead:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_isdigit:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_spiReceiveWait:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_spiReceiveWait:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_Lcd_Port:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_Lcd_Port:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Lcd_Cmd:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Lcd_Write_Char:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?___bmul:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?___wmul:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?___lwdiv:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  0070                     spiInit@sDataSample:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     spiWrite@dat:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     USART_ESCRITURA@a:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     Lcd_Port@a:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ___bmul@multiplicand:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     _isdigit$958:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ___wmul@multiplier:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ___lwdiv@divisor:	
   731                           ; 2 bytes @ 0x0
   732                           
   733                           
   734                           ; 2 bytes @ 0x0
   735  0070                     	ds	1
   736  0071                     ??_LEER_S2:
   737  0071                     ??_USART_STRING:	
   738                           ; 1 bytes @ 0x1
   739                           
   740  0071                     ??_Lcd_Cmd:	
   741                           ; 1 bytes @ 0x1
   742                           
   743  0071                     ??_Lcd_Write_Char:	
   744                           ; 1 bytes @ 0x1
   745                           
   746  0071                     ??___bmul:	
   747                           ; 1 bytes @ 0x1
   748                           
   749  0071                     spiInit@sClockIdle:	
   750                           ; 1 bytes @ 0x1
   751                           
   752  0071                     isdigit@c:	
   753                           ; 1 bytes @ 0x1
   754                           
   755                           
   756                           ; 1 bytes @ 0x1
   757  0071                     	ds	1
   758  0072                     spiInit@sTransmitEdge:
   759  0072                     USART_STRING@a:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  0072                     Lcd_Write_Char@a:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     ___bmul@product:	
   766                           ; 1 bytes @ 0x2
   767                           
   768  0072                     ___wmul@multiplicand:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     ___lwdiv@dividend:	
   772                           ; 2 bytes @ 0x2
   773                           
   774                           
   775                           ; 2 bytes @ 0x2
   776  0072                     	ds	1
   777  0073                     ?_Lcd_Write_String:
   778  0073                     ??_spiInit:	
   779                           ; 1 bytes @ 0x3
   780                           
   781  0073                     spiInit@sType:	
   782                           ; 1 bytes @ 0x3
   783                           
   784  0073                     USART_STRING@i:	
   785                           ; 1 bytes @ 0x3
   786                           
   787  0073                     Lcd_Cmd@a:	
   788                           ; 1 bytes @ 0x3
   789                           
   790  0073                     ___bmul@multiplier:	
   791                           ; 1 bytes @ 0x3
   792                           
   793  0073                     Lcd_Write_String@a:	
   794                           ; 1 bytes @ 0x3
   795                           
   796                           
   797                           ; 2 bytes @ 0x3
   798  0073                     	ds	1
   799  0074                     ??_setup:
   800  0074                     ??_Lcd_Init:	
   801                           ; 1 bytes @ 0x4
   802                           
   803  0074                     ??_Lcd_Clear:	
   804                           ; 1 bytes @ 0x4
   805                           
   806  0074                     ?_Lcd_Set_Cursor:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0074                     ??___wmul:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ??___lwdiv:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     Lcd_Set_Cursor@b:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ___wmul@product:	
   819                           ; 1 bytes @ 0x4
   820                           
   821                           
   822                           ; 2 bytes @ 0x4
   823  0074                     	ds	1
   824  0075                     ??_Lcd_Set_Cursor:
   825  0075                     ??_Lcd_Write_String:	
   826                           ; 1 bytes @ 0x5
   827                           
   828  0075                     ___lwdiv@quotient:	
   829                           ; 1 bytes @ 0x5
   830                           
   831                           
   832                           ; 2 bytes @ 0x5
   833  0075                     	ds	1
   834  0076                     ?___awdiv:
   835  0076                     Lcd_Set_Cursor@a:	
   836                           ; 2 bytes @ 0x6
   837                           
   838  0076                     ___awdiv@divisor:	
   839                           ; 1 bytes @ 0x6
   840                           
   841                           
   842                           ; 2 bytes @ 0x6
   843  0076                     	ds	1
   844  0077                     Lcd_Set_Cursor@temp:
   845  0077                     ___lwdiv@counter:	
   846                           ; 1 bytes @ 0x7
   847                           
   848                           
   849                           ; 1 bytes @ 0x7
   850  0077                     	ds	1
   851  0078                     ?___lwmod:
   852  0078                     Lcd_Write_String@i:	
   853                           ; 2 bytes @ 0x8
   854                           
   855  0078                     ___awdiv@dividend:	
   856                           ; 2 bytes @ 0x8
   857                           
   858  0078                     ___lwmod@divisor:	
   859                           ; 2 bytes @ 0x8
   860                           
   861                           
   862                           ; 2 bytes @ 0x8
   863  0078                     	ds	2
   864  007A                     ??___awdiv:
   865  007A                     ___lwmod@dividend:	
   866                           ; 1 bytes @ 0xA
   867                           
   868                           
   869                           ; 2 bytes @ 0xA
   870  007A                     	ds	1
   871  007B                     ??_LEER_S1:
   872  007B                     ??_LEER_S3:	
   873                           ; 1 bytes @ 0xB
   874                           
   875                           
   876                           ; 1 bytes @ 0xB
   877  007B                     	ds	1
   878  007C                     ??___lwmod:
   879                           
   880                           ; 1 bytes @ 0xC
   881  007C                     	ds	1
   882  007D                     ___lwmod@counter:
   883                           
   884                           ; 1 bytes @ 0xD
   885  007D                     	ds	1
   886                           
   887                           	psect	cstackBANK0
   888  0056                     __pcstackBANK0:
   889  0056                     ?_sprintf:
   890  0056                     sprintf@f:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0056                     ___awdiv@counter:	
   894                           ; 1 bytes @ 0x0
   895                           
   896                           
   897                           ; 1 bytes @ 0x0
   898  0056                     	ds	1
   899  0057                     ___awdiv@sign:
   900                           
   901                           ; 1 bytes @ 0x1
   902  0057                     	ds	1
   903  0058                     ___awdiv@quotient:
   904                           
   905                           ; 2 bytes @ 0x2
   906  0058                     	ds	5
   907  005D                     ??_sprintf:
   908                           
   909                           ; 1 bytes @ 0x7
   910  005D                     	ds	3
   911  0060                     sprintf@ap:
   912                           
   913                           ; 1 bytes @ 0xA
   914  0060                     	ds	1
   915  0061                     sprintf@flag:
   916                           
   917                           ; 1 bytes @ 0xB
   918  0061                     	ds	1
   919  0062                     sprintf@sp:
   920                           
   921                           ; 1 bytes @ 0xC
   922  0062                     	ds	1
   923  0063                     sprintf@val:
   924                           
   925                           ; 2 bytes @ 0xD
   926  0063                     	ds	2
   927  0065                     sprintf@prec:
   928                           
   929                           ; 1 bytes @ 0xF
   930  0065                     	ds	1
   931  0066                     sprintf@c:
   932                           
   933                           ; 1 bytes @ 0x10
   934  0066                     	ds	1
   935  0067                     ??_main:
   936                           
   937                           ; 1 bytes @ 0x11
   938  0067                     	ds	3
   939                           
   940                           	psect	maintext
   941  05F0                     __pmaintext:	
   942 ;;
   943 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   944 ;;
   945 ;; *************** function _main *****************
   946 ;; Defined at:
   947 ;;		line 105 in file "main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : B00/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       3       0       0       0
   964 ;;      Totals:         0       3       0       0       0
   965 ;;Total ram usage:        3 bytes
   966 ;; Hardware stack levels required when called:    3
   967 ;; This function calls:
   968 ;;		_LEER_S1
   969 ;;		_LEER_S2
   970 ;;		_LEER_S3
   971 ;;		_Lcd_Clear
   972 ;;		_Lcd_Init
   973 ;;		_Lcd_Set_Cursor
   974 ;;		_Lcd_Write_String
   975 ;;		_USART_ESCRITURA
   976 ;;		_USART_STRING
   977 ;;		_setup
   978 ;;		_sprintf
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _main
   986  05F0                     _main:
   987  05F0                     l1921:	
   988                           ;incstack = 0
   989                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   990                           
   991                           
   992                           ;main.c: 106:     setup();
   993  05F0  120A  118A  2399  120A  118A  	fcall	_setup
   994  05F5                     l1923:
   995                           
   996                           ;main.c: 107:     TRISD = 0x00;
   997  05F5  1683               	bsf	3,5	;RP0=1, select bank1
   998  05F6  1303               	bcf	3,6	;RP1=0, select bank1
   999  05F7  0188               	clrf	8	;volatile
  1000  05F8                     l1925:
  1001                           
  1002                           ;main.c: 108:     Lcd_Init();
  1003  05F8  120A  118A  2493  120A  118A  	fcall	_Lcd_Init
  1004  05FD                     l1927:
  1005                           
  1006                           ;main.c: 109:     Lcd_Clear();
  1007  05FD  120A  118A  2282  120A  118A  	fcall	_Lcd_Clear
  1008  0602                     l1929:
  1009                           
  1010                           ;main.c: 110:     Lcd_Set_Cursor(1, 1);
  1011  0602  01F4               	clrf	Lcd_Set_Cursor@b
  1012  0603  0AF4               	incf	Lcd_Set_Cursor@b,f
  1013  0604  3001               	movlw	1
  1014  0605  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
  1015  060A                     l1931:
  1016                           
  1017                           ;main.c: 111:     Lcd_Write_String("S1:");
  1018  060A  3020               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1019  060B  00F3               	movwf	Lcd_Write_String@a
  1020  060C  3080               	movlw	128
  1021  060D  00F4               	movwf	Lcd_Write_String@a+1
  1022  060E  120A  118A  240D  120A  118A  	fcall	_Lcd_Write_String
  1023  0613                     l1933:
  1024                           
  1025                           ;main.c: 112:     Lcd_Set_Cursor(1, 7);
  1026  0613  3007               	movlw	7
  1027  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0616  00E7               	movwf	??_main
  1030  0617  0867               	movf	??_main,w
  1031  0618  00F4               	movwf	Lcd_Set_Cursor@b
  1032  0619  3001               	movlw	1
  1033  061A  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
  1034  061F                     l1935:
  1035                           
  1036                           ;main.c: 113:     Lcd_Write_String("S2:");
  1037  061F  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1038  0620  00F3               	movwf	Lcd_Write_String@a
  1039  0621  3080               	movlw	128
  1040  0622  00F4               	movwf	Lcd_Write_String@a+1
  1041  0623  120A  118A  240D  120A  118A  	fcall	_Lcd_Write_String
  1042  0628                     l1937:
  1043                           
  1044                           ;main.c: 114:     Lcd_Set_Cursor(1, 14);
  1045  0628  300E               	movlw	14
  1046  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1047  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1048  062B  00E7               	movwf	??_main
  1049  062C  0867               	movf	??_main,w
  1050  062D  00F4               	movwf	Lcd_Set_Cursor@b
  1051  062E  3001               	movlw	1
  1052  062F  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
  1053  0634                     l1939:
  1054                           
  1055                           ;main.c: 115:     Lcd_Write_String("S3:");
  1056  0634  3028               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1057  0635  00F3               	movwf	Lcd_Write_String@a
  1058  0636  3080               	movlw	128
  1059  0637  00F4               	movwf	Lcd_Write_String@a+1
  1060  0638  120A  118A  240D  120A  118A  	fcall	_Lcd_Write_String
  1061  063D                     l1941:
  1062                           
  1063                           ;main.c: 118:         LEER_S1();
  1064  063D  120A  118A  24DE  120A  118A  	fcall	_LEER_S1
  1065  0642                     l1943:
  1066                           
  1067                           ;main.c: 119:         LEER_S2();
  1068  0642  120A  118A  2363  120A  118A  	fcall	_LEER_S2
  1069  0647                     l1945:
  1070                           
  1071                           ;main.c: 120:         LEER_S3();
  1072  0647  120A  118A  252E  120A  118A  	fcall	_LEER_S3
  1073  064C                     l1947:
  1074                           
  1075                           ;main.c: 121:         PORTB = S3;
  1076  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1077  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1078  064E  083F               	movf	_S3,w
  1079  064F  0086               	movwf	6	;volatile
  1080  0650                     l1949:
  1081                           
  1082                           ;main.c: 127:        sprintf(data, "%.2iV   %.3i    %.2i", ADC, S2, TEMP);
  1083  0650  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1084  0651  00E7               	movwf	??_main
  1085  0652  0867               	movf	??_main,w
  1086  0653  00D6               	movwf	sprintf@f
  1087  0654  083B               	movf	_ADC+1,w
  1088  0655  00D8               	movwf	?_sprintf+2
  1089  0656  083A               	movf	_ADC,w
  1090  0657  00D7               	movwf	?_sprintf+1
  1091  0658  0840               	movf	_S2,w
  1092  0659  00E8               	movwf	??_main+1
  1093  065A  01E9               	clrf	??_main+2
  1094  065B  0868               	movf	??_main+1,w
  1095  065C  00D9               	movwf	?_sprintf+3
  1096  065D  0869               	movf	??_main+2,w
  1097  065E  00DA               	movwf	?_sprintf+4
  1098  065F  0839               	movf	_TEMP+1,w
  1099  0660  00DC               	movwf	?_sprintf+6
  1100  0661  0838               	movf	_TEMP,w
  1101  0662  00DB               	movwf	?_sprintf+5
  1102  0663  3042               	movlw	(low (_data| 0))& (0+255)
  1103  0664  120A  118A  2690  120A  118A  	fcall	_sprintf
  1104  0669                     l1951:
  1105                           
  1106                           ;main.c: 129:        USART_STRING(data);
  1107  0669  3042               	movlw	(low (_data| 0))& (0+255)
  1108  066A  120A  118A  22FC  120A  118A  	fcall	_USART_STRING
  1109  066F                     l1953:
  1110                           
  1111                           ;main.c: 134:        USART_ESCRITURA(13);
  1112  066F  300D               	movlw	13
  1113  0670  120A  118A  2276  120A  118A  	fcall	_USART_ESCRITURA
  1114  0675                     l1955:
  1115                           
  1116                           ;main.c: 135:        USART_ESCRITURA(10);
  1117  0675  300A               	movlw	10
  1118  0676  120A  118A  2276  120A  118A  	fcall	_USART_ESCRITURA
  1119  067B                     l1957:
  1120                           
  1121                           ;main.c: 139:        Lcd_Set_Cursor(2, 1);
  1122  067B  01F4               	clrf	Lcd_Set_Cursor@b
  1123  067C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1124  067D  3002               	movlw	2
  1125  067E  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
  1126  0683                     l1959:
  1127                           
  1128                           ;main.c: 140:        Lcd_Write_String(data);
  1129  0683  3042               	movlw	(low (_data| 0))& (0+255)
  1130  0684  00F3               	movwf	Lcd_Write_String@a
  1131  0685  3000               	movlw	0
  1132  0686  00F4               	movwf	Lcd_Write_String@a+1
  1133  0687  120A  118A  240D  120A  118A  	fcall	_Lcd_Write_String
  1134  068C  2E3D               	goto	l1941
  1135  068D  120A  118A  2800   	ljmp	start
  1136  0690                     __end_of_main:
  1137                           
  1138                           	psect	text1
  1139  0690                     __ptext1:	
  1140 ;; *************** function _sprintf *****************
  1141 ;; Defined at:
  1142 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  sp              1    wreg     PTR unsigned char 
  1145 ;;		 -> data(20), 
  1146 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1147 ;;		 -> STR_4(21), 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  1150 ;;		 -> data(20), 
  1151 ;;  tmpval          4    0        struct .
  1152 ;;  val             2   13[BANK0 ] unsigned int 
  1153 ;;  cp              2    0        PTR const unsigned char 
  1154 ;;  len             2    0        unsigned int 
  1155 ;;  c               1   16[BANK0 ] unsigned char 
  1156 ;;  prec            1   15[BANK0 ] char 
  1157 ;;  flag            1   11[BANK0 ] unsigned char 
  1158 ;;  ap              1   10[BANK0 ] PTR void [1]
  1159 ;;		 -> ?_sprintf(2), 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  2    0[BANK0 ] int 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       7       0       0       0
  1170 ;;      Locals:         0       7       0       0       0
  1171 ;;      Temps:          0       3       0       0       0
  1172 ;;      Totals:         0      17       0       0       0
  1173 ;;Total ram usage:       17 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    1
  1176 ;; This function calls:
  1177 ;;		___bmul
  1178 ;;		___lwdiv
  1179 ;;		___lwmod
  1180 ;;		_isdigit
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _sprintf
  1188  0690                     _sprintf:
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1192                           ;sprintf@sp stored from wreg
  1193  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0692  00E2               	movwf	sprintf@sp
  1196  0693                     l1823:
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1199  0693  3057               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1200  0694  00DD               	movwf	??_sprintf
  1201  0695  085D               	movf	??_sprintf,w
  1202  0696  00E0               	movwf	sprintf@ap
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1205  0697  2FDC               	goto	l1901
  1206  0698                     l1825:
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1209  0698  3025               	movlw	37
  1210  0699  0666               	xorwf	sprintf@c,w
  1211  069A  1903               	btfsc	3,2
  1212  069B  2E9D               	goto	u1581
  1213  069C  2E9E               	goto	u1580
  1214  069D                     u1581:
  1215  069D  2EAA               	goto	l1831
  1216  069E                     u1580:
  1217  069E                     l1827:
  1218                           
  1219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1220  069E  0866               	movf	sprintf@c,w
  1221  069F  00DD               	movwf	??_sprintf
  1222  06A0  0862               	movf	sprintf@sp,w
  1223  06A1  0084               	movwf	4
  1224  06A2  085D               	movf	??_sprintf,w
  1225  06A3  1383               	bcf	3,7	;select IRP bank0
  1226  06A4  0080               	movwf	0
  1227  06A5                     l1829:
  1228  06A5  3001               	movlw	1
  1229  06A6  00DD               	movwf	??_sprintf
  1230  06A7  085D               	movf	??_sprintf,w
  1231  06A8  07E2               	addwf	sprintf@sp,f
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1234  06A9  2FDC               	goto	l1901
  1235  06AA                     l1831:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1238  06AA  01E1               	clrf	sprintf@flag
  1239  06AB                     l1833:
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1242  06AB  0856               	movf	sprintf@f,w
  1243  06AC  0084               	movwf	4
  1244  06AD  120A  118A  200D  120A  118A  	fcall	stringdir
  1245  06B2  3A2E               	xorlw	46
  1246  06B3  1D03               	skipz
  1247  06B4  2EB6               	goto	u1591
  1248  06B5  2EB7               	goto	u1590
  1249  06B6                     u1591:
  1250  06B6  2EEE               	goto	l1847
  1251  06B7                     u1590:
  1252  06B7                     l1835:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1255  06B7  3001               	movlw	1
  1256  06B8  00DD               	movwf	??_sprintf
  1257  06B9  085D               	movf	??_sprintf,w
  1258  06BA  07D6               	addwf	sprintf@f,f
  1259  06BB                     l1837:
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1262  06BB  01E5               	clrf	sprintf@prec
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1265  06BC  2EDD               	goto	l1845
  1266  06BD                     l1839:
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1269  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1270  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1271  06BF  0865               	movf	sprintf@prec,w
  1272  06C0  00DD               	movwf	??_sprintf
  1273  06C1  085D               	movf	??_sprintf,w
  1274  06C2  00F0               	movwf	___bmul@multiplicand
  1275  06C3  300A               	movlw	10
  1276  06C4  120A  118A  22A1  120A  118A  	fcall	___bmul
  1277  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1278  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1279  06CB  00DE               	movwf	??_sprintf+1
  1280  06CC  085E               	movf	??_sprintf+1,w
  1281  06CD  00E5               	movwf	sprintf@prec
  1282  06CE                     l1841:
  1283                           
  1284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1285  06CE  0856               	movf	sprintf@f,w
  1286  06CF  0084               	movwf	4
  1287  06D0  120A  118A  200D  120A  118A  	fcall	stringdir
  1288  06D5  3ED0               	addlw	-48
  1289  06D6  00DD               	movwf	??_sprintf
  1290  06D7  085D               	movf	??_sprintf,w
  1291  06D8  07E5               	addwf	sprintf@prec,f
  1292  06D9                     l1843:
  1293  06D9  3001               	movlw	1
  1294  06DA  00DD               	movwf	??_sprintf
  1295  06DB  085D               	movf	??_sprintf,w
  1296  06DC  07D6               	addwf	sprintf@f,f
  1297  06DD                     l1845:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1300  06DD  0856               	movf	sprintf@f,w
  1301  06DE  0084               	movwf	4
  1302  06DF  120A  118A  200D  120A  118A  	fcall	stringdir
  1303  06E4  120A  118A  228F  120A  118A  	fcall	_isdigit
  1304  06E9  1803               	btfsc	3,0
  1305  06EA  2EEC               	goto	u1601
  1306  06EB  2EED               	goto	u1600
  1307  06EC                     u1601:
  1308  06EC  2EBD               	goto	l1839
  1309  06ED                     u1600:
  1310  06ED  2EEF               	goto	l1851
  1311  06EE                     l1847:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1314  06EE  01E5               	clrf	sprintf@prec
  1315  06EF                     l1851:
  1316  06EF  3001               	movlw	1
  1317  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1318  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1319  06F2  07D6               	addwf	sprintf@f,f
  1320  06F3  30FF               	movlw	-1
  1321  06F4  0756               	addwf	sprintf@f,w
  1322  06F5  0084               	movwf	4
  1323  06F6  120A  118A  200D  120A  118A  	fcall	stringdir
  1324  06FB  00E6               	movwf	sprintf@c
  1325  06FC  00DD               	movwf	??_sprintf
  1326  06FD  01DE               	clrf	??_sprintf+1
  1327                           
  1328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1329                           ; Switch size 1, requested type "simple"
  1330                           ; Number of cases is 1, Range of values is 0 to 0
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ; direct_byte           11     8 (fixed)
  1335                           ; jumptable            260     6 (fixed)
  1336                           ;	Chosen strategy is simple_byte
  1337  06FE  085E               	movf	??_sprintf+1,w
  1338  06FF  3A00               	xorlw	0	; case 0
  1339  0700  1903               	skipnz
  1340  0701  2F03               	goto	l2225
  1341  0702  2FDC               	goto	l1901
  1342  0703                     l2225:
  1343                           
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 3, Range of values is 0 to 105
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte           10     6 (average)
  1349                           ; jumptable            260     6 (fixed)
  1350                           ;	Chosen strategy is simple_byte
  1351  0703  085D               	movf	??_sprintf,w
  1352  0704  3A00               	xorlw	0	; case 0
  1353  0705  1903               	skipnz
  1354  0706  2FEE               	goto	l1903
  1355  0707  3A64               	xorlw	100	; case 100
  1356  0708  1903               	skipnz
  1357  0709  2F0E               	goto	l1853
  1358  070A  3A0D               	xorlw	13	; case 105
  1359  070B  1903               	skipnz
  1360  070C  2F0E               	goto	l1853
  1361  070D  2FDC               	goto	l1901
  1362  070E                     l1853:
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1365  070E  0860               	movf	sprintf@ap,w
  1366  070F  0084               	movwf	4
  1367  0710  1383               	bcf	3,7	;select IRP bank0
  1368  0711  0800               	movf	0,w
  1369  0712  00E3               	movwf	sprintf@val
  1370  0713  0A84               	incf	4,f
  1371  0714  0800               	movf	0,w
  1372  0715  00E4               	movwf	sprintf@val+1
  1373  0716                     l1855:
  1374  0716  3002               	movlw	2
  1375  0717  00DD               	movwf	??_sprintf
  1376  0718  085D               	movf	??_sprintf,w
  1377  0719  07E0               	addwf	sprintf@ap,f
  1378  071A                     l1857:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1381  071A  1FE4               	btfss	sprintf@val+1,7
  1382  071B  2F1D               	goto	u1611
  1383  071C  2F1E               	goto	u1610
  1384  071D                     u1611:
  1385  071D  2F27               	goto	l1863
  1386  071E                     u1610:
  1387  071E                     l1859:
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1390  071E  3003               	movlw	3
  1391  071F  00DD               	movwf	??_sprintf
  1392  0720  085D               	movf	??_sprintf,w
  1393  0721  04E1               	iorwf	sprintf@flag,f
  1394  0722                     l1861:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1397  0722  09E3               	comf	sprintf@val,f
  1398  0723  09E4               	comf	sprintf@val+1,f
  1399  0724  0AE3               	incf	sprintf@val,f
  1400  0725  1903               	skipnz
  1401  0726  0AE4               	incf	sprintf@val+1,f
  1402  0727                     l1863:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1405  0727  0865               	movf	sprintf@prec,w
  1406  0728  1D03               	btfss	3,2
  1407  0729  2F2B               	goto	u1621
  1408  072A  2F2C               	goto	u1620
  1409  072B                     u1621:
  1410  072B  2F36               	goto	l1869
  1411  072C                     u1620:
  1412  072C                     l1865:
  1413  072C  0863               	movf	sprintf@val,w
  1414  072D  0464               	iorwf	sprintf@val+1,w
  1415  072E  1D03               	btfss	3,2
  1416  072F  2F31               	goto	u1631
  1417  0730  2F32               	goto	u1630
  1418  0731                     u1631:
  1419  0731  2F36               	goto	l1869
  1420  0732                     u1630:
  1421  0732                     l1867:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1424  0732  3001               	movlw	1
  1425  0733  00DD               	movwf	??_sprintf
  1426  0734  085D               	movf	??_sprintf,w
  1427  0735  07E5               	addwf	sprintf@prec,f
  1428  0736                     l1869:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1431  0736  01E6               	clrf	sprintf@c
  1432  0737  0AE6               	incf	sprintf@c,f
  1433  0738                     l1873:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1436  0738  0866               	movf	sprintf@c,w
  1437  0739  00DD               	movwf	??_sprintf
  1438  073A  075D               	addwf	??_sprintf,w
  1439  073B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1440  073C  0084               	movwf	4
  1441  073D  120A  118A  200D  120A  118A  	fcall	stringdir
  1442  0742  00DE               	movwf	??_sprintf+1
  1443  0743  120A  118A  200D  120A  118A  	fcall	stringdir
  1444  0748  00DF               	movwf	??_sprintf+2
  1445  0749  085F               	movf	??_sprintf+2,w
  1446  074A  0264               	subwf	sprintf@val+1,w
  1447  074B  1D03               	skipz
  1448  074C  2F4F               	goto	u1645
  1449  074D  085E               	movf	??_sprintf+1,w
  1450  074E  0263               	subwf	sprintf@val,w
  1451  074F                     u1645:
  1452  074F  1803               	skipnc
  1453  0750  2F52               	goto	u1641
  1454  0751  2F53               	goto	u1640
  1455  0752                     u1641:
  1456  0752  2F54               	goto	l1877
  1457  0753                     u1640:
  1458  0753  2F5E               	goto	l1879
  1459  0754                     l1877:
  1460  0754  3001               	movlw	1
  1461  0755  00DD               	movwf	??_sprintf
  1462  0756  085D               	movf	??_sprintf,w
  1463  0757  07E6               	addwf	sprintf@c,f
  1464  0758  3005               	movlw	5
  1465  0759  0666               	xorwf	sprintf@c,w
  1466  075A  1D03               	btfss	3,2
  1467  075B  2F5D               	goto	u1651
  1468  075C  2F5E               	goto	u1650
  1469  075D                     u1651:
  1470  075D  2F38               	goto	l1873
  1471  075E                     u1650:
  1472  075E                     l1879:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1475  075E  0865               	movf	sprintf@prec,w
  1476  075F  00DD               	movwf	??_sprintf
  1477  0760  01DE               	clrf	??_sprintf+1
  1478  0761  1BDD               	btfsc	??_sprintf,7
  1479  0762  03DE               	decf	??_sprintf+1,f
  1480  0763  085E               	movf	??_sprintf+1,w
  1481  0764  3A80               	xorlw	128
  1482  0765  3C80               	sublw	128
  1483  0766  1D03               	skipz
  1484  0767  2F6A               	goto	u1665
  1485  0768  085D               	movf	??_sprintf,w
  1486  0769  0266               	subwf	sprintf@c,w
  1487  076A                     u1665:
  1488  076A  1803               	skipnc
  1489  076B  2F6D               	goto	u1661
  1490  076C  2F6E               	goto	u1660
  1491  076D                     u1661:
  1492  076D  2F6F               	goto	l1883
  1493  076E                     u1660:
  1494  076E                     l1881:
  1495  076E  2F89               	goto	l1887
  1496  076F                     l1883:
  1497  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0771  0865               	movf	sprintf@prec,w
  1500  0772  00DD               	movwf	??_sprintf
  1501  0773  01DE               	clrf	??_sprintf+1
  1502  0774  1BDD               	btfsc	??_sprintf,7
  1503  0775  03DE               	decf	??_sprintf+1,f
  1504  0776  085E               	movf	??_sprintf+1,w
  1505  0777  3A80               	xorlw	128
  1506  0778  00DF               	movwf	??_sprintf+2
  1507  0779  3080               	movlw	128
  1508  077A  025F               	subwf	??_sprintf+2,w
  1509  077B  1D03               	skipz
  1510  077C  2F7F               	goto	u1675
  1511  077D  0866               	movf	sprintf@c,w
  1512  077E  025D               	subwf	??_sprintf,w
  1513  077F                     u1675:
  1514  077F  1803               	skipnc
  1515  0780  2F82               	goto	u1671
  1516  0781  2F83               	goto	u1670
  1517  0782                     u1671:
  1518  0782  2F89               	goto	l1887
  1519  0783                     u1670:
  1520  0783                     l1885:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1523  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0785  0866               	movf	sprintf@c,w
  1526  0786  00DD               	movwf	??_sprintf
  1527  0787  085D               	movf	??_sprintf,w
  1528  0788  00E5               	movwf	sprintf@prec
  1529  0789                     l1887:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1532  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1533  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1534  078B  0861               	movf	sprintf@flag,w
  1535  078C  3903               	andlw	3
  1536  078D  1903               	btfsc	3,2
  1537  078E  2F90               	goto	u1681
  1538  078F  2F91               	goto	u1680
  1539  0790                     u1681:
  1540  0790  2FD3               	goto	l1899
  1541  0791                     u1680:
  1542  0791                     l1889:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1545  0791  302D               	movlw	45
  1546  0792  00DD               	movwf	??_sprintf
  1547  0793  0862               	movf	sprintf@sp,w
  1548  0794  0084               	movwf	4
  1549  0795  085D               	movf	??_sprintf,w
  1550  0796  1383               	bcf	3,7	;select IRP bank0
  1551  0797  0080               	movwf	0
  1552  0798                     l1891:
  1553  0798  3001               	movlw	1
  1554  0799  00DD               	movwf	??_sprintf
  1555  079A  085D               	movf	??_sprintf,w
  1556  079B  07E2               	addwf	sprintf@sp,f
  1557  079C  2FD3               	goto	l1899
  1558  079D                     l1893:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1561  079D  300A               	movlw	10
  1562  079E  00F8               	movwf	___lwmod@divisor
  1563  079F  3000               	movlw	0
  1564  07A0  00F9               	movwf	___lwmod@divisor+1
  1565  07A1  0865               	movf	sprintf@prec,w
  1566  07A2  00DD               	movwf	??_sprintf
  1567  07A3  075D               	addwf	??_sprintf,w
  1568  07A4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1569  07A5  0084               	movwf	4
  1570  07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1571  07AB  00F0               	movwf	___lwdiv@divisor
  1572  07AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1573  07B1  00F1               	movwf	___lwdiv@divisor+1
  1574  07B2  0864               	movf	sprintf@val+1,w
  1575  07B3  00F3               	movwf	___lwdiv@dividend+1
  1576  07B4  0863               	movf	sprintf@val,w
  1577  07B5  00F2               	movwf	___lwdiv@dividend
  1578  07B6  120A  118A  244F  120A  118A  	fcall	___lwdiv
  1579  07BB  0871               	movf	?___lwdiv+1,w
  1580  07BC  00FB               	movwf	___lwmod@dividend+1
  1581  07BD  0870               	movf	?___lwdiv,w
  1582  07BE  00FA               	movwf	___lwmod@dividend
  1583  07BF  120A  118A  23D3  120A  118A  	fcall	___lwmod
  1584  07C4  0878               	movf	?___lwmod,w
  1585  07C5  3E30               	addlw	48
  1586  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1587  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1588  07C8  00DE               	movwf	??_sprintf+1
  1589  07C9  085E               	movf	??_sprintf+1,w
  1590  07CA  00E6               	movwf	sprintf@c
  1591  07CB                     l1895:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1594  07CB  0866               	movf	sprintf@c,w
  1595  07CC  00DD               	movwf	??_sprintf
  1596  07CD  0862               	movf	sprintf@sp,w
  1597  07CE  0084               	movwf	4
  1598  07CF  085D               	movf	??_sprintf,w
  1599  07D0  1383               	bcf	3,7	;select IRP bank0
  1600  07D1  0080               	movwf	0
  1601  07D2  2F98               	goto	l1891
  1602  07D3                     l1899:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1605  07D3  30FF               	movlw	255
  1606  07D4  00DD               	movwf	??_sprintf
  1607  07D5  085D               	movf	??_sprintf,w
  1608  07D6  07E5               	addwf	sprintf@prec,f
  1609  07D7  0A65               	incf	sprintf@prec,w
  1610  07D8  1D03               	btfss	3,2
  1611  07D9  2FDB               	goto	u1691
  1612  07DA  2FDC               	goto	u1690
  1613  07DB                     u1691:
  1614  07DB  2F9D               	goto	l1893
  1615  07DC                     u1690:
  1616  07DC                     l1901:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1619  07DC  3001               	movlw	1
  1620  07DD  07D6               	addwf	sprintf@f,f
  1621  07DE  30FF               	movlw	-1
  1622  07DF  0756               	addwf	sprintf@f,w
  1623  07E0  0084               	movwf	4
  1624  07E1  120A  118A  200D  120A  118A  	fcall	stringdir
  1625  07E6  00DD               	movwf	??_sprintf
  1626  07E7  085D               	movf	??_sprintf,w
  1627  07E8  00E6               	movwf	sprintf@c
  1628  07E9  0866               	movf	sprintf@c,w
  1629  07EA  1D03               	btfss	3,2
  1630  07EB  2FED               	goto	u1701
  1631  07EC  2FEE               	goto	u1700
  1632  07ED                     u1701:
  1633  07ED  2E98               	goto	l1825
  1634  07EE                     u1700:
  1635  07EE                     l1903:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1638  07EE  0862               	movf	sprintf@sp,w
  1639  07EF  0084               	movwf	4
  1640  07F0  1383               	bcf	3,7	;select IRP bank0
  1641  07F1  0180               	clrf	0
  1642  07F2                     l330:
  1643  07F2  0008               	return
  1644  07F3                     __end_of_sprintf:
  1645                           
  1646                           	psect	text2
  1647  028F                     __ptext2:	
  1648 ;; *************** function _isdigit *****************
  1649 ;; Defined at:
  1650 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  c               1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  c               1    1[COMMON] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         0       0       0       0       0
  1665 ;;      Locals:         2       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0
  1667 ;;      Totals:         2       0       0       0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_sprintf
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _isdigit
  1679  028F                     _isdigit:
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1683                           ;isdigit@c stored from wreg
  1684  028F  00F1               	movwf	isdigit@c
  1685  0290                     l1587:
  1686  0290  01F0               	clrf	_isdigit$958
  1687  0291                     l1589:
  1688  0291  303A               	movlw	58
  1689  0292  0271               	subwf	isdigit@c,w
  1690  0293  1803               	skipnc
  1691  0294  2A96               	goto	u1221
  1692  0295  2A97               	goto	u1220
  1693  0296                     u1221:
  1694  0296  2A9F               	goto	l1595
  1695  0297                     u1220:
  1696  0297                     l1591:
  1697  0297  3030               	movlw	48
  1698  0298  0271               	subwf	isdigit@c,w
  1699  0299  1C03               	skipc
  1700  029A  2A9C               	goto	u1231
  1701  029B  2A9D               	goto	u1230
  1702  029C                     u1231:
  1703  029C  2A9F               	goto	l1595
  1704  029D                     u1230:
  1705  029D                     l1593:
  1706  029D  01F0               	clrf	_isdigit$958
  1707  029E  0AF0               	incf	_isdigit$958,f
  1708  029F                     l1595:
  1709  029F  0C70               	rrf	_isdigit$958,w
  1710  02A0                     l787:
  1711  02A0  0008               	return
  1712  02A1                     __end_of_isdigit:
  1713                           
  1714                           	psect	text3
  1715  03D3                     __ptext3:	
  1716 ;; *************** function ___lwmod *****************
  1717 ;; Defined at:
  1718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  divisor         2    8[COMMON] unsigned int 
  1721 ;;  dividend        2   10[COMMON] unsigned int 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  counter         1   13[COMMON] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2    8[COMMON] unsigned int 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         4       0       0       0       0
  1734 ;;      Locals:         1       0       0       0       0
  1735 ;;      Temps:          1       0       0       0       0
  1736 ;;      Totals:         6       0       0       0       0
  1737 ;;Total ram usage:        6 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_sprintf
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function ___lwmod
  1748  03D3                     ___lwmod:
  1749  03D3                     l1697:	
  1750                           ;incstack = 0
  1751                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1752                           
  1753  03D3  0878               	movf	___lwmod@divisor,w
  1754  03D4  0479               	iorwf	___lwmod@divisor+1,w
  1755  03D5  1903               	btfsc	3,2
  1756  03D6  2BD8               	goto	u1471
  1757  03D7  2BD9               	goto	u1470
  1758  03D8                     u1471:
  1759  03D8  2C08               	goto	l1715
  1760  03D9                     u1470:
  1761  03D9                     l1699:
  1762  03D9  01FD               	clrf	___lwmod@counter
  1763  03DA  0AFD               	incf	___lwmod@counter,f
  1764  03DB  2BE7               	goto	l1705
  1765  03DC                     l1701:
  1766  03DC  3001               	movlw	1
  1767  03DD                     u1485:
  1768  03DD  1003               	clrc
  1769  03DE  0DF8               	rlf	___lwmod@divisor,f
  1770  03DF  0DF9               	rlf	___lwmod@divisor+1,f
  1771  03E0  3EFF               	addlw	-1
  1772  03E1  1D03               	skipz
  1773  03E2  2BDD               	goto	u1485
  1774  03E3                     l1703:
  1775  03E3  3001               	movlw	1
  1776  03E4  00FC               	movwf	??___lwmod
  1777  03E5  087C               	movf	??___lwmod,w
  1778  03E6  07FD               	addwf	___lwmod@counter,f
  1779  03E7                     l1705:
  1780  03E7  1FF9               	btfss	___lwmod@divisor+1,7
  1781  03E8  2BEA               	goto	u1491
  1782  03E9  2BEB               	goto	u1490
  1783  03EA                     u1491:
  1784  03EA  2BDC               	goto	l1701
  1785  03EB                     u1490:
  1786  03EB                     l1707:
  1787  03EB  0879               	movf	___lwmod@divisor+1,w
  1788  03EC  027B               	subwf	___lwmod@dividend+1,w
  1789  03ED  1D03               	skipz
  1790  03EE  2BF1               	goto	u1505
  1791  03EF  0878               	movf	___lwmod@divisor,w
  1792  03F0  027A               	subwf	___lwmod@dividend,w
  1793  03F1                     u1505:
  1794  03F1  1C03               	skipc
  1795  03F2  2BF4               	goto	u1501
  1796  03F3  2BF5               	goto	u1500
  1797  03F4                     u1501:
  1798  03F4  2BFB               	goto	l1711
  1799  03F5                     u1500:
  1800  03F5                     l1709:
  1801  03F5  0878               	movf	___lwmod@divisor,w
  1802  03F6  02FA               	subwf	___lwmod@dividend,f
  1803  03F7  0879               	movf	___lwmod@divisor+1,w
  1804  03F8  1C03               	skipc
  1805  03F9  03FB               	decf	___lwmod@dividend+1,f
  1806  03FA  02FB               	subwf	___lwmod@dividend+1,f
  1807  03FB                     l1711:
  1808  03FB  3001               	movlw	1
  1809  03FC                     u1515:
  1810  03FC  1003               	clrc
  1811  03FD  0CF9               	rrf	___lwmod@divisor+1,f
  1812  03FE  0CF8               	rrf	___lwmod@divisor,f
  1813  03FF  3EFF               	addlw	-1
  1814  0400  1D03               	skipz
  1815  0401  2BFC               	goto	u1515
  1816  0402                     l1713:
  1817  0402  3001               	movlw	1
  1818  0403  02FD               	subwf	___lwmod@counter,f
  1819  0404  1D03               	btfss	3,2
  1820  0405  2C07               	goto	u1521
  1821  0406  2C08               	goto	u1520
  1822  0407                     u1521:
  1823  0407  2BEB               	goto	l1707
  1824  0408                     u1520:
  1825  0408                     l1715:
  1826  0408  087B               	movf	___lwmod@dividend+1,w
  1827  0409  00F9               	movwf	?___lwmod+1
  1828  040A  087A               	movf	___lwmod@dividend,w
  1829  040B  00F8               	movwf	?___lwmod
  1830  040C                     l616:
  1831  040C  0008               	return
  1832  040D                     __end_of___lwmod:
  1833                           
  1834                           	psect	text4
  1835  044F                     __ptext4:	
  1836 ;; *************** function ___lwdiv *****************
  1837 ;; Defined at:
  1838 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  divisor         2    0[COMMON] unsigned int 
  1841 ;;  dividend        2    2[COMMON] unsigned int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  quotient        2    5[COMMON] unsigned int 
  1844 ;;  counter         1    7[COMMON] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    0[COMMON] unsigned int 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         4       0       0       0       0
  1855 ;;      Locals:         3       0       0       0       0
  1856 ;;      Temps:          1       0       0       0       0
  1857 ;;      Totals:         8       0       0       0       0
  1858 ;;Total ram usage:        8 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_sprintf
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function ___lwdiv
  1869  044F                     ___lwdiv:
  1870  044F                     l1671:	
  1871                           ;incstack = 0
  1872                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1873                           
  1874  044F  01F5               	clrf	___lwdiv@quotient
  1875  0450  01F6               	clrf	___lwdiv@quotient+1
  1876  0451                     l1673:
  1877  0451  0870               	movf	___lwdiv@divisor,w
  1878  0452  0471               	iorwf	___lwdiv@divisor+1,w
  1879  0453  1903               	btfsc	3,2
  1880  0454  2C56               	goto	u1401
  1881  0455  2C57               	goto	u1400
  1882  0456                     u1401:
  1883  0456  2C8E               	goto	l1693
  1884  0457                     u1400:
  1885  0457                     l1675:
  1886  0457  01F7               	clrf	___lwdiv@counter
  1887  0458  0AF7               	incf	___lwdiv@counter,f
  1888  0459  2C65               	goto	l1681
  1889  045A                     l1677:
  1890  045A  3001               	movlw	1
  1891  045B                     u1415:
  1892  045B  1003               	clrc
  1893  045C  0DF0               	rlf	___lwdiv@divisor,f
  1894  045D  0DF1               	rlf	___lwdiv@divisor+1,f
  1895  045E  3EFF               	addlw	-1
  1896  045F  1D03               	skipz
  1897  0460  2C5B               	goto	u1415
  1898  0461                     l1679:
  1899  0461  3001               	movlw	1
  1900  0462  00F4               	movwf	??___lwdiv
  1901  0463  0874               	movf	??___lwdiv,w
  1902  0464  07F7               	addwf	___lwdiv@counter,f
  1903  0465                     l1681:
  1904  0465  1FF1               	btfss	___lwdiv@divisor+1,7
  1905  0466  2C68               	goto	u1421
  1906  0467  2C69               	goto	u1420
  1907  0468                     u1421:
  1908  0468  2C5A               	goto	l1677
  1909  0469                     u1420:
  1910  0469                     l1683:
  1911  0469  3001               	movlw	1
  1912  046A                     u1435:
  1913  046A  1003               	clrc
  1914  046B  0DF5               	rlf	___lwdiv@quotient,f
  1915  046C  0DF6               	rlf	___lwdiv@quotient+1,f
  1916  046D  3EFF               	addlw	-1
  1917  046E  1D03               	skipz
  1918  046F  2C6A               	goto	u1435
  1919  0470  0871               	movf	___lwdiv@divisor+1,w
  1920  0471  0273               	subwf	___lwdiv@dividend+1,w
  1921  0472  1D03               	skipz
  1922  0473  2C76               	goto	u1445
  1923  0474  0870               	movf	___lwdiv@divisor,w
  1924  0475  0272               	subwf	___lwdiv@dividend,w
  1925  0476                     u1445:
  1926  0476  1C03               	skipc
  1927  0477  2C79               	goto	u1441
  1928  0478  2C7A               	goto	u1440
  1929  0479                     u1441:
  1930  0479  2C81               	goto	l1689
  1931  047A                     u1440:
  1932  047A                     l1685:
  1933  047A  0870               	movf	___lwdiv@divisor,w
  1934  047B  02F2               	subwf	___lwdiv@dividend,f
  1935  047C  0871               	movf	___lwdiv@divisor+1,w
  1936  047D  1C03               	skipc
  1937  047E  03F3               	decf	___lwdiv@dividend+1,f
  1938  047F  02F3               	subwf	___lwdiv@dividend+1,f
  1939  0480                     l1687:
  1940  0480  1475               	bsf	___lwdiv@quotient,0
  1941  0481                     l1689:
  1942  0481  3001               	movlw	1
  1943  0482                     u1455:
  1944  0482  1003               	clrc
  1945  0483  0CF1               	rrf	___lwdiv@divisor+1,f
  1946  0484  0CF0               	rrf	___lwdiv@divisor,f
  1947  0485  3EFF               	addlw	-1
  1948  0486  1D03               	skipz
  1949  0487  2C82               	goto	u1455
  1950  0488                     l1691:
  1951  0488  3001               	movlw	1
  1952  0489  02F7               	subwf	___lwdiv@counter,f
  1953  048A  1D03               	btfss	3,2
  1954  048B  2C8D               	goto	u1461
  1955  048C  2C8E               	goto	u1460
  1956  048D                     u1461:
  1957  048D  2C69               	goto	l1683
  1958  048E                     u1460:
  1959  048E                     l1693:
  1960  048E  0876               	movf	___lwdiv@quotient+1,w
  1961  048F  00F1               	movwf	?___lwdiv+1
  1962  0490  0875               	movf	___lwdiv@quotient,w
  1963  0491  00F0               	movwf	?___lwdiv
  1964  0492                     l606:
  1965  0492  0008               	return
  1966  0493                     __end_of___lwdiv:
  1967                           
  1968                           	psect	text5
  1969  02A1                     __ptext5:	
  1970 ;; *************** function ___bmul *****************
  1971 ;; Defined at:
  1972 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  multiplier      1    wreg     unsigned char 
  1975 ;;  multiplicand    1    0[COMMON] unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  multiplier      1    3[COMMON] unsigned char 
  1978 ;;  product         1    2[COMMON] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         1       0       0       0       0
  1989 ;;      Locals:         2       0       0       0       0
  1990 ;;      Temps:          1       0       0       0       0
  1991 ;;      Totals:         4       0       0       0       0
  1992 ;;Total ram usage:        4 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_sprintf
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function ___bmul
  2003  02A1                     ___bmul:
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2007                           ;___bmul@multiplier stored from wreg
  2008  02A1  00F3               	movwf	___bmul@multiplier
  2009  02A2                     l1613:
  2010  02A2  01F2               	clrf	___bmul@product
  2011  02A3                     l1615:
  2012  02A3  1C73               	btfss	___bmul@multiplier,0
  2013  02A4  2AA6               	goto	u1281
  2014  02A5  2AA7               	goto	u1280
  2015  02A6                     u1281:
  2016  02A6  2AAB               	goto	l1619
  2017  02A7                     u1280:
  2018  02A7                     l1617:
  2019  02A7  0870               	movf	___bmul@multiplicand,w
  2020  02A8  00F1               	movwf	??___bmul
  2021  02A9  0871               	movf	??___bmul,w
  2022  02AA  07F2               	addwf	___bmul@product,f
  2023  02AB                     l1619:
  2024  02AB  1003               	clrc
  2025  02AC  0DF0               	rlf	___bmul@multiplicand,f
  2026  02AD                     l1621:
  2027  02AD  1003               	clrc
  2028  02AE  0CF3               	rrf	___bmul@multiplier,f
  2029  02AF  0873               	movf	___bmul@multiplier,w
  2030  02B0  1D03               	btfss	3,2
  2031  02B1  2AB3               	goto	u1291
  2032  02B2  2AB4               	goto	u1290
  2033  02B3                     u1291:
  2034  02B3  2AA3               	goto	l1615
  2035  02B4                     u1290:
  2036  02B4                     l1623:
  2037  02B4  0872               	movf	___bmul@product,w
  2038  02B5                     l360:
  2039  02B5  0008               	return
  2040  02B6                     __end_of___bmul:
  2041                           
  2042                           	psect	text6
  2043  0399                     __ptext6:	
  2044 ;; *************** function _setup *****************
  2045 ;; Defined at:
  2046 ;;		line 147 in file "main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    1
  2067 ;; This function calls:
  2068 ;;		_spiInit
  2069 ;; This function is called by:
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function _setup
  2076  0399                     _setup:
  2077  0399                     l1719:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2080                           
  2081                           
  2082                           ;main.c: 148:     ANSEL = 0;
  2083  0399  1683               	bsf	3,5	;RP0=1, select bank3
  2084  039A  1703               	bsf	3,6	;RP1=1, select bank3
  2085  039B  0188               	clrf	8	;volatile
  2086                           
  2087                           ;main.c: 149:     ANSELH = 0;
  2088  039C  0189               	clrf	9	;volatile
  2089                           
  2090                           ;main.c: 150:     TRISB = 0;
  2091  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2092  039E  1303               	bcf	3,6	;RP1=0, select bank1
  2093  039F  0186               	clrf	6	;volatile
  2094                           
  2095                           ;main.c: 151:     TRISE = 0;
  2096  03A0  0189               	clrf	9	;volatile
  2097                           
  2098                           ;main.c: 152:     TRISD = 0;
  2099  03A1  0188               	clrf	8	;volatile
  2100                           
  2101                           ;main.c: 154:     PORTC = 0;
  2102  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2103  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2104  03A4  0187               	clrf	7	;volatile
  2105                           
  2106                           ;main.c: 155:     PORTE = 0;
  2107  03A5  0189               	clrf	9	;volatile
  2108                           
  2109                           ;main.c: 156:     PORTD = 0;
  2110  03A6  0188               	clrf	8	;volatile
  2111                           
  2112                           ;main.c: 157:     PORTB = 0;
  2113  03A7  0186               	clrf	6	;volatile
  2114  03A8                     l1721:
  2115                           
  2116                           ;main.c: 159:     TRISC0 = 0;
  2117  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2118  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2119  03AA  1007               	bcf	7,0	;volatile
  2120  03AB                     l1723:
  2121                           
  2122                           ;main.c: 160:     PORTCbits.RC0 = 1;
  2123  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2124  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2125  03AD  1407               	bsf	7,0	;volatile
  2126  03AE                     l1725:
  2127                           
  2128                           ;main.c: 161:     TRISC1 = 0;
  2129  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2130  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2131  03B0  1087               	bcf	7,1	;volatile
  2132  03B1                     l1727:
  2133                           
  2134                           ;main.c: 162:     PORTCbits.RC1 = 1;
  2135  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2136  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2137  03B3  1487               	bsf	7,1	;volatile
  2138  03B4                     l1729:
  2139                           
  2140                           ;main.c: 163:     TRISC2 = 0;
  2141  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2142  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2143  03B6  1107               	bcf	7,2	;volatile
  2144  03B7                     l1731:
  2145                           
  2146                           ;main.c: 164:     PORTCbits.RC2 = 1;
  2147  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2148  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2149  03B9  1507               	bsf	7,2	;volatile
  2150  03BA                     l1733:
  2151                           
  2152                           ;main.c: 167:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  2153  03BA  01F0               	clrf	spiInit@sDataSample
  2154  03BB  01F1               	clrf	spiInit@sClockIdle
  2155  03BC  01F2               	clrf	spiInit@sTransmitEdge
  2156  03BD  3020               	movlw	32
  2157  03BE  120A  118A  22CC  120A  118A  	fcall	_spiInit
  2158  03C3                     l1735:
  2159                           
  2160                           ;main.c: 170:     INTCONbits.PEIE = 1;
  2161  03C3  170B               	bsf	11,6	;volatile
  2162  03C4                     l1737:
  2163                           
  2164                           ;main.c: 171:     PIE1bits.RCIE = 1;
  2165  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2166  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2167  03C6  168C               	bsf	12,5	;volatile
  2168  03C7                     l1739:
  2169                           
  2170                           ;main.c: 172:     INTCONbits.GIE = 1;
  2171  03C7  178B               	bsf	11,7	;volatile
  2172  03C8                     l1741:
  2173                           
  2174                           ;main.c: 175:     SPBRGH = 0;
  2175  03C8  019A               	clrf	26	;volatile
  2176  03C9                     l1743:
  2177                           
  2178                           ;main.c: 176:     SPBRG = 12;
  2179  03C9  300C               	movlw	12
  2180  03CA  0099               	movwf	25	;volatile
  2181  03CB                     l1745:
  2182                           
  2183                           ;main.c: 178:     TXSTAbits.TXEN = 1;
  2184  03CB  1698               	bsf	24,5	;volatile
  2185  03CC                     l1747:
  2186                           
  2187                           ;main.c: 179:     TXSTAbits.SYNC = 0;
  2188  03CC  1218               	bcf	24,4	;volatile
  2189  03CD                     l1749:
  2190                           
  2191                           ;main.c: 181:     RCSTAbits.SPEN = 1;
  2192  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2193  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2194  03CF  1798               	bsf	24,7	;volatile
  2195  03D0                     l1751:
  2196                           
  2197                           ;main.c: 182:     RCSTAbits.CREN = 1;
  2198  03D0  1618               	bsf	24,4	;volatile
  2199  03D1                     l1753:
  2200                           
  2201                           ;main.c: 183:     RCREG = 0;
  2202  03D1  019A               	clrf	26	;volatile
  2203  03D2                     l105:
  2204  03D2  0008               	return
  2205  03D3                     __end_of_setup:
  2206                           
  2207                           	psect	text7
  2208  02CC                     __ptext7:	
  2209 ;; *************** function _spiInit *****************
  2210 ;; Defined at:
  2211 ;;		line 14 in file "SPI.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  sType           1    wreg     enum E1264
  2214 ;;  sDataSample     1    0[COMMON] enum E1272
  2215 ;;  sClockIdle      1    1[COMMON] enum E1276
  2216 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  sType           1    3[COMMON] enum E1264
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2228 ;;      Params:         3       0       0       0       0
  2229 ;;      Locals:         1       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0
  2231 ;;      Totals:         4       0       0       0       0
  2232 ;;Total ram usage:        4 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_setup
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _spiInit
  2243  02CC                     _spiInit:
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2247                           ;spiInit@sType stored from wreg
  2248  02CC  00F3               	movwf	spiInit@sType
  2249  02CD                     l1549:
  2250                           
  2251                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  2252  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2253  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2254  02CF  1287               	bcf	7,5	;volatile
  2255                           
  2256                           ;SPI.c: 17:     if(sType & 0b00000100)
  2257  02D0  1D73               	btfss	spiInit@sType,2
  2258  02D1  2AD3               	goto	u1211
  2259  02D2  2AD4               	goto	u1210
  2260  02D3                     u1211:
  2261  02D3  2AD8               	goto	l1555
  2262  02D4                     u1210:
  2263  02D4                     l1551:
  2264                           
  2265                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  2266  02D4  0872               	movf	spiInit@sTransmitEdge,w
  2267  02D5  0094               	movwf	20	;volatile
  2268  02D6                     l1553:
  2269                           
  2270                           ;SPI.c: 20:         TRISC3 = 1;
  2271  02D6  1587               	bsf	7,3	;volatile
  2272                           
  2273                           ;SPI.c: 21:     }
  2274  02D7  2ADC               	goto	l130
  2275  02D8                     l1555:
  2276                           
  2277                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  2278  02D8  0870               	movf	spiInit@sDataSample,w
  2279  02D9  0472               	iorwf	spiInit@sTransmitEdge,w
  2280  02DA  0094               	movwf	20	;volatile
  2281  02DB                     l1557:
  2282                           
  2283                           ;SPI.c: 25:         TRISC3 = 0;
  2284  02DB  1187               	bcf	7,3	;volatile
  2285  02DC                     l130:	
  2286                           ;SPI.c: 26:     }
  2287                           
  2288                           
  2289                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  2290  02DC  0873               	movf	spiInit@sType,w
  2291  02DD  0471               	iorwf	spiInit@sClockIdle,w
  2292  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2293  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2294  02E0  0094               	movwf	20	;volatile
  2295  02E1                     l131:
  2296  02E1  0008               	return
  2297  02E2                     __end_of_spiInit:
  2298                           
  2299                           	psect	text8
  2300  02FC                     __ptext8:	
  2301 ;; *************** function _USART_STRING *****************
  2302 ;; Defined at:
  2303 ;;		line 17 in file "USART.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  a               1    wreg     PTR unsigned char 
  2306 ;;		 -> data(20), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  a               1    2[COMMON] PTR unsigned char 
  2309 ;;		 -> data(20), 
  2310 ;;  i               1    3[COMMON] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         2       0       0       0       0
  2322 ;;      Temps:          1       0       0       0       0
  2323 ;;      Totals:         3       0       0       0       0
  2324 ;;Total ram usage:        3 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    1
  2327 ;; This function calls:
  2328 ;;		_USART_ESCRITURA
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _USART_STRING
  2336  02FC                     _USART_STRING:
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2340                           ;USART_STRING@a stored from wreg
  2341  02FC  00F2               	movwf	USART_STRING@a
  2342  02FD                     l1913:
  2343                           
  2344                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  2345  02FD  01F3               	clrf	USART_STRING@i
  2346  02FE  2B0E               	goto	l1919
  2347  02FF                     l1915:
  2348                           
  2349                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  2350  02FF  0873               	movf	USART_STRING@i,w
  2351  0300  0772               	addwf	USART_STRING@a,w
  2352  0301  00F1               	movwf	??_USART_STRING
  2353  0302  0871               	movf	??_USART_STRING,w
  2354  0303  0084               	movwf	4
  2355  0304  0800               	movf	0,w
  2356  0305  120A  118A  2276  120A  118A  	fcall	_USART_ESCRITURA
  2357  030A                     l1917:
  2358                           
  2359                           ;USART.c: 21:     }
  2360  030A  3001               	movlw	1
  2361  030B  00F1               	movwf	??_USART_STRING
  2362  030C  0871               	movf	??_USART_STRING,w
  2363  030D  07F3               	addwf	USART_STRING@i,f
  2364  030E                     l1919:
  2365  030E  0873               	movf	USART_STRING@i,w
  2366  030F  0772               	addwf	USART_STRING@a,w
  2367  0310  00F1               	movwf	??_USART_STRING
  2368  0311  0871               	movf	??_USART_STRING,w
  2369  0312  0084               	movwf	4
  2370  0313  1383               	bcf	3,7	;select IRP bank0
  2371  0314  0800               	movf	0,w
  2372  0315  1D03               	btfss	3,2
  2373  0316  2B18               	goto	u1711
  2374  0317  2B19               	goto	u1710
  2375  0318                     u1711:
  2376  0318  2AFF               	goto	l1915
  2377  0319                     u1710:
  2378  0319                     l174:
  2379  0319  0008               	return
  2380  031A                     __end_of_USART_STRING:
  2381                           
  2382                           	psect	text9
  2383  0276                     __ptext9:	
  2384 ;; *************** function _USART_ESCRITURA *****************
  2385 ;; Defined at:
  2386 ;;		line 13 in file "USART.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  a               1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  a               1    0[COMMON] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         1       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         1       0       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;;		_USART_STRING
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _USART_ESCRITURA
  2416  0276                     _USART_ESCRITURA:
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _USART_ESCRITURA: [wreg]
  2420                           ;USART_ESCRITURA@a stored from wreg
  2421  0276  00F0               	movwf	USART_ESCRITURA@a
  2422  0277                     l1545:
  2423  0277                     l165:	
  2424                           ;USART.c: 14:     while(!TRMT);
  2425                           
  2426  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2427  0278  1303               	bcf	3,6	;RP1=0, select bank1
  2428  0279  1C98               	btfss	24,1	;volatile
  2429  027A  2A7C               	goto	u1201
  2430  027B  2A7D               	goto	u1200
  2431  027C                     u1201:
  2432  027C  2A77               	goto	l165
  2433  027D                     u1200:
  2434  027D                     l1547:
  2435                           
  2436                           ;USART.c: 15:     TXREG = a;
  2437  027D  0870               	movf	USART_ESCRITURA@a,w
  2438  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2439  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0280  0099               	movwf	25	;volatile
  2441  0281                     l168:
  2442  0281  0008               	return
  2443  0282                     __end_of_USART_ESCRITURA:
  2444                           
  2445                           	psect	text10
  2446  040D                     __ptext10:	
  2447 ;; *************** function _Lcd_Write_String *****************
  2448 ;; Defined at:
  2449 ;;		line 94 in file "LCD.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  a               2    3[COMMON] PTR unsigned char 
  2452 ;;		 -> data(20), STR_3(4), STR_2(4), STR_1(4), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  i               2    8[COMMON] int 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         2       0       0       0       0
  2465 ;;      Locals:         2       0       0       0       0
  2466 ;;      Temps:          3       0       0       0       0
  2467 ;;      Totals:         7       0       0       0       0
  2468 ;;Total ram usage:        7 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		_Lcd_Write_Char
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _Lcd_Write_String
  2480  040D                     _Lcd_Write_String:
  2481  040D                     l1779:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2484                           
  2485                           
  2486                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  2487  040D  01F8               	clrf	Lcd_Write_String@i
  2488  040E  01F9               	clrf	Lcd_Write_String@i+1
  2489  040F  2C32               	goto	l1785
  2490  0410                     l1781:
  2491                           
  2492                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  2493  0410  0878               	movf	Lcd_Write_String@i,w
  2494  0411  0773               	addwf	Lcd_Write_String@a,w
  2495  0412  00F6               	movwf	??_Lcd_Write_String+1
  2496  0413  0874               	movf	Lcd_Write_String@a+1,w
  2497  0414  00F5               	movwf	??_Lcd_Write_String
  2498  0415  1803               	skipnc
  2499  0416  0AF5               	incf	??_Lcd_Write_String,f
  2500  0417  1FF8               	btfss	Lcd_Write_String@i,7
  2501  0418  2C1A               	goto	u1550
  2502  0419  03F5               	decf	??_Lcd_Write_String,f
  2503  041A                     u1550:
  2504  041A  0875               	movf	??_Lcd_Write_String,w
  2505  041B  00F7               	movwf	??_Lcd_Write_String+2
  2506  041C  0877               	movf	??_Lcd_Write_String+2,w
  2507  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2508  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2509  041F  00FF               	movwf	btemp+1
  2510  0420  0876               	movf	??_Lcd_Write_String+1,w
  2511  0421  0084               	movwf	4
  2512  0422  120A  118A  2003  120A  118A  	fcall	stringtab
  2513  0427  120A  118A  22B6  120A  118A  	fcall	_Lcd_Write_Char
  2514  042C                     l1783:
  2515  042C  3001               	movlw	1
  2516  042D  07F8               	addwf	Lcd_Write_String@i,f
  2517  042E  1803               	skipnc
  2518  042F  0AF9               	incf	Lcd_Write_String@i+1,f
  2519  0430  3000               	movlw	0
  2520  0431  07F9               	addwf	Lcd_Write_String@i+1,f
  2521  0432                     l1785:
  2522  0432  0878               	movf	Lcd_Write_String@i,w
  2523  0433  0773               	addwf	Lcd_Write_String@a,w
  2524  0434  00F6               	movwf	??_Lcd_Write_String+1
  2525  0435  0874               	movf	Lcd_Write_String@a+1,w
  2526  0436  00F5               	movwf	??_Lcd_Write_String
  2527  0437  1803               	skipnc
  2528  0438  0AF5               	incf	??_Lcd_Write_String,f
  2529  0439  1FF8               	btfss	Lcd_Write_String@i,7
  2530  043A  2C3C               	goto	u1560
  2531  043B  03F5               	decf	??_Lcd_Write_String,f
  2532  043C                     u1560:
  2533  043C  0875               	movf	??_Lcd_Write_String,w
  2534  043D  00F7               	movwf	??_Lcd_Write_String+2
  2535  043E  0877               	movf	??_Lcd_Write_String+2,w
  2536  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0441  00FF               	movwf	btemp+1
  2539  0442  0876               	movf	??_Lcd_Write_String+1,w
  2540  0443  0084               	movwf	4
  2541  0444  120A  118A  2003  120A  118A  	fcall	stringtab
  2542  0449  3A00               	xorlw	0
  2543  044A  1D03               	skipz
  2544  044B  2C4D               	goto	u1571
  2545  044C  2C4E               	goto	u1570
  2546  044D                     u1571:
  2547  044D  2C10               	goto	l1781
  2548  044E                     u1570:
  2549  044E                     l209:
  2550  044E  0008               	return
  2551  044F                     __end_of_Lcd_Write_String:
  2552                           
  2553                           	psect	text11
  2554  02B6                     __ptext11:	
  2555 ;; *************** function _Lcd_Write_Char *****************
  2556 ;; Defined at:
  2557 ;;		line 77 in file "LCD.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  a               1    wreg     unsigned char 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  a               1    2[COMMON] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         0       0       0       0       0
  2572 ;;      Locals:         1       0       0       0       0
  2573 ;;      Temps:          1       0       0       0       0
  2574 ;;      Totals:         2       0       0       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    1
  2578 ;; This function calls:
  2579 ;;		_Lcd_Port
  2580 ;; This function is called by:
  2581 ;;		_Lcd_Write_String
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _Lcd_Write_Char
  2587  02B6                     _Lcd_Write_Char:
  2588                           
  2589                           ;incstack = 0
  2590                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2591                           ;Lcd_Write_Char@a stored from wreg
  2592  02B6  00F2               	movwf	Lcd_Write_Char@a
  2593  02B7                     l1577:
  2594                           
  2595                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  2596  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2597  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2598  02B9  1409               	bsf	9,0	;volatile
  2599  02BA                     l1579:
  2600                           
  2601                           ;LCD.c: 88:    Lcd_Port(a);
  2602  02BA  0872               	movf	Lcd_Write_Char@a,w
  2603  02BB  120A  118A  2258  120A  118A  	fcall	_Lcd_Port
  2604  02C0                     l1581:
  2605                           
  2606                           ;LCD.c: 89:    RE1 = 1;
  2607  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2608  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2609  02C2  1489               	bsf	9,1	;volatile
  2610  02C3                     l1583:
  2611                           
  2612                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2613  02C3  301A               	movlw	26
  2614  02C4  00F1               	movwf	??_Lcd_Write_Char
  2615  02C5                     u2367:
  2616  02C5  0BF1               	decfsz	??_Lcd_Write_Char,f
  2617  02C6  2AC5               	goto	u2367
  2618  02C7  0000               	nop
  2619  02C8                     l1585:
  2620                           
  2621                           ;LCD.c: 91:    RE1 = 0;
  2622  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2623  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2624  02CA  1089               	bcf	9,1	;volatile
  2625  02CB                     l203:
  2626  02CB  0008               	return
  2627  02CC                     __end_of_Lcd_Write_Char:
  2628                           
  2629                           	psect	text12
  2630  031A                     __ptext12:	
  2631 ;; *************** function _Lcd_Set_Cursor *****************
  2632 ;; Defined at:
  2633 ;;		line 37 in file "LCD.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  a               1    wreg     unsigned char 
  2636 ;;  b               1    4[COMMON] unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  a               1    6[COMMON] unsigned char 
  2639 ;;  temp            1    7[COMMON] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         1       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0
  2651 ;;      Temps:          1       0       0       0       0
  2652 ;;      Totals:         4       0       0       0       0
  2653 ;;Total ram usage:        4 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    2
  2656 ;; This function calls:
  2657 ;;		_Lcd_Cmd
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _Lcd_Set_Cursor
  2665  031A                     _Lcd_Set_Cursor:
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2669                           ;Lcd_Set_Cursor@a stored from wreg
  2670  031A  00F6               	movwf	Lcd_Set_Cursor@a
  2671  031B                     l1767:
  2672                           
  2673                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  2674  031B  0376               	decf	Lcd_Set_Cursor@a,w
  2675  031C  1D03               	btfss	3,2
  2676  031D  2B1F               	goto	u1531
  2677  031E  2B20               	goto	u1530
  2678  031F                     u1531:
  2679  031F  2B2C               	goto	l1773
  2680  0320                     u1530:
  2681  0320                     l1769:
  2682                           
  2683                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  2684  0320  0874               	movf	Lcd_Set_Cursor@b,w
  2685  0321  3E7F               	addlw	127
  2686  0322  00F5               	movwf	??_Lcd_Set_Cursor
  2687  0323  0875               	movf	??_Lcd_Set_Cursor,w
  2688  0324  00F7               	movwf	Lcd_Set_Cursor@temp
  2689  0325                     l1771:
  2690                           
  2691                           ;LCD.c: 46:   Lcd_Cmd(temp);
  2692  0325  0877               	movf	Lcd_Set_Cursor@temp,w
  2693  0326  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2694                           
  2695                           ;LCD.c: 47:  }
  2696  032B  2B3D               	goto	l197
  2697  032C                     l1773:
  2698  032C  3002               	movlw	2
  2699  032D  0676               	xorwf	Lcd_Set_Cursor@a,w
  2700  032E  1D03               	btfss	3,2
  2701  032F  2B31               	goto	u1541
  2702  0330  2B32               	goto	u1540
  2703  0331                     u1541:
  2704  0331  2B3D               	goto	l197
  2705  0332                     u1540:
  2706  0332                     l1775:
  2707                           
  2708                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  2709  0332  0874               	movf	Lcd_Set_Cursor@b,w
  2710  0333  3EBF               	addlw	191
  2711  0334  00F5               	movwf	??_Lcd_Set_Cursor
  2712  0335  0875               	movf	??_Lcd_Set_Cursor,w
  2713  0336  00F7               	movwf	Lcd_Set_Cursor@temp
  2714  0337                     l1777:
  2715                           
  2716                           ;LCD.c: 54:   Lcd_Cmd(temp);
  2717  0337  0877               	movf	Lcd_Set_Cursor@temp,w
  2718  0338  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2719  033D                     l197:
  2720  033D  0008               	return
  2721  033E                     __end_of_Lcd_Set_Cursor:
  2722                           
  2723                           	psect	text13
  2724  0493                     __ptext13:	
  2725 ;; *************** function _Lcd_Init *****************
  2726 ;; Defined at:
  2727 ;;		line 58 in file "LCD.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          2       0       0       0       0
  2744 ;;      Totals:         2       0       0       0       0
  2745 ;;Total ram usage:        2 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    2
  2748 ;; This function calls:
  2749 ;;		_Lcd_Cmd
  2750 ;;		_Lcd_Port
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _Lcd_Init
  2758  0493                     _Lcd_Init:
  2759  0493                     l1755:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2762                           
  2763                           
  2764                           ;LCD.c: 60:   Lcd_Port(0x00);
  2765  0493  3000               	movlw	0
  2766  0494  120A  118A  2258  120A  118A  	fcall	_Lcd_Port
  2767  0499                     l1757:
  2768                           
  2769                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2770  0499  3034               	movlw	52
  2771  049A  00F5               	movwf	??_Lcd_Init+1
  2772  049B  30F1               	movlw	241
  2773  049C  00F4               	movwf	??_Lcd_Init
  2774  049D                     u2377:
  2775  049D  0BF4               	decfsz	??_Lcd_Init,f
  2776  049E  2C9D               	goto	u2377
  2777  049F  0BF5               	decfsz	??_Lcd_Init+1,f
  2778  04A0  2C9D               	goto	u2377
  2779  04A1  2CA2               	nop2
  2780  04A2                     l1759:
  2781                           
  2782                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  2783  04A2  3030               	movlw	48
  2784  04A3  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2785                           
  2786                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2787  04A8  300D               	movlw	13
  2788  04A9  00F5               	movwf	??_Lcd_Init+1
  2789  04AA  30FB               	movlw	251
  2790  04AB  00F4               	movwf	??_Lcd_Init
  2791  04AC                     u2387:
  2792  04AC  0BF4               	decfsz	??_Lcd_Init,f
  2793  04AD  2CAC               	goto	u2387
  2794  04AE  0BF5               	decfsz	??_Lcd_Init+1,f
  2795  04AF  2CAC               	goto	u2387
  2796  04B0  2CB1               	nop2
  2797  04B1                     l1761:
  2798                           
  2799                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  2800  04B1  3030               	movlw	48
  2801  04B2  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2802  04B7                     l1763:
  2803                           
  2804                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2805  04B7  301D               	movlw	29
  2806  04B8  00F5               	movwf	??_Lcd_Init+1
  2807  04B9  3091               	movlw	145
  2808  04BA  00F4               	movwf	??_Lcd_Init
  2809  04BB                     u2397:
  2810  04BB  0BF4               	decfsz	??_Lcd_Init,f
  2811  04BC  2CBB               	goto	u2397
  2812  04BD  0BF5               	decfsz	??_Lcd_Init+1,f
  2813  04BE  2CBB               	goto	u2397
  2814                           
  2815                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  2816  04BF  3030               	movlw	48
  2817  04C0  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2818                           
  2819                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  2820  04C5  3038               	movlw	56
  2821  04C6  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2822                           
  2823                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  2824  04CB  300C               	movlw	12
  2825  04CC  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2826                           
  2827                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  2828  04D1  3001               	movlw	1
  2829  04D2  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2830                           
  2831                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  2832  04D7  3006               	movlw	6
  2833  04D8  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2834  04DD                     l200:
  2835  04DD  0008               	return
  2836  04DE                     __end_of_Lcd_Init:
  2837                           
  2838                           	psect	text14
  2839  0282                     __ptext14:	
  2840 ;; *************** function _Lcd_Clear *****************
  2841 ;; Defined at:
  2842 ;;		line 31 in file "LCD.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    2
  2863 ;; This function calls:
  2864 ;;		_Lcd_Cmd
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _Lcd_Clear
  2872  0282                     _Lcd_Clear:
  2873  0282                     l1765:	
  2874                           ;incstack = 0
  2875                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2876                           
  2877                           
  2878                           ;LCD.c: 33:  Lcd_Cmd(0);
  2879  0282  3000               	movlw	0
  2880  0283  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2881                           
  2882                           ;LCD.c: 34:  Lcd_Cmd(1);
  2883  0288  3001               	movlw	1
  2884  0289  120A  118A  22E2  120A  118A  	fcall	_Lcd_Cmd
  2885  028E                     l191:
  2886  028E  0008               	return
  2887  028F                     __end_of_Lcd_Clear:
  2888                           
  2889                           	psect	text15
  2890  02E2                     __ptext15:	
  2891 ;; *************** function _Lcd_Cmd *****************
  2892 ;; Defined at:
  2893 ;;		line 22 in file "LCD.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  a               1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  a               1    3[COMMON] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0
  2909 ;;      Temps:          2       0       0       0       0
  2910 ;;      Totals:         3       0       0       0       0
  2911 ;;Total ram usage:        3 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		_Lcd_Port
  2916 ;; This function is called by:
  2917 ;;		_Lcd_Clear
  2918 ;;		_Lcd_Set_Cursor
  2919 ;;		_Lcd_Init
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _Lcd_Cmd
  2925  02E2                     _Lcd_Cmd:
  2926                           
  2927                           ;incstack = 0
  2928                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2929                           ;Lcd_Cmd@a stored from wreg
  2930  02E2  00F3               	movwf	Lcd_Cmd@a
  2931  02E3                     l1567:
  2932                           
  2933                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  2934  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2935  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2936  02E5  1009               	bcf	9,0	;volatile
  2937  02E6                     l1569:
  2938                           
  2939                           ;LCD.c: 25:  Lcd_Port(a);
  2940  02E6  0873               	movf	Lcd_Cmd@a,w
  2941  02E7  120A  118A  2258  120A  118A  	fcall	_Lcd_Port
  2942  02EC                     l1571:
  2943                           
  2944                           ;LCD.c: 26:  RE1 = 1;
  2945  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2946  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2947  02EE  1489               	bsf	9,1	;volatile
  2948  02EF                     l1573:
  2949                           
  2950                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2951  02EF  300B               	movlw	11
  2952  02F0  00F2               	movwf	??_Lcd_Cmd+1
  2953  02F1  3062               	movlw	98
  2954  02F2  00F1               	movwf	??_Lcd_Cmd
  2955  02F3                     u2407:
  2956  02F3  0BF1               	decfsz	??_Lcd_Cmd,f
  2957  02F4  2AF3               	goto	u2407
  2958  02F5  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2959  02F6  2AF3               	goto	u2407
  2960  02F7  0000               	nop
  2961  02F8                     l1575:
  2962                           
  2963                           ;LCD.c: 28:         RE1 = 0;
  2964  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2965  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2966  02FA  1089               	bcf	9,1	;volatile
  2967  02FB                     l188:
  2968  02FB  0008               	return
  2969  02FC                     __end_of_Lcd_Cmd:
  2970                           
  2971                           	psect	text16
  2972  0258                     __ptext16:	
  2973 ;; *************** function _Lcd_Port *****************
  2974 ;; Defined at:
  2975 ;;		line 17 in file "LCD.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  a               1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  a               1    0[COMMON] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0
  2992 ;;      Totals:         1       0       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_Lcd_Cmd
  2999 ;;		_Lcd_Init
  3000 ;;		_Lcd_Write_Char
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _Lcd_Port
  3006  0258                     _Lcd_Port:
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _Lcd_Port: [wreg]
  3010                           ;Lcd_Port@a stored from wreg
  3011  0258  00F0               	movwf	Lcd_Port@a
  3012  0259                     l1543:
  3013                           
  3014                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  3015  0259  0870               	movf	Lcd_Port@a,w
  3016  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3017  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3018  025C  0088               	movwf	8	;volatile
  3019  025D                     l185:
  3020  025D  0008               	return
  3021  025E                     __end_of_Lcd_Port:
  3022                           
  3023                           	psect	text17
  3024  052E                     __ptext17:	
  3025 ;; *************** function _LEER_S3 *****************
  3026 ;; Defined at:
  3027 ;;		line 214 in file "main.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0
  3043 ;;      Temps:          3       0       0       0       0
  3044 ;;      Totals:         3       0       0       0       0
  3045 ;;Total ram usage:        3 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    2
  3048 ;; This function calls:
  3049 ;;		___awdiv
  3050 ;;		___wmul
  3051 ;;		_spiRead
  3052 ;;		_spiWrite
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _LEER_S3
  3060  052E                     _LEER_S3:
  3061  052E                     l1807:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _LEER_S3: [wreg+status,2+status,0+pclath+cstack]
  3064                           
  3065                           
  3066                           ;main.c: 215:     PORTCbits.RC2 = 0;
  3067  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3068  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0530  1107               	bcf	7,2	;volatile
  3070  0531                     l1809:
  3071                           
  3072                           ;main.c: 216:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3073  0531  3003               	movlw	3
  3074  0532  00FC               	movwf	??_LEER_S3+1
  3075  0533  3097               	movlw	151
  3076  0534  00FB               	movwf	??_LEER_S3
  3077  0535                     u2417:
  3078  0535  0BFB               	decfsz	??_LEER_S3,f
  3079  0536  2D35               	goto	u2417
  3080  0537  0BFC               	decfsz	??_LEER_S3+1,f
  3081  0538  2D35               	goto	u2417
  3082  0539  2D3A               	nop2
  3083  053A                     l1811:
  3084                           
  3085                           ;main.c: 218:     spiWrite(hablar);
  3086  053A  3000               	movlw	0
  3087  053B  120A  118A  2252  120A  118A  	fcall	_spiWrite
  3088  0540                     l1813:
  3089                           
  3090                           ;main.c: 219:     S3 = spiRead();
  3091  0540  120A  118A  226D  120A  118A  	fcall	_spiRead
  3092  0545  00FB               	movwf	??_LEER_S3
  3093  0546  087B               	movf	??_LEER_S3,w
  3094  0547  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0548  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0549  00BF               	movwf	_S3
  3097  054A                     l1815:
  3098                           
  3099                           ;main.c: 220:     TEMP = ((S3*150)/255);
  3100  054A  30FF               	movlw	255
  3101  054B  00F6               	movwf	___awdiv@divisor
  3102  054C  3000               	movlw	0
  3103  054D  00F7               	movwf	___awdiv@divisor+1
  3104  054E  083F               	movf	_S3,w
  3105  054F  00FB               	movwf	??_LEER_S3
  3106  0550  01FC               	clrf	??_LEER_S3+1
  3107  0551  087B               	movf	??_LEER_S3,w
  3108  0552  00F0               	movwf	___wmul@multiplier
  3109  0553  087C               	movf	??_LEER_S3+1,w
  3110  0554  00F1               	movwf	___wmul@multiplier+1
  3111  0555  3096               	movlw	150
  3112  0556  00F2               	movwf	___wmul@multiplicand
  3113  0557  3000               	movlw	0
  3114  0558  00F3               	movwf	___wmul@multiplicand+1
  3115  0559  120A  118A  233E  120A  118A  	fcall	___wmul
  3116  055E  0871               	movf	?___wmul+1,w
  3117  055F  00F9               	movwf	___awdiv@dividend+1
  3118  0560  0870               	movf	?___wmul,w
  3119  0561  00F8               	movwf	___awdiv@dividend
  3120  0562  120A  118A  2587  120A  118A  	fcall	___awdiv
  3121  0567  0877               	movf	?___awdiv+1,w
  3122  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3124  056A  00B9               	movwf	_TEMP+1
  3125  056B  0876               	movf	?___awdiv,w
  3126  056C  00B8               	movwf	_TEMP
  3127  056D                     l1817:
  3128                           
  3129                           ;main.c: 222:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3130  056D  3003               	movlw	3
  3131  056E  00FC               	movwf	??_LEER_S3+1
  3132  056F  3097               	movlw	151
  3133  0570  00FB               	movwf	??_LEER_S3
  3134  0571                     u2427:
  3135  0571  0BFB               	decfsz	??_LEER_S3,f
  3136  0572  2D71               	goto	u2427
  3137  0573  0BFC               	decfsz	??_LEER_S3+1,f
  3138  0574  2D71               	goto	u2427
  3139  0575  2D76               	nop2
  3140  0576                     l1819:
  3141                           
  3142                           ;main.c: 223:     PORTCbits.RC2 = 1;
  3143  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0578  1507               	bsf	7,2	;volatile
  3146  0579                     l1821:
  3147                           
  3148                           ;main.c: 225:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3149  0579  3002               	movlw	2
  3150  057A  00FD               	movwf	??_LEER_S3+2
  3151  057B  3004               	movlw	4
  3152  057C  00FC               	movwf	??_LEER_S3+1
  3153  057D  30BA               	movlw	186
  3154  057E  00FB               	movwf	??_LEER_S3
  3155  057F                     u2437:
  3156  057F  0BFB               	decfsz	??_LEER_S3,f
  3157  0580  2D7F               	goto	u2437
  3158  0581  0BFC               	decfsz	??_LEER_S3+1,f
  3159  0582  2D7F               	goto	u2437
  3160  0583  0BFD               	decfsz	??_LEER_S3+2,f
  3161  0584  2D7F               	goto	u2437
  3162  0585  0000               	nop
  3163  0586                     l114:
  3164  0586  0008               	return
  3165  0587                     __end_of_LEER_S3:
  3166                           
  3167                           	psect	text18
  3168  0363                     __ptext18:	
  3169 ;; *************** function _LEER_S2 *****************
  3170 ;; Defined at:
  3171 ;;		line 202 in file "main.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0
  3187 ;;      Temps:          3       0       0       0       0
  3188 ;;      Totals:         3       0       0       0       0
  3189 ;;Total ram usage:        3 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    2
  3192 ;; This function calls:
  3193 ;;		_spiRead
  3194 ;;		_spiWrite
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _LEER_S2
  3202  0363                     _LEER_S2:
  3203  0363                     l1797:	
  3204                           ;incstack = 0
  3205                           ; Regs used in _LEER_S2: [wreg+status,2+status,0+pclath+cstack]
  3206                           
  3207                           
  3208                           ;main.c: 203:     PORTCbits.RC1 = 0;
  3209  0363  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0364  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0365  1087               	bcf	7,1	;volatile
  3212  0366                     l1799:
  3213                           
  3214                           ;main.c: 204:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3215  0366  3003               	movlw	3
  3216  0367  00F2               	movwf	??_LEER_S2+1
  3217  0368  3097               	movlw	151
  3218  0369  00F1               	movwf	??_LEER_S2
  3219  036A                     u2447:
  3220  036A  0BF1               	decfsz	??_LEER_S2,f
  3221  036B  2B6A               	goto	u2447
  3222  036C  0BF2               	decfsz	??_LEER_S2+1,f
  3223  036D  2B6A               	goto	u2447
  3224  036E  2B6F               	nop2
  3225  036F                     l1801:
  3226                           
  3227                           ;main.c: 206:     spiWrite(hablar);
  3228  036F  3000               	movlw	0
  3229  0370  120A  118A  2252  120A  118A  	fcall	_spiWrite
  3230  0375                     l1803:
  3231                           
  3232                           ;main.c: 207:     S2 = spiRead();
  3233  0375  120A  118A  226D  120A  118A  	fcall	_spiRead
  3234  037A  00F1               	movwf	??_LEER_S2
  3235  037B  0871               	movf	??_LEER_S2,w
  3236  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3237  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3238  037E  00C0               	movwf	_S2
  3239                           
  3240                           ;main.c: 209:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3241  037F  3003               	movlw	3
  3242  0380  00F2               	movwf	??_LEER_S2+1
  3243  0381  3097               	movlw	151
  3244  0382  00F1               	movwf	??_LEER_S2
  3245  0383                     u2457:
  3246  0383  0BF1               	decfsz	??_LEER_S2,f
  3247  0384  2B83               	goto	u2457
  3248  0385  0BF2               	decfsz	??_LEER_S2+1,f
  3249  0386  2B83               	goto	u2457
  3250  0387  2B88               	nop2
  3251  0388                     l1805:
  3252                           
  3253                           ;main.c: 210:     PORTCbits.RC1 = 1;
  3254  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0389  1303               	bcf	3,6	;RP1=0, select bank0
  3256  038A  1487               	bsf	7,1	;volatile
  3257                           
  3258                           ;main.c: 211:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3259  038B  3002               	movlw	2
  3260  038C  00F3               	movwf	??_LEER_S2+2
  3261  038D  3004               	movlw	4
  3262  038E  00F2               	movwf	??_LEER_S2+1
  3263  038F  30BA               	movlw	186
  3264  0390  00F1               	movwf	??_LEER_S2
  3265  0391                     u2467:
  3266  0391  0BF1               	decfsz	??_LEER_S2,f
  3267  0392  2B91               	goto	u2467
  3268  0393  0BF2               	decfsz	??_LEER_S2+1,f
  3269  0394  2B91               	goto	u2467
  3270  0395  0BF3               	decfsz	??_LEER_S2+2,f
  3271  0396  2B91               	goto	u2467
  3272  0397  0000               	nop
  3273  0398                     l111:
  3274  0398  0008               	return
  3275  0399                     __end_of_LEER_S2:
  3276                           
  3277                           	psect	text19
  3278  04DE                     __ptext19:	
  3279 ;; *************** function _LEER_S1 *****************
  3280 ;; Defined at:
  3281 ;;		line 188 in file "main.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, pclath, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3295 ;;      Params:         0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0
  3297 ;;      Temps:          3       0       0       0       0
  3298 ;;      Totals:         3       0       0       0       0
  3299 ;;Total ram usage:        3 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    2
  3302 ;; This function calls:
  3303 ;;		___awdiv
  3304 ;;		___wmul
  3305 ;;		_spiRead
  3306 ;;		_spiWrite
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _LEER_S1
  3314  04DE                     _LEER_S1:
  3315  04DE                     l1787:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _LEER_S1: [wreg+status,2+status,0+pclath+cstack]
  3318                           
  3319                           
  3320                           ;main.c: 190:     PORTCbits.RC0 = 0;
  3321  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3322  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  3323  04E0  1007               	bcf	7,0	;volatile
  3324  04E1                     l1789:	
  3325                           ;main.c: 191:     _delay((unsigned long)((hablar)*(8000000/4000.0)));
  3326                           
  3327                           
  3328                           ;main.c: 193:     spiWrite(1);
  3329  04E1  3001               	movlw	1
  3330  04E2  120A  118A  2252  120A  118A  	fcall	_spiWrite
  3331                           
  3332                           ;main.c: 194:     S1 = spiRead();
  3333  04E7  120A  118A  226D  120A  118A  	fcall	_spiRead
  3334  04EC  00FB               	movwf	??_LEER_S1
  3335  04ED  087B               	movf	??_LEER_S1,w
  3336  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3337  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3338  04F0  00C1               	movwf	_S1
  3339                           
  3340                           ;main.c: 195:     ADC = ((S1 * 50) / 255);
  3341  04F1  30FF               	movlw	255
  3342  04F2  00F6               	movwf	___awdiv@divisor
  3343  04F3  3000               	movlw	0
  3344  04F4  00F7               	movwf	___awdiv@divisor+1
  3345  04F5  0841               	movf	_S1,w
  3346  04F6  00FB               	movwf	??_LEER_S1
  3347  04F7  01FC               	clrf	??_LEER_S1+1
  3348  04F8  087B               	movf	??_LEER_S1,w
  3349  04F9  00F0               	movwf	___wmul@multiplier
  3350  04FA  087C               	movf	??_LEER_S1+1,w
  3351  04FB  00F1               	movwf	___wmul@multiplier+1
  3352  04FC  3032               	movlw	50
  3353  04FD  00F2               	movwf	___wmul@multiplicand
  3354  04FE  3000               	movlw	0
  3355  04FF  00F3               	movwf	___wmul@multiplicand+1
  3356  0500  120A  118A  233E  120A  118A  	fcall	___wmul
  3357  0505  0871               	movf	?___wmul+1,w
  3358  0506  00F9               	movwf	___awdiv@dividend+1
  3359  0507  0870               	movf	?___wmul,w
  3360  0508  00F8               	movwf	___awdiv@dividend
  3361  0509  120A  118A  2587  120A  118A  	fcall	___awdiv
  3362  050E  0877               	movf	?___awdiv+1,w
  3363  050F  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0510  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0511  00BB               	movwf	_ADC+1
  3366  0512  0876               	movf	?___awdiv,w
  3367  0513  00BA               	movwf	_ADC
  3368  0514                     l1791:
  3369                           
  3370                           ;main.c: 197:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3371  0514  3003               	movlw	3
  3372  0515  00FC               	movwf	??_LEER_S1+1
  3373  0516  3097               	movlw	151
  3374  0517  00FB               	movwf	??_LEER_S1
  3375  0518                     u2477:
  3376  0518  0BFB               	decfsz	??_LEER_S1,f
  3377  0519  2D18               	goto	u2477
  3378  051A  0BFC               	decfsz	??_LEER_S1+1,f
  3379  051B  2D18               	goto	u2477
  3380  051C  2D1D               	nop2
  3381  051D                     l1793:
  3382                           
  3383                           ;main.c: 198:     PORTCbits.RC0 = 1;
  3384  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3385  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3386  051F  1407               	bsf	7,0	;volatile
  3387  0520                     l1795:
  3388                           
  3389                           ;main.c: 199:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3390  0520  3002               	movlw	2
  3391  0521  00FD               	movwf	??_LEER_S1+2
  3392  0522  3004               	movlw	4
  3393  0523  00FC               	movwf	??_LEER_S1+1
  3394  0524  30BA               	movlw	186
  3395  0525  00FB               	movwf	??_LEER_S1
  3396  0526                     u2487:
  3397  0526  0BFB               	decfsz	??_LEER_S1,f
  3398  0527  2D26               	goto	u2487
  3399  0528  0BFC               	decfsz	??_LEER_S1+1,f
  3400  0529  2D26               	goto	u2487
  3401  052A  0BFD               	decfsz	??_LEER_S1+2,f
  3402  052B  2D26               	goto	u2487
  3403  052C  0000               	nop
  3404  052D                     l108:
  3405  052D  0008               	return
  3406  052E                     __end_of_LEER_S1:
  3407                           
  3408                           	psect	text20
  3409  0252                     __ptext20:	
  3410 ;; *************** function _spiWrite *****************
  3411 ;; Defined at:
  3412 ;;		line 36 in file "SPI.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  dat             1    wreg     unsigned char 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  dat             1    0[COMMON] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         1       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0
  3429 ;;      Totals:         1       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_LEER_S1
  3436 ;;		_LEER_S2
  3437 ;;		_LEER_S3
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _spiWrite
  3443  0252                     _spiWrite:
  3444                           
  3445                           ;incstack = 0
  3446                           ; Regs used in _spiWrite: [wreg]
  3447                           ;spiWrite@dat stored from wreg
  3448  0252  00F0               	movwf	spiWrite@dat
  3449  0253                     l1559:
  3450                           
  3451                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  3452  0253  0870               	movf	spiWrite@dat,w
  3453  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0256  0093               	movwf	19	;volatile
  3456  0257                     l140:
  3457  0257  0008               	return
  3458  0258                     __end_of_spiWrite:
  3459                           
  3460                           	psect	text21
  3461  026D                     __ptext21:	
  3462 ;; *************** function _spiRead *****************
  3463 ;; Defined at:
  3464 ;;		line 49 in file "SPI.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      unsigned char 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    1
  3485 ;; This function calls:
  3486 ;;		_spiReceiveWait
  3487 ;; This function is called by:
  3488 ;;		_LEER_S1
  3489 ;;		_LEER_S2
  3490 ;;		_LEER_S3
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _spiRead
  3496  026D                     _spiRead:
  3497  026D                     l1561:	
  3498                           ;incstack = 0
  3499                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  3500                           
  3501                           
  3502                           ;SPI.c: 51:     spiReceiveWait();
  3503  026D  120A  118A  225E  120A  118A  	fcall	_spiReceiveWait
  3504  0272                     l1563:
  3505                           
  3506                           ;SPI.c: 52:     return(SSPBUF);
  3507  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0274  0813               	movf	19,w	;volatile
  3510  0275                     l148:
  3511  0275  0008               	return
  3512  0276                     __end_of_spiRead:
  3513                           
  3514                           	psect	text22
  3515  025E                     __ptext22:	
  3516 ;; *************** function _spiReceiveWait *****************
  3517 ;; Defined at:
  3518 ;;		line 31 in file "SPI.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		None
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_spiRead
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           
  3546                           ;psect for function _spiReceiveWait
  3547  025E                     _spiReceiveWait:
  3548  025E                     l1541:	
  3549                           ;incstack = 0
  3550                           ; Regs used in _spiReceiveWait: []
  3551                           
  3552  025E                     l134:	
  3553                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  3554                           
  3555  025E  1683               	bsf	3,5	;RP0=1, select bank1
  3556  025F  1303               	bcf	3,6	;RP1=0, select bank1
  3557  0260  1C14               	btfss	20,0	;volatile
  3558  0261  2A63               	goto	u1191
  3559  0262  2A64               	goto	u1190
  3560  0263                     u1191:
  3561  0263  2A5E               	goto	l134
  3562  0264                     u1190:
  3563  0264                     l137:
  3564  0264  0008               	return
  3565  0265                     __end_of_spiReceiveWait:
  3566                           
  3567                           	psect	text23
  3568  033E                     __ptext23:	
  3569 ;; *************** function ___wmul *****************
  3570 ;; Defined at:
  3571 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  multiplier      2    0[COMMON] unsigned int 
  3574 ;;  multiplicand    2    2[COMMON] unsigned int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  product         2    4[COMMON] unsigned int 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  2    0[COMMON] unsigned int 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         4       0       0       0       0
  3587 ;;      Locals:         2       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0
  3589 ;;      Totals:         6       0       0       0       0
  3590 ;;Total ram usage:        6 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_LEER_S1
  3596 ;;		_LEER_S3
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function ___wmul
  3602  033E                     ___wmul:
  3603  033E                     l1599:	
  3604                           ;incstack = 0
  3605                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3606                           
  3607  033E  01F4               	clrf	___wmul@product
  3608  033F  01F5               	clrf	___wmul@product+1
  3609  0340                     l1601:
  3610  0340  1C70               	btfss	___wmul@multiplier,0
  3611  0341  2B43               	goto	u1241
  3612  0342  2B44               	goto	u1240
  3613  0343                     u1241:
  3614  0343  2B4A               	goto	l334
  3615  0344                     u1240:
  3616  0344                     l1603:
  3617  0344  0872               	movf	___wmul@multiplicand,w
  3618  0345  07F4               	addwf	___wmul@product,f
  3619  0346  1803               	skipnc
  3620  0347  0AF5               	incf	___wmul@product+1,f
  3621  0348  0873               	movf	___wmul@multiplicand+1,w
  3622  0349  07F5               	addwf	___wmul@product+1,f
  3623  034A                     l334:
  3624  034A  3001               	movlw	1
  3625  034B                     u1255:
  3626  034B  1003               	clrc
  3627  034C  0DF2               	rlf	___wmul@multiplicand,f
  3628  034D  0DF3               	rlf	___wmul@multiplicand+1,f
  3629  034E  3EFF               	addlw	-1
  3630  034F  1D03               	skipz
  3631  0350  2B4B               	goto	u1255
  3632  0351                     l1605:
  3633  0351  3001               	movlw	1
  3634  0352                     u1265:
  3635  0352  1003               	clrc
  3636  0353  0CF1               	rrf	___wmul@multiplier+1,f
  3637  0354  0CF0               	rrf	___wmul@multiplier,f
  3638  0355  3EFF               	addlw	-1
  3639  0356  1D03               	skipz
  3640  0357  2B52               	goto	u1265
  3641  0358                     l1607:
  3642  0358  0870               	movf	___wmul@multiplier,w
  3643  0359  0471               	iorwf	___wmul@multiplier+1,w
  3644  035A  1D03               	btfss	3,2
  3645  035B  2B5D               	goto	u1271
  3646  035C  2B5E               	goto	u1270
  3647  035D                     u1271:
  3648  035D  2B40               	goto	l1601
  3649  035E                     u1270:
  3650  035E                     l1609:
  3651  035E  0875               	movf	___wmul@product+1,w
  3652  035F  00F1               	movwf	?___wmul+1
  3653  0360  0874               	movf	___wmul@product,w
  3654  0361  00F0               	movwf	?___wmul
  3655  0362                     l336:
  3656  0362  0008               	return
  3657  0363                     __end_of___wmul:
  3658                           
  3659                           	psect	text24
  3660  0587                     __ptext24:	
  3661 ;; *************** function ___awdiv *****************
  3662 ;; Defined at:
  3663 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  divisor         2    6[COMMON] int 
  3666 ;;  dividend        2    8[COMMON] int 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  quotient        2    2[BANK0 ] int 
  3669 ;;  sign            1    1[BANK0 ] unsigned char 
  3670 ;;  counter         1    0[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2    6[COMMON] int 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         4       0       0       0       0
  3681 ;;      Locals:         0       4       0       0       0
  3682 ;;      Temps:          1       0       0       0       0
  3683 ;;      Totals:         5       4       0       0       0
  3684 ;;Total ram usage:        9 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_LEER_S1
  3690 ;;		_LEER_S3
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function ___awdiv
  3696  0587                     ___awdiv:
  3697  0587                     l1627:	
  3698                           ;incstack = 0
  3699                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3700                           
  3701  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0588  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0589  01D7               	clrf	___awdiv@sign
  3704  058A                     l1629:
  3705  058A  1FF7               	btfss	___awdiv@divisor+1,7
  3706  058B  2D8D               	goto	u1301
  3707  058C  2D8E               	goto	u1300
  3708  058D                     u1301:
  3709  058D  2D95               	goto	l1635
  3710  058E                     u1300:
  3711  058E                     l1631:
  3712  058E  09F6               	comf	___awdiv@divisor,f
  3713  058F  09F7               	comf	___awdiv@divisor+1,f
  3714  0590  0AF6               	incf	___awdiv@divisor,f
  3715  0591  1903               	skipnz
  3716  0592  0AF7               	incf	___awdiv@divisor+1,f
  3717  0593                     l1633:
  3718  0593  01D7               	clrf	___awdiv@sign
  3719  0594  0AD7               	incf	___awdiv@sign,f
  3720  0595                     l1635:
  3721  0595  1FF9               	btfss	___awdiv@dividend+1,7
  3722  0596  2D98               	goto	u1311
  3723  0597  2D99               	goto	u1310
  3724  0598                     u1311:
  3725  0598  2DA2               	goto	l1641
  3726  0599                     u1310:
  3727  0599                     l1637:
  3728  0599  09F8               	comf	___awdiv@dividend,f
  3729  059A  09F9               	comf	___awdiv@dividend+1,f
  3730  059B  0AF8               	incf	___awdiv@dividend,f
  3731  059C  1903               	skipnz
  3732  059D  0AF9               	incf	___awdiv@dividend+1,f
  3733  059E                     l1639:
  3734  059E  3001               	movlw	1
  3735  059F  00FA               	movwf	??___awdiv
  3736  05A0  087A               	movf	??___awdiv,w
  3737  05A1  06D7               	xorwf	___awdiv@sign,f
  3738  05A2                     l1641:
  3739  05A2  01D8               	clrf	___awdiv@quotient
  3740  05A3  01D9               	clrf	___awdiv@quotient+1
  3741  05A4                     l1643:
  3742  05A4  0876               	movf	___awdiv@divisor,w
  3743  05A5  0477               	iorwf	___awdiv@divisor+1,w
  3744  05A6  1903               	btfsc	3,2
  3745  05A7  2DA9               	goto	u1321
  3746  05A8  2DAA               	goto	u1320
  3747  05A9                     u1321:
  3748  05A9  2DE1               	goto	l1663
  3749  05AA                     u1320:
  3750  05AA                     l1645:
  3751  05AA  01D6               	clrf	___awdiv@counter
  3752  05AB  0AD6               	incf	___awdiv@counter,f
  3753  05AC  2DB8               	goto	l1651
  3754  05AD                     l1647:
  3755  05AD  3001               	movlw	1
  3756  05AE                     u1335:
  3757  05AE  1003               	clrc
  3758  05AF  0DF6               	rlf	___awdiv@divisor,f
  3759  05B0  0DF7               	rlf	___awdiv@divisor+1,f
  3760  05B1  3EFF               	addlw	-1
  3761  05B2  1D03               	skipz
  3762  05B3  2DAE               	goto	u1335
  3763  05B4                     l1649:
  3764  05B4  3001               	movlw	1
  3765  05B5  00FA               	movwf	??___awdiv
  3766  05B6  087A               	movf	??___awdiv,w
  3767  05B7  07D6               	addwf	___awdiv@counter,f
  3768  05B8                     l1651:
  3769  05B8  1FF7               	btfss	___awdiv@divisor+1,7
  3770  05B9  2DBB               	goto	u1341
  3771  05BA  2DBC               	goto	u1340
  3772  05BB                     u1341:
  3773  05BB  2DAD               	goto	l1647
  3774  05BC                     u1340:
  3775  05BC                     l1653:
  3776  05BC  3001               	movlw	1
  3777  05BD                     u1355:
  3778  05BD  1003               	clrc
  3779  05BE  0DD8               	rlf	___awdiv@quotient,f
  3780  05BF  0DD9               	rlf	___awdiv@quotient+1,f
  3781  05C0  3EFF               	addlw	-1
  3782  05C1  1D03               	skipz
  3783  05C2  2DBD               	goto	u1355
  3784  05C3  0877               	movf	___awdiv@divisor+1,w
  3785  05C4  0279               	subwf	___awdiv@dividend+1,w
  3786  05C5  1D03               	skipz
  3787  05C6  2DC9               	goto	u1365
  3788  05C7  0876               	movf	___awdiv@divisor,w
  3789  05C8  0278               	subwf	___awdiv@dividend,w
  3790  05C9                     u1365:
  3791  05C9  1C03               	skipc
  3792  05CA  2DCC               	goto	u1361
  3793  05CB  2DCD               	goto	u1360
  3794  05CC                     u1361:
  3795  05CC  2DD4               	goto	l1659
  3796  05CD                     u1360:
  3797  05CD                     l1655:
  3798  05CD  0876               	movf	___awdiv@divisor,w
  3799  05CE  02F8               	subwf	___awdiv@dividend,f
  3800  05CF  0877               	movf	___awdiv@divisor+1,w
  3801  05D0  1C03               	skipc
  3802  05D1  03F9               	decf	___awdiv@dividend+1,f
  3803  05D2  02F9               	subwf	___awdiv@dividend+1,f
  3804  05D3                     l1657:
  3805  05D3  1458               	bsf	___awdiv@quotient,0
  3806  05D4                     l1659:
  3807  05D4  3001               	movlw	1
  3808  05D5                     u1375:
  3809  05D5  1003               	clrc
  3810  05D6  0CF7               	rrf	___awdiv@divisor+1,f
  3811  05D7  0CF6               	rrf	___awdiv@divisor,f
  3812  05D8  3EFF               	addlw	-1
  3813  05D9  1D03               	skipz
  3814  05DA  2DD5               	goto	u1375
  3815  05DB                     l1661:
  3816  05DB  3001               	movlw	1
  3817  05DC  02D6               	subwf	___awdiv@counter,f
  3818  05DD  1D03               	btfss	3,2
  3819  05DE  2DE0               	goto	u1381
  3820  05DF  2DE1               	goto	u1380
  3821  05E0                     u1381:
  3822  05E0  2DBC               	goto	l1653
  3823  05E1                     u1380:
  3824  05E1                     l1663:
  3825  05E1  0857               	movf	___awdiv@sign,w
  3826  05E2  1903               	btfsc	3,2
  3827  05E3  2DE5               	goto	u1391
  3828  05E4  2DE6               	goto	u1390
  3829  05E5                     u1391:
  3830  05E5  2DEB               	goto	l1667
  3831  05E6                     u1390:
  3832  05E6                     l1665:
  3833  05E6  09D8               	comf	___awdiv@quotient,f
  3834  05E7  09D9               	comf	___awdiv@quotient+1,f
  3835  05E8  0AD8               	incf	___awdiv@quotient,f
  3836  05E9  1903               	skipnz
  3837  05EA  0AD9               	incf	___awdiv@quotient+1,f
  3838  05EB                     l1667:
  3839  05EB  0859               	movf	___awdiv@quotient+1,w
  3840  05EC  00F7               	movwf	?___awdiv+1
  3841  05ED  0858               	movf	___awdiv@quotient,w
  3842  05EE  00F6               	movwf	?___awdiv
  3843  05EF                     l487:
  3844  05EF  0008               	return
  3845  05F0                     __end_of___awdiv:
  3846  007E                     btemp	set	126	;btemp
  3847  007E                     wtemp0	set	126
  3848                           
  3849                           	psect	config
  3850                           
  3851                           ;Config register CONFIG1 @ 0x2007
  3852                           ;	Oscillator Selection bits
  3853                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  3854                           ;	Watchdog Timer Enable bit
  3855                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3856                           ;	Power-up Timer Enable bit
  3857                           ;	PWRTE = OFF, PWRT disabled
  3858                           ;	RE3/MCLR pin function select bit
  3859                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3860                           ;	Code Protection bit
  3861                           ;	CP = OFF, Program memory code protection is disabled
  3862                           ;	Data Code Protection bit
  3863                           ;	CPD = OFF, Data memory code protection is disabled
  3864                           ;	Brown Out Reset Selection bits
  3865                           ;	BOREN = OFF, BOR disabled
  3866                           ;	Internal External Switchover bit
  3867                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3868                           ;	Fail-Safe Clock Monitor Enabled bit
  3869                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3870                           ;	Low Voltage Programming Enable bit
  3871                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3872                           ;	In-Circuit Debugger Mode bit
  3873                           ;	DEBUG = 0x1, unprogrammed default
  3874  2007                     	org	8199
  3875  2007  20D6               	dw	8406
  3876                           
  3877                           ;Config register CONFIG2 @ 0x2008
  3878                           ;	Brown-out Reset Selection bit
  3879                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3880                           ;	Flash Program Memory Self Write Enable bits
  3881                           ;	WRT = OFF, Write protection off
  3882  2008                     	org	8200
  3883  2008  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_4(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data(BANK0[20]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_LEER_S1
    _main->_LEER_S3
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LEER_S3->___awdiv
    _LEER_S2->_spiWrite
    _LEER_S1->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _LEER_S3->___awdiv
    _LEER_S1->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5320
                                             17 BANK0      3     3      0
                            _LEER_S1
                            _LEER_S2
                            _LEER_S3
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1697
                                              0 BANK0     17    10      7
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     145
                                              1 COMMON     3     3      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LEER_S3                                              3     3      0    1022
                                             11 COMMON     3     3      0
                            ___awdiv
                             ___wmul
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _LEER_S2                                              3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _LEER_S1                                              3     3      0    1022
                                             11 COMMON     3     3      0
                            ___awdiv
                             ___wmul
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEER_S1
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LEER_S2
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LEER_S3
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _spiRead
       _spiReceiveWait
     _spiWrite
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
     _spiInit
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      58       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      58      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 18:37:02 2021

                        pc 0002             ___bmul@product 0072                _SSPSTATbits 0094  
                       _S1 0041                         _S2 0040                         _S3 003F  
             ___awdiv@sign 0057                         fsr 0004        ___wmul@multiplicand 0072  
                      l111 0398                        l200 04DD                        l105 03D2  
                      l114 0586                        l130 02DC                        l203 02CB  
                      l131 02E1                        l140 0257                        l108 052D  
                      l134 025E                        l137 0264                        l209 044E  
                      l330 07F2                        l148 0275                        l165 0277  
                      l334 034A                        l174 0319                        l191 028E  
                      _ADC 003A                        l336 0362                        l168 0281  
                      l360 02B5                        l185 025D                        l188 02FB  
                      l197 033D                        l606 0492                        l616 040C  
                      l487 05EF                        l787 02A0                        _RE0 0048  
                      _RE1 0049                        fsr0 0004                        indf 0000  
          __end_of_LEER_S1 052E            __end_of_LEER_S2 0399            __end_of_LEER_S3 0587  
                     l1601 0340                       l2225 0703                       l1603 0344  
                     l1605 0351                       l1541 025E                       l1621 02AD  
                     l1613 02A2                       l1701 03DC                       l1631 058E  
                     l1607 0358                       l1543 0259                       l1551 02D4  
                     l1623 02B4                       l1615 02A3                       l1711 03FB  
                     l1703 03E3                       l1641 05A2                       l1633 0593  
                     l1609 035E                       l1561 026D                       l1801 036F  
                     l1545 0277                       l1553 02D6                       l1721 03A8  
                     l1617 02A7                       l1713 0402                       l1705 03E7  
                     l1651 05B8                       l1643 05A4                       l1635 0595  
                     l1627 0587                       l1563 0272                       l1803 0375  
                     l1811 053A                       l1571 02EC                       l1547 027D  
                     l1555 02D8                       l1731 03B7                       l1723 03AB  
                     l1619 02AB                       l1707 03EB                       l1715 0408  
                     l1661 05DB                       l1653 05BC                       l1645 05AA  
                     l1637 0599                       l1629 058A                       l1805 0388  
                     l1821 0579                       l1813 0540                       l1573 02EF  
                     l1581 02C0                       l1557 02DB                       l1549 02CD  
                     l1741 03C8                       l1733 03BA                       l1725 03AE  
                     l1709 03F5                       l1901 07DC                       l1655 05CD  
                     l1647 05AD                       l1663 05E1                       l1639 059E  
                     l1559 0253                       l1815 054A                       l1807 052E  
                     l1575 02F8                       l1567 02E3                       l1583 02C3  
                     l1751 03D0                       l1743 03C9                       l1735 03C3  
                     l1727 03B1                       l1719 0399                       l1671 044F  
                     l1591 0297                       l1903 07EE                       l1831 06AA  
                     l1823 0693                       l1665 05E6                       l1657 05D3  
                     l1649 05B4                       l1817 056D                       l1809 0531  
                     l1569 02E6                       l1761 04B1                       l1585 02C8  
                     l1577 02B7                       l1913 02FD                       l1753 03D1  
                     l1745 03CB                       l1737 03C4                       l1729 03B4  
                     l1681 0465                       l1673 0451                       l1593 029D  
                     l1841 06CE                       l1833 06AB                       l1825 0698  
                     l1921 05F0                       l1667 05EB                       l1659 05D4  
                     l1819 0576                       l1763 04B7                       l1755 0493  
                     l1771 0325                       l1579 02BA                       l1915 02FF  
                     l1747 03CC                       l1739 03C7                       l1691 0488  
                     l1683 0469                       l1675 0457                       l1595 029F  
                     l1587 0290                       l1851 06EF                       l1843 06D9  
                     l1835 06B7                       l1827 069E                       l1931 060A  
                     l1923 05F5                       l1765 0282                       l1757 0499  
                     l1773 032C                       l1781 0410                       l1917 030A  
                     l1749 03CD                       l1685 047A                       l1677 045A  
                     l1693 048E                       l1589 0291                       l1861 0722  
                     l1853 070E                       l1845 06DD                       l1837 06BB  
                     l1829 06A5                       l1941 063D                       l1933 0613  
                     l1925 05F8                       l1599 033E                       l1791 0514  
                     l1759 04A2                       l1775 0332                       l1767 031B  
                     l1783 042C                       l1919 030E                       l1687 0480  
                     l1679 0461                       l1863 0727                       l1855 0716  
                     l1839 06BD                       l1847 06EE                       l1951 0669  
                     l1943 0642                       l1935 061F                       l1927 05FD  
                     l1793 051D                       l1777 0337                       l1769 0320  
                     l1785 0432                       l1689 0481                       l1697 03D3  
                     l1881 076E                       l1873 0738                       l1865 072C  
                     l1857 071A                       l1953 066F                       l1945 0647  
                     l1937 0628                       l1929 0602                       l1795 0520  
                     l1787 04DE                       l1779 040D                       l1699 03D9  
                     l1891 0798                       l1883 076F                       l1867 0732  
                     l1859 071E                       l1955 0675                       l1947 064C  
                     l1939 0634                       l1789 04E1                       l1797 0363  
                     l1893 079D                       l1885 0783                       l1877 0754  
                     l1869 0736                       l1957 067B                       l1949 0650  
                     l1799 0366                       l1895 07CB                       l1887 0789  
                     l1879 075E                       l1959 0683                       l1889 0791  
                     l1899 07D3                       STR_1 0032                       STR_2 0036  
                     STR_3 003A                       STR_4 001D                       u1200 027D  
                     u1201 027C                       u1210 02D4                       u1211 02D3  
                     u1300 058E                       u1220 0297                       u1301 058D  
                     u1221 0296                       u1310 0599                       u1230 029D  
                     u1311 0598                       u1231 029C                       u1320 05AA  
                     u1240 0344                       u1400 0457                       u1321 05A9  
                     u1241 0343                       u1401 0456                       u1340 05BC  
                     u1420 0469                       u1500 03F5                       u1341 05BB  
                     u1421 0468                       u1501 03F4                       u1270 035E  
                     u1190 0264                       u1335 05AE                       u1271 035D  
                     u1255 034B                       u1191 0263                       u1415 045B  
                     u1360 05CD                       u1280 02A7                       u1440 047A  
                     u1520 0408                       u1600 06ED                       u1361 05CC  
                     u1265 0352                       u1281 02A6                       u1441 0479  
                     u1521 0407                       u1505 03F1                       u1601 06EC  
                     u1530 0320                       u1290 02B4                       u1610 071E  
                     u1355 05BD                       u1531 031F                       u1291 02B3  
                     u1435 046A                       u1515 03FC                       u1611 071D  
                     u1380 05E1                       u1540 0332                       u1460 048E  
                     u1700 07EE                       u1620 072C                       u1381 05E0  
                     u1365 05C9                       u1541 0331                       u1461 048D  
                     u1445 0476                       u1701 07ED                       u1621 072B  
                     u1390 05E6                       u1550 041A                       u1710 0319  
                     u1470 03D9                       u1630 0732                       u1391 05E5  
                     u1375 05D5                       u2407 02F3                       u1711 0318  
                     u1455 0482                       u1471 03D8                       u1631 0731  
                     u1560 043C                       u1640 0753                       u2417 0535  
                     u1641 0752                       u1570 044E                       u1490 03EB  
                     u1650 075E                       u2427 0571                       u1571 044D  
                     u1491 03EA                       u1651 075D                       u1660 076E  
                     u1580 069E                       u2437 057F                       u1485 03DD  
                     u1661 076D                       u1645 074F                       u1581 069D  
                     u1670 0783                       u1590 06B7                       u2447 036A  
                     u2367 02C5                       u1671 0782                       u1591 06B6  
                     u1680 0791                       u2457 0383                       u2377 049D  
                     u1681 0790                       u1665 076A                       u1690 07DC  
                     u2467 0391                       u2387 04AC                       u1691 07DB  
                     u1675 077F                       u2477 0518                       u2397 04BB  
                     u2487 0526                       _RCIF 0065                       _TEMP 0038  
                     _TRMT 04C1                       _data 0042          ?_Lcd_Write_String 0073  
                     _cont 003D                       _main 05F0                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 02FC  
        ___bmul@multiplier 0073                      ?_main 0070            __end_of___awdiv 05F0  
                    _ANSEL 0188            ___awdiv@divisor 0076            __end_of___lwdiv 0493  
          __end_of___lwmod 040D            ___awdiv@counter 0056                      _RCREG 001A  
                    _SPBRG 0099                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 001D            __end_of_isdigit 02A1  
                    _setup 0399                      pclath 000A            __end_of_spiInit 02E2  
          __end_of_spiRead 0276                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F3           __end_of_Lcd_Init 04DE           __end_of_Lcd_Port 025E  
          __initialization 07F3               __end_of_main 0690           USART_ESCRITURA@a 0070  
                   ??_main 0067         __size_of_Lcd_Clear 000D                  ??_LEER_S1 007B  
                ??_LEER_S2 0071                  ??_LEER_S3 007B           ___awdiv@dividend 0078  
                   ?_setup 0070                     _ANSELH 0189              USART_STRING@a 0072  
            USART_STRING@i 0073                  ??_Lcd_Cmd 0071                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0016                     _TRISC0 0438                     _TRISC1 0439  
                   _TRISC2 043A                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013                     ___bmul 02A1  
                   ___wmul 033E                  ??___awdiv 007A                     _hablar 003C  
                ??___lwdiv 0074                  ??___lwmod 007C           ___awdiv@quotient 0058  
                ??_isdigit 0070           __end_of_spiWrite 0258                  ??_spiInit 0073  
                ??_spiRead 0070                  ??_sprintf 005D            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC          __end_of_Lcd_Clear 028F  
      ___bmul@multiplicand 0070             __pcstackCOMMON 0070              __end_of_setup 03D3  
           _Lcd_Set_Cursor 031A                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0074                 __pbssBANK0 0020                 __pmaintext 05F0  
                  ?___bmul 0070                    ?___wmul 0070    __size_of_spiReceiveWait 0007  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 033E   __size_of_USART_ESCRITURA 000C  
                  _LEER_S1 04DE                    _LEER_S2 0363                    _LEER_S3 052E  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 02B6                    _Lcd_Cmd 02E2  
                ?_spiWrite 0070            __size_of___bmul 0015                    ___awdiv 0587  
          __size_of___wmul 0025                    ___lwdiv 044F                    ___lwmod 03D3  
                  _data_S1 0030                    _data_S2 0028                    _data_S3 0020  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0690                    __ptext2 028F  
                  __ptext3 03D3                    __ptext4 044F                    __ptext5 02A1  
                  __ptext6 0399                    __ptext7 02CC                    __ptext8 02FC  
                  __ptext9 0276                    _dpowers 0013                    _isdigit 028F  
                  _spiInit 02CC                    _spiRead 026D                    _sprintf 0690  
                  clrloop0 0266     __end_of_Lcd_Write_Char 02CC       end_of_initialization 07FC  
                _RCSTAbits 0018                 ??_spiWrite 0070                  Lcd_Port@a 0070  
                _PORTCbits 0007          ??_USART_ESCRITURA 0070                spiWrite@dat 0070  
            ?_USART_STRING 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                  _TXSTAbits 0098                  _Lcd_Clear 0282  
           _spiReceiveWait 025E             __end_of___bmul 02B6             __end_of___wmul 0363  
         _Lcd_Write_String 040D        start_initialization 07F3             ??_USART_STRING 0071  
        __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 0265  
               ?_Lcd_Clear 0070                   ??___bmul 0071                   ??___wmul 0074  
          Lcd_Write_Char@a 0072                   ?_LEER_S1 0070                   ?_LEER_S2 0070  
                 ?_LEER_S3 0070                  ___latbits 0002              __pcstackBANK0 0056  
                 ?_Lcd_Cmd 0070                sprintf@flag 0061                sprintf@prec 0065  
         ___lwdiv@dividend 0072            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075  
                 ?___awdiv 0076                   ?___lwdiv 0070                   ?___lwmod 0078  
        __size_of_spiWrite 0006                  __pstrings 0003                   ?_isdigit 0070  
                 ?_spiInit 0070                   ?_spiRead 0070           ___lwdiv@quotient 0075  
                 ?_sprintf 0056             __size_of_setup 003A       spiInit@sTransmitEdge 0072  
           ___wmul@product 0074                  clear_ram0 0265                   _PIE1bits 008C  
       spiInit@sDataSample 0070                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
     __end_of_USART_STRING 031A            _USART_ESCRITURA 0276                __stringbase 0012  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071           __size_of_LEER_S1 0050  
         __size_of_LEER_S2 0036           __size_of_LEER_S3 0059                   _Lcd_Init 0493  
                 _Lcd_Port 0258   __end_of_Lcd_Write_String 044F           __size_of_Lcd_Cmd 001A  
         __size_of___awdiv 0069           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0013                _isdigit$958 0070                 sprintf@val 0063  
         __size_of_isdigit 0012            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 040D                   __ptext11 02B6                   __ptext20 0252  
                 __ptext12 031A                   __ptext21 026D                   __ptext13 0493  
                 __ptext22 025E                   __ptext14 0282                   __ptext23 033E  
                 __ptext15 02E2                   __ptext24 0587                   __ptext16 0258  
                 __ptext17 052E                   __ptext18 0363                   __ptext19 04DE  
         __size_of_spiInit 0016           __size_of_spiRead 0009           __size_of_sprintf 0163  
            __size_of_main 00A0    __end_of_USART_ESCRITURA 0282                   _spiWrite 0252  
             spiInit@sType 0073          spiInit@sClockIdle 0071                 _INTCONbits 000B  
                 isdigit@c 0071                  sprintf@ap 0060                  sprintf@sp 0062  
         ___lwmod@dividend 007A           ??_spiReceiveWait 0070      __size_of_USART_STRING 001E  
                stringcode 000D         Lcd_Set_Cursor@temp 0077                   sprintf@c 0066  
                 sprintf@f 0056            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003               _USART_STRING 02FC  
               _USART_LEER 003E           ?_USART_ESCRITURA 0070  
