

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 17:47:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  001E                     _ADRESH	set	30
   367  000C                     _PIR1bits	set	12
   368  000B                     _INTCONbits	set	11
   369  001F                     _ADCON0bits	set	31
   370  0008                     _PORTD	set	8
   371  0006                     _PORTB	set	6
   372  0005                     _PORTA	set	5
   373  0063                     _SSPIF	set	99
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  009F                     _ADCON1	set	159
   377  0085                     _TRISAbits	set	133
   378  008C                     _PIE1bits	set	140
   379  0088                     _TRISD	set	136
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  043B                     _TRISC3	set	1083
   383  043D                     _TRISC5	set	1085
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSEL	set	392
   386                           
   387                           	psect	cinit
   388  000F                     start_initialization:	
   389                           ; #config settings
   390                           
   391  000F                     __initialization:
   392                           
   393                           ; Clear objects allocated to COMMON
   394  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   395  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   396  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   397  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   398  0013                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401  0013                     __end_of__initialization:
   402  0013  0183               	clrf	3
   403  0014  120A  118A  28AF   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0077                     __pbssCOMMON:
   407  0077                     _channel:
   408  0077                     	ds	2
   409  0079                     _VALOR_ADC:
   410  0079                     	ds	1
   411  007A                     _ADC_res:
   412  007A                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:
   416  0070                     ?_spiWrite:
   417  0070                     ??_spiWrite:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_setup:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ADC_CH:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_isr:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     spiWrite@dat:	
   433                           ; 1 bytes @ 0x0
   434                           
   435                           
   436                           ; 1 bytes @ 0x0
   437  0070                     	ds	1
   438  0071                     ??_isr:
   439                           
   440                           ; 1 bytes @ 0x1
   441  0071                     	ds	2
   442  0073                     ??_ADC_CH:
   443  0073                     ?_spiInit:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ?_ADC_ch:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     spiInit@sDataSample:	
   450                           ; 2 bytes @ 0x3
   451                           
   452  0073                     ADC_ch@channel:	
   453                           ; 1 bytes @ 0x3
   454                           
   455                           
   456                           ; 2 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     spiInit@sClockIdle:
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     ??_ADC_ch:
   463  0075                     spiInit@sTransmitEdge:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 1 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     ??_spiInit:
   470  0076                     spiInit@sType:	
   471                           ; 1 bytes @ 0x6
   472                           
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ??_setup:
   477  0077                     ??_main:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           	psect	maintext
   482  00AF                     __pmaintext:	
   483                           ; 1 bytes @ 0x7
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 62 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : B00/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels required when called:    4
   509 ;; This function calls:
   510 ;;		_ADC_CH
   511 ;;		_setup
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _main
   519  00AF                     _main:
   520  00AF                     l870:	
   521                           ;incstack = 0
   522                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   523                           
   524                           
   525                           ;main.c: 63:     setup();
   526  00AF  120A  118A  2017  120A  118A  	fcall	_setup
   527  00B4                     l872:
   528                           
   529                           ;main.c: 65:         ADC_CH();
   530  00B4  120A  118A  2083  120A  118A  	fcall	_ADC_CH
   531  00B9  28B4               	goto	l872
   532  00BA  120A  118A  280C   	ljmp	start
   533  00BD                     __end_of_main:
   534                           
   535                           	psect	text1
   536  0017                     __ptext1:	
   537 ;; *************** function _setup *****************
   538 ;; Defined at:
   539 ;;		line 72 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    3
   560 ;; This function calls:
   561 ;;		_ADC_ch
   562 ;;		_spiInit
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _setup
   570  0017                     _setup:
   571  0017                     l842:	
   572                           ;incstack = 0
   573                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;main.c: 74:     ANSEL = 0b00000001;
   577  0017  3001               	movlw	1
   578  0018  1683               	bsf	3,5	;RP0=1, select bank3
   579  0019  1703               	bsf	3,6	;RP1=1, select bank3
   580  001A  0088               	movwf	8	;volatile
   581  001B                     l844:
   582                           
   583                           ;main.c: 75:     ANSELH = 0;
   584  001B  0189               	clrf	9	;volatile
   585  001C                     l846:
   586                           
   587                           ;main.c: 76:     TRISA = 0b00000001;
   588  001C  3001               	movlw	1
   589  001D  1683               	bsf	3,5	;RP0=1, select bank1
   590  001E  1303               	bcf	3,6	;RP1=0, select bank1
   591  001F  0085               	movwf	5	;volatile
   592                           
   593                           ;main.c: 77:     TRISB = 0;
   594  0020  0186               	clrf	6	;volatile
   595                           
   596                           ;main.c: 78:     TRISD = 0;
   597  0021  0188               	clrf	8	;volatile
   598                           
   599                           ;main.c: 80:     PORTA = 0;
   600  0022  1283               	bcf	3,5	;RP0=0, select bank0
   601  0023  1303               	bcf	3,6	;RP1=0, select bank0
   602  0024  0185               	clrf	5	;volatile
   603                           
   604                           ;main.c: 81:     PORTB = 0;
   605  0025  0186               	clrf	6	;volatile
   606                           
   607                           ;main.c: 82:     PORTD = 0;
   608  0026  0188               	clrf	8	;volatile
   609  0027                     l848:
   610                           
   611                           ;main.c: 84:     ADC_ch(0);
   612  0027  3000               	movlw	0
   613  0028  00F3               	movwf	ADC_ch@channel
   614  0029  00F4               	movwf	ADC_ch@channel+1
   615  002A  120A  118A  2049  120A  118A  	fcall	_ADC_ch
   616  002F                     l850:
   617                           
   618                           ;main.c: 85:     ADCON0bits.ADCS0 = 1;
   619  002F  1283               	bcf	3,5	;RP0=0, select bank0
   620  0030  1303               	bcf	3,6	;RP1=0, select bank0
   621  0031  171F               	bsf	31,6	;volatile
   622  0032                     l852:
   623                           
   624                           ;main.c: 86:     ADCON0bits.ADCS1 = 0;
   625  0032  139F               	bcf	31,7	;volatile
   626  0033                     l854:
   627                           
   628                           ;main.c: 87:     ADCON0bits.ADON = 1;
   629  0033  141F               	bsf	31,0	;volatile
   630  0034                     l856:
   631                           
   632                           ;main.c: 89:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   633  0034  01F3               	clrf	spiInit@sDataSample
   634  0035  01F4               	clrf	spiInit@sClockIdle
   635  0036  01F5               	clrf	spiInit@sTransmitEdge
   636  0037  3024               	movlw	36
   637  0038  120A  118A  206D  120A  118A  	fcall	_spiInit
   638  003D                     l858:
   639                           
   640                           ;main.c: 91:     INTCONbits.GIE = 1;
   641  003D  178B               	bsf	11,7	;volatile
   642  003E                     l860:
   643                           
   644                           ;main.c: 92:     INTCONbits.PEIE = 1;
   645  003E  170B               	bsf	11,6	;volatile
   646  003F                     l862:
   647                           
   648                           ;main.c: 93:     PIR1bits.SSPIF = 0;
   649  003F  1283               	bcf	3,5	;RP0=0, select bank0
   650  0040  1303               	bcf	3,6	;RP1=0, select bank0
   651  0041  118C               	bcf	12,3	;volatile
   652  0042                     l864:
   653                           
   654                           ;main.c: 94:     PIE1bits.SSPIE = 1;
   655  0042  1683               	bsf	3,5	;RP0=1, select bank1
   656  0043  1303               	bcf	3,6	;RP1=0, select bank1
   657  0044  158C               	bsf	12,3	;volatile
   658  0045                     l866:
   659                           
   660                           ;main.c: 95:     TRISAbits.TRISA5 = 1;
   661  0045  1685               	bsf	5,5	;volatile
   662  0046                     l868:
   663                           
   664                           ;main.c: 98:     ADCON1 = 0x07;
   665  0046  3007               	movlw	7
   666  0047  009F               	movwf	31	;volatile
   667  0048                     l63:
   668  0048  0008               	return
   669  0049                     __end_of_setup:
   670                           
   671                           	psect	text2
   672  006D                     __ptext2:	
   673 ;; *************** function _spiInit *****************
   674 ;; Defined at:
   675 ;;		line 15 in file "SPI.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  sType           1    wreg     enum E1264
   678 ;;  sDataSample     1    3[COMMON] enum E1272
   679 ;;  sClockIdle      1    4[COMMON] enum E1276
   680 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  sType           1    6[COMMON] enum E1264
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         3       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         4       0       0       0       0
   696 ;;Total ram usage:        4 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    2
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_setup
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _spiInit
   708  006D                     _spiInit:
   709                           
   710                           ;incstack = 0
   711                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   712                           ;spiInit@sType stored from wreg
   713  006D  00F6               	movwf	spiInit@sType
   714  006E                     l832:
   715                           
   716                           ;SPI.c: 15: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 16: {;SPI.c: 17:     TRISC5 = 0;
   717  006E  1683               	bsf	3,5	;RP0=1, select bank1
   718  006F  1303               	bcf	3,6	;RP1=0, select bank1
   719  0070  1287               	bcf	7,5	;volatile
   720                           
   721                           ;SPI.c: 18:     if(sType & 0b00000100)
   722  0071  1D76               	btfss	spiInit@sType,2
   723  0072  2874               	goto	u51
   724  0073  2875               	goto	u50
   725  0074                     u51:
   726  0074  2879               	goto	l838
   727  0075                     u50:
   728  0075                     l834:
   729                           
   730                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sTransmitEdge;
   731  0075  0875               	movf	spiInit@sTransmitEdge,w
   732  0076  0094               	movwf	20	;volatile
   733  0077                     l836:
   734                           
   735                           ;SPI.c: 21:         TRISC3 = 1;
   736  0077  1587               	bsf	7,3	;volatile
   737                           
   738                           ;SPI.c: 22:     }
   739  0078  287D               	goto	l85
   740  0079                     l838:
   741                           
   742                           ;SPI.c: 24:     {;SPI.c: 25:         SSPSTAT = sDataSample | sTransmitEdge;
   743  0079  0873               	movf	spiInit@sDataSample,w
   744  007A  0475               	iorwf	spiInit@sTransmitEdge,w
   745  007B  0094               	movwf	20	;volatile
   746  007C                     l840:
   747                           
   748                           ;SPI.c: 26:         TRISC3 = 0;
   749  007C  1187               	bcf	7,3	;volatile
   750  007D                     l85:	
   751                           ;SPI.c: 27:     }
   752                           
   753                           
   754                           ;SPI.c: 29:     SSPCON = sType | sClockIdle;
   755  007D  0876               	movf	spiInit@sType,w
   756  007E  0474               	iorwf	spiInit@sClockIdle,w
   757  007F  1283               	bcf	3,5	;RP0=0, select bank0
   758  0080  1303               	bcf	3,6	;RP1=0, select bank0
   759  0081  0094               	movwf	20	;volatile
   760  0082                     l86:
   761  0082  0008               	return
   762  0083                     __end_of_spiInit:
   763                           
   764                           	psect	text3
   765  0049                     __ptext3:	
   766 ;; *************** function _ADC_ch *****************
   767 ;; Defined at:
   768 ;;		line 18 in file "ADC.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  channel         2    3[COMMON] unsigned short 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  2    3[COMMON] unsigned int 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         2       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         2       0       0       0       0
   786 ;;Total ram usage:        2 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_setup
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _ADC_ch
   798  0049                     _ADC_ch:
   799  0049                     l822:	
   800                           ;incstack = 0
   801                           ; Regs used in _ADC_ch: [wreg-fsr0h+status,2+status,0]
   802                           
   803                           
   804                           ;ADC.c: 19:      switch (channel) {
   805  0049  285F               	goto	l826
   806  004A                     l120:	
   807                           ;ADC.c: 20:         case 0:
   808                           
   809                           
   810                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
   811  004A  1283               	bcf	3,5	;RP0=0, select bank0
   812  004B  1303               	bcf	3,6	;RP1=0, select bank0
   813  004C  129F               	bcf	31,5	;volatile
   814                           
   815                           ;ADC.c: 22:             ADCON0bits.CHS2 = 0;
   816  004D  121F               	bcf	31,4	;volatile
   817                           
   818                           ;ADC.c: 23:             ADCON0bits.CHS1 = 0;
   819  004E  119F               	bcf	31,3	;volatile
   820                           
   821                           ;ADC.c: 24:             ADCON0bits.CHS0 = 0;
   822  004F  111F               	bcf	31,2	;volatile
   823                           
   824                           ;ADC.c: 26:             break;
   825  0050  286C               	goto	l124
   826  0051                     l122:	
   827                           ;ADC.c: 27:         case 1:
   828                           
   829                           
   830                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
   831  0051  1283               	bcf	3,5	;RP0=0, select bank0
   832  0052  1303               	bcf	3,6	;RP1=0, select bank0
   833  0053  129F               	bcf	31,5	;volatile
   834                           
   835                           ;ADC.c: 29:             ADCON0bits.CHS2 = 0;
   836  0054  121F               	bcf	31,4	;volatile
   837                           
   838                           ;ADC.c: 30:             ADCON0bits.CHS1 = 0;
   839  0055  119F               	bcf	31,3	;volatile
   840                           
   841                           ;ADC.c: 31:             ADCON0bits.CHS0 = 1;
   842  0056  151F               	bsf	31,2	;volatile
   843                           
   844                           ;ADC.c: 32:             break;
   845  0057  286C               	goto	l124
   846  0058                     l123:	
   847                           ;ADC.c: 33:         default:
   848                           
   849                           
   850                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
   851  0058  1283               	bcf	3,5	;RP0=0, select bank0
   852  0059  1303               	bcf	3,6	;RP1=0, select bank0
   853  005A  129F               	bcf	31,5	;volatile
   854                           
   855                           ;ADC.c: 35:             ADCON0bits.CHS2 = 0;
   856  005B  121F               	bcf	31,4	;volatile
   857                           
   858                           ;ADC.c: 36:             ADCON0bits.CHS1 = 0;
   859  005C  119F               	bcf	31,3	;volatile
   860                           
   861                           ;ADC.c: 37:             ADCON0bits.CHS0 = 0;
   862  005D  111F               	bcf	31,2	;volatile
   863                           
   864                           ;ADC.c: 38:             break;
   865  005E  286C               	goto	l124
   866  005F                     l826:
   867                           
   868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 1, Range of values is 0 to 0
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte            4     3 (average)
   874                           ; direct_byte           11     8 (fixed)
   875                           ; jumptable            260     6 (fixed)
   876                           ;	Chosen strategy is simple_byte
   877  005F  0874               	movf	ADC_ch@channel+1,w
   878  0060  3A00               	xorlw	0	; case 0
   879  0061  1903               	skipnz
   880  0062  2864               	goto	l894
   881  0063  2858               	goto	l123
   882  0064                     l894:
   883                           
   884                           ; Switch size 1, requested type "simple"
   885                           ; Number of cases is 2, Range of values is 0 to 1
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte            7     4 (average)
   889                           ; direct_byte           14     8 (fixed)
   890                           ; jumptable            260     6 (fixed)
   891                           ;	Chosen strategy is simple_byte
   892  0064  0873               	movf	ADC_ch@channel,w
   893  0065  3A00               	xorlw	0	; case 0
   894  0066  1903               	skipnz
   895  0067  284A               	goto	l120
   896  0068  3A01               	xorlw	1	; case 1
   897  0069  1903               	skipnz
   898  006A  2851               	goto	l122
   899  006B  2858               	goto	l123
   900  006C                     l124:
   901  006C  0008               	return
   902  006D                     __end_of_ADC_ch:
   903                           
   904                           	psect	text4
   905  0083                     __ptext4:	
   906 ;; *************** function _ADC_CH *****************
   907 ;; Defined at:
   908 ;;		line 102 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          2       0       0       0       0
   925 ;;      Totals:         2       0       0       0       0
   926 ;;Total ram usage:        2 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    2
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _ADC_CH
   938  0083                     _ADC_CH:
   939  0083                     l766:	
   940                           ;incstack = 0
   941                           ; Regs used in _ADC_CH: [wreg]
   942                           
   943                           
   944                           ;main.c: 103:     _delay((unsigned long)((2)*(8000000/4000.0)));
   945  0083  3006               	movlw	6
   946  0084  00F4               	movwf	??_ADC_CH+1
   947  0085  3030               	movlw	48
   948  0086  00F3               	movwf	??_ADC_CH
   949  0087                     u67:
   950  0087  0BF3               	decfsz	??_ADC_CH,f
   951  0088  2887               	goto	u67
   952  0089  0BF4               	decfsz	??_ADC_CH+1,f
   953  008A  2887               	goto	u67
   954  008B  0000               	nop
   955  008C                     l768:
   956                           
   957                           ;main.c: 104:     ADCON0bits.GO = 1;
   958  008C  1283               	bcf	3,5	;RP0=0, select bank0
   959  008D  1303               	bcf	3,6	;RP1=0, select bank0
   960  008E  149F               	bsf	31,1	;volatile
   961                           
   962                           ;main.c: 105:     while (ADCON0bits.GO != 0) {
   963  008F  2894               	goto	l772
   964  0090                     l770:
   965                           
   966                           ;main.c: 107:         ADC_res = ADRESH;
   967  0090  081E               	movf	30,w	;volatile
   968  0091  00F3               	movwf	??_ADC_CH
   969  0092  0873               	movf	??_ADC_CH,w
   970  0093  00FA               	movwf	_ADC_res
   971  0094                     l772:
   972                           
   973                           ;main.c: 105:     while (ADCON0bits.GO != 0) {
   974  0094  189F               	btfsc	31,1	;volatile
   975  0095  2897               	goto	u21
   976  0096  2898               	goto	u20
   977  0097                     u21:
   978  0097  2890               	goto	l770
   979  0098                     u20:
   980  0098                     l69:
   981  0098  0008               	return
   982  0099                     __end_of_ADC_CH:
   983                           
   984                           	psect	text5
   985  0099                     __ptext5:	
   986 ;; *************** function _isr *****************
   987 ;; Defined at:
   988 ;;		line 52 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          2       0       0       0       0
  1005 ;;      Totals:         2       0       0       0       0
  1006 ;;Total ram usage:        2 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    1
  1009 ;; This function calls:
  1010 ;;		_spiWrite
  1011 ;; This function is called by:
  1012 ;;		Interrupt level 1
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _isr
  1018  0099                     _isr:
  1019  0099                     i1l776:
  1020                           
  1021                           ;main.c: 53:    if(SSPIF == 1){
  1022  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1023  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1024  009B  1D8C               	btfss	12,3	;volatile
  1025  009C  289E               	goto	u4_21
  1026  009D  289F               	goto	u4_20
  1027  009E                     u4_21:
  1028  009E  28A8               	goto	i1l52
  1029  009F                     u4_20:
  1030  009F                     i1l778:
  1031                           
  1032                           ;main.c: 55:         spiWrite(ADC_res);
  1033  009F  087A               	movf	_ADC_res,w
  1034  00A0  120A  118A  20BD  120A  118A  	fcall	_spiWrite
  1035  00A5                     i1l780:
  1036                           
  1037                           ;main.c: 56:         SSPIF = 0;
  1038  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1039  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1040  00A7  118C               	bcf	12,3	;volatile
  1041  00A8                     i1l52:
  1042  00A8  0872               	movf	??_isr+1,w
  1043  00A9  008A               	movwf	10
  1044  00AA  0E71               	swapf	??_isr,w
  1045  00AB  0083               	movwf	3
  1046  00AC  0EFE               	swapf	btemp,f
  1047  00AD  0E7E               	swapf	btemp,w
  1048  00AE  0009               	retfie
  1049  00AF                     __end_of_isr:
  1050                           
  1051                           	psect	intentry
  1052  0004                     __pintentry:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1055                           
  1056  0004                     interrupt_function:
  1057  007E                     saved_w	set	btemp
  1058  0004  00FE               	movwf	btemp
  1059  0005  0E03               	swapf	3,w
  1060  0006  00F1               	movwf	??_isr
  1061  0007  080A               	movf	10,w
  1062  0008  00F2               	movwf	??_isr+1
  1063  0009  120A  118A  2899   	ljmp	_isr
  1064                           
  1065                           	psect	text6
  1066  00BD                     __ptext6:	
  1067 ;; *************** function _spiWrite *****************
  1068 ;; Defined at:
  1069 ;;		line 37 in file "SPI.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  dat             1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  dat             1    0[COMMON] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0
  1086 ;;      Totals:         1       0       0       0       0
  1087 ;;Total ram usage:        1 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_isr
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _spiWrite
  1098  00BD                     _spiWrite:
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in _spiWrite: [wreg]
  1102                           ;spiWrite@dat stored from wreg
  1103  00BD  00F0               	movwf	spiWrite@dat
  1104  00BE                     i1l736:
  1105                           
  1106                           ;SPI.c: 37: void spiWrite(char dat);SPI.c: 38: {;SPI.c: 39:     SSPBUF = dat;
  1107  00BE  0870               	movf	spiWrite@dat,w
  1108  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1109  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1110  00C1  0093               	movwf	19	;volatile
  1111  00C2                     i1l95:
  1112  00C2  0008               	return
  1113  00C3                     __end_of_spiWrite:
  1114  007E                     btemp	set	126	;btemp
  1115  007E                     wtemp0	set	126
  1116                           
  1117                           	psect	config
  1118                           
  1119                           ;Config register CONFIG1 @ 0x2007
  1120                           ;	Oscillator Selection bits
  1121                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1122                           ;	Watchdog Timer Enable bit
  1123                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1124                           ;	Power-up Timer Enable bit
  1125                           ;	PWRTE = OFF, PWRT disabled
  1126                           ;	RE3/MCLR pin function select bit
  1127                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1128                           ;	Code Protection bit
  1129                           ;	CP = OFF, Program memory code protection is disabled
  1130                           ;	Data Code Protection bit
  1131                           ;	CPD = OFF, Data memory code protection is disabled
  1132                           ;	Brown Out Reset Selection bits
  1133                           ;	BOREN = OFF, BOR disabled
  1134                           ;	Internal External Switchover bit
  1135                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1136                           ;	Fail-Safe Clock Monitor Enabled bit
  1137                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1138                           ;	Low Voltage Programming Enable bit
  1139                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1140                           ;	In-Circuit Debugger Mode bit
  1141                           ;	DEBUG = 0x1, unprogrammed default
  1142  2007                     	org	8199
  1143  2007  20D6               	dw	8406
  1144                           
  1145                           ;Config register CONFIG2 @ 0x2008
  1146                           ;	Brown-out Reset Selection bit
  1147                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1148                           ;	Flash Program Memory Self Write Enable bits
  1149                           ;	WRT = OFF, Write protection off
  1150  2008                     	org	8200
  1151  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     458
                             _ADC_CH
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     458
                             _ADC_ch
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _ADC_ch                                               2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_CH                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH
   _setup
     _ADC_ch
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 17:47:56 2021

            _SSPSTATbits 0094                       l63 0048                       l69 0098  
                     l85 007D                       l86 0082                       u20 0098  
                     u21 0097                       u50 0075                       u51 0074  
                     u67 0087                      l120 004A                      l122 0051  
                    l123 0058                      l124 006C                      l822 0049  
                    l840 007C                      l832 006E                      l770 0090  
                    l826 005F                      l834 0075                      l850 002F  
                    l842 0017                      l772 0094                      l836 0077  
                    l860 003E                      l852 0032                      l844 001B  
                    l766 0083                      l838 0079                      l862 003F  
                    l854 0033                      l846 001C                      l870 00AF  
                    l768 008C                      l864 0042                      l856 0034  
                    l848 0027                      l872 00B4                      l866 0045  
                    l858 003D                      l868 0046                      l894 0064  
                    _isr 0099                     ?_isr 0070                     i1l52 00A8  
                   i1l95 00C2                     u4_20 009F                     u4_21 009E  
                   _main 00AF                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l736 00BE                    i1l780 00A5                    i1l776 0099  
                  i1l778 009F                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 0017  
                  pclath 000A          __end_of_spiInit 0083                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00BD  
                 ??_main 0077                   _ADCON1 009F                   _ADC_CH 0083  
                 _ADRESH 001E                   _ADC_ch 0049                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00C3                ??_spiInit 0076  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 0049                  ?_ADC_CH 0070  
                ?_ADC_ch 0073                  ??_setup 0077               __pmaintext 00AF  
             __pintentry 0004                  _ADC_res 007A          __size_of_ADC_CH 0016  
                _SSPSTAT 0094          __size_of_ADC_ch 0024                ?_spiWrite 0070  
                _channel 0077                  __ptext1 0017                  __ptext2 006D  
                __ptext3 0049                  __ptext4 0083                  __ptext5 0099  
                __ptext6 00BD             __size_of_isr 0016                  _spiInit 006D  
   end_of_initialization 0013               ??_spiWrite 0070                _VALOR_ADC 0079  
              _TRISAbits 0085              spiWrite@dat 0070           __end_of_ADC_CH 0099  
         __end_of_ADC_ch 006D      start_initialization 000F              __end_of_isr 00AF  
               ??_ADC_CH 0073                 ??_ADC_ch 0075              __pbssCOMMON 0077  
              ___latbits 0002        __size_of_spiWrite 0006                 ?_spiInit 0073  
         __size_of_setup 0032     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_spiInit 0016            __size_of_main 000E  
               _spiWrite 00BD             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B            ADC_ch@channel 0073                 intlevel1 0000  
