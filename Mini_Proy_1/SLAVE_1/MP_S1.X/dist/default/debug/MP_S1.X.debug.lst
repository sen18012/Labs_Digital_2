

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 03:03:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  001E                     _ADRESH	set	30
   368  001F                     _ADCON0bits	set	31
   369  000B                     _INTCON	set	11
   370  000C                     _PIR1bits	set	12
   371  000B                     _INTCONbits	set	11
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0008                     _PORTD	set	8
   375  0063                     _SSPIF	set	99
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  0081                     _OPTION_REG	set	129
   379  009F                     _ADCON1	set	159
   380  0085                     _TRISAbits	set	133
   381  008C                     _PIE1bits	set	140
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  043B                     _TRISC3	set	1083
   386  043D                     _TRISC5	set	1085
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	cinit
   391  000F                     start_initialization:	
   392                           ; #config settings
   393                           
   394  000F                     __initialization:
   395                           
   396                           ; Clear objects allocated to COMMON
   397  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   398  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   399  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   400  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   401  0013                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  0013                     __end_of__initialization:
   405  0013  0183               	clrf	3
   406  0014  120A  118A  2886   	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  0077                     __pbssCOMMON:
   410  0077                     _channel:
   411  0077                     	ds	2
   412  0079                     _VALOR_ADC:
   413  0079                     	ds	1
   414  007A                     _ADC_res:
   415  007A                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_spiWrite:
   420  0070                     ??_spiWrite:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_setup:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_ADC_CH:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_isr:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     spiWrite@dat:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	1
   441  0071                     ??_isr:
   442                           
   443                           ; 1 bytes @ 0x1
   444  0071                     	ds	2
   445  0073                     ?_spiInit:
   446  0073                     ?_ADC_ch:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     spiInit@sDataSample:	
   450                           ; 2 bytes @ 0x3
   451                           
   452  0073                     ADC_ch@channel:	
   453                           ; 1 bytes @ 0x3
   454                           
   455                           
   456                           ; 2 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     spiInit@sClockIdle:
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     ??_ADC_CH:
   463  0075                     ??_ADC_ch:	
   464                           ; 1 bytes @ 0x5
   465                           
   466  0075                     spiInit@sTransmitEdge:	
   467                           ; 1 bytes @ 0x5
   468                           
   469                           
   470                           ; 1 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     ??_spiInit:
   473  0076                     spiInit@sType:	
   474                           ; 1 bytes @ 0x6
   475                           
   476                           
   477                           ; 1 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ??_setup:
   480                           
   481                           	psect	cstackBANK0
   482  0020                     __pcstackBANK0:	
   483                           ; 1 bytes @ 0x7
   484                           
   485  0020                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x0
   488  0020                     	ds	2
   489                           
   490                           	psect	maintext
   491  0086                     __pmaintext:	
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 62 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       2       0       0       0
   514 ;;      Totals:         0       2       0       0       0
   515 ;;Total ram usage:        2 bytes
   516 ;; Hardware stack levels required when called:    4
   517 ;; This function calls:
   518 ;;		_ADC_CH
   519 ;;		_setup
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  0086                     _main:
   528  0086                     l930:	
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;main.c: 63:     setup();
   534  0086  120A  118A  2017  120A  118A  	fcall	_setup
   535  008B                     l932:
   536                           
   537                           ;main.c: 65:         ADC_CH();
   538  008B  120A  118A  2067  120A  118A  	fcall	_ADC_CH
   539  0090                     l934:
   540                           
   541                           ;main.c: 66:         PORTD = ADC_res;
   542  0090  087A               	movf	_ADC_res,w
   543  0091  1283               	bcf	3,5	;RP0=0, select bank0
   544  0092  1303               	bcf	3,6	;RP1=0, select bank0
   545  0093  0088               	movwf	8	;volatile
   546  0094                     l936:
   547                           
   548                           ;main.c: 67:         _delay((unsigned long)((1)*(8000000/4000.0)));
   549  0094  3003               	movlw	3
   550  0095  1283               	bcf	3,5	;RP0=0, select bank0
   551  0096  1303               	bcf	3,6	;RP1=0, select bank0
   552  0097  00A1               	movwf	??_main+1
   553  0098  3097               	movlw	151
   554  0099  00A0               	movwf	??_main
   555  009A                     u77:
   556  009A  0BA0               	decfsz	??_main,f
   557  009B  289A               	goto	u77
   558  009C  0BA1               	decfsz	??_main+1,f
   559  009D  289A               	goto	u77
   560  009E  288B               	goto	l932
   561  009F  120A  118A  280C   	ljmp	start
   562  00A2                     __end_of_main:
   563                           
   564                           	psect	text1
   565  0017                     __ptext1:	
   566 ;; *************** function _setup *****************
   567 ;; Defined at:
   568 ;;		line 75 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    3
   589 ;; This function calls:
   590 ;;		_spiInit
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _setup
   598  0017                     _setup:
   599  0017                     l858:	
   600                           ;incstack = 0
   601                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   602                           
   603                           
   604                           ;main.c: 77:     ANSEL = 1;
   605  0017  3001               	movlw	1
   606  0018  1683               	bsf	3,5	;RP0=1, select bank3
   607  0019  1703               	bsf	3,6	;RP1=1, select bank3
   608  001A  0088               	movwf	8	;volatile
   609  001B                     l860:
   610                           
   611                           ;main.c: 78:     ANSELH = 0;
   612  001B  0189               	clrf	9	;volatile
   613  001C                     l862:
   614                           
   615                           ;main.c: 79:     TRISA = 1;
   616  001C  3001               	movlw	1
   617  001D  1683               	bsf	3,5	;RP0=1, select bank1
   618  001E  1303               	bcf	3,6	;RP1=0, select bank1
   619  001F  0085               	movwf	5	;volatile
   620                           
   621                           ;main.c: 80:     TRISB = 0;
   622  0020  0186               	clrf	6	;volatile
   623                           
   624                           ;main.c: 81:     TRISD = 0;
   625  0021  0188               	clrf	8	;volatile
   626                           
   627                           ;main.c: 83:     PORTA = 0;
   628  0022  1283               	bcf	3,5	;RP0=0, select bank0
   629  0023  1303               	bcf	3,6	;RP1=0, select bank0
   630  0024  0185               	clrf	5	;volatile
   631                           
   632                           ;main.c: 84:     PORTB = 0;
   633  0025  0186               	clrf	6	;volatile
   634                           
   635                           ;main.c: 85:     PORTD = 0;
   636  0026  0188               	clrf	8	;volatile
   637  0027                     l864:
   638                           
   639                           ;main.c: 87:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   640  0027  01F3               	clrf	spiInit@sDataSample
   641  0028  01F4               	clrf	spiInit@sClockIdle
   642  0029  01F5               	clrf	spiInit@sTransmitEdge
   643  002A  3024               	movlw	36
   644  002B  120A  118A  20A2  120A  118A  	fcall	_spiInit
   645  0030                     l866:
   646                           
   647                           ;main.c: 89:     INTCONbits.GIE = 1;
   648  0030  178B               	bsf	11,7	;volatile
   649  0031                     l868:
   650                           
   651                           ;main.c: 90:     INTCONbits.PEIE = 1;
   652  0031  170B               	bsf	11,6	;volatile
   653  0032                     l870:
   654                           
   655                           ;main.c: 91:     PIR1bits.SSPIF = 0;
   656  0032  1283               	bcf	3,5	;RP0=0, select bank0
   657  0033  1303               	bcf	3,6	;RP1=0, select bank0
   658  0034  118C               	bcf	12,3	;volatile
   659  0035                     l872:
   660                           
   661                           ;main.c: 92:     PIE1bits.SSPIE = 1;
   662  0035  1683               	bsf	3,5	;RP0=1, select bank1
   663  0036  1303               	bcf	3,6	;RP1=0, select bank1
   664  0037  158C               	bsf	12,3	;volatile
   665  0038                     l874:
   666                           
   667                           ;main.c: 93:     TRISAbits.TRISA5 = 1;
   668  0038  1685               	bsf	5,5	;volatile
   669  0039                     l876:
   670                           
   671                           ;main.c: 96:     ADCON1 = 0b00000000;
   672  0039  019F               	clrf	31	;volatile
   673  003A                     l878:
   674                           
   675                           ;main.c: 97:     PIE1bits.ADIE = 0;
   676  003A  130C               	bcf	12,6	;volatile
   677  003B                     l880:
   678                           
   679                           ;main.c: 98:     PIR1bits.ADIF = 0;
   680  003B  1283               	bcf	3,5	;RP0=0, select bank0
   681  003C  1303               	bcf	3,6	;RP1=0, select bank0
   682  003D  130C               	bcf	12,6	;volatile
   683  003E                     l882:
   684                           
   685                           ;main.c: 99:     OPTION_REG = 0b00000000;
   686  003E  1683               	bsf	3,5	;RP0=1, select bank1
   687  003F  1303               	bcf	3,6	;RP1=0, select bank1
   688  0040  0181               	clrf	1	;volatile
   689  0041                     l884:
   690                           
   691                           ;main.c: 100:     INTCON = 0b00000000;
   692  0041  018B               	clrf	11	;volatile
   693  0042                     l67:
   694  0042  0008               	return
   695  0043                     __end_of_setup:
   696                           
   697                           	psect	text2
   698  00A2                     __ptext2:	
   699 ;; *************** function _spiInit *****************
   700 ;; Defined at:
   701 ;;		line 15 in file "SPI.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  sType           1    wreg     enum E1264
   704 ;;  sDataSample     1    3[COMMON] enum E1272
   705 ;;  sClockIdle      1    4[COMMON] enum E1276
   706 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  sType           1    6[COMMON] enum E1264
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         3       0       0       0       0
   719 ;;      Locals:         1       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0
   721 ;;      Totals:         4       0       0       0       0
   722 ;;Total ram usage:        4 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    2
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_setup
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _spiInit
   734  00A2                     _spiInit:
   735                           
   736                           ;incstack = 0
   737                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   738                           ;spiInit@sType stored from wreg
   739  00A2  00F6               	movwf	spiInit@sType
   740  00A3                     l838:
   741                           
   742                           ;SPI.c: 15: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 16: {;SPI.c: 17:     TRISC5 = 0;
   743  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   744  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   745  00A5  1287               	bcf	7,5	;volatile
   746                           
   747                           ;SPI.c: 18:     if(sType & 0b00000100)
   748  00A6  1D76               	btfss	spiInit@sType,2
   749  00A7  28A9               	goto	u51
   750  00A8  28AA               	goto	u50
   751  00A9                     u51:
   752  00A9  28AE               	goto	l844
   753  00AA                     u50:
   754  00AA                     l840:
   755                           
   756                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sTransmitEdge;
   757  00AA  0875               	movf	spiInit@sTransmitEdge,w
   758  00AB  0094               	movwf	20	;volatile
   759  00AC                     l842:
   760                           
   761                           ;SPI.c: 21:         TRISC3 = 1;
   762  00AC  1587               	bsf	7,3	;volatile
   763                           
   764                           ;SPI.c: 22:     }
   765  00AD  28B2               	goto	l89
   766  00AE                     l844:
   767                           
   768                           ;SPI.c: 24:     {;SPI.c: 25:         SSPSTAT = sDataSample | sTransmitEdge;
   769  00AE  0873               	movf	spiInit@sDataSample,w
   770  00AF  0475               	iorwf	spiInit@sTransmitEdge,w
   771  00B0  0094               	movwf	20	;volatile
   772  00B1                     l846:
   773                           
   774                           ;SPI.c: 26:         TRISC3 = 0;
   775  00B1  1187               	bcf	7,3	;volatile
   776  00B2                     l89:	
   777                           ;SPI.c: 27:     }
   778                           
   779                           
   780                           ;SPI.c: 29:     SSPCON = sType | sClockIdle;
   781  00B2  0876               	movf	spiInit@sType,w
   782  00B3  0474               	iorwf	spiInit@sClockIdle,w
   783  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   784  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   785  00B6  0094               	movwf	20	;volatile
   786  00B7                     l90:
   787  00B7  0008               	return
   788  00B8                     __end_of_spiInit:
   789                           
   790                           	psect	text3
   791  0067                     __ptext3:	
   792 ;; *************** function _ADC_CH *****************
   793 ;; Defined at:
   794 ;;		line 104 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0
   810 ;;      Temps:          1       0       0       0       0
   811 ;;      Totals:         1       0       0       0       0
   812 ;;Total ram usage:        1 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    3
   815 ;; This function calls:
   816 ;;		_ADC_ch
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _ADC_CH
   824  0067                     _ADC_CH:
   825  0067                     l886:	
   826                           ;incstack = 0
   827                           ; Regs used in _ADC_CH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   828                           
   829                           
   830                           ;main.c: 105:     ADC_ch(0);
   831  0067  3000               	movlw	0
   832  0068  00F3               	movwf	ADC_ch@channel
   833  0069  00F4               	movwf	ADC_ch@channel+1
   834  006A  120A  118A  2043  120A  118A  	fcall	_ADC_ch
   835  006F                     l888:
   836                           
   837                           ;main.c: 106:     ADCON0bits.ADCS0 = 1;
   838  006F  1283               	bcf	3,5	;RP0=0, select bank0
   839  0070  1303               	bcf	3,6	;RP1=0, select bank0
   840  0071  171F               	bsf	31,6	;volatile
   841  0072                     l890:
   842                           
   843                           ;main.c: 107:     ADCON0bits.ADCS1 = 0;
   844  0072  139F               	bcf	31,7	;volatile
   845  0073                     l892:
   846                           
   847                           ;main.c: 108:     ADCON0bits.ADON = 1;
   848  0073  141F               	bsf	31,0	;volatile
   849  0074                     l894:
   850                           
   851                           ;main.c: 109:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   852  0074  301A               	movlw	26
   853  0075  00F5               	movwf	??_ADC_CH
   854  0076                     u87:
   855  0076  0BF5               	decfsz	??_ADC_CH,f
   856  0077  2876               	goto	u87
   857  0078  0000               	nop
   858  0079                     l896:
   859                           
   860                           ;main.c: 110:     ADCON0bits.GO = 1;
   861  0079  1283               	bcf	3,5	;RP0=0, select bank0
   862  007A  1303               	bcf	3,6	;RP1=0, select bank0
   863  007B  149F               	bsf	31,1	;volatile
   864                           
   865                           ;main.c: 111:     while (ADCON0bits.GO != 0) {
   866  007C  2881               	goto	l900
   867  007D                     l898:
   868                           
   869                           ;main.c: 113:         ADC_res = ADRESH;
   870  007D  081E               	movf	30,w	;volatile
   871  007E  00F5               	movwf	??_ADC_CH
   872  007F  0875               	movf	??_ADC_CH,w
   873  0080  00FA               	movwf	_ADC_res
   874  0081                     l900:
   875                           
   876                           ;main.c: 111:     while (ADCON0bits.GO != 0) {
   877  0081  189F               	btfsc	31,1	;volatile
   878  0082  2884               	goto	u61
   879  0083  2885               	goto	u60
   880  0084                     u61:
   881  0084  287D               	goto	l898
   882  0085                     u60:
   883  0085                     l73:
   884  0085  0008               	return
   885  0086                     __end_of_ADC_CH:
   886                           
   887                           	psect	text4
   888  0043                     __ptext4:	
   889 ;; *************** function _ADC_ch *****************
   890 ;; Defined at:
   891 ;;		line 18 in file "ADC.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  channel         2    3[COMMON] unsigned short 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2    3[COMMON] unsigned int 
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         2       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0
   908 ;;      Totals:         2       0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_ADC_CH
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _ADC_ch
   921  0043                     _ADC_ch:
   922  0043                     l848:	
   923                           ;incstack = 0
   924                           ; Regs used in _ADC_ch: [wreg-fsr0h+status,2+status,0]
   925                           
   926                           
   927                           ;ADC.c: 19:      switch (channel) {
   928  0043  2859               	goto	l852
   929  0044                     l124:	
   930                           ;ADC.c: 20:         case 0:
   931                           
   932                           
   933                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
   934  0044  1283               	bcf	3,5	;RP0=0, select bank0
   935  0045  1303               	bcf	3,6	;RP1=0, select bank0
   936  0046  129F               	bcf	31,5	;volatile
   937                           
   938                           ;ADC.c: 22:             ADCON0bits.CHS2 = 0;
   939  0047  121F               	bcf	31,4	;volatile
   940                           
   941                           ;ADC.c: 23:             ADCON0bits.CHS1 = 0;
   942  0048  119F               	bcf	31,3	;volatile
   943                           
   944                           ;ADC.c: 24:             ADCON0bits.CHS0 = 0;
   945  0049  111F               	bcf	31,2	;volatile
   946                           
   947                           ;ADC.c: 26:             break;
   948  004A  2866               	goto	l128
   949  004B                     l126:	
   950                           ;ADC.c: 27:         case 1:
   951                           
   952                           
   953                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
   954  004B  1283               	bcf	3,5	;RP0=0, select bank0
   955  004C  1303               	bcf	3,6	;RP1=0, select bank0
   956  004D  129F               	bcf	31,5	;volatile
   957                           
   958                           ;ADC.c: 29:             ADCON0bits.CHS2 = 0;
   959  004E  121F               	bcf	31,4	;volatile
   960                           
   961                           ;ADC.c: 30:             ADCON0bits.CHS1 = 0;
   962  004F  119F               	bcf	31,3	;volatile
   963                           
   964                           ;ADC.c: 31:             ADCON0bits.CHS0 = 1;
   965  0050  151F               	bsf	31,2	;volatile
   966                           
   967                           ;ADC.c: 32:             break;
   968  0051  2866               	goto	l128
   969  0052                     l127:	
   970                           ;ADC.c: 33:         default:
   971                           
   972                           
   973                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
   974  0052  1283               	bcf	3,5	;RP0=0, select bank0
   975  0053  1303               	bcf	3,6	;RP1=0, select bank0
   976  0054  129F               	bcf	31,5	;volatile
   977                           
   978                           ;ADC.c: 35:             ADCON0bits.CHS2 = 0;
   979  0055  121F               	bcf	31,4	;volatile
   980                           
   981                           ;ADC.c: 36:             ADCON0bits.CHS1 = 0;
   982  0056  119F               	bcf	31,3	;volatile
   983                           
   984                           ;ADC.c: 37:             ADCON0bits.CHS0 = 0;
   985  0057  111F               	bcf	31,2	;volatile
   986                           
   987                           ;ADC.c: 38:             break;
   988  0058  2866               	goto	l128
   989  0059                     l852:
   990                           
   991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   992                           ; Switch size 1, requested type "simple"
   993                           ; Number of cases is 1, Range of values is 0 to 0
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; simple_byte            4     3 (average)
   997                           ; direct_byte           11     8 (fixed)
   998                           ; jumptable            260     6 (fixed)
   999                           ;	Chosen strategy is simple_byte
  1000  0059  0874               	movf	ADC_ch@channel+1,w
  1001  005A  3A00               	xorlw	0	; case 0
  1002  005B  1903               	skipnz
  1003  005C  285E               	goto	l958
  1004  005D  2852               	goto	l127
  1005  005E                     l958:
  1006                           
  1007                           ; Switch size 1, requested type "simple"
  1008                           ; Number of cases is 2, Range of values is 0 to 1
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte            7     4 (average)
  1012                           ; direct_byte           14     8 (fixed)
  1013                           ; jumptable            260     6 (fixed)
  1014                           ;	Chosen strategy is simple_byte
  1015  005E  0873               	movf	ADC_ch@channel,w
  1016  005F  3A00               	xorlw	0	; case 0
  1017  0060  1903               	skipnz
  1018  0061  2844               	goto	l124
  1019  0062  3A01               	xorlw	1	; case 1
  1020  0063  1903               	skipnz
  1021  0064  284B               	goto	l126
  1022  0065  2852               	goto	l127
  1023  0066                     l128:
  1024  0066  0008               	return
  1025  0067                     __end_of_ADC_ch:
  1026                           
  1027                           	psect	text5
  1028  00B8                     __ptext5:	
  1029 ;; *************** function _isr *****************
  1030 ;; Defined at:
  1031 ;;		line 52 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0
  1047 ;;      Temps:          2       0       0       0       0
  1048 ;;      Totals:         2       0       0       0       0
  1049 ;;Total ram usage:        2 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		_spiWrite
  1054 ;; This function is called by:
  1055 ;;		Interrupt level 1
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _isr
  1061  00B8                     _isr:
  1062  00B8                     i1l788:
  1063                           
  1064                           ;main.c: 53:    if(SSPIF == 1){
  1065  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00BA  1D8C               	btfss	12,3	;volatile
  1068  00BB  28BD               	goto	u4_21
  1069  00BC  28BE               	goto	u4_20
  1070  00BD                     u4_21:
  1071  00BD  28C7               	goto	i1l56
  1072  00BE                     u4_20:
  1073  00BE                     i1l790:
  1074                           
  1075                           ;main.c: 55:         spiWrite(ADC_res);
  1076  00BE  087A               	movf	_ADC_res,w
  1077  00BF  120A  118A  20CE  120A  118A  	fcall	_spiWrite
  1078  00C4                     i1l792:
  1079                           
  1080                           ;main.c: 56:         SSPIF = 0;
  1081  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1082  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1083  00C6  118C               	bcf	12,3	;volatile
  1084  00C7                     i1l56:
  1085  00C7  0872               	movf	??_isr+1,w
  1086  00C8  008A               	movwf	10
  1087  00C9  0E71               	swapf	??_isr,w
  1088  00CA  0083               	movwf	3
  1089  00CB  0EFE               	swapf	btemp,f
  1090  00CC  0E7E               	swapf	btemp,w
  1091  00CD  0009               	retfie
  1092  00CE                     __end_of_isr:
  1093                           
  1094                           	psect	intentry
  1095  0004                     __pintentry:	
  1096                           ;incstack = 0
  1097                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1098                           
  1099  0004                     interrupt_function:
  1100  007E                     saved_w	set	btemp
  1101  0004  00FE               	movwf	btemp
  1102  0005  0E03               	swapf	3,w
  1103  0006  00F1               	movwf	??_isr
  1104  0007  080A               	movf	10,w
  1105  0008  00F2               	movwf	??_isr+1
  1106  0009  120A  118A  28B8   	ljmp	_isr
  1107                           
  1108                           	psect	text6
  1109  00CE                     __ptext6:	
  1110 ;; *************** function _spiWrite *****************
  1111 ;; Defined at:
  1112 ;;		line 37 in file "SPI.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  dat             1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  dat             1    0[COMMON] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         1       0       0       0       0
  1130 ;;Total ram usage:        1 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_isr
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _spiWrite
  1141  00CE                     _spiWrite:
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _spiWrite: [wreg]
  1145                           ;spiWrite@dat stored from wreg
  1146  00CE  00F0               	movwf	spiWrite@dat
  1147  00CF                     i1l740:
  1148                           
  1149                           ;SPI.c: 37: void spiWrite(char dat);SPI.c: 38: {;SPI.c: 39:     SSPBUF = dat;
  1150  00CF  0870               	movf	spiWrite@dat,w
  1151  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1152  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1153  00D2  0093               	movwf	19	;volatile
  1154  00D3                     i1l99:
  1155  00D3  0008               	return
  1156  00D4                     __end_of_spiWrite:
  1157  007E                     btemp	set	126	;btemp
  1158  007E                     wtemp0	set	126
  1159                           
  1160                           	psect	config
  1161                           
  1162                           ;Config register CONFIG1 @ 0x2007
  1163                           ;	Oscillator Selection bits
  1164                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1165                           ;	Watchdog Timer Enable bit
  1166                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1167                           ;	Power-up Timer Enable bit
  1168                           ;	PWRTE = OFF, PWRT disabled
  1169                           ;	RE3/MCLR pin function select bit
  1170                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1171                           ;	Code Protection bit
  1172                           ;	CP = OFF, Program memory code protection is disabled
  1173                           ;	Data Code Protection bit
  1174                           ;	CPD = OFF, Data memory code protection is disabled
  1175                           ;	Brown Out Reset Selection bits
  1176                           ;	BOREN = OFF, BOR disabled
  1177                           ;	Internal External Switchover bit
  1178                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1179                           ;	Fail-Safe Clock Monitor Enabled bit
  1180                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1181                           ;	Low Voltage Programming Enable bit
  1182                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1183                           ;	In-Circuit Debugger Mode bit
  1184                           ;	DEBUG = 0x1, unprogrammed default
  1185  2007                     	org	8199
  1186  2007  20D6               	dw	8406
  1187                           
  1188                           ;Config register CONFIG2 @ 0x2008
  1189                           ;	Brown-out Reset Selection bit
  1190                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1191                           ;	Flash Program Memory Self Write Enable bits
  1192                           ;	WRT = OFF, Write protection off
  1193  2008                     	org	8200
  1194  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _ADC_CH->_ADC_ch

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     458
                                              0 BANK0      2     2      0
                             _ADC_CH
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_CH                                               1     1      0      98
                                              5 COMMON     1     1      0
                             _ADC_ch
 ---------------------------------------------------------------------------------
 (2) _ADC_ch                                               2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH
     _ADC_ch
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 03:03:48 2021

            _SSPSTATbits 0094                       l73 0085                       l90 00B7  
                     l67 0042                       l89 00B2                       u50 00AA  
                     u51 00A9                       u60 0085                       u61 0084  
                     u77 009A                       u87 0076                      l124 0044  
                    l126 004B                      l127 0052                      l128 0066  
                    l900 0081                      l840 00AA                      l842 00AC  
                    l930 0086                      l852 0059                      l844 00AE  
                    l860 001B                      l932 008B                      l846 00B1  
                    l838 00A3                      l870 0032                      l862 001C  
                    l934 0090                      l848 0043                      l880 003B  
                    l872 0035                      l864 0027                      l936 0094  
                    l890 0072                      l882 003E                      l874 0038  
                    l866 0030                      l858 0017                      l892 0073  
                    l884 0041                      l876 0039                      l868 0031  
                    l958 005E                      l894 0074                      l886 0067  
                    l878 003A                      l896 0079                      l888 006F  
                    l898 007D                      _isr 00B8                     ?_isr 0070  
                   i1l56 00C7                     i1l99 00D3                     u4_20 00BE  
                   u4_21 00BD                     _main 0086                     btemp 007E  
                   start 000C                    ??_isr 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l740 00CF                    i1l790 00BE  
                  i1l792 00C4                    i1l788 00B8                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0017                    pclath 000A          __end_of_spiInit 00B8  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00A2                   ??_main 0020                   _ADCON1 009F  
                 _ADC_CH 0067                   _ADRESH 001E                   _ADC_ch 0043  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00D4  
              ??_spiInit 0076  __end_of__initialization 0013           __pcstackCOMMON 0070  
          __end_of_setup 0043                  ?_ADC_CH 0070                  ?_ADC_ch 0073  
                ??_setup 0077               __pmaintext 0086               __pintentry 0004  
                _ADC_res 007A          __size_of_ADC_CH 001F                  _SSPSTAT 0094  
        __size_of_ADC_ch 0024                ?_spiWrite 0070                  _channel 0077  
                __ptext1 0017                  __ptext2 00A2                  __ptext3 0067  
                __ptext4 0043                  __ptext5 00B8                  __ptext6 00CE  
           __size_of_isr 0016                  _spiInit 00A2     end_of_initialization 0013  
             ??_spiWrite 0070                _VALOR_ADC 0079                _TRISAbits 0085  
            spiWrite@dat 0070           __end_of_ADC_CH 0086           __end_of_ADC_ch 0067  
    start_initialization 000F              __end_of_isr 00CE                 ??_ADC_CH 0075  
               ??_ADC_ch 0075              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_spiWrite 0006                 ?_spiInit 0073  
         __size_of_setup 002C     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_spiInit 0016            __size_of_main 001C  
               _spiWrite 00CE             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B            ADC_ch@channel 0073                 intlevel1 0000  
             _OPTION_REG 0081  
