

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 19:28:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  008F                     	;# 
   367  0090                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  009F                     	;# 
   385  0105                     	;# 
   386  0107                     	;# 
   387  0108                     	;# 
   388  0109                     	;# 
   389  010C                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  010E                     	;# 
   393  010F                     	;# 
   394  0185                     	;# 
   395  0187                     	;# 
   396  0188                     	;# 
   397  0189                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  000E                     	;# 
   416  000F                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0013                     	;# 
   421  0014                     	;# 
   422  0015                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0017                     	;# 
   426  0018                     	;# 
   427  0019                     	;# 
   428  001A                     	;# 
   429  001B                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001D                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  0081                     	;# 
   436  0085                     	;# 
   437  0086                     	;# 
   438  0087                     	;# 
   439  0088                     	;# 
   440  0089                     	;# 
   441  008C                     	;# 
   442  008D                     	;# 
   443  008E                     	;# 
   444  008F                     	;# 
   445  0090                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0094                     	;# 
   452  0095                     	;# 
   453  0096                     	;# 
   454  0097                     	;# 
   455  0098                     	;# 
   456  0099                     	;# 
   457  009A                     	;# 
   458  009B                     	;# 
   459  009C                     	;# 
   460  009D                     	;# 
   461  009E                     	;# 
   462  009F                     	;# 
   463  0105                     	;# 
   464  0107                     	;# 
   465  0108                     	;# 
   466  0109                     	;# 
   467  010C                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  0185                     	;# 
   473  0187                     	;# 
   474  0188                     	;# 
   475  0189                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478                           
   479                           	psect	strings
   480  0000'                    __pstrings:
   481  0000'                    stringtab:
   482  0000'                    __stringtab:
   483                           
   484                           ;	String table - string pointers are 1 byte each
   485  0000' 1BFF               	btfsc	btemp+1,7
   486  0001' 2800'              	ljmp	stringcode
   487  0002' 1383               	bcf	3,7
   488  0003' 187F               	btfsc	btemp+1,0
   489  0004' 1783               	bsf	3,7
   490  0005' 0800               	movf	0,w
   491  0006' 0A84               	incf	4,f
   492  0007' 1903               	skipnz
   493  0008' 0AFF               	incf	btemp+1,f
   494  0009' 0008               	return
   495  000A'                    stringcode:
   496  000A'                    stringdir:
   497  000A' 3000'              	movlw	high stringdir
   498  000B' 008A               	movwf	10
   499  000C' 0804               	movf	4,w
   500  000D' 0A84               	incf	4,f
   501  000E' 0782               	addwf	2,f
   502  000F'                    __stringbase:
   503  000F' 3400               	retlw	0
   504  0010'                    __end_of__stringtab:
   505  0010'                    __powers_:
   506  0010' 3400               	retlw	0
   507  0011' 3400               	retlw	0
   508  0012' 3480               	retlw	128
   509  0013' 343F               	retlw	63
   510  0014' 3400               	retlw	0
   511  0015' 3400               	retlw	0
   512  0016' 3420               	retlw	32
   513  0017' 3441               	retlw	65
   514  0018' 3400               	retlw	0
   515  0019' 3400               	retlw	0
   516  001A' 34C8               	retlw	200
   517  001B' 3442               	retlw	66
   518  001C' 3400               	retlw	0
   519  001D' 3400               	retlw	0
   520  001E' 347A               	retlw	122
   521  001F' 3444               	retlw	68
   522  0020' 3400               	retlw	0
   523  0021' 3440               	retlw	64
   524  0022' 341C               	retlw	28
   525  0023' 3446               	retlw	70
   526  0024' 3400               	retlw	0
   527  0025' 3450               	retlw	80
   528  0026' 34C3               	retlw	195
   529  0027' 3447               	retlw	71
   530  0028' 3400               	retlw	0
   531  0029' 3424               	retlw	36
   532  002A' 3474               	retlw	116
   533  002B' 3449               	retlw	73
   534  002C' 3480               	retlw	128
   535  002D' 3496               	retlw	150
   536  002E' 3418               	retlw	24
   537  002F' 344B               	retlw	75
   538  0030' 3420               	retlw	32
   539  0031' 34BC               	retlw	188
   540  0032' 34BE               	retlw	190
   541  0033' 344C               	retlw	76
   542  0034' 3428               	retlw	40
   543  0035' 346B               	retlw	107
   544  0036' 346E               	retlw	110
   545  0037' 344E               	retlw	78
   546  0038' 34F9               	retlw	249
   547  0039' 3402               	retlw	2
   548  003A' 3415               	retlw	21
   549  003B' 3450               	retlw	80
   550  003C' 34EC               	retlw	236
   551  003D' 3478               	retlw	120
   552  003E' 34AD               	retlw	173
   553  003F' 3460               	retlw	96
   554  0040' 34CA               	retlw	202
   555  0041' 34F2               	retlw	242
   556  0042' 3449               	retlw	73
   557  0043' 3471               	retlw	113
   558  0044'                    __end_of__powers_:
   559  0044'                    __npowers_:
   560  0044' 3400               	retlw	0
   561  0045' 3400               	retlw	0
   562  0046' 3480               	retlw	128
   563  0047' 343F               	retlw	63
   564  0048' 34CD               	retlw	205
   565  0049' 34CC               	retlw	204
   566  004A' 34CC               	retlw	204
   567  004B' 343D               	retlw	61
   568  004C' 340A               	retlw	10
   569  004D' 34D7               	retlw	215
   570  004E' 3423               	retlw	35
   571  004F' 343C               	retlw	60
   572  0050' 346F               	retlw	111
   573  0051' 3412               	retlw	18
   574  0052' 3483               	retlw	131
   575  0053' 343A               	retlw	58
   576  0054' 3417               	retlw	23
   577  0055' 34B7               	retlw	183
   578  0056' 34D1               	retlw	209
   579  0057' 3438               	retlw	56
   580  0058' 34AC               	retlw	172
   581  0059' 34C5               	retlw	197
   582  005A' 3427               	retlw	39
   583  005B' 3437               	retlw	55
   584  005C' 34BD               	retlw	189
   585  005D' 3437               	retlw	55
   586  005E' 3486               	retlw	134
   587  005F' 3435               	retlw	53
   588  0060' 3495               	retlw	149
   589  0061' 34BF               	retlw	191
   590  0062' 34D6               	retlw	214
   591  0063' 3433               	retlw	51
   592  0064' 3477               	retlw	119
   593  0065' 34CC               	retlw	204
   594  0066' 342B               	retlw	43
   595  0067' 3432               	retlw	50
   596  0068' 345F               	retlw	95
   597  0069' 3470               	retlw	112
   598  006A' 3489               	retlw	137
   599  006B' 3430               	retlw	48
   600  006C' 34FF               	retlw	255
   601  006D' 34E6               	retlw	230
   602  006E' 34DB               	retlw	219
   603  006F' 342E               	retlw	46
   604  0070' 3408               	retlw	8
   605  0071' 34E5               	retlw	229
   606  0072' 343C               	retlw	60
   607  0073' 341E               	retlw	30
   608  0074' 3460               	retlw	96
   609  0075' 3442               	retlw	66
   610  0076' 34A2               	retlw	162
   611  0077' 340D               	retlw	13
   612  0078'                    __end_of__npowers_:
   613  0078'                    _dpowers:
   614  0078' 3401               	retlw	1
   615  0079' 3400               	retlw	0
   616  007A' 3400               	retlw	0
   617  007B' 3400               	retlw	0
   618  007C' 340A               	retlw	10
   619  007D' 3400               	retlw	0
   620  007E' 3400               	retlw	0
   621  007F' 3400               	retlw	0
   622  0080' 3464               	retlw	100
   623  0081' 3400               	retlw	0
   624  0082' 3400               	retlw	0
   625  0083' 3400               	retlw	0
   626  0084' 34E8               	retlw	232
   627  0085' 3403               	retlw	3
   628  0086' 3400               	retlw	0
   629  0087' 3400               	retlw	0
   630  0088' 3410               	retlw	16
   631  0089' 3427               	retlw	39
   632  008A' 3400               	retlw	0
   633  008B' 3400               	retlw	0
   634  008C' 34A0               	retlw	160
   635  008D' 3486               	retlw	134
   636  008E' 3401               	retlw	1
   637  008F' 3400               	retlw	0
   638  0090' 3440               	retlw	64
   639  0091' 3442               	retlw	66
   640  0092' 340F               	retlw	15
   641  0093' 3400               	retlw	0
   642  0094' 3480               	retlw	128
   643  0095' 3496               	retlw	150
   644  0096' 3498               	retlw	152
   645  0097' 3400               	retlw	0
   646  0098' 3400               	retlw	0
   647  0099' 34E1               	retlw	225
   648  009A' 34F5               	retlw	245
   649  009B' 3405               	retlw	5
   650  009C' 3400               	retlw	0
   651  009D' 34CA               	retlw	202
   652  009E' 349A               	retlw	154
   653  009F' 343B               	retlw	59
   654  00A0'                    __end_of_dpowers:
   655  001A                     _RCREG	set	26
   656  0019                     _TXREG	set	25
   657  001E                     _ADRESH	set	30
   658  001F                     _ADCON0bits	set	31
   659  0018                     _RCSTAbits	set	24
   660  000B                     _INTCON	set	11
   661  000C                     _PIR1bits	set	12
   662  0009                     _PORTE	set	9
   663  0008                     _PORTD	set	8
   664  0006                     _PORTB	set	6
   665  0005                     _PORTA	set	5
   666  0049                     _RE1	set	73
   667  0048                     _RE0	set	72
   668  0065                     _RCIF	set	101
   669  009E                     _ADRESL	set	158
   670  0098                     _TXSTAbits	set	152
   671  0099                     _SPBRG	set	153
   672  0081                     _OPTION_REG	set	129
   673  008C                     _PIE1bits	set	140
   674  009F                     _ADCON1	set	159
   675  0089                     _TRISE	set	137
   676  0086                     _TRISB	set	134
   677  0085                     _TRISA	set	133
   678  0088                     _TRISD	set	136
   679  04C1                     _TRMT	set	1217
   680  0189                     _ANSELH	set	393
   681  0188                     _ANSEL	set	392
   682  00A0'                    STR_4:
   683  00A0' 3425               	retlw	37	;'%'
   684  00A1' 3431               	retlw	49	;'1'
   685  00A2' 342E               	retlw	46	;'.'
   686  00A3' 3432               	retlw	50	;'2'
   687  00A4' 3466               	retlw	102	;'f'
   688  00A5' 3456               	retlw	86	;'V'
   689  00A6' 3420               	retlw	32	;' '
   690  00A7' 3425               	retlw	37	;'%'
   691  00A8' 3431               	retlw	49	;'1'
   692  00A9' 342E               	retlw	46	;'.'
   693  00AA' 3432               	retlw	50	;'2'
   694  00AB' 3466               	retlw	102	;'f'
   695  00AC' 3456               	retlw	86	;'V'
   696  00AD' 3400               	retlw	0
   697  00AE'                    STR_1:
   698  00AE' 3453               	retlw	83	;'S'
   699  00AF' 3431               	retlw	49	;'1'
   700  00B0' 343A               	retlw	58	;':'
   701  00B1' 3400               	retlw	0
   702  00B2'                    STR_2:
   703  00B2' 3453               	retlw	83	;'S'
   704  00B3' 3432               	retlw	50	;'2'
   705  00B4' 343A               	retlw	58	;':'
   706  00B5' 3400               	retlw	0
   707  00B6'                    STR_3:
   708  00B6' 3453               	retlw	83	;'S'
   709  00B7' 3433               	retlw	51	;'3'
   710  00B8' 343A               	retlw	58	;':'
   711  00B9' 3400               	retlw	0
   712                           
   713                           	psect	cinit
   714  0000'                    start_initialization:	
   715                           ; #config settings
   716                           
   717  0000'                    __initialization:
   718                           
   719                           ; Clear objects allocated to COMMON
   720  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   721  0001' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   722  0002' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
   723  0003' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
   724  0004' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
   725                           
   726                           ; Clear objects allocated to BANK1
   727  0005' 1383               	bcf	3,7	;select IRP bank0
   728  0006' 3000'              	movlw	low __pbssBANK1
   729  0007' 0084               	movwf	4
   730  0008' 3000'              	movlw	low (__pbssBANK1+26)
   731  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   732  000E'                    end_of_initialization:	
   733                           ;End of C runtime variable initialization code
   734                           
   735  000E'                    __end_of__initialization:
   736  000E' 0183               	clrf	3
   737  000F' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   738                           
   739                           	psect	bssCOMMON
   740  0000'                    __pbssCOMMON:
   741  0000'                    _VALOR_ADC:
   742  0000'                    	ds	1
   743  0001'                    _USART_LEER:
   744  0001'                    	ds	1
   745  0002'                    _cont:
   746  0002'                    	ds	1
   747  0003'                    _ADC_res2:
   748  0003'                    	ds	1
   749  0004'                    _ADC_res1:
   750  0004'                    	ds	1
   751                           
   752                           	psect	bssBANK1
   753  0000'                    __pbssBANK1:
   754  0000'                    _VAL2:
   755  0000'                    	ds	4
   756  0004'                    _VAL1:
   757  0004'                    	ds	4
   758  0008'                    _channel:
   759  0008'                    	ds	2
   760  000A'                    _data:
   761  000A'                    	ds	16
   762                           
   763                           	psect	clrtext
   764  0000'                    clear_ram0:	
   765                           ;	Called with FSR containing the base address, and
   766                           ;	W with the last address+1
   767                           
   768  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   769  0001'                    clrloop0:
   770  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   771  0002' 0A84               	incf	4,f	;increment pointer
   772  0003' 0604               	xorwf	4,w	;XOR with final address
   773  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   774  0005' 3400               	retlw	0	;all done for this memory range, return
   775  0006' 0604               	xorwf	4,w	;XOR again to restore value
   776  0007' 2800'              	goto	clrloop0	;do the next byte
   777                           
   778                           	psect	cstackBANK1
   779  0000'                    __pcstackBANK1:
   780  0000'                    ___fladd@signs:
   781                           
   782                           ; 1 bytes @ 0x0
   783  0000'                    	ds	1
   784  0001'                    ___fladd@aexp:
   785                           
   786                           ; 1 bytes @ 0x1
   787  0001'                    	ds	1
   788  0002'                    ___fladd@bexp:
   789                           
   790                           ; 1 bytes @ 0x2
   791  0002'                    	ds	1
   792  0003'                    ___fladd@grs:
   793                           
   794                           ; 1 bytes @ 0x3
   795  0003'                    	ds	1
   796  0004'                    ?___flsub:
   797  0004'                    ___flsub@a:	
   798                           ; 4 bytes @ 0x4
   799                           
   800                           
   801                           ; 4 bytes @ 0x4
   802  0004'                    	ds	4
   803  0008'                    ___flsub@b:
   804                           
   805                           ; 4 bytes @ 0x8
   806  0008'                    	ds	4
   807  000C'                    ?_sprintf:
   808  000C'                    sprintf@f:	
   809                           ; 2 bytes @ 0xC
   810                           
   811                           
   812                           ; 1 bytes @ 0xC
   813  000C'                    	ds	9
   814  0015'                    ??_sprintf:
   815                           
   816                           ; 1 bytes @ 0x15
   817  0015'                    	ds	5
   818  001A'                    _sprintf$1106:
   819                           
   820                           ; 4 bytes @ 0x1A
   821  001A'                    	ds	4
   822  001E'                    sprintf@ap:
   823                           
   824                           ; 1 bytes @ 0x1E
   825  001E'                    	ds	1
   826  001F'                    sprintf@val:
   827                           
   828                           ; 4 bytes @ 0x1F
   829  001F'                    	ds	4
   830  0023'                    sprintf@flag:
   831                           
   832                           ; 2 bytes @ 0x23
   833  0023'                    	ds	2
   834  0025'                    sprintf@width:
   835                           
   836                           ; 2 bytes @ 0x25
   837  0025'                    	ds	2
   838  0027'                    sprintf@tmpval:
   839                           
   840                           ; 4 bytes @ 0x27
   841  0027'                    	ds	4
   842  002B'                    sprintf@eexp:
   843                           
   844                           ; 2 bytes @ 0x2B
   845  002B'                    	ds	2
   846  002D'                    sprintf@fval:
   847                           
   848                           ; 4 bytes @ 0x2D
   849  002D'                    	ds	4
   850  0031'                    sprintf@sp:
   851                           
   852                           ; 1 bytes @ 0x31
   853  0031'                    	ds	1
   854  0032'                    sprintf@prec:
   855                           
   856                           ; 2 bytes @ 0x32
   857  0032'                    	ds	2
   858  0034'                    sprintf@c:
   859                           
   860                           ; 1 bytes @ 0x34
   861  0034'                    	ds	1
   862                           
   863                           	psect	cstackCOMMON
   864  0000'                    __pcstackCOMMON:
   865  0000'                    ?_isdigit:
   866  0000'                    ??_USART_LECTURA:	
   867                           ; 1 bit 
   868                           
   869  0000'                    ?_setup:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0000'                    ?_Lcd_Init:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0000'                    ?_Lcd_Clear:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0000'                    ?_ADC_CH0:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0000'                    ?_ADC_CH1:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0000'                    ?_ISR:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0000'                    ??_ISR:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0000'                    ?_main:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0000'                    ?_Lcd_Port:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0000'                    ?_Lcd_Cmd:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0000'                    ?_Lcd_Write_Char:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0000'                    ?_USART_LECTURA:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0000'                    ADC_val@ADRES_L:	
   906                           ; 2 bytes @ 0x0
   907                           
   908                           
   909                           ; 1 bytes @ 0x0
   910  0000'                    	ds	5
   911                           
   912                           	psect	cstackBANK0
   913  0000'                    __pcstackBANK0:
   914  0000'                    ?___fleq:
   915  0000'                    ?___flge:	
   916                           ; 1 bit 
   917                           
   918  0000'                    ??_setup:	
   919                           ; 1 bit 
   920                           
   921  0000'                    ?_ADC_val:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0000'                    ??_isdigit:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0000'                    ??_Lcd_Port:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0000'                    ?_ADC_ch:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0000'                    ?__Umul8_16:	
   934                           ; 2 bytes @ 0x0
   935                           
   936  0000'                    ?___wmul:	
   937                           ; 2 bytes @ 0x0
   938                           
   939  0000'                    ?___awmod:	
   940                           ; 2 bytes @ 0x0
   941                           
   942  0000'                    ?___lwmod:	
   943                           ; 2 bytes @ 0x0
   944                           
   945  0000'                    ?__tdiv_to_l_:	
   946                           ; 2 bytes @ 0x0
   947                           
   948  0000'                    ?__div_to_l_:	
   949                           ; 4 bytes @ 0x0
   950                           
   951  0000'                    ?___lldiv:	
   952                           ; 4 bytes @ 0x0
   953                           
   954  0000'                    ?___flneg:	
   955                           ; 4 bytes @ 0x0
   956                           
   957  0000'                    ?___llmod:	
   958                           ; 4 bytes @ 0x0
   959                           
   960  0000'                    ?___xxtofl:	
   961                           ; 4 bytes @ 0x0
   962                           
   963  0000'                    Lcd_Port@a:	
   964                           ; 4 bytes @ 0x0
   965                           
   966  0000'                    ADC_val@ADRES_H:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0000'                    __Umul8_16@multiplicand:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0000'                    _isdigit$911:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0000'                    ADC_ch@channel:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0000'                    ___wmul@multiplier:	
   979                           ; 2 bytes @ 0x0
   980                           
   981  0000'                    ___awmod@divisor:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  0000'                    ___lwmod@divisor:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  0000'                    ___lldiv@divisor:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0000'                    __div_to_l_@f1:	
   991                           ; 4 bytes @ 0x0
   992                           
   993  0000'                    ___fleq@ff1:	
   994                           ; 4 bytes @ 0x0
   995                           
   996  0000'                    ___flge@ff1:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0000'                    ___flneg@f1:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002  0000'                    __tdiv_to_l_@f1:	
  1003                           ; 4 bytes @ 0x0
  1004                           
  1005  0000'                    ___llmod@divisor:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008  0000'                    ___xxtofl@val:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x0
  1013  0000'                    	ds	1
  1014  0001'                    ??_ADC_val:
  1015  0001'                    ??_Lcd_Cmd:	
  1016                           ; 1 bytes @ 0x1
  1017                           
  1018  0001'                    ??_Lcd_Write_Char:	
  1019                           ; 1 bytes @ 0x1
  1020                           
  1021  0001'                    isdigit@c:	
  1022                           ; 1 bytes @ 0x1
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x1
  1026  0001'                    	ds	1
  1027  0002'                    ??_ADC_ch:
  1028  0002'                    ??__Umul8_16:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031  0002'                    Lcd_Write_Char@a:	
  1032                           ; 1 bytes @ 0x2
  1033                           
  1034  0002'                    ___wmul@multiplicand:	
  1035                           ; 1 bytes @ 0x2
  1036                           
  1037  0002'                    ___awmod@dividend:	
  1038                           ; 2 bytes @ 0x2
  1039                           
  1040  0002'                    ___lwmod@dividend:	
  1041                           ; 2 bytes @ 0x2
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x2
  1045  0002'                    	ds	1
  1046  0003'                    ?_Lcd_Write_String:
  1047  0003'                    Lcd_Cmd@a:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050  0003'                    Lcd_Write_String@a:	
  1051                           ; 1 bytes @ 0x3
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x3
  1055  0003'                    	ds	1
  1056  0004'                    ??_Lcd_Init:
  1057  0004'                    ??_Lcd_Clear:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060  0004'                    ?_Lcd_Set_Cursor:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063  0004'                    ??___wmul:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0004'                    ??___awmod:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0004'                    ??___flneg:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0004'                    ??___lwmod:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075  0004'                    ??___xxtofl:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078  0004'                    Lcd_Set_Cursor@b:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081  0004'                    ___wmul@product:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084  0004'                    __Umul8_16@product:	
  1085                           ; 2 bytes @ 0x4
  1086                           
  1087  0004'                    ___lldiv@dividend:	
  1088                           ; 2 bytes @ 0x4
  1089                           
  1090  0004'                    __div_to_l_@f2:	
  1091                           ; 4 bytes @ 0x4
  1092                           
  1093  0004'                    ___fleq@ff2:	
  1094                           ; 4 bytes @ 0x4
  1095                           
  1096  0004'                    ___flge@ff2:	
  1097                           ; 4 bytes @ 0x4
  1098                           
  1099  0004'                    __tdiv_to_l_@f2:	
  1100                           ; 4 bytes @ 0x4
  1101                           
  1102  0004'                    ___llmod@dividend:	
  1103                           ; 4 bytes @ 0x4
  1104                           
  1105                           
  1106                           ; 4 bytes @ 0x4
  1107  0004'                    	ds	1
  1108  0005'                    ??_Lcd_Set_Cursor:
  1109  0005'                    ??_Lcd_Write_String:	
  1110                           ; 1 bytes @ 0x5
  1111                           
  1112  0005'                    ___awmod@counter:	
  1113                           ; 1 bytes @ 0x5
  1114                           
  1115  0005'                    ___lwmod@counter:	
  1116                           ; 1 bytes @ 0x5
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x5
  1120  0005'                    	ds	1
  1121  0006'                    ?___lwdiv:
  1122  0006'                    Lcd_Set_Cursor@a:	
  1123                           ; 2 bytes @ 0x6
  1124                           
  1125  0006'                    ___awmod@sign:	
  1126                           ; 1 bytes @ 0x6
  1127                           
  1128  0006'                    ___lwdiv@divisor:	
  1129                           ; 1 bytes @ 0x6
  1130                           
  1131  0006'                    __Umul8_16@word_mpld:	
  1132                           ; 2 bytes @ 0x6
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136  0006'                    	ds	1
  1137  0007'                    ?___awdiv:
  1138  0007'                    Lcd_Set_Cursor@temp:	
  1139                           ; 2 bytes @ 0x7
  1140                           
  1141  0007'                    ___awdiv@divisor:	
  1142                           ; 1 bytes @ 0x7
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x7
  1146  0007'                    	ds	1
  1147  0008'                    ??__tdiv_to_l_:
  1148  0008'                    ??__div_to_l_:	
  1149                           ; 1 bytes @ 0x8
  1150                           
  1151  0008'                    ??___lldiv:	
  1152                           ; 1 bytes @ 0x8
  1153                           
  1154  0008'                    ??___fleq:	
  1155                           ; 1 bytes @ 0x8
  1156                           
  1157  0008'                    ??___flge:	
  1158                           ; 1 bytes @ 0x8
  1159                           
  1160  0008'                    ??___llmod:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163  0008'                    __Umul8_16@multiplier:	
  1164                           ; 1 bytes @ 0x8
  1165                           
  1166  0008'                    ___xxtofl@sign:	
  1167                           ; 1 bytes @ 0x8
  1168                           
  1169  0008'                    Lcd_Write_String@i:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172  0008'                    ___lwdiv@dividend:	
  1173                           ; 2 bytes @ 0x8
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x8
  1177  0008'                    	ds	1
  1178  0009'                    ___llmod@counter:
  1179  0009'                    ___xxtofl@exp:	
  1180                           ; 1 bytes @ 0x9
  1181                           
  1182  0009'                    ___awdiv@dividend:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185  0009'                    ___lldiv@quotient:	
  1186                           ; 2 bytes @ 0x9
  1187                           
  1188  0009'                    __div_to_l_@quot:	
  1189                           ; 4 bytes @ 0x9
  1190                           
  1191                           
  1192                           ; 4 bytes @ 0x9
  1193  0009'                    	ds	1
  1194  000A'                    ??___lwdiv:
  1195  000A'                    ___xxtofl@arg:	
  1196                           ; 1 bytes @ 0xA
  1197                           
  1198                           
  1199                           ; 4 bytes @ 0xA
  1200  000A'                    	ds	1
  1201  000B'                    ??___awdiv:
  1202  000B'                    ___lwdiv@quotient:	
  1203                           ; 1 bytes @ 0xB
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0xB
  1207  000B'                    	ds	1
  1208  000C'                    ___awdiv@counter:
  1209  000C'                    __tdiv_to_l_@quot:	
  1210                           ; 1 bytes @ 0xC
  1211                           
  1212                           
  1213                           ; 4 bytes @ 0xC
  1214  000C'                    	ds	1
  1215  000D'                    ___lldiv@counter:
  1216  000D'                    ___awdiv@sign:	
  1217                           ; 1 bytes @ 0xD
  1218                           
  1219  000D'                    __div_to_l_@cntr:	
  1220                           ; 1 bytes @ 0xD
  1221                           
  1222  000D'                    ___lwdiv@counter:	
  1223                           ; 1 bytes @ 0xD
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0xD
  1227  000D'                    	ds	1
  1228  000E'                    __div_to_l_@exp1:
  1229  000E'                    ___awdiv@quotient:	
  1230                           ; 1 bytes @ 0xE
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0xE
  1234  000E'                    	ds	2
  1235  0010'                    ?___flmul:
  1236  0010'                    __tdiv_to_l_@cntr:	
  1237                           ; 4 bytes @ 0x10
  1238                           
  1239  0010'                    ___flmul@b:	
  1240                           ; 1 bytes @ 0x10
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x10
  1244  0010'                    	ds	1
  1245  0011'                    __tdiv_to_l_@exp1:
  1246                           
  1247                           ; 1 bytes @ 0x11
  1248  0011'                    	ds	3
  1249  0014'                    ___flmul@a:
  1250                           
  1251                           ; 4 bytes @ 0x14
  1252  0014'                    	ds	4
  1253  0018'                    ??___flmul:
  1254                           
  1255                           ; 1 bytes @ 0x18
  1256  0018'                    	ds	5
  1257  001D'                    ___flmul@sign:
  1258                           
  1259                           ; 1 bytes @ 0x1D
  1260  001D'                    	ds	1
  1261  001E'                    ___flmul@aexp:
  1262                           
  1263                           ; 1 bytes @ 0x1E
  1264  001E'                    	ds	1
  1265  001F'                    ___flmul@grs:
  1266                           
  1267                           ; 4 bytes @ 0x1F
  1268  001F'                    	ds	4
  1269  0023'                    ___flmul@bexp:
  1270                           
  1271                           ; 1 bytes @ 0x23
  1272  0023'                    	ds	1
  1273  0024'                    ___flmul@prod:
  1274                           
  1275                           ; 4 bytes @ 0x24
  1276  0024'                    	ds	4
  1277  0028'                    ___flmul@temp:
  1278                           
  1279                           ; 2 bytes @ 0x28
  1280  0028'                    	ds	2
  1281  002A'                    ?_fround:
  1282  002A'                    ?_scale:	
  1283                           ; 4 bytes @ 0x2A
  1284                           
  1285  002A'                    ?___fldiv:	
  1286                           ; 4 bytes @ 0x2A
  1287                           
  1288  002A'                    ___fldiv@a:	
  1289                           ; 4 bytes @ 0x2A
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x2A
  1293  002A'                    	ds	4
  1294  002E'                    ??_fround:
  1295  002E'                    ??_scale:	
  1296                           ; 1 bytes @ 0x2E
  1297                           
  1298  002E'                    ___fldiv@b:	
  1299                           ; 1 bytes @ 0x2E
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x2E
  1303  002E'                    	ds	4
  1304  0032'                    ??___fldiv:
  1305                           
  1306                           ; 1 bytes @ 0x32
  1307  0032'                    	ds	3
  1308  0035'                    _fround$1104:
  1309                           
  1310                           ; 4 bytes @ 0x35
  1311  0035'                    	ds	2
  1312  0037'                    ___fldiv@rem:
  1313                           
  1314                           ; 4 bytes @ 0x37
  1315  0037'                    	ds	1
  1316  0038'                    _scale$1105:
  1317                           
  1318                           ; 4 bytes @ 0x38
  1319  0038'                    	ds	1
  1320  0039'                    _fround$1103:
  1321                           
  1322                           ; 4 bytes @ 0x39
  1323  0039'                    	ds	2
  1324  003B'                    ___fldiv@sign:
  1325                           
  1326                           ; 1 bytes @ 0x3B
  1327  003B'                    	ds	1
  1328  003C'                    scale@scl:
  1329  003C'                    ___fldiv@new_exp:	
  1330                           ; 1 bytes @ 0x3C
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x3C
  1334  003C'                    	ds	1
  1335  003D'                    ?___fltol:
  1336  003D'                    fround@prec:	
  1337                           ; 4 bytes @ 0x3D
  1338                           
  1339  003D'                    ___fltol@f1:	
  1340                           ; 1 bytes @ 0x3D
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x3D
  1344  003D'                    	ds	1
  1345  003E'                    ?___fladd:
  1346  003E'                    ___fladd@b:	
  1347                           ; 4 bytes @ 0x3E
  1348                           
  1349  003E'                    ___fldiv@grs:	
  1350                           ; 4 bytes @ 0x3E
  1351                           
  1352                           
  1353                           ; 4 bytes @ 0x3E
  1354  003E'                    	ds	3
  1355  0041'                    ??___fltol:
  1356                           
  1357                           ; 1 bytes @ 0x41
  1358  0041'                    	ds	1
  1359  0042'                    ___fldiv@bexp:
  1360  0042'                    ___fladd@a:	
  1361                           ; 1 bytes @ 0x42
  1362                           
  1363                           
  1364                           ; 4 bytes @ 0x42
  1365  0042'                    	ds	1
  1366  0043'                    ___fldiv@aexp:
  1367                           
  1368                           ; 1 bytes @ 0x43
  1369  0043'                    	ds	1
  1370  0044'                    ??_ADC_CH0:
  1371  0044'                    ??_ADC_CH1:	
  1372                           ; 1 bytes @ 0x44
  1373                           
  1374                           
  1375                           ; 1 bytes @ 0x44
  1376  0044'                    	ds	2
  1377  0046'                    ??___fladd:
  1378  0046'                    ___fltol@sign1:	
  1379                           ; 1 bytes @ 0x46
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x46
  1383  0046'                    	ds	1
  1384  0047'                    ___fltol@exp1:
  1385                           
  1386                           ; 1 bytes @ 0x47
  1387  0047'                    	ds	7
  1388  004E'                    ??_main:
  1389  004E'                    ??___flsub:	
  1390                           ; 1 bytes @ 0x4E
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x4E
  1394  004E'                    	ds	1
  1395                           
  1396                           	psect	maintext
  1397  0000'                    __pmaintext:	
  1398 ;;
  1399 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1400 ;;
  1401 ;; *************** function _main *****************
  1402 ;; Defined at:
  1403 ;;		line 93 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : B00/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0
  1419 ;;      Temps:          0       1       0       0       0
  1420 ;;      Totals:         0       1       0       0       0
  1421 ;;Total ram usage:        1 bytes
  1422 ;; Hardware stack levels required when called:    6
  1423 ;; This function calls:
  1424 ;;		_ADC_CH0
  1425 ;;		_ADC_CH1
  1426 ;;		_Lcd_Clear
  1427 ;;		_Lcd_Init
  1428 ;;		_Lcd_Set_Cursor
  1429 ;;		_Lcd_Write_String
  1430 ;;		_setup
  1431 ;;		_sprintf
  1432 ;; This function is called by:
  1433 ;;		Startup code after reset
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _main
  1439  0000'                    _main:
  1440  0000'                    l5087:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1443                           
  1444                           
  1445                           ;main.c: 94:   setup ();
  1446  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
  1447  0005'                    l5089:
  1448                           
  1449                           ;main.c: 96:   TRISD = 0x00;
  1450  0005' 1683               	bsf	3,5	;RP0=1, select bank1
  1451  0006' 1303               	bcf	3,6	;RP1=0, select bank1
  1452  0007' 0188               	clrf	8	;volatile
  1453  0008'                    l5091:
  1454                           
  1455                           ;main.c: 97:   Lcd_Init();
  1456  0008' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
  1457  000D'                    l5093:
  1458                           
  1459                           ;main.c: 99:      Lcd_Clear();
  1460  000D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1461  0012'                    l5095:
  1462                           
  1463                           ;main.c: 100:     Lcd_Set_Cursor(1,1);
  1464  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  1465  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  1466  0014' 0184'              	clrf	Lcd_Set_Cursor@b
  1467  0015' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1468  0016' 3001               	movlw	1
  1469  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1470  001C'                    l5097:
  1471                           
  1472                           ;main.c: 101:     Lcd_Write_String("S1:");
  1473  001C' 309F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1474  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  1475  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  1476  001F' 0083'              	movwf	Lcd_Write_String@a
  1477  0020' 3080               	movlw	128
  1478  0021' 0084'              	movwf	Lcd_Write_String@a+1
  1479  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1480  0027'                    l5099:
  1481                           
  1482                           ;main.c: 102:     Lcd_Set_Cursor(1,7);
  1483  0027' 3007               	movlw	7
  1484  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  1485  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  1486  002A' 00CE'              	movwf	??_main
  1487  002B' 084E'              	movf	??_main,w
  1488  002C' 0084'              	movwf	Lcd_Set_Cursor@b
  1489  002D' 3001               	movlw	1
  1490  002E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1491  0033'                    l5101:
  1492                           
  1493                           ;main.c: 103:     Lcd_Write_String("S2:");
  1494  0033' 30A3               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1495  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  1496  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  1497  0036' 0083'              	movwf	Lcd_Write_String@a
  1498  0037' 3080               	movlw	128
  1499  0038' 0084'              	movwf	Lcd_Write_String@a+1
  1500  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1501  003E'                    l5103:
  1502                           
  1503                           ;main.c: 104:     Lcd_Set_Cursor(1,14);
  1504  003E' 300E               	movlw	14
  1505  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  1506  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  1507  0041' 00CE'              	movwf	??_main
  1508  0042' 084E'              	movf	??_main,w
  1509  0043' 0084'              	movwf	Lcd_Set_Cursor@b
  1510  0044' 3001               	movlw	1
  1511  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1512  004A'                    l5105:
  1513                           
  1514                           ;main.c: 105:     Lcd_Write_String("S3:");
  1515  004A' 30A7               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1516  004B' 1283               	bcf	3,5	;RP0=0, select bank0
  1517  004C' 1303               	bcf	3,6	;RP1=0, select bank0
  1518  004D' 0083'              	movwf	Lcd_Write_String@a
  1519  004E' 3080               	movlw	128
  1520  004F' 0084'              	movwf	Lcd_Write_String@a+1
  1521  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1522  0055'                    l5107:
  1523                           
  1524                           ;main.c: 107:   {;main.c: 108:     ADC_CH0();
  1525  0055' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_CH0
  1526  005A'                    l5109:
  1527                           
  1528                           ;main.c: 109:     ADC_CH1();
  1529  005A' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_CH1
  1530  005F'                    l5111:
  1531                           
  1532                           ;main.c: 111:     sprintf(data, "%1.2fV " "%1.2fV", VAL1, VAL2);
  1533  005F' 3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1534  0060' 1283               	bcf	3,5	;RP0=0, select bank0
  1535  0061' 1303               	bcf	3,6	;RP1=0, select bank0
  1536  0062' 00CE'              	movwf	??_main
  1537  0063' 084E'              	movf	??_main,w
  1538  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  1539  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  1540  0066' 0080'              	movwf	sprintf@f^(0+128)
  1541  0067' 0800'              	movf	(_VAL1+3)^(0+128),w
  1542  0068' 0081'              	movwf	((?_sprintf+3)^(0+128)+1)
  1543  0069' 0800'              	movf	(_VAL1+2)^(0+128),w
  1544  006A' 0081'              	movwf	((?_sprintf+2)^(0+128)+1)
  1545  006B' 0800'              	movf	(_VAL1+1)^(0+128),w
  1546  006C' 0081'              	movwf	((?_sprintf+1)^(0+128)+1)
  1547  006D' 0800'              	movf	_VAL1^(0+128),w
  1548  006E' 0081'              	movwf	(?_sprintf^(0+128)+1)
  1549  006F' 0800'              	movf	(_VAL2+3)^(0+128),w
  1550  0070' 0085'              	movwf	((?_sprintf+3)^(0+128)+5)
  1551  0071' 0800'              	movf	(_VAL2+2)^(0+128),w
  1552  0072' 0085'              	movwf	((?_sprintf+2)^(0+128)+5)
  1553  0073' 0800'              	movf	(_VAL2+1)^(0+128),w
  1554  0074' 0085'              	movwf	((?_sprintf+1)^(0+128)+5)
  1555  0075' 0800'              	movf	_VAL2^(0+128),w
  1556  0076' 0085'              	movwf	(?_sprintf^(0+128)+5)
  1557  0077' 3000'              	movlw	(low (_data| 0))& (0+255)
  1558  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1559  007D'                    l5113:
  1560                           
  1561                           ;main.c: 112:     Lcd_Set_Cursor(2, 1);
  1562  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  1563  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  1564  007F' 0184'              	clrf	Lcd_Set_Cursor@b
  1565  0080' 0A84'              	incf	Lcd_Set_Cursor@b,f
  1566  0081' 3002               	movlw	2
  1567  0082' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1568  0087'                    l5115:
  1569                           
  1570                           ;main.c: 113:     Lcd_Write_String(data);
  1571  0087' 3000'              	movlw	(low (_data| 0))& (0+255)
  1572  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  1573  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  1574  008A' 0083'              	movwf	Lcd_Write_String@a
  1575  008B' 3000               	movlw	0
  1576  008C' 0084'              	movwf	Lcd_Write_String@a+1
  1577  008D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1578  0092' 2800'              	goto	l5107
  1579  0093' 120A' 118A' 2800'  	ljmp	start
  1580  0096'                    __end_of_main:
  1581                           
  1582                           	psect	text1
  1583  0000'                    __ptext1:	
  1584 ;; *************** function _sprintf *****************
  1585 ;; Defined at:
  1586 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  sp              1    wreg     PTR unsigned char 
  1589 ;;		 -> data(16), 
  1590 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1591 ;;		 -> STR_4(14), 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  sp              1   49[BANK1 ] PTR unsigned char 
  1594 ;;		 -> data(16), 
  1595 ;;  fval            4   45[BANK1 ] PTR unsigned char 
  1596 ;;  tmpval          4   39[BANK1 ] struct .
  1597 ;;  val             4   31[BANK1 ] unsigned long 
  1598 ;;  prec            2   50[BANK1 ] int 
  1599 ;;  eexp            2   43[BANK1 ] int 
  1600 ;;  width           2   37[BANK1 ] int 
  1601 ;;  flag            2   35[BANK1 ] unsigned short 
  1602 ;;  cp              2    0        PTR const unsigned char 
  1603 ;;  len             2    0        unsigned int 
  1604 ;;  c               1   52[BANK1 ] unsigned char 
  1605 ;;  ap              1   30[BANK1 ] PTR void [1]
  1606 ;;		 -> ?_sprintf(2), 
  1607 ;;  d               1    0        unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2   12[BANK1 ] int 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       9       0       0
  1618 ;;      Locals:         0       0      27       0       0
  1619 ;;      Temps:          0       0       5       0       0
  1620 ;;      Totals:         0       0      41       0       0
  1621 ;;Total ram usage:       41 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    5
  1624 ;; This function calls:
  1625 ;;		___awdiv
  1626 ;;		___fladd
  1627 ;;		___fleq
  1628 ;;		___flge
  1629 ;;		___flmul
  1630 ;;		___flneg
  1631 ;;		___flsub
  1632 ;;		___fltol
  1633 ;;		___lldiv
  1634 ;;		___llmod
  1635 ;;		___wmul
  1636 ;;		___xxtofl
  1637 ;;		__div_to_l_
  1638 ;;		__tdiv_to_l_
  1639 ;;		_fround
  1640 ;;		_isdigit
  1641 ;;		_scale
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _sprintf
  1649  0000'                    _sprintf:
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1653                           ;sprintf@sp stored from wreg
  1654  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1655  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1656  0002' 0080'              	movwf	sprintf@sp^(0+128)
  1657  0003'                    l4825:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1660  0003' 3000'              	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1661  0004' 0080'              	movwf	??_sprintf^(0+128)
  1662  0005' 0800'              	movf	??_sprintf^(0+128),w
  1663  0006' 0080'              	movwf	sprintf@ap^(0+128)
  1664  0007'                    L1:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1667  0007' 120A' 118A' 2800'  	goto	l5075
  1668  000A'                    l4827:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1671  000A' 3025               	movlw	37
  1672  000B' 0600'              	xorwf	sprintf@c^(0+128),w
  1673  000C' 1903               	btfsc	3,2
  1674  000D' 2800'              	goto	u8251
  1675  000E' 2800'              	goto	u8250
  1676  000F'                    u8251:
  1677  000F' 2800'              	goto	l4833
  1678  0010'                    u8250:
  1679  0010'                    l4829:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1682  0010' 0800'              	movf	sprintf@c^(0+128),w
  1683  0011' 0080'              	movwf	??_sprintf^(0+128)
  1684  0012' 0800'              	movf	sprintf@sp^(0+128),w
  1685  0013' 0084               	movwf	4
  1686  0014' 0800'              	movf	??_sprintf^(0+128),w
  1687  0015' 1383               	bcf	3,7	;select IRP bank0
  1688  0016' 0080               	movwf	0
  1689  0017'                    l4831:
  1690  0017' 3001               	movlw	1
  1691  0018' 0080'              	movwf	??_sprintf^(0+128)
  1692  0019' 0800'              	movf	??_sprintf^(0+128),w
  1693  001A' 0780'              	addwf	sprintf@sp^(0+128),f
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1696  001B' 2800'              	goto	L1
  1697  001C'                    l4833:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1700  001C' 0180'              	clrf	sprintf@width^(0+128)
  1701  001D' 0180'              	clrf	(sprintf@width+1)^(0+128)
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1704  001E' 0180'              	clrf	sprintf@flag^(0+128)
  1705  001F' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  1706  0020'                    l4835:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1709  0020' 0800'              	movf	sprintf@f^(0+128),w
  1710  0021' 0084               	movwf	4
  1711  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1712  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1713  002C' 1C03               	btfss	3,0
  1714  002D' 2800'              	goto	u8261
  1715  002E' 2800'              	goto	u8260
  1716  002F'                    u8261:
  1717  002F' 2800'              	goto	l4847
  1718  0030'                    u8260:
  1719  0030'                    l4837:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1722  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  1723  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  1724  0032' 0180'              	clrf	sprintf@width^(0+128)
  1725  0033' 0180'              	clrf	(sprintf@width+1)^(0+128)
  1726  0034'                    l4839:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1729  0034' 300A               	movlw	10
  1730  0035' 1283               	bcf	3,5	;RP0=0, select bank0
  1731  0036' 1303               	bcf	3,6	;RP1=0, select bank0
  1732  0037' 0080'              	movwf	___wmul@multiplier
  1733  0038' 3000               	movlw	0
  1734  0039' 0081'              	movwf	___wmul@multiplier+1
  1735  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  1736  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  1737  003C' 0800'              	movf	(sprintf@width+1)^(0+128),w
  1738  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  1739  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  1740  003F' 0083'              	movwf	___wmul@multiplicand+1
  1741  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  1742  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  1743  0042' 0800'              	movf	sprintf@width^(0+128),w
  1744  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  1745  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  1746  0045' 0082'              	movwf	___wmul@multiplicand
  1747  0046' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1748  004B' 1283               	bcf	3,5	;RP0=0, select bank0
  1749  004C' 1303               	bcf	3,6	;RP1=0, select bank0
  1750  004D' 0801'              	movf	?___wmul+1,w
  1751  004E' 1683               	bsf	3,5	;RP0=1, select bank1
  1752  004F' 1303               	bcf	3,6	;RP1=0, select bank1
  1753  0050' 0080'              	movwf	(sprintf@width+1)^(0+128)
  1754  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  1755  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  1756  0053' 0800'              	movf	?___wmul,w
  1757  0054' 1683               	bsf	3,5	;RP0=1, select bank1
  1758  0055' 1303               	bcf	3,6	;RP1=0, select bank1
  1759  0056' 0080'              	movwf	sprintf@width^(0+128)
  1760  0057'                    l4841:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1763  0057' 0800'              	movf	sprintf@f^(0+128),w
  1764  0058' 0084               	movwf	4
  1765  0059' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1766  005E' 3ED0               	addlw	208
  1767  005F' 0080'              	movwf	??_sprintf^(0+128)
  1768  0060' 30FF               	movlw	255
  1769  0061' 1803               	skipnc
  1770  0062' 3000               	movlw	0
  1771  0063' 0081'              	movwf	(??_sprintf^(0+128)+1)
  1772  0064' 0800'              	movf	??_sprintf^(0+128),w
  1773  0065' 0780'              	addwf	sprintf@width^(0+128),f
  1774  0066' 1803               	skipnc
  1775  0067' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  1776  0068' 0800'              	movf	(??_sprintf+1)^(0+128),w
  1777  0069' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  1778  006A'                    l4843:
  1779  006A' 3001               	movlw	1
  1780  006B' 0080'              	movwf	??_sprintf^(0+128)
  1781  006C' 0800'              	movf	??_sprintf^(0+128),w
  1782  006D' 0780'              	addwf	sprintf@f^(0+128),f
  1783  006E'                    l4845:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1786  006E' 0800'              	movf	sprintf@f^(0+128),w
  1787  006F' 0084               	movwf	4
  1788  0070' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1789  0075' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1790  007A' 1803               	btfsc	3,0
  1791  007B' 2800'              	goto	u8271
  1792  007C' 2800'              	goto	u8270
  1793  007D'                    u8271:
  1794  007D' 2800'              	goto	l4839
  1795  007E'                    u8270:
  1796  007E'                    l4847:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1799  007E' 1683               	bsf	3,5	;RP0=1, select bank1
  1800  007F' 1303               	bcf	3,6	;RP1=0, select bank1
  1801  0080' 0800'              	movf	sprintf@f^(0+128),w
  1802  0081' 0084               	movwf	4
  1803  0082' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1804  0087' 3A2E               	xorlw	46
  1805  0088' 1D03               	skipz
  1806  0089' 2800'              	goto	u8281
  1807  008A' 2800'              	goto	u8280
  1808  008B'                    u8281:
  1809  008B' 2800'              	goto	l4863
  1810  008C'                    u8280:
  1811  008C'                    l4849:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1814  008C' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  1815  008D'                    l4851:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1818  008D' 3001               	movlw	1
  1819  008E' 0080'              	movwf	??_sprintf^(0+128)
  1820  008F' 0800'              	movf	??_sprintf^(0+128),w
  1821  0090' 0780'              	addwf	sprintf@f^(0+128),f
  1822  0091'                    l4853:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1825  0091' 0180'              	clrf	sprintf@prec^(0+128)
  1826  0092' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1829  0093' 2800'              	goto	l4861
  1830  0094'                    l4855:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1833  0094' 300A               	movlw	10
  1834  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  1835  0096' 1303               	bcf	3,6	;RP1=0, select bank0
  1836  0097' 0080'              	movwf	___wmul@multiplier
  1837  0098' 3000               	movlw	0
  1838  0099' 0081'              	movwf	___wmul@multiplier+1
  1839  009A' 1683               	bsf	3,5	;RP0=1, select bank1
  1840  009B' 1303               	bcf	3,6	;RP1=0, select bank1
  1841  009C' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  1842  009D' 1283               	bcf	3,5	;RP0=0, select bank0
  1843  009E' 1303               	bcf	3,6	;RP1=0, select bank0
  1844  009F' 0083'              	movwf	___wmul@multiplicand+1
  1845  00A0' 1683               	bsf	3,5	;RP0=1, select bank1
  1846  00A1' 1303               	bcf	3,6	;RP1=0, select bank1
  1847  00A2' 0800'              	movf	sprintf@prec^(0+128),w
  1848  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  1849  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1850  00A5' 0082'              	movwf	___wmul@multiplicand
  1851  00A6' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1852  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  1853  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  1854  00AD' 0801'              	movf	?___wmul+1,w
  1855  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  1856  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
  1857  00B0' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  1858  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  1859  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  1860  00B3' 0800'              	movf	?___wmul,w
  1861  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
  1862  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
  1863  00B6' 0080'              	movwf	sprintf@prec^(0+128)
  1864  00B7'                    l4857:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1867  00B7' 0800'              	movf	sprintf@f^(0+128),w
  1868  00B8' 0084               	movwf	4
  1869  00B9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1870  00BE' 3ED0               	addlw	208
  1871  00BF' 0080'              	movwf	??_sprintf^(0+128)
  1872  00C0' 30FF               	movlw	255
  1873  00C1' 1803               	skipnc
  1874  00C2' 3000               	movlw	0
  1875  00C3' 0081'              	movwf	(??_sprintf^(0+128)+1)
  1876  00C4' 0800'              	movf	??_sprintf^(0+128),w
  1877  00C5' 0780'              	addwf	sprintf@prec^(0+128),f
  1878  00C6' 1803               	skipnc
  1879  00C7' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  1880  00C8' 0800'              	movf	(??_sprintf+1)^(0+128),w
  1881  00C9' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  1882  00CA'                    l4859:
  1883  00CA' 3001               	movlw	1
  1884  00CB' 0080'              	movwf	??_sprintf^(0+128)
  1885  00CC' 0800'              	movf	??_sprintf^(0+128),w
  1886  00CD' 0780'              	addwf	sprintf@f^(0+128),f
  1887  00CE'                    l4861:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1890  00CE' 0800'              	movf	sprintf@f^(0+128),w
  1891  00CF' 0084               	movwf	4
  1892  00D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1893  00D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1894  00DA' 1803               	btfsc	3,0
  1895  00DB' 2800'              	goto	u8291
  1896  00DC' 2800'              	goto	u8290
  1897  00DD'                    u8291:
  1898  00DD' 2800'              	goto	l4855
  1899  00DE'                    u8290:
  1900  00DE' 2800'              	goto	l4869
  1901  00DF'                    l4863:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1904  00DF' 0180'              	clrf	sprintf@prec^(0+128)
  1905  00E0' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  1906  00E1'                    l4865:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1909  00E1' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  1910  00E2' 2800'              	goto	l4869
  1911  00E3'                    l341:	
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1913                           
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1916  00E3' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1919  00E4' 2800'              	goto	l4871
  1920  00E5'                    l4869:
  1921  00E5' 3001               	movlw	1
  1922  00E6' 1683               	bsf	3,5	;RP0=1, select bank1
  1923  00E7' 1303               	bcf	3,6	;RP1=0, select bank1
  1924  00E8' 0780'              	addwf	sprintf@f^(0+128),f
  1925  00E9' 30FF               	movlw	-1
  1926  00EA' 0700'              	addwf	sprintf@f^(0+128),w
  1927  00EB' 0084               	movwf	4
  1928  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1929  00F1' 0080'              	movwf	sprintf@c^(0+128)
  1930  00F2' 0080'              	movwf	??_sprintf^(0+128)
  1931  00F3' 0181'              	clrf	(??_sprintf^(0+128)+1)
  1932                           
  1933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 0 to 0
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ; direct_byte           11     8 (fixed)
  1940                           ; jumptable            260     6 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  00F4' 0800'              	movf	(??_sprintf+1)^(0+128),w
  1943  00F5' 3A00               	xorlw	0	; case 0
  1944  00F6' 1903               	skipnz
  1945  00F7' 2800'              	goto	l5171
  1946  00F8' 2800'              	goto	L1
  1947  00F9'                    l5171:
  1948                           
  1949                           ; Switch size 1, requested type "simple"
  1950                           ; Number of cases is 2, Range of values is 0 to 102
  1951                           ; switch strategies available:
  1952                           ; Name         Instructions Cycles
  1953                           ; simple_byte            7     4 (average)
  1954                           ; jumptable            260     6 (fixed)
  1955                           ;	Chosen strategy is simple_byte
  1956  00F9' 0800'              	movf	??_sprintf^(0+128),w
  1957  00FA' 3A00               	xorlw	0	; case 0
  1958  00FB' 1903               	skipnz
  1959  00FC' 2800'              	goto	L3
  1960  00FD' 3A66               	xorlw	102	; case 102
  1961  00FE' 1903               	skipnz
  1962  00FF' 2800'              	goto	l341
  1963  0100' 2800'              	goto	L1
  1964  0101'                    l4871:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1967  0101' 3000               	movlw	0
  1968  0102' 0500'              	andwf	sprintf@flag^(0+128),w
  1969  0103' 0080'              	movwf	??_sprintf^(0+128)
  1970  0104' 3007               	movlw	7
  1971  0105' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  1972  0106' 0080'              	movwf	(??_sprintf+1)^(0+128)
  1973  0107' 0800'              	movf	??_sprintf^(0+128),w
  1974  0108' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  1975  0109' 1903               	btfsc	3,2
  1976  010A' 2800'              	goto	u8301
  1977  010B' 2800'              	goto	u8300
  1978  010C'                    u8301:
  1979  010C' 120A' 118A' 2800'  	goto	l5029
  1980  010F'                    u8300:
  1981  010F'                    l4873:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1984  010F' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  1985  0110' 2800'              	goto	u8311
  1986  0111' 2800'              	goto	u8310
  1987  0112'                    u8311:
  1988  0112' 2800'              	goto	l4877
  1989  0113'                    u8310:
  1990  0113'                    l4875:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1993  0113' 3006               	movlw	6
  1994  0114' 0080'              	movwf	sprintf@prec^(0+128)
  1995  0115' 3000               	movlw	0
  1996  0116' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  1997  0117'                    l4877:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2000  0117' 0800'              	movf	sprintf@ap^(0+128),w
  2001  0118' 0084               	movwf	4
  2002  0119' 1383               	bcf	3,7	;select IRP bank0
  2003  011A' 0800               	movf	0,w
  2004  011B' 0080'              	movwf	sprintf@fval^(0+128)
  2005  011C' 0A84               	incf	4,f
  2006  011D' 0800               	movf	0,w
  2007  011E' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2008  011F' 0A84               	incf	4,f
  2009  0120' 0800               	movf	0,w
  2010  0121' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2011  0122' 0A84               	incf	4,f
  2012  0123' 0800               	movf	0,w
  2013  0124' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2014  0125'                    l4879:
  2015  0125' 3004               	movlw	4
  2016  0126' 0080'              	movwf	??_sprintf^(0+128)
  2017  0127' 0800'              	movf	??_sprintf^(0+128),w
  2018  0128' 0780'              	addwf	sprintf@ap^(0+128),f
  2019  0129'                    l4881:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2022  0129' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2023  012A' 1283               	bcf	3,5	;RP0=0, select bank0
  2024  012B' 1303               	bcf	3,6	;RP1=0, select bank0
  2025  012C' 0083'              	movwf	___flge@ff1+3
  2026  012D' 1683               	bsf	3,5	;RP0=1, select bank1
  2027  012E' 1303               	bcf	3,6	;RP1=0, select bank1
  2028  012F' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2029  0130' 1283               	bcf	3,5	;RP0=0, select bank0
  2030  0131' 1303               	bcf	3,6	;RP1=0, select bank0
  2031  0132' 0082'              	movwf	___flge@ff1+2
  2032  0133' 1683               	bsf	3,5	;RP0=1, select bank1
  2033  0134' 1303               	bcf	3,6	;RP1=0, select bank1
  2034  0135' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2035  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  2036  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  2037  0138' 0081'              	movwf	___flge@ff1+1
  2038  0139' 1683               	bsf	3,5	;RP0=1, select bank1
  2039  013A' 1303               	bcf	3,6	;RP1=0, select bank1
  2040  013B' 0800'              	movf	sprintf@fval^(0+128),w
  2041  013C' 1283               	bcf	3,5	;RP0=0, select bank0
  2042  013D' 1303               	bcf	3,6	;RP1=0, select bank0
  2043  013E' 0080'              	movwf	___flge@ff1
  2044  013F' 3000               	movlw	0
  2045  0140' 0087'              	movwf	___flge@ff2+3
  2046  0141' 3000               	movlw	0
  2047  0142' 0086'              	movwf	___flge@ff2+2
  2048  0143' 3000               	movlw	0
  2049  0144' 0085'              	movwf	___flge@ff2+1
  2050  0145' 3000               	movlw	0
  2051  0146' 0084'              	movwf	___flge@ff2
  2052  0147' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2053  014C' 1803               	btfsc	3,0
  2054  014D' 2800'              	goto	u8321
  2055  014E' 2800'              	goto	u8320
  2056  014F'                    u8321:
  2057  014F' 2800'              	goto	l4887
  2058  0150'                    u8320:
  2059  0150'                    l4883:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2062  0150' 1683               	bsf	3,5	;RP0=1, select bank1
  2063  0151' 1303               	bcf	3,6	;RP1=0, select bank1
  2064  0152' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2065  0153' 1283               	bcf	3,5	;RP0=0, select bank0
  2066  0154' 1303               	bcf	3,6	;RP1=0, select bank0
  2067  0155' 0083'              	movwf	___flneg@f1+3
  2068  0156' 1683               	bsf	3,5	;RP0=1, select bank1
  2069  0157' 1303               	bcf	3,6	;RP1=0, select bank1
  2070  0158' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2071  0159' 1283               	bcf	3,5	;RP0=0, select bank0
  2072  015A' 1303               	bcf	3,6	;RP1=0, select bank0
  2073  015B' 0082'              	movwf	___flneg@f1+2
  2074  015C' 1683               	bsf	3,5	;RP0=1, select bank1
  2075  015D' 1303               	bcf	3,6	;RP1=0, select bank1
  2076  015E' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2077  015F' 1283               	bcf	3,5	;RP0=0, select bank0
  2078  0160' 1303               	bcf	3,6	;RP1=0, select bank0
  2079  0161' 0081'              	movwf	___flneg@f1+1
  2080  0162' 1683               	bsf	3,5	;RP0=1, select bank1
  2081  0163' 1303               	bcf	3,6	;RP1=0, select bank1
  2082  0164' 0800'              	movf	sprintf@fval^(0+128),w
  2083  0165' 1283               	bcf	3,5	;RP0=0, select bank0
  2084  0166' 1303               	bcf	3,6	;RP1=0, select bank0
  2085  0167' 0080'              	movwf	___flneg@f1
  2086  0168' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2087  016D' 1283               	bcf	3,5	;RP0=0, select bank0
  2088  016E' 1303               	bcf	3,6	;RP1=0, select bank0
  2089  016F' 0803'              	movf	?___flneg+3,w
  2090  0170' 1683               	bsf	3,5	;RP0=1, select bank1
  2091  0171' 1303               	bcf	3,6	;RP1=0, select bank1
  2092  0172' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2093  0173' 1283               	bcf	3,5	;RP0=0, select bank0
  2094  0174' 1303               	bcf	3,6	;RP1=0, select bank0
  2095  0175' 0802'              	movf	?___flneg+2,w
  2096  0176' 1683               	bsf	3,5	;RP0=1, select bank1
  2097  0177' 1303               	bcf	3,6	;RP1=0, select bank1
  2098  0178' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2099  0179' 1283               	bcf	3,5	;RP0=0, select bank0
  2100  017A' 1303               	bcf	3,6	;RP1=0, select bank0
  2101  017B' 0801'              	movf	?___flneg+1,w
  2102  017C' 1683               	bsf	3,5	;RP0=1, select bank1
  2103  017D' 1303               	bcf	3,6	;RP1=0, select bank1
  2104  017E' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2105  017F' 1283               	bcf	3,5	;RP0=0, select bank0
  2106  0180' 1303               	bcf	3,6	;RP1=0, select bank0
  2107  0181' 0800'              	movf	?___flneg,w
  2108  0182' 1683               	bsf	3,5	;RP0=1, select bank1
  2109  0183' 1303               	bcf	3,6	;RP1=0, select bank1
  2110  0184' 0080'              	movwf	sprintf@fval^(0+128)
  2111  0185'                    l4885:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2114  0185' 3003               	movlw	3
  2115  0186' 0480'              	iorwf	sprintf@flag^(0+128),f
  2116  0187' 3000               	movlw	0
  2117  0188' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  2118  0189'                    l4887:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2121  0189' 1683               	bsf	3,5	;RP0=1, select bank1
  2122  018A' 1303               	bcf	3,6	;RP1=0, select bank1
  2123  018B' 0180'              	clrf	sprintf@eexp^(0+128)
  2124  018C' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2125  018D'                    l4889:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2128  018D' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2129  018E' 1283               	bcf	3,5	;RP0=0, select bank0
  2130  018F' 1303               	bcf	3,6	;RP1=0, select bank0
  2131  0190' 0083'              	movwf	___fleq@ff1+3
  2132  0191' 1683               	bsf	3,5	;RP0=1, select bank1
  2133  0192' 1303               	bcf	3,6	;RP1=0, select bank1
  2134  0193' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2135  0194' 1283               	bcf	3,5	;RP0=0, select bank0
  2136  0195' 1303               	bcf	3,6	;RP1=0, select bank0
  2137  0196' 0082'              	movwf	___fleq@ff1+2
  2138  0197' 1683               	bsf	3,5	;RP0=1, select bank1
  2139  0198' 1303               	bcf	3,6	;RP1=0, select bank1
  2140  0199' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2141  019A' 1283               	bcf	3,5	;RP0=0, select bank0
  2142  019B' 1303               	bcf	3,6	;RP1=0, select bank0
  2143  019C' 0081'              	movwf	___fleq@ff1+1
  2144  019D' 1683               	bsf	3,5	;RP0=1, select bank1
  2145  019E' 1303               	bcf	3,6	;RP1=0, select bank1
  2146  019F' 0800'              	movf	sprintf@fval^(0+128),w
  2147  01A0' 1283               	bcf	3,5	;RP0=0, select bank0
  2148  01A1' 1303               	bcf	3,6	;RP1=0, select bank0
  2149  01A2' 0080'              	movwf	___fleq@ff1
  2150  01A3' 3000               	movlw	0
  2151  01A4' 0087'              	movwf	___fleq@ff2+3
  2152  01A5' 3000               	movlw	0
  2153  01A6' 0086'              	movwf	___fleq@ff2+2
  2154  01A7' 3000               	movlw	0
  2155  01A8' 0085'              	movwf	___fleq@ff2+1
  2156  01A9' 3000               	movlw	0
  2157  01AA' 0084'              	movwf	___fleq@ff2
  2158  01AB' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2159  01B0' 1803               	btfsc	3,0
  2160  01B1' 2800'              	goto	u8331
  2161  01B2' 2800'              	goto	u8330
  2162  01B3'                    u8331:
  2163  01B3' 2800'              	goto	l4915
  2164  01B4'                    u8330:
  2165  01B4'                    l4891:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2168  01B4' 1003               	clrc
  2169  01B5' 1683               	bsf	3,5	;RP0=1, select bank1
  2170  01B6' 1303               	bcf	3,6	;RP1=0, select bank1
  2171  01B7' 0D00'              	rlf	(sprintf@fval+2)^(0+128),w
  2172  01B8' 0D00'              	rlf	(sprintf@fval+3)^(0+128),w
  2173  01B9' 3E82               	addlw	130
  2174  01BA' 0080'              	movwf	sprintf@eexp^(0+128)
  2175  01BB' 30FF               	movlw	255
  2176  01BC' 1803               	skipnc
  2177  01BD' 3000               	movlw	0
  2178  01BE' 0081'              	movwf	(sprintf@eexp^(0+128)+1)
  2179  01BF'                    l4893:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2182  01BF' 30FF               	movlw	255
  2183  01C0' 0780'              	addwf	sprintf@eexp^(0+128),f
  2184  01C1' 1803               	skipnc
  2185  01C2' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2186  01C3' 30FF               	movlw	255
  2187  01C4' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2188  01C5'                    l4895:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2191  01C5' 3003               	movlw	3
  2192  01C6' 1283               	bcf	3,5	;RP0=0, select bank0
  2193  01C7' 1303               	bcf	3,6	;RP1=0, select bank0
  2194  01C8' 0080'              	movwf	___wmul@multiplier
  2195  01C9' 3000               	movlw	0
  2196  01CA' 0081'              	movwf	___wmul@multiplier+1
  2197  01CB' 1683               	bsf	3,5	;RP0=1, select bank1
  2198  01CC' 1303               	bcf	3,6	;RP1=0, select bank1
  2199  01CD' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2200  01CE' 1283               	bcf	3,5	;RP0=0, select bank0
  2201  01CF' 1303               	bcf	3,6	;RP1=0, select bank0
  2202  01D0' 0083'              	movwf	___wmul@multiplicand+1
  2203  01D1' 1683               	bsf	3,5	;RP0=1, select bank1
  2204  01D2' 1303               	bcf	3,6	;RP1=0, select bank1
  2205  01D3' 0800'              	movf	sprintf@eexp^(0+128),w
  2206  01D4' 1283               	bcf	3,5	;RP0=0, select bank0
  2207  01D5' 1303               	bcf	3,6	;RP1=0, select bank0
  2208  01D6' 0082'              	movwf	___wmul@multiplicand
  2209  01D7' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2210  01DC' 1283               	bcf	3,5	;RP0=0, select bank0
  2211  01DD' 1303               	bcf	3,6	;RP1=0, select bank0
  2212  01DE' 0801'              	movf	?___wmul+1,w
  2213  01DF' 1683               	bsf	3,5	;RP0=1, select bank1
  2214  01E0' 1303               	bcf	3,6	;RP1=0, select bank1
  2215  01E1' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2216  01E2' 1283               	bcf	3,5	;RP0=0, select bank0
  2217  01E3' 1303               	bcf	3,6	;RP1=0, select bank0
  2218  01E4' 0800'              	movf	?___wmul,w
  2219  01E5' 1683               	bsf	3,5	;RP0=1, select bank1
  2220  01E6' 1303               	bcf	3,6	;RP1=0, select bank1
  2221  01E7' 0080'              	movwf	sprintf@eexp^(0+128)
  2222  01E8'                    l4897:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2225  01E8' 300A               	movlw	10
  2226  01E9' 1283               	bcf	3,5	;RP0=0, select bank0
  2227  01EA' 1303               	bcf	3,6	;RP1=0, select bank0
  2228  01EB' 0087'              	movwf	___awdiv@divisor
  2229  01EC' 3000               	movlw	0
  2230  01ED' 0088'              	movwf	___awdiv@divisor+1
  2231  01EE' 1683               	bsf	3,5	;RP0=1, select bank1
  2232  01EF' 1303               	bcf	3,6	;RP1=0, select bank1
  2233  01F0' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2234  01F1' 1283               	bcf	3,5	;RP0=0, select bank0
  2235  01F2' 1303               	bcf	3,6	;RP1=0, select bank0
  2236  01F3' 008A'              	movwf	___awdiv@dividend+1
  2237  01F4' 1683               	bsf	3,5	;RP0=1, select bank1
  2238  01F5' 1303               	bcf	3,6	;RP1=0, select bank1
  2239  01F6' 0800'              	movf	sprintf@eexp^(0+128),w
  2240  01F7' 1283               	bcf	3,5	;RP0=0, select bank0
  2241  01F8' 1303               	bcf	3,6	;RP1=0, select bank0
  2242  01F9' 0089'              	movwf	___awdiv@dividend
  2243  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2244  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
  2245  0200' 1303               	bcf	3,6	;RP1=0, select bank0
  2246  0201' 0808'              	movf	?___awdiv+1,w
  2247  0202' 1683               	bsf	3,5	;RP0=1, select bank1
  2248  0203' 1303               	bcf	3,6	;RP1=0, select bank1
  2249  0204' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2250  0205' 1283               	bcf	3,5	;RP0=0, select bank0
  2251  0206' 1303               	bcf	3,6	;RP1=0, select bank0
  2252  0207' 0807'              	movf	?___awdiv,w
  2253  0208' 1683               	bsf	3,5	;RP0=1, select bank1
  2254  0209' 1303               	bcf	3,6	;RP1=0, select bank1
  2255  020A' 0080'              	movwf	sprintf@eexp^(0+128)
  2256  020B'                    l4899:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2259  020B' 1F80'              	btfss	(sprintf@eexp+1)^(0+128),7
  2260  020C' 2800'              	goto	u8341
  2261  020D' 2800'              	goto	u8340
  2262  020E'                    u8341:
  2263  020E' 2800'              	goto	l4903
  2264  020F'                    u8340:
  2265  020F'                    l4901:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2268  020F' 30FF               	movlw	255
  2269  0210' 0780'              	addwf	sprintf@eexp^(0+128),f
  2270  0211' 1803               	skipnc
  2271  0212' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2272  0213' 30FF               	movlw	255
  2273  0214' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2274  0215'                    l4903:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2277  0215' 0300'              	decf	sprintf@eexp^(0+128),w
  2278  0216' 3AFF               	xorlw	255
  2279  0217' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2280  021C' 1283               	bcf	3,5	;RP0=0, select bank0
  2281  021D' 1303               	bcf	3,6	;RP1=0, select bank0
  2282  021E' 082D'              	movf	?_scale+3,w
  2283  021F' 1683               	bsf	3,5	;RP0=1, select bank1
  2284  0220' 1303               	bcf	3,6	;RP1=0, select bank1
  2285  0221' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2286  0222' 1283               	bcf	3,5	;RP0=0, select bank0
  2287  0223' 1303               	bcf	3,6	;RP1=0, select bank0
  2288  0224' 082C'              	movf	?_scale+2,w
  2289  0225' 1683               	bsf	3,5	;RP0=1, select bank1
  2290  0226' 1303               	bcf	3,6	;RP1=0, select bank1
  2291  0227' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2292  0228' 1283               	bcf	3,5	;RP0=0, select bank0
  2293  0229' 1303               	bcf	3,6	;RP1=0, select bank0
  2294  022A' 082B'              	movf	?_scale+1,w
  2295  022B' 1683               	bsf	3,5	;RP0=1, select bank1
  2296  022C' 1303               	bcf	3,6	;RP1=0, select bank1
  2297  022D' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2298  022E' 1283               	bcf	3,5	;RP0=0, select bank0
  2299  022F' 1303               	bcf	3,6	;RP1=0, select bank0
  2300  0230' 082A'              	movf	?_scale,w
  2301  0231' 1683               	bsf	3,5	;RP0=1, select bank1
  2302  0232' 1303               	bcf	3,6	;RP1=0, select bank1
  2303  0233' 0080'              	movwf	sprintf@tmpval^(0+128)
  2304  0234'                    l4905:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2307  0234' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2308  0235' 1283               	bcf	3,5	;RP0=0, select bank0
  2309  0236' 1303               	bcf	3,6	;RP1=0, select bank0
  2310  0237' 0093'              	movwf	___flmul@b+3
  2311  0238' 1683               	bsf	3,5	;RP0=1, select bank1
  2312  0239' 1303               	bcf	3,6	;RP1=0, select bank1
  2313  023A' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2314  023B' 1283               	bcf	3,5	;RP0=0, select bank0
  2315  023C' 1303               	bcf	3,6	;RP1=0, select bank0
  2316  023D' 0092'              	movwf	___flmul@b+2
  2317  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  2318  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  2319  0240' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2320  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  2321  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  2322  0243' 0091'              	movwf	___flmul@b+1
  2323  0244' 1683               	bsf	3,5	;RP0=1, select bank1
  2324  0245' 1303               	bcf	3,6	;RP1=0, select bank1
  2325  0246' 0800'              	movf	sprintf@fval^(0+128),w
  2326  0247' 1283               	bcf	3,5	;RP0=0, select bank0
  2327  0248' 1303               	bcf	3,6	;RP1=0, select bank0
  2328  0249' 0090'              	movwf	___flmul@b
  2329  024A' 1683               	bsf	3,5	;RP0=1, select bank1
  2330  024B' 1303               	bcf	3,6	;RP1=0, select bank1
  2331  024C' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2332  024D' 1283               	bcf	3,5	;RP0=0, select bank0
  2333  024E' 1303               	bcf	3,6	;RP1=0, select bank0
  2334  024F' 0097'              	movwf	___flmul@a+3
  2335  0250' 1683               	bsf	3,5	;RP0=1, select bank1
  2336  0251' 1303               	bcf	3,6	;RP1=0, select bank1
  2337  0252' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2338  0253' 1283               	bcf	3,5	;RP0=0, select bank0
  2339  0254' 1303               	bcf	3,6	;RP1=0, select bank0
  2340  0255' 0096'              	movwf	___flmul@a+2
  2341  0256' 1683               	bsf	3,5	;RP0=1, select bank1
  2342  0257' 1303               	bcf	3,6	;RP1=0, select bank1
  2343  0258' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2344  0259' 1283               	bcf	3,5	;RP0=0, select bank0
  2345  025A' 1303               	bcf	3,6	;RP1=0, select bank0
  2346  025B' 0095'              	movwf	___flmul@a+1
  2347  025C' 1683               	bsf	3,5	;RP0=1, select bank1
  2348  025D' 1303               	bcf	3,6	;RP1=0, select bank1
  2349  025E' 0800'              	movf	sprintf@tmpval^(0+128),w
  2350  025F' 1283               	bcf	3,5	;RP0=0, select bank0
  2351  0260' 1303               	bcf	3,6	;RP1=0, select bank0
  2352  0261' 0094'              	movwf	___flmul@a
  2353  0262' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2354  0267' 1283               	bcf	3,5	;RP0=0, select bank0
  2355  0268' 1303               	bcf	3,6	;RP1=0, select bank0
  2356  0269' 0813'              	movf	?___flmul+3,w
  2357  026A' 1683               	bsf	3,5	;RP0=1, select bank1
  2358  026B' 1303               	bcf	3,6	;RP1=0, select bank1
  2359  026C' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2360  026D' 1283               	bcf	3,5	;RP0=0, select bank0
  2361  026E' 1303               	bcf	3,6	;RP1=0, select bank0
  2362  026F' 0812'              	movf	?___flmul+2,w
  2363  0270' 1683               	bsf	3,5	;RP0=1, select bank1
  2364  0271' 1303               	bcf	3,6	;RP1=0, select bank1
  2365  0272' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2366  0273' 1283               	bcf	3,5	;RP0=0, select bank0
  2367  0274' 1303               	bcf	3,6	;RP1=0, select bank0
  2368  0275' 0811'              	movf	?___flmul+1,w
  2369  0276' 1683               	bsf	3,5	;RP0=1, select bank1
  2370  0277' 1303               	bcf	3,6	;RP1=0, select bank1
  2371  0278' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2372  0279' 1283               	bcf	3,5	;RP0=0, select bank0
  2373  027A' 1303               	bcf	3,6	;RP1=0, select bank0
  2374  027B' 0810'              	movf	?___flmul,w
  2375  027C' 1683               	bsf	3,5	;RP0=1, select bank1
  2376  027D' 1303               	bcf	3,6	;RP1=0, select bank1
  2377  027E' 0080'              	movwf	sprintf@tmpval^(0+128)
  2378  027F'                    l4907:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2381  027F' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2382  0280' 1283               	bcf	3,5	;RP0=0, select bank0
  2383  0281' 1303               	bcf	3,6	;RP1=0, select bank0
  2384  0282' 0083'              	movwf	___flge@ff1+3
  2385  0283' 1683               	bsf	3,5	;RP0=1, select bank1
  2386  0284' 1303               	bcf	3,6	;RP1=0, select bank1
  2387  0285' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2388  0286' 1283               	bcf	3,5	;RP0=0, select bank0
  2389  0287' 1303               	bcf	3,6	;RP1=0, select bank0
  2390  0288' 0082'              	movwf	___flge@ff1+2
  2391  0289' 1683               	bsf	3,5	;RP0=1, select bank1
  2392  028A' 1303               	bcf	3,6	;RP1=0, select bank1
  2393  028B' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2394  028C' 1283               	bcf	3,5	;RP0=0, select bank0
  2395  028D' 1303               	bcf	3,6	;RP1=0, select bank0
  2396  028E' 0081'              	movwf	___flge@ff1+1
  2397  028F' 1683               	bsf	3,5	;RP0=1, select bank1
  2398  0290' 1303               	bcf	3,6	;RP1=0, select bank1
  2399  0291' 0800'              	movf	sprintf@tmpval^(0+128),w
  2400  0292' 1283               	bcf	3,5	;RP0=0, select bank0
  2401  0293' 1303               	bcf	3,6	;RP1=0, select bank0
  2402  0294' 0080'              	movwf	___flge@ff1
  2403  0295' 303F               	movlw	63
  2404  0296' 0087'              	movwf	___flge@ff2+3
  2405  0297' 3080               	movlw	128
  2406  0298' 0086'              	movwf	___flge@ff2+2
  2407  0299' 3000               	movlw	0
  2408  029A' 0085'              	movwf	___flge@ff2+1
  2409  029B' 3000               	movlw	0
  2410  029C' 0084'              	movwf	___flge@ff2
  2411  029D' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2412  02A2' 1803               	btfsc	3,0
  2413  02A3' 2800'              	goto	u8351
  2414  02A4' 2800'              	goto	u8350
  2415  02A5'                    u8351:
  2416  02A5' 2800'              	goto	l4911
  2417  02A6'                    u8350:
  2418  02A6'                    l4909:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2421  02A6' 30FF               	movlw	255
  2422  02A7' 1683               	bsf	3,5	;RP0=1, select bank1
  2423  02A8' 1303               	bcf	3,6	;RP1=0, select bank1
  2424  02A9' 0780'              	addwf	sprintf@eexp^(0+128),f
  2425  02AA' 1803               	skipnc
  2426  02AB' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2427  02AC' 30FF               	movlw	255
  2428  02AD' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2429  02AE' 2800'              	goto	l4915
  2430  02AF'                    l4911:
  2431  02AF' 1683               	bsf	3,5	;RP0=1, select bank1
  2432  02B0' 1303               	bcf	3,6	;RP1=0, select bank1
  2433  02B1' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2434  02B2' 1283               	bcf	3,5	;RP0=0, select bank0
  2435  02B3' 1303               	bcf	3,6	;RP1=0, select bank0
  2436  02B4' 0083'              	movwf	___flge@ff1+3
  2437  02B5' 1683               	bsf	3,5	;RP0=1, select bank1
  2438  02B6' 1303               	bcf	3,6	;RP1=0, select bank1
  2439  02B7' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2440  02B8' 1283               	bcf	3,5	;RP0=0, select bank0
  2441  02B9' 1303               	bcf	3,6	;RP1=0, select bank0
  2442  02BA' 0082'              	movwf	___flge@ff1+2
  2443  02BB' 1683               	bsf	3,5	;RP0=1, select bank1
  2444  02BC' 1303               	bcf	3,6	;RP1=0, select bank1
  2445  02BD' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2446  02BE' 1283               	bcf	3,5	;RP0=0, select bank0
  2447  02BF' 1303               	bcf	3,6	;RP1=0, select bank0
  2448  02C0' 0081'              	movwf	___flge@ff1+1
  2449  02C1' 1683               	bsf	3,5	;RP0=1, select bank1
  2450  02C2' 1303               	bcf	3,6	;RP1=0, select bank1
  2451  02C3' 0800'              	movf	sprintf@tmpval^(0+128),w
  2452  02C4' 1283               	bcf	3,5	;RP0=0, select bank0
  2453  02C5' 1303               	bcf	3,6	;RP1=0, select bank0
  2454  02C6' 0080'              	movwf	___flge@ff1
  2455  02C7' 3041               	movlw	65
  2456  02C8' 0087'              	movwf	___flge@ff2+3
  2457  02C9' 3020               	movlw	32
  2458  02CA' 0086'              	movwf	___flge@ff2+2
  2459  02CB' 3000               	movlw	0
  2460  02CC' 0085'              	movwf	___flge@ff2+1
  2461  02CD' 3000               	movlw	0
  2462  02CE' 0084'              	movwf	___flge@ff2
  2463  02CF' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2464  02D4' 1C03               	btfss	3,0
  2465  02D5' 2800'              	goto	u8361
  2466  02D6' 2800'              	goto	u8360
  2467  02D7'                    u8361:
  2468  02D7' 2800'              	goto	l4915
  2469  02D8'                    u8360:
  2470  02D8'                    l4913:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2473  02D8' 3001               	movlw	1
  2474  02D9' 1683               	bsf	3,5	;RP0=1, select bank1
  2475  02DA' 1303               	bcf	3,6	;RP1=0, select bank1
  2476  02DB' 0780'              	addwf	sprintf@eexp^(0+128),f
  2477  02DC' 1803               	skipnc
  2478  02DD' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2479  02DE' 3000               	movlw	0
  2480  02DF' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2481  02E0'                    l4915:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2484  02E0' 1683               	bsf	3,5	;RP0=1, select bank1
  2485  02E1' 1303               	bcf	3,6	;RP1=0, select bank1
  2486  02E2' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2487  02E3' 3A80               	xorlw	128
  2488  02E4' 00FF               	movwf	btemp+1
  2489  02E5' 3080               	movlw	128
  2490  02E6' 027F               	subwf	btemp+1,w
  2491  02E7' 1D03               	skipz
  2492  02E8' 2800'              	goto	u8375
  2493  02E9' 300D               	movlw	13
  2494  02EA' 0200'              	subwf	sprintf@prec^(0+128),w
  2495  02EB'                    u8375:
  2496  02EB' 1803               	skipnc
  2497  02EC' 2800'              	goto	u8371
  2498  02ED' 2800'              	goto	u8370
  2499  02EE'                    u8371:
  2500  02EE' 2800'              	goto	l4919
  2501  02EF'                    u8370:
  2502  02EF'                    l4917:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2505  02EF' 1683               	bsf	3,5	;RP0=1, select bank1
  2506  02F0' 1303               	bcf	3,6	;RP1=0, select bank1
  2507  02F1' 0800'              	movf	sprintf@prec^(0+128),w
  2508  02F2' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2509  02F7' 1283               	bcf	3,5	;RP0=0, select bank0
  2510  02F8' 1303               	bcf	3,6	;RP1=0, select bank0
  2511  02F9' 082D'              	movf	?_fround+3,w
  2512  02FA' 00C1'              	movwf	___fladd@b+3
  2513  02FB' 082C'              	movf	?_fround+2,w
  2514  02FC' 00C0'              	movwf	___fladd@b+2
  2515  02FD' 082B'              	movf	?_fround+1,w
  2516  02FE' 00BF'              	movwf	___fladd@b+1
  2517  02FF' 082A'              	movf	?_fround,w
  2518  0300' 00BE'              	movwf	___fladd@b
  2519  0301' 1683               	bsf	3,5	;RP0=1, select bank1
  2520  0302' 1303               	bcf	3,6	;RP1=0, select bank1
  2521  0303' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2522  0304' 1283               	bcf	3,5	;RP0=0, select bank0
  2523  0305' 1303               	bcf	3,6	;RP1=0, select bank0
  2524  0306' 00C5'              	movwf	___fladd@a+3
  2525  0307' 1683               	bsf	3,5	;RP0=1, select bank1
  2526  0308' 1303               	bcf	3,6	;RP1=0, select bank1
  2527  0309' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2528  030A' 1283               	bcf	3,5	;RP0=0, select bank0
  2529  030B' 1303               	bcf	3,6	;RP1=0, select bank0
  2530  030C' 00C4'              	movwf	___fladd@a+2
  2531  030D' 1683               	bsf	3,5	;RP0=1, select bank1
  2532  030E' 1303               	bcf	3,6	;RP1=0, select bank1
  2533  030F' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2534  0310' 1283               	bcf	3,5	;RP0=0, select bank0
  2535  0311' 1303               	bcf	3,6	;RP1=0, select bank0
  2536  0312' 00C3'              	movwf	___fladd@a+1
  2537  0313' 1683               	bsf	3,5	;RP0=1, select bank1
  2538  0314' 1303               	bcf	3,6	;RP1=0, select bank1
  2539  0315' 0800'              	movf	sprintf@fval^(0+128),w
  2540  0316' 1283               	bcf	3,5	;RP0=0, select bank0
  2541  0317' 1303               	bcf	3,6	;RP1=0, select bank0
  2542  0318' 00C2'              	movwf	___fladd@a
  2543  0319' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2544  031E' 1283               	bcf	3,5	;RP0=0, select bank0
  2545  031F' 1303               	bcf	3,6	;RP1=0, select bank0
  2546  0320' 0841'              	movf	?___fladd+3,w
  2547  0321' 1683               	bsf	3,5	;RP0=1, select bank1
  2548  0322' 1303               	bcf	3,6	;RP1=0, select bank1
  2549  0323' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2550  0324' 1283               	bcf	3,5	;RP0=0, select bank0
  2551  0325' 1303               	bcf	3,6	;RP1=0, select bank0
  2552  0326' 0840'              	movf	?___fladd+2,w
  2553  0327' 1683               	bsf	3,5	;RP0=1, select bank1
  2554  0328' 1303               	bcf	3,6	;RP1=0, select bank1
  2555  0329' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2556  032A' 1283               	bcf	3,5	;RP0=0, select bank0
  2557  032B' 1303               	bcf	3,6	;RP1=0, select bank0
  2558  032C' 083F'              	movf	?___fladd+1,w
  2559  032D' 1683               	bsf	3,5	;RP0=1, select bank1
  2560  032E' 1303               	bcf	3,6	;RP1=0, select bank1
  2561  032F' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2562  0330' 1283               	bcf	3,5	;RP0=0, select bank0
  2563  0331' 1303               	bcf	3,6	;RP1=0, select bank0
  2564  0332' 083E'              	movf	?___fladd,w
  2565  0333' 1683               	bsf	3,5	;RP0=1, select bank1
  2566  0334' 1303               	bcf	3,6	;RP1=0, select bank1
  2567  0335' 0080'              	movwf	sprintf@fval^(0+128)
  2568  0336'                    l4919:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2571  0336' 1683               	bsf	3,5	;RP0=1, select bank1
  2572  0337' 1303               	bcf	3,6	;RP1=0, select bank1
  2573  0338' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2574  0339' 3A80               	xorlw	128
  2575  033A' 00FF               	movwf	btemp+1
  2576  033B' 3080               	movlw	128
  2577  033C' 027F               	subwf	btemp+1,w
  2578  033D' 1D03               	skipz
  2579  033E' 2800'              	goto	u8385
  2580  033F' 300A               	movlw	10
  2581  0340' 0200'              	subwf	sprintf@eexp^(0+128),w
  2582  0341'                    u8385:
  2583  0341' 1803               	skipnc
  2584  0342' 2800'              	goto	u8381
  2585  0343' 120A' 118A' 2800'  	goto	u8380
  2586  0346'                    u8381:
  2587  0346' 120A' 118A' 2800'  	goto	l4927
  2588  0349'                    L3:
  2589  0349'                    L2:
  2590  0349' 120A' 118A' 2800'  	ljmp	l5077
  2591                           
  2592                           	psect	text2
  2593  0000'                    __ptext2:	
  2594 ;; *************** function _scale *****************
  2595 ;; Defined at:
  2596 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  scl             1    wreg     char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  scl             1   60[BANK0 ] char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  4   42[BANK0 ] char 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       4       0       0       0
  2611 ;;      Locals:         0       5       0       0       0
  2612 ;;      Temps:          0      10       0       0       0
  2613 ;;      Totals:         0      19       0       0       0
  2614 ;;Total ram usage:       19 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    4
  2617 ;; This function calls:
  2618 ;;		___awdiv
  2619 ;;		___awmod
  2620 ;;		___flmul
  2621 ;; This function is called by:
  2622 ;;		_sprintf
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _scale
  2628  0000'                    _scale:
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2632                           ;scale@scl stored from wreg
  2633  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2634  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2635  0002' 00BC'              	movwf	scale@scl
  2636  0003'                    l4423:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2639  0003' 1FBC'              	btfss	scale@scl,7
  2640  0004' 2800'              	goto	u7311
  2641  0005' 2800'              	goto	u7310
  2642  0006'                    u7311:
  2643  0006' 2800'              	goto	l4445
  2644  0007'                    u7310:
  2645  0007'                    l4425:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2648  0007' 09BC'              	comf	scale@scl,f
  2649  0008' 0ABC'              	incf	scale@scl,f
  2650  0009'                    l4427:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2653  0009' 083C'              	movf	scale@scl,w
  2654  000A' 3A80               	xorlw	128
  2655  000B' 3E12               	addlw	-238
  2656  000C' 1C03               	skipc
  2657  000D' 2800'              	goto	u7321
  2658  000E' 2800'              	goto	u7320
  2659  000F'                    u7321:
  2660  000F' 2800'              	goto	l4435
  2661  0010'                    u7320:
  2662  0010'                    l4429:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2665  0010' 300A               	movlw	10
  2666  0011' 0087'              	movwf	___awdiv@divisor
  2667  0012' 3000               	movlw	0
  2668  0013' 0088'              	movwf	___awdiv@divisor+1
  2669  0014' 083C'              	movf	scale@scl,w
  2670  0015' 0082'              	movwf	___awmod@dividend
  2671  0016' 0183'              	clrf	___awmod@dividend+1
  2672  0017' 1B82'              	btfsc	___awmod@dividend,7
  2673  0018' 0383'              	decf	___awmod@dividend+1,f
  2674  0019' 3064               	movlw	100
  2675  001A' 0080'              	movwf	___awmod@divisor
  2676  001B' 3000               	movlw	0
  2677  001C' 0081'              	movwf	___awmod@divisor+1
  2678  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2679  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  2680  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  2681  0024' 0801'              	movf	?___awmod+1,w
  2682  0025' 008A'              	movwf	___awdiv@dividend+1
  2683  0026' 0800'              	movf	?___awmod,w
  2684  0027' 0089'              	movwf	___awdiv@dividend
  2685  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2686  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  2687  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  2688  002F' 0807'              	movf	?___awdiv,w
  2689  0030' 00AE'              	movwf	??_scale
  2690  0031' 3001               	movlw	1
  2691  0032'                    u7335:
  2692  0032' 1003               	clrc
  2693  0033' 0DAE'              	rlf	??_scale,f
  2694  0034' 3EFF               	addlw	-1
  2695  0035' 1D03               	skipz
  2696  0036' 2800'              	goto	u7335
  2697  0037' 1003               	clrc
  2698  0038' 0D2E'              	rlf	??_scale,w
  2699  0039' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2700  003A' 0084               	movwf	4
  2701  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2702  0040' 00AF'              	movwf	??_scale+1
  2703  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2704  0046' 00B0'              	movwf	??_scale+2
  2705  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2706  004C' 00B1'              	movwf	??_scale+3
  2707  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2708  0052' 00B2'              	movwf	??_scale+4
  2709  0053' 0832'              	movf	??_scale+4,w
  2710  0054' 0093'              	movwf	___flmul@b+3
  2711  0055' 0831'              	movf	??_scale+3,w
  2712  0056' 0092'              	movwf	___flmul@b+2
  2713  0057' 0830'              	movf	??_scale+2,w
  2714  0058' 0091'              	movwf	___flmul@b+1
  2715  0059' 082F'              	movf	??_scale+1,w
  2716  005A' 0090'              	movwf	___flmul@b
  2717  005B' 3064               	movlw	100
  2718  005C' 0087'              	movwf	___awdiv@divisor
  2719  005D' 3000               	movlw	0
  2720  005E' 0088'              	movwf	___awdiv@divisor+1
  2721  005F' 083C'              	movf	scale@scl,w
  2722  0060' 0089'              	movwf	___awdiv@dividend
  2723  0061' 018A'              	clrf	___awdiv@dividend+1
  2724  0062' 1B89'              	btfsc	___awdiv@dividend,7
  2725  0063' 038A'              	decf	___awdiv@dividend+1,f
  2726  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2727  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  2728  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  2729  006B' 0807'              	movf	?___awdiv,w
  2730  006C' 00B3'              	movwf	??_scale+5
  2731  006D' 3001               	movlw	1
  2732  006E'                    u7345:
  2733  006E' 1003               	clrc
  2734  006F' 0DB3'              	rlf	??_scale+5,f
  2735  0070' 3EFF               	addlw	-1
  2736  0071' 1D03               	skipz
  2737  0072' 2800'              	goto	u7345
  2738  0073' 1003               	clrc
  2739  0074' 0D33'              	rlf	??_scale+5,w
  2740  0075' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2741  0076' 0084               	movwf	4
  2742  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2743  007C' 00B4'              	movwf	??_scale+6
  2744  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2745  0082' 00B5'              	movwf	??_scale+7
  2746  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2747  0088' 00B6'              	movwf	??_scale+8
  2748  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2749  008E' 00B7'              	movwf	??_scale+9
  2750  008F' 0837'              	movf	??_scale+9,w
  2751  0090' 0097'              	movwf	___flmul@a+3
  2752  0091' 0836'              	movf	??_scale+8,w
  2753  0092' 0096'              	movwf	___flmul@a+2
  2754  0093' 0835'              	movf	??_scale+7,w
  2755  0094' 0095'              	movwf	___flmul@a+1
  2756  0095' 0834'              	movf	??_scale+6,w
  2757  0096' 0094'              	movwf	___flmul@a
  2758  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2759  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  2760  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  2761  009E' 0813'              	movf	?___flmul+3,w
  2762  009F' 00BB'              	movwf	_scale$1105+3
  2763  00A0' 0812'              	movf	?___flmul+2,w
  2764  00A1' 00BA'              	movwf	_scale$1105+2
  2765  00A2' 0811'              	movf	?___flmul+1,w
  2766  00A3' 00B9'              	movwf	_scale$1105+1
  2767  00A4' 0810'              	movf	?___flmul,w
  2768  00A5' 00B8'              	movwf	_scale$1105
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2771  00A6' 300A               	movlw	10
  2772  00A7' 0080'              	movwf	___awmod@divisor
  2773  00A8' 3000               	movlw	0
  2774  00A9' 0081'              	movwf	___awmod@divisor+1
  2775  00AA' 083C'              	movf	scale@scl,w
  2776  00AB' 0082'              	movwf	___awmod@dividend
  2777  00AC' 0183'              	clrf	___awmod@dividend+1
  2778  00AD' 1B82'              	btfsc	___awmod@dividend,7
  2779  00AE' 0383'              	decf	___awmod@dividend+1,f
  2780  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2781  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
  2782  00B5' 1303               	bcf	3,6	;RP1=0, select bank0
  2783  00B6' 0800'              	movf	?___awmod,w
  2784  00B7' 00AE'              	movwf	??_scale
  2785  00B8' 3001               	movlw	1
  2786  00B9'                    u7355:
  2787  00B9' 1003               	clrc
  2788  00BA' 0DAE'              	rlf	??_scale,f
  2789  00BB' 3EFF               	addlw	-1
  2790  00BC' 1D03               	skipz
  2791  00BD' 2800'              	goto	u7355
  2792  00BE' 1003               	clrc
  2793  00BF' 0D2E'              	rlf	??_scale,w
  2794  00C0' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2795  00C1' 0084               	movwf	4
  2796  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2797  00C7' 00AF'              	movwf	??_scale+1
  2798  00C8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2799  00CD' 00B0'              	movwf	??_scale+2
  2800  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2801  00D3' 00B1'              	movwf	??_scale+3
  2802  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2803  00D9' 00B2'              	movwf	??_scale+4
  2804  00DA' 0832'              	movf	??_scale+4,w
  2805  00DB' 0093'              	movwf	___flmul@b+3
  2806  00DC' 0831'              	movf	??_scale+3,w
  2807  00DD' 0092'              	movwf	___flmul@b+2
  2808  00DE' 0830'              	movf	??_scale+2,w
  2809  00DF' 0091'              	movwf	___flmul@b+1
  2810  00E0' 082F'              	movf	??_scale+1,w
  2811  00E1' 0090'              	movwf	___flmul@b
  2812  00E2' 083B'              	movf	_scale$1105+3,w
  2813  00E3' 0097'              	movwf	___flmul@a+3
  2814  00E4' 083A'              	movf	_scale$1105+2,w
  2815  00E5' 0096'              	movwf	___flmul@a+2
  2816  00E6' 0839'              	movf	_scale$1105+1,w
  2817  00E7' 0095'              	movwf	___flmul@a+1
  2818  00E8' 0838'              	movf	_scale$1105,w
  2819  00E9' 0094'              	movwf	___flmul@a
  2820  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2821  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  2822  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  2823  00F1' 0813'              	movf	?___flmul+3,w
  2824  00F2' 00AD'              	movwf	?_scale+3
  2825  00F3' 0812'              	movf	?___flmul+2,w
  2826  00F4' 00AC'              	movwf	?_scale+2
  2827  00F5' 0811'              	movf	?___flmul+1,w
  2828  00F6' 00AB'              	movwf	?_scale+1
  2829  00F7' 0810'              	movf	?___flmul,w
  2830  00F8' 00AA'              	movwf	?_scale
  2831  00F9' 2800'              	goto	l319
  2832  00FA'                    l4435:
  2833  00FA' 083C'              	movf	scale@scl,w
  2834  00FB' 3A80               	xorlw	128
  2835  00FC' 3E75               	addlw	-139
  2836  00FD' 1C03               	skipc
  2837  00FE' 2800'              	goto	u7361
  2838  00FF' 2800'              	goto	u7360
  2839  0100'                    u7361:
  2840  0100' 2800'              	goto	l4441
  2841  0101'                    u7360:
  2842  0101'                    l4437:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2845  0101' 300A               	movlw	10
  2846  0102' 0080'              	movwf	___awmod@divisor
  2847  0103' 3000               	movlw	0
  2848  0104' 0081'              	movwf	___awmod@divisor+1
  2849  0105' 083C'              	movf	scale@scl,w
  2850  0106' 0082'              	movwf	___awmod@dividend
  2851  0107' 0183'              	clrf	___awmod@dividend+1
  2852  0108' 1B82'              	btfsc	___awmod@dividend,7
  2853  0109' 0383'              	decf	___awmod@dividend+1,f
  2854  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2855  010F' 1283               	bcf	3,5	;RP0=0, select bank0
  2856  0110' 1303               	bcf	3,6	;RP1=0, select bank0
  2857  0111' 0800'              	movf	?___awmod,w
  2858  0112' 00AE'              	movwf	??_scale
  2859  0113' 3001               	movlw	1
  2860  0114'                    u7375:
  2861  0114' 1003               	clrc
  2862  0115' 0DAE'              	rlf	??_scale,f
  2863  0116' 3EFF               	addlw	-1
  2864  0117' 1D03               	skipz
  2865  0118' 2800'              	goto	u7375
  2866  0119' 1003               	clrc
  2867  011A' 0D2E'              	rlf	??_scale,w
  2868  011B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2869  011C' 0084               	movwf	4
  2870  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2871  0122' 00AF'              	movwf	??_scale+1
  2872  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2873  0128' 00B0'              	movwf	??_scale+2
  2874  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2875  012E' 00B1'              	movwf	??_scale+3
  2876  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2877  0134' 00B2'              	movwf	??_scale+4
  2878  0135' 0832'              	movf	??_scale+4,w
  2879  0136' 0093'              	movwf	___flmul@b+3
  2880  0137' 0831'              	movf	??_scale+3,w
  2881  0138' 0092'              	movwf	___flmul@b+2
  2882  0139' 0830'              	movf	??_scale+2,w
  2883  013A' 0091'              	movwf	___flmul@b+1
  2884  013B' 082F'              	movf	??_scale+1,w
  2885  013C' 0090'              	movwf	___flmul@b
  2886  013D' 300A               	movlw	10
  2887  013E' 0087'              	movwf	___awdiv@divisor
  2888  013F' 3000               	movlw	0
  2889  0140' 0088'              	movwf	___awdiv@divisor+1
  2890  0141' 083C'              	movf	scale@scl,w
  2891  0142' 0089'              	movwf	___awdiv@dividend
  2892  0143' 018A'              	clrf	___awdiv@dividend+1
  2893  0144' 1B89'              	btfsc	___awdiv@dividend,7
  2894  0145' 038A'              	decf	___awdiv@dividend+1,f
  2895  0146' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2896  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  2897  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  2898  014D' 0807'              	movf	?___awdiv,w
  2899  014E' 00B3'              	movwf	??_scale+5
  2900  014F' 3001               	movlw	1
  2901  0150'                    u7385:
  2902  0150' 1003               	clrc
  2903  0151' 0DB3'              	rlf	??_scale+5,f
  2904  0152' 3EFF               	addlw	-1
  2905  0153' 1D03               	skipz
  2906  0154' 2800'              	goto	u7385
  2907  0155' 1003               	clrc
  2908  0156' 0D33'              	rlf	??_scale+5,w
  2909  0157' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2910  0158' 0084               	movwf	4
  2911  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2912  015E' 00B4'              	movwf	??_scale+6
  2913  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2914  0164' 00B5'              	movwf	??_scale+7
  2915  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2916  016A' 00B6'              	movwf	??_scale+8
  2917  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2918  0170' 00B7'              	movwf	??_scale+9
  2919  0171' 0837'              	movf	??_scale+9,w
  2920  0172' 0097'              	movwf	___flmul@a+3
  2921  0173' 0836'              	movf	??_scale+8,w
  2922  0174' 0096'              	movwf	___flmul@a+2
  2923  0175' 0835'              	movf	??_scale+7,w
  2924  0176' 0095'              	movwf	___flmul@a+1
  2925  0177' 0834'              	movf	??_scale+6,w
  2926  0178' 0094'              	movwf	___flmul@a
  2927  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2928  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  2929  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  2930  0180' 0813'              	movf	?___flmul+3,w
  2931  0181' 00AD'              	movwf	?_scale+3
  2932  0182' 0812'              	movf	?___flmul+2,w
  2933  0183' 00AC'              	movwf	?_scale+2
  2934  0184' 0811'              	movf	?___flmul+1,w
  2935  0185' 00AB'              	movwf	?_scale+1
  2936  0186' 0810'              	movf	?___flmul,w
  2937  0187' 00AA'              	movwf	?_scale
  2938  0188' 2800'              	goto	l319
  2939  0189'                    l4441:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2942  0189' 083C'              	movf	scale@scl,w
  2943  018A' 00AE'              	movwf	??_scale
  2944  018B' 3001               	movlw	1
  2945  018C'                    u7395:
  2946  018C' 1003               	clrc
  2947  018D' 0DAE'              	rlf	??_scale,f
  2948  018E' 3EFF               	addlw	-1
  2949  018F' 1D03               	skipz
  2950  0190' 2800'              	goto	u7395
  2951  0191' 1003               	clrc
  2952  0192' 0D2E'              	rlf	??_scale,w
  2953  0193' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2954  0194' 0084               	movwf	4
  2955  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2956  019A' 00AF'              	movwf	??_scale+1
  2957  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2958  01A0' 00B0'              	movwf	??_scale+2
  2959  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2960  01A6' 00B1'              	movwf	??_scale+3
  2961  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2962  01AC' 00B2'              	movwf	??_scale+4
  2963  01AD' 0832'              	movf	??_scale+4,w
  2964  01AE' 00AD'              	movwf	?_scale+3
  2965  01AF' 0831'              	movf	??_scale+3,w
  2966  01B0' 00AC'              	movwf	?_scale+2
  2967  01B1' 0830'              	movf	??_scale+2,w
  2968  01B2' 00AB'              	movwf	?_scale+1
  2969  01B3' 082F'              	movf	??_scale+1,w
  2970  01B4' 00AA'              	movwf	?_scale
  2971  01B5' 2800'              	goto	l319
  2972  01B6'                    l4445:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2975  01B6' 083C'              	movf	scale@scl,w
  2976  01B7' 3A80               	xorlw	128
  2977  01B8' 3E12               	addlw	-238
  2978  01B9' 1C03               	skipc
  2979  01BA' 2800'              	goto	u7401
  2980  01BB' 2800'              	goto	u7400
  2981  01BC'                    u7401:
  2982  01BC' 2800'              	goto	l4453
  2983  01BD'                    u7400:
  2984  01BD'                    l4447:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2987  01BD' 300A               	movlw	10
  2988  01BE' 0087'              	movwf	___awdiv@divisor
  2989  01BF' 3000               	movlw	0
  2990  01C0' 0088'              	movwf	___awdiv@divisor+1
  2991  01C1' 083C'              	movf	scale@scl,w
  2992  01C2' 0082'              	movwf	___awmod@dividend
  2993  01C3' 0183'              	clrf	___awmod@dividend+1
  2994  01C4' 1B82'              	btfsc	___awmod@dividend,7
  2995  01C5' 0383'              	decf	___awmod@dividend+1,f
  2996  01C6' 3064               	movlw	100
  2997  01C7' 0080'              	movwf	___awmod@divisor
  2998  01C8' 3000               	movlw	0
  2999  01C9' 0081'              	movwf	___awmod@divisor+1
  3000  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3001  01CF' 1283               	bcf	3,5	;RP0=0, select bank0
  3002  01D0' 1303               	bcf	3,6	;RP1=0, select bank0
  3003  01D1' 0801'              	movf	?___awmod+1,w
  3004  01D2' 008A'              	movwf	___awdiv@dividend+1
  3005  01D3' 0800'              	movf	?___awmod,w
  3006  01D4' 0089'              	movwf	___awdiv@dividend
  3007  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3008  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  3009  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  3010  01DC' 0807'              	movf	?___awdiv,w
  3011  01DD' 00AE'              	movwf	??_scale
  3012  01DE' 3001               	movlw	1
  3013  01DF'                    u7415:
  3014  01DF' 1003               	clrc
  3015  01E0' 0DAE'              	rlf	??_scale,f
  3016  01E1' 3EFF               	addlw	-1
  3017  01E2' 1D03               	skipz
  3018  01E3' 2800'              	goto	u7415
  3019  01E4' 1003               	clrc
  3020  01E5' 0D2E'              	rlf	??_scale,w
  3021  01E6' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3022  01E7' 0084               	movwf	4
  3023  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3024  01ED' 00AF'              	movwf	??_scale+1
  3025  01EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3026  01F3' 00B0'              	movwf	??_scale+2
  3027  01F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3028  01F9' 00B1'              	movwf	??_scale+3
  3029  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3030  01FF' 00B2'              	movwf	??_scale+4
  3031  0200' 0832'              	movf	??_scale+4,w
  3032  0201' 0093'              	movwf	___flmul@b+3
  3033  0202' 0831'              	movf	??_scale+3,w
  3034  0203' 0092'              	movwf	___flmul@b+2
  3035  0204' 0830'              	movf	??_scale+2,w
  3036  0205' 0091'              	movwf	___flmul@b+1
  3037  0206' 082F'              	movf	??_scale+1,w
  3038  0207' 0090'              	movwf	___flmul@b
  3039  0208' 3064               	movlw	100
  3040  0209' 0087'              	movwf	___awdiv@divisor
  3041  020A' 3000               	movlw	0
  3042  020B' 0088'              	movwf	___awdiv@divisor+1
  3043  020C' 083C'              	movf	scale@scl,w
  3044  020D' 0089'              	movwf	___awdiv@dividend
  3045  020E' 018A'              	clrf	___awdiv@dividend+1
  3046  020F' 1B89'              	btfsc	___awdiv@dividend,7
  3047  0210' 038A'              	decf	___awdiv@dividend+1,f
  3048  0211' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3049  0216' 1283               	bcf	3,5	;RP0=0, select bank0
  3050  0217' 1303               	bcf	3,6	;RP1=0, select bank0
  3051  0218' 0807'              	movf	?___awdiv,w
  3052  0219' 00B3'              	movwf	??_scale+5
  3053  021A' 3001               	movlw	1
  3054  021B'                    u7425:
  3055  021B' 1003               	clrc
  3056  021C' 0DB3'              	rlf	??_scale+5,f
  3057  021D' 3EFF               	addlw	-1
  3058  021E' 1D03               	skipz
  3059  021F' 2800'              	goto	u7425
  3060  0220' 1003               	clrc
  3061  0221' 0D33'              	rlf	??_scale+5,w
  3062  0222' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3063  0223' 0084               	movwf	4
  3064  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3065  0229' 00B4'              	movwf	??_scale+6
  3066  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3067  022F' 00B5'              	movwf	??_scale+7
  3068  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3069  0235' 00B6'              	movwf	??_scale+8
  3070  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3071  023B' 00B7'              	movwf	??_scale+9
  3072  023C' 0837'              	movf	??_scale+9,w
  3073  023D' 0097'              	movwf	___flmul@a+3
  3074  023E' 0836'              	movf	??_scale+8,w
  3075  023F' 0096'              	movwf	___flmul@a+2
  3076  0240' 0835'              	movf	??_scale+7,w
  3077  0241' 0095'              	movwf	___flmul@a+1
  3078  0242' 0834'              	movf	??_scale+6,w
  3079  0243' 0094'              	movwf	___flmul@a
  3080  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3081  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  3082  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  3083  024B' 0813'              	movf	?___flmul+3,w
  3084  024C' 00BB'              	movwf	_scale$1105+3
  3085  024D' 0812'              	movf	?___flmul+2,w
  3086  024E' 00BA'              	movwf	_scale$1105+2
  3087  024F' 0811'              	movf	?___flmul+1,w
  3088  0250' 00B9'              	movwf	_scale$1105+1
  3089  0251' 0810'              	movf	?___flmul,w
  3090  0252' 00B8'              	movwf	_scale$1105
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3093  0253' 300A               	movlw	10
  3094  0254' 0080'              	movwf	___awmod@divisor
  3095  0255' 3000               	movlw	0
  3096  0256' 0081'              	movwf	___awmod@divisor+1
  3097  0257' 083C'              	movf	scale@scl,w
  3098  0258' 0082'              	movwf	___awmod@dividend
  3099  0259' 0183'              	clrf	___awmod@dividend+1
  3100  025A' 1B82'              	btfsc	___awmod@dividend,7
  3101  025B' 0383'              	decf	___awmod@dividend+1,f
  3102  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3103  0261' 1283               	bcf	3,5	;RP0=0, select bank0
  3104  0262' 1303               	bcf	3,6	;RP1=0, select bank0
  3105  0263' 0800'              	movf	?___awmod,w
  3106  0264' 00AE'              	movwf	??_scale
  3107  0265' 3001               	movlw	1
  3108  0266'                    u7435:
  3109  0266' 1003               	clrc
  3110  0267' 0DAE'              	rlf	??_scale,f
  3111  0268' 3EFF               	addlw	-1
  3112  0269' 1D03               	skipz
  3113  026A' 2800'              	goto	u7435
  3114  026B' 1003               	clrc
  3115  026C' 0D2E'              	rlf	??_scale,w
  3116  026D' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3117  026E' 0084               	movwf	4
  3118  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3119  0274' 00AF'              	movwf	??_scale+1
  3120  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3121  027A' 00B0'              	movwf	??_scale+2
  3122  027B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3123  0280' 00B1'              	movwf	??_scale+3
  3124  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3125  0286' 00B2'              	movwf	??_scale+4
  3126  0287' 0832'              	movf	??_scale+4,w
  3127  0288' 0093'              	movwf	___flmul@b+3
  3128  0289' 0831'              	movf	??_scale+3,w
  3129  028A' 0092'              	movwf	___flmul@b+2
  3130  028B' 0830'              	movf	??_scale+2,w
  3131  028C' 0091'              	movwf	___flmul@b+1
  3132  028D' 082F'              	movf	??_scale+1,w
  3133  028E' 0090'              	movwf	___flmul@b
  3134  028F' 083B'              	movf	_scale$1105+3,w
  3135  0290' 0097'              	movwf	___flmul@a+3
  3136  0291' 083A'              	movf	_scale$1105+2,w
  3137  0292' 0096'              	movwf	___flmul@a+2
  3138  0293' 0839'              	movf	_scale$1105+1,w
  3139  0294' 0095'              	movwf	___flmul@a+1
  3140  0295' 0838'              	movf	_scale$1105,w
  3141  0296' 0094'              	movwf	___flmul@a
  3142  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3143  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  3144  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  3145  029E' 0813'              	movf	?___flmul+3,w
  3146  029F' 00AD'              	movwf	?_scale+3
  3147  02A0' 0812'              	movf	?___flmul+2,w
  3148  02A1' 00AC'              	movwf	?_scale+2
  3149  02A2' 0811'              	movf	?___flmul+1,w
  3150  02A3' 00AB'              	movwf	?_scale+1
  3151  02A4' 0810'              	movf	?___flmul,w
  3152  02A5' 00AA'              	movwf	?_scale
  3153  02A6' 2800'              	goto	l319
  3154  02A7'                    l4453:
  3155  02A7' 083C'              	movf	scale@scl,w
  3156  02A8' 3A80               	xorlw	128
  3157  02A9' 3E75               	addlw	-139
  3158  02AA' 1C03               	skipc
  3159  02AB' 2800'              	goto	u7441
  3160  02AC' 2800'              	goto	u7440
  3161  02AD'                    u7441:
  3162  02AD' 2800'              	goto	l4459
  3163  02AE'                    u7440:
  3164  02AE'                    l4455:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3167  02AE' 300A               	movlw	10
  3168  02AF' 0080'              	movwf	___awmod@divisor
  3169  02B0' 3000               	movlw	0
  3170  02B1' 0081'              	movwf	___awmod@divisor+1
  3171  02B2' 083C'              	movf	scale@scl,w
  3172  02B3' 0082'              	movwf	___awmod@dividend
  3173  02B4' 0183'              	clrf	___awmod@dividend+1
  3174  02B5' 1B82'              	btfsc	___awmod@dividend,7
  3175  02B6' 0383'              	decf	___awmod@dividend+1,f
  3176  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3177  02BC' 1283               	bcf	3,5	;RP0=0, select bank0
  3178  02BD' 1303               	bcf	3,6	;RP1=0, select bank0
  3179  02BE' 0800'              	movf	?___awmod,w
  3180  02BF' 00AE'              	movwf	??_scale
  3181  02C0' 3001               	movlw	1
  3182  02C1'                    u7455:
  3183  02C1' 1003               	clrc
  3184  02C2' 0DAE'              	rlf	??_scale,f
  3185  02C3' 3EFF               	addlw	-1
  3186  02C4' 1D03               	skipz
  3187  02C5' 2800'              	goto	u7455
  3188  02C6' 1003               	clrc
  3189  02C7' 0D2E'              	rlf	??_scale,w
  3190  02C8' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3191  02C9' 0084               	movwf	4
  3192  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3193  02CF' 00AF'              	movwf	??_scale+1
  3194  02D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3195  02D5' 00B0'              	movwf	??_scale+2
  3196  02D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3197  02DB' 00B1'              	movwf	??_scale+3
  3198  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3199  02E1' 00B2'              	movwf	??_scale+4
  3200  02E2' 0832'              	movf	??_scale+4,w
  3201  02E3' 0093'              	movwf	___flmul@b+3
  3202  02E4' 0831'              	movf	??_scale+3,w
  3203  02E5' 0092'              	movwf	___flmul@b+2
  3204  02E6' 0830'              	movf	??_scale+2,w
  3205  02E7' 0091'              	movwf	___flmul@b+1
  3206  02E8' 082F'              	movf	??_scale+1,w
  3207  02E9' 0090'              	movwf	___flmul@b
  3208  02EA' 300A               	movlw	10
  3209  02EB' 0087'              	movwf	___awdiv@divisor
  3210  02EC' 3000               	movlw	0
  3211  02ED' 0088'              	movwf	___awdiv@divisor+1
  3212  02EE' 083C'              	movf	scale@scl,w
  3213  02EF' 0089'              	movwf	___awdiv@dividend
  3214  02F0' 018A'              	clrf	___awdiv@dividend+1
  3215  02F1' 1B89'              	btfsc	___awdiv@dividend,7
  3216  02F2' 038A'              	decf	___awdiv@dividend+1,f
  3217  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3218  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  3219  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  3220  02FA' 0807'              	movf	?___awdiv,w
  3221  02FB' 00B3'              	movwf	??_scale+5
  3222  02FC' 3001               	movlw	1
  3223  02FD'                    u7465:
  3224  02FD' 1003               	clrc
  3225  02FE' 0DB3'              	rlf	??_scale+5,f
  3226  02FF' 3EFF               	addlw	-1
  3227  0300' 1D03               	skipz
  3228  0301' 2800'              	goto	u7465
  3229  0302' 1003               	clrc
  3230  0303' 0D33'              	rlf	??_scale+5,w
  3231  0304' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3232  0305' 0084               	movwf	4
  3233  0306' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3234  030B' 00B4'              	movwf	??_scale+6
  3235  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3236  0311' 00B5'              	movwf	??_scale+7
  3237  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3238  0317' 00B6'              	movwf	??_scale+8
  3239  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3240  031D' 00B7'              	movwf	??_scale+9
  3241  031E' 0837'              	movf	??_scale+9,w
  3242  031F' 0097'              	movwf	___flmul@a+3
  3243  0320' 0836'              	movf	??_scale+8,w
  3244  0321' 0096'              	movwf	___flmul@a+2
  3245  0322' 0835'              	movf	??_scale+7,w
  3246  0323' 0095'              	movwf	___flmul@a+1
  3247  0324' 0834'              	movf	??_scale+6,w
  3248  0325' 0094'              	movwf	___flmul@a
  3249  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3250  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  3251  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  3252  032D' 0813'              	movf	?___flmul+3,w
  3253  032E' 00AD'              	movwf	?_scale+3
  3254  032F' 0812'              	movf	?___flmul+2,w
  3255  0330' 00AC'              	movwf	?_scale+2
  3256  0331' 0811'              	movf	?___flmul+1,w
  3257  0332' 00AB'              	movwf	?_scale+1
  3258  0333' 0810'              	movf	?___flmul,w
  3259  0334' 00AA'              	movwf	?_scale
  3260  0335' 2800'              	goto	l319
  3261  0336'                    l4459:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3264  0336' 083C'              	movf	scale@scl,w
  3265  0337' 00AE'              	movwf	??_scale
  3266  0338' 3001               	movlw	1
  3267  0339'                    u7475:
  3268  0339' 1003               	clrc
  3269  033A' 0DAE'              	rlf	??_scale,f
  3270  033B' 3EFF               	addlw	-1
  3271  033C' 1D03               	skipz
  3272  033D' 2800'              	goto	u7475
  3273  033E' 1003               	clrc
  3274  033F' 0D2E'              	rlf	??_scale,w
  3275  0340' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3276  0341' 0084               	movwf	4
  3277  0342' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3278  0347' 00AF'              	movwf	??_scale+1
  3279  0348' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3280  034D' 00B0'              	movwf	??_scale+2
  3281  034E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3282  0353' 00B1'              	movwf	??_scale+3
  3283  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3284  0359' 00B2'              	movwf	??_scale+4
  3285  035A' 0832'              	movf	??_scale+4,w
  3286  035B' 00AD'              	movwf	?_scale+3
  3287  035C' 0831'              	movf	??_scale+3,w
  3288  035D' 00AC'              	movwf	?_scale+2
  3289  035E' 0830'              	movf	??_scale+2,w
  3290  035F' 00AB'              	movwf	?_scale+1
  3291  0360' 082F'              	movf	??_scale+1,w
  3292  0361' 00AA'              	movwf	?_scale
  3293  0362'                    l319:
  3294  0362' 0008               	return
  3295  0363'                    __end_of_scale:
  3296                           
  3297                           	psect	text3
  3298  0000'                    __ptext3:	
  3299 ;; *************** function ___awmod *****************
  3300 ;; Defined at:
  3301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  divisor         2    0[BANK0 ] int 
  3304 ;;  dividend        2    2[BANK0 ] int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  sign            1    6[BANK0 ] unsigned char 
  3307 ;;  counter         1    5[BANK0 ] unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  2    0[BANK0 ] int 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       4       0       0       0
  3318 ;;      Locals:         0       2       0       0       0
  3319 ;;      Temps:          0       1       0       0       0
  3320 ;;      Totals:         0       7       0       0       0
  3321 ;;Total ram usage:        7 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    2
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_scale
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           
  3332                           ;psect for function ___awmod
  3333  0000'                    ___awmod:
  3334  0000'                    l3977:	
  3335                           ;incstack = 0
  3336                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3337                           
  3338  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3339  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3340  0002' 0186'              	clrf	___awmod@sign
  3341  0003'                    l3979:
  3342  0003' 1F83'              	btfss	___awmod@dividend+1,7
  3343  0004' 2800'              	goto	u6251
  3344  0005' 2800'              	goto	u6250
  3345  0006'                    u6251:
  3346  0006' 2800'              	goto	l3985
  3347  0007'                    u6250:
  3348  0007'                    l3981:
  3349  0007' 0982'              	comf	___awmod@dividend,f
  3350  0008' 0983'              	comf	___awmod@dividend+1,f
  3351  0009' 0A82'              	incf	___awmod@dividend,f
  3352  000A' 1903               	skipnz
  3353  000B' 0A83'              	incf	___awmod@dividend+1,f
  3354  000C'                    l3983:
  3355  000C' 0186'              	clrf	___awmod@sign
  3356  000D' 0A86'              	incf	___awmod@sign,f
  3357  000E'                    l3985:
  3358  000E' 1F81'              	btfss	___awmod@divisor+1,7
  3359  000F' 2800'              	goto	u6261
  3360  0010' 2800'              	goto	u6260
  3361  0011'                    u6261:
  3362  0011' 2800'              	goto	l3989
  3363  0012'                    u6260:
  3364  0012'                    l3987:
  3365  0012' 0980'              	comf	___awmod@divisor,f
  3366  0013' 0981'              	comf	___awmod@divisor+1,f
  3367  0014' 0A80'              	incf	___awmod@divisor,f
  3368  0015' 1903               	skipnz
  3369  0016' 0A81'              	incf	___awmod@divisor+1,f
  3370  0017'                    l3989:
  3371  0017' 0800'              	movf	___awmod@divisor,w
  3372  0018' 0401'              	iorwf	___awmod@divisor+1,w
  3373  0019' 1903               	btfsc	3,2
  3374  001A' 2800'              	goto	u6271
  3375  001B' 2800'              	goto	u6270
  3376  001C'                    u6271:
  3377  001C' 2800'              	goto	l4007
  3378  001D'                    u6270:
  3379  001D'                    l3991:
  3380  001D' 0185'              	clrf	___awmod@counter
  3381  001E' 0A85'              	incf	___awmod@counter,f
  3382  001F' 2800'              	goto	l3997
  3383  0020'                    l3993:
  3384  0020' 3001               	movlw	1
  3385  0021'                    u6285:
  3386  0021' 1003               	clrc
  3387  0022' 0D80'              	rlf	___awmod@divisor,f
  3388  0023' 0D81'              	rlf	___awmod@divisor+1,f
  3389  0024' 3EFF               	addlw	-1
  3390  0025' 1D03               	skipz
  3391  0026' 2800'              	goto	u6285
  3392  0027'                    l3995:
  3393  0027' 3001               	movlw	1
  3394  0028' 0084'              	movwf	??___awmod
  3395  0029' 0804'              	movf	??___awmod,w
  3396  002A' 0785'              	addwf	___awmod@counter,f
  3397  002B'                    l3997:
  3398  002B' 1F81'              	btfss	___awmod@divisor+1,7
  3399  002C' 2800'              	goto	u6291
  3400  002D' 2800'              	goto	u6290
  3401  002E'                    u6291:
  3402  002E' 2800'              	goto	l3993
  3403  002F'                    u6290:
  3404  002F'                    l3999:
  3405  002F' 0801'              	movf	___awmod@divisor+1,w
  3406  0030' 0203'              	subwf	___awmod@dividend+1,w
  3407  0031' 1D03               	skipz
  3408  0032' 2800'              	goto	u6305
  3409  0033' 0800'              	movf	___awmod@divisor,w
  3410  0034' 0202'              	subwf	___awmod@dividend,w
  3411  0035'                    u6305:
  3412  0035' 1C03               	skipc
  3413  0036' 2800'              	goto	u6301
  3414  0037' 2800'              	goto	u6300
  3415  0038'                    u6301:
  3416  0038' 2800'              	goto	l4003
  3417  0039'                    u6300:
  3418  0039'                    l4001:
  3419  0039' 0800'              	movf	___awmod@divisor,w
  3420  003A' 0282'              	subwf	___awmod@dividend,f
  3421  003B' 0801'              	movf	___awmod@divisor+1,w
  3422  003C' 1C03               	skipc
  3423  003D' 0383'              	decf	___awmod@dividend+1,f
  3424  003E' 0283'              	subwf	___awmod@dividend+1,f
  3425  003F'                    l4003:
  3426  003F' 3001               	movlw	1
  3427  0040'                    u6315:
  3428  0040' 1003               	clrc
  3429  0041' 0C81'              	rrf	___awmod@divisor+1,f
  3430  0042' 0C80'              	rrf	___awmod@divisor,f
  3431  0043' 3EFF               	addlw	-1
  3432  0044' 1D03               	skipz
  3433  0045' 2800'              	goto	u6315
  3434  0046'                    l4005:
  3435  0046' 3001               	movlw	1
  3436  0047' 0285'              	subwf	___awmod@counter,f
  3437  0048' 1D03               	btfss	3,2
  3438  0049' 2800'              	goto	u6321
  3439  004A' 2800'              	goto	u6320
  3440  004B'                    u6321:
  3441  004B' 2800'              	goto	l3999
  3442  004C'                    u6320:
  3443  004C'                    l4007:
  3444  004C' 0806'              	movf	___awmod@sign,w
  3445  004D' 1903               	btfsc	3,2
  3446  004E' 2800'              	goto	u6331
  3447  004F' 2800'              	goto	u6330
  3448  0050'                    u6331:
  3449  0050' 2800'              	goto	l4011
  3450  0051'                    u6330:
  3451  0051'                    l4009:
  3452  0051' 0982'              	comf	___awmod@dividend,f
  3453  0052' 0983'              	comf	___awmod@dividend+1,f
  3454  0053' 0A82'              	incf	___awmod@dividend,f
  3455  0054' 1903               	skipnz
  3456  0055' 0A83'              	incf	___awmod@dividend+1,f
  3457  0056'                    l4011:
  3458  0056' 0803'              	movf	___awmod@dividend+1,w
  3459  0057' 0081'              	movwf	?___awmod+1
  3460  0058' 0802'              	movf	___awmod@dividend,w
  3461  0059' 0080'              	movwf	?___awmod
  3462  005A'                    l572:
  3463  005A' 0008               	return
  3464  005B'                    __end_of___awmod:
  3465                           
  3466                           	psect	text4
  3467  0000'                    __ptext4:	
  3468 ;; *************** function ___awdiv *****************
  3469 ;; Defined at:
  3470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  divisor         2    7[BANK0 ] int 
  3473 ;;  dividend        2    9[BANK0 ] int 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  quotient        2   14[BANK0 ] int 
  3476 ;;  sign            1   13[BANK0 ] unsigned char 
  3477 ;;  counter         1   12[BANK0 ] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  2    7[BANK0 ] int 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       4       0       0       0
  3488 ;;      Locals:         0       4       0       0       0
  3489 ;;      Temps:          0       1       0       0       0
  3490 ;;      Totals:         0       9       0       0       0
  3491 ;;Total ram usage:        9 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    2
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_scale
  3498 ;;		_sprintf
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           
  3503                           ;psect for function ___awdiv
  3504  0000'                    ___awdiv:
  3505  0000'                    l2495:	
  3506                           ;incstack = 0
  3507                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3508                           
  3509  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3510  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3511  0002' 018D'              	clrf	___awdiv@sign
  3512  0003'                    l2497:
  3513  0003' 1F88'              	btfss	___awdiv@divisor+1,7
  3514  0004' 2800'              	goto	u3161
  3515  0005' 2800'              	goto	u3160
  3516  0006'                    u3161:
  3517  0006' 2800'              	goto	l2503
  3518  0007'                    u3160:
  3519  0007'                    l2499:
  3520  0007' 0987'              	comf	___awdiv@divisor,f
  3521  0008' 0988'              	comf	___awdiv@divisor+1,f
  3522  0009' 0A87'              	incf	___awdiv@divisor,f
  3523  000A' 1903               	skipnz
  3524  000B' 0A88'              	incf	___awdiv@divisor+1,f
  3525  000C'                    l2501:
  3526  000C' 018D'              	clrf	___awdiv@sign
  3527  000D' 0A8D'              	incf	___awdiv@sign,f
  3528  000E'                    l2503:
  3529  000E' 1F8A'              	btfss	___awdiv@dividend+1,7
  3530  000F' 2800'              	goto	u3171
  3531  0010' 2800'              	goto	u3170
  3532  0011'                    u3171:
  3533  0011' 2800'              	goto	l2509
  3534  0012'                    u3170:
  3535  0012'                    l2505:
  3536  0012' 0989'              	comf	___awdiv@dividend,f
  3537  0013' 098A'              	comf	___awdiv@dividend+1,f
  3538  0014' 0A89'              	incf	___awdiv@dividend,f
  3539  0015' 1903               	skipnz
  3540  0016' 0A8A'              	incf	___awdiv@dividend+1,f
  3541  0017'                    l2507:
  3542  0017' 3001               	movlw	1
  3543  0018' 008B'              	movwf	??___awdiv
  3544  0019' 080B'              	movf	??___awdiv,w
  3545  001A' 068D'              	xorwf	___awdiv@sign,f
  3546  001B'                    l2509:
  3547  001B' 018E'              	clrf	___awdiv@quotient
  3548  001C' 018F'              	clrf	___awdiv@quotient+1
  3549  001D'                    l2511:
  3550  001D' 0807'              	movf	___awdiv@divisor,w
  3551  001E' 0408'              	iorwf	___awdiv@divisor+1,w
  3552  001F' 1903               	btfsc	3,2
  3553  0020' 2800'              	goto	u3181
  3554  0021' 2800'              	goto	u3180
  3555  0022'                    u3181:
  3556  0022' 2800'              	goto	l2531
  3557  0023'                    u3180:
  3558  0023'                    l2513:
  3559  0023' 018C'              	clrf	___awdiv@counter
  3560  0024' 0A8C'              	incf	___awdiv@counter,f
  3561  0025' 2800'              	goto	l2519
  3562  0026'                    l2515:
  3563  0026' 3001               	movlw	1
  3564  0027'                    u3195:
  3565  0027' 1003               	clrc
  3566  0028' 0D87'              	rlf	___awdiv@divisor,f
  3567  0029' 0D88'              	rlf	___awdiv@divisor+1,f
  3568  002A' 3EFF               	addlw	-1
  3569  002B' 1D03               	skipz
  3570  002C' 2800'              	goto	u3195
  3571  002D'                    l2517:
  3572  002D' 3001               	movlw	1
  3573  002E' 008B'              	movwf	??___awdiv
  3574  002F' 080B'              	movf	??___awdiv,w
  3575  0030' 078C'              	addwf	___awdiv@counter,f
  3576  0031'                    l2519:
  3577  0031' 1F88'              	btfss	___awdiv@divisor+1,7
  3578  0032' 2800'              	goto	u3201
  3579  0033' 2800'              	goto	u3200
  3580  0034'                    u3201:
  3581  0034' 2800'              	goto	l2515
  3582  0035'                    u3200:
  3583  0035'                    l2521:
  3584  0035' 3001               	movlw	1
  3585  0036'                    u3215:
  3586  0036' 1003               	clrc
  3587  0037' 0D8E'              	rlf	___awdiv@quotient,f
  3588  0038' 0D8F'              	rlf	___awdiv@quotient+1,f
  3589  0039' 3EFF               	addlw	-1
  3590  003A' 1D03               	skipz
  3591  003B' 2800'              	goto	u3215
  3592  003C' 0808'              	movf	___awdiv@divisor+1,w
  3593  003D' 020A'              	subwf	___awdiv@dividend+1,w
  3594  003E' 1D03               	skipz
  3595  003F' 2800'              	goto	u3225
  3596  0040' 0807'              	movf	___awdiv@divisor,w
  3597  0041' 0209'              	subwf	___awdiv@dividend,w
  3598  0042'                    u3225:
  3599  0042' 1C03               	skipc
  3600  0043' 2800'              	goto	u3221
  3601  0044' 2800'              	goto	u3220
  3602  0045'                    u3221:
  3603  0045' 2800'              	goto	l2527
  3604  0046'                    u3220:
  3605  0046'                    l2523:
  3606  0046' 0807'              	movf	___awdiv@divisor,w
  3607  0047' 0289'              	subwf	___awdiv@dividend,f
  3608  0048' 0808'              	movf	___awdiv@divisor+1,w
  3609  0049' 1C03               	skipc
  3610  004A' 038A'              	decf	___awdiv@dividend+1,f
  3611  004B' 028A'              	subwf	___awdiv@dividend+1,f
  3612  004C'                    l2525:
  3613  004C' 140E'              	bsf	___awdiv@quotient,0
  3614  004D'                    l2527:
  3615  004D' 3001               	movlw	1
  3616  004E'                    u3235:
  3617  004E' 1003               	clrc
  3618  004F' 0C88'              	rrf	___awdiv@divisor+1,f
  3619  0050' 0C87'              	rrf	___awdiv@divisor,f
  3620  0051' 3EFF               	addlw	-1
  3621  0052' 1D03               	skipz
  3622  0053' 2800'              	goto	u3235
  3623  0054'                    l2529:
  3624  0054' 3001               	movlw	1
  3625  0055' 028C'              	subwf	___awdiv@counter,f
  3626  0056' 1D03               	btfss	3,2
  3627  0057' 2800'              	goto	u3241
  3628  0058' 2800'              	goto	u3240
  3629  0059'                    u3241:
  3630  0059' 2800'              	goto	l2521
  3631  005A'                    u3240:
  3632  005A'                    l2531:
  3633  005A' 080D'              	movf	___awdiv@sign,w
  3634  005B' 1903               	btfsc	3,2
  3635  005C' 2800'              	goto	u3251
  3636  005D' 2800'              	goto	u3250
  3637  005E'                    u3251:
  3638  005E' 2800'              	goto	l2535
  3639  005F'                    u3250:
  3640  005F'                    l2533:
  3641  005F' 098E'              	comf	___awdiv@quotient,f
  3642  0060' 098F'              	comf	___awdiv@quotient+1,f
  3643  0061' 0A8E'              	incf	___awdiv@quotient,f
  3644  0062' 1903               	skipnz
  3645  0063' 0A8F'              	incf	___awdiv@quotient+1,f
  3646  0064'                    l2535:
  3647  0064' 080F'              	movf	___awdiv@quotient+1,w
  3648  0065' 0088'              	movwf	?___awdiv+1
  3649  0066' 080E'              	movf	___awdiv@quotient,w
  3650  0067' 0087'              	movwf	?___awdiv
  3651  0068'                    l559:
  3652  0068' 0008               	return
  3653  0069'                    __end_of___awdiv:
  3654                           
  3655                           	psect	text5
  3656  0000'                    __ptext5:	
  3657 ;; *************** function _isdigit *****************
  3658 ;; Defined at:
  3659 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  c               1    wreg     unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  c               1    1[BANK0 ] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       0       0       0       0
  3674 ;;      Locals:         0       2       0       0       0
  3675 ;;      Temps:          0       0       0       0       0
  3676 ;;      Totals:         0       2       0       0       0
  3677 ;;Total ram usage:        2 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    2
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_sprintf
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _isdigit
  3689  0000'                    _isdigit:
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3693                           ;isdigit@c stored from wreg
  3694  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3695  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3696  0002' 0081'              	movwf	isdigit@c
  3697  0003'                    l4463:
  3698  0003' 0180'              	clrf	_isdigit$911
  3699  0004'                    l4465:
  3700  0004' 303A               	movlw	58
  3701  0005' 0201'              	subwf	isdigit@c,w
  3702  0006' 1803               	skipnc
  3703  0007' 2800'              	goto	u7481
  3704  0008' 2800'              	goto	u7480
  3705  0009'                    u7481:
  3706  0009' 2800'              	goto	l4471
  3707  000A'                    u7480:
  3708  000A'                    l4467:
  3709  000A' 3030               	movlw	48
  3710  000B' 0201'              	subwf	isdigit@c,w
  3711  000C' 1C03               	skipc
  3712  000D' 2800'              	goto	u7491
  3713  000E' 2800'              	goto	u7490
  3714  000F'                    u7491:
  3715  000F' 2800'              	goto	l4471
  3716  0010'                    u7490:
  3717  0010'                    l4469:
  3718  0010' 0180'              	clrf	_isdigit$911
  3719  0011' 0A80'              	incf	_isdigit$911,f
  3720  0012'                    l4471:
  3721  0012' 0C00'              	rrf	_isdigit$911,w
  3722  0013'                    l893:
  3723  0013' 0008               	return
  3724  0014'                    __end_of_isdigit:
  3725                           
  3726                           	psect	text6
  3727  0000'                    __ptext6:	
  3728 ;; *************** function _fround *****************
  3729 ;; Defined at:
  3730 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  prec            1    wreg     unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  prec            1   61[BANK0 ] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  4   42[BANK0 ] unsigned char 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3744 ;;      Params:         0       4       0       0       0
  3745 ;;      Locals:         0       9       0       0       0
  3746 ;;      Temps:          0       7       0       0       0
  3747 ;;      Totals:         0      20       0       0       0
  3748 ;;Total ram usage:       20 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    4
  3751 ;; This function calls:
  3752 ;;		___flmul
  3753 ;;		___lwdiv
  3754 ;;		___lwmod
  3755 ;; This function is called by:
  3756 ;;		_sprintf
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function _fround
  3762  0000'                    _fround:
  3763                           
  3764                           ;incstack = 0
  3765                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3766                           ;fround@prec stored from wreg
  3767  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3768  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3769  0002' 00BD'              	movwf	fround@prec
  3770  0003'                    l4405:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3773  0003' 306E               	movlw	110
  3774  0004' 023D'              	subwf	fround@prec,w
  3775  0005' 1C03               	skipc
  3776  0006' 2800'              	goto	u7231
  3777  0007' 2800'              	goto	u7230
  3778  0008'                    u7231:
  3779  0008' 2800'              	goto	l4413
  3780  0009'                    u7230:
  3781  0009'                    l4407:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3784  0009' 303F               	movlw	63
  3785  000A' 0093'              	movwf	___flmul@b+3
  3786  000B' 3000               	movlw	0
  3787  000C' 0092'              	movwf	___flmul@b+2
  3788  000D' 3000               	movlw	0
  3789  000E' 0091'              	movwf	___flmul@b+1
  3790  000F' 3000               	movlw	0
  3791  0010' 0090'              	movwf	___flmul@b
  3792  0011' 3064               	movlw	100
  3793  0012' 0086'              	movwf	___lwdiv@divisor
  3794  0013' 3000               	movlw	0
  3795  0014' 0087'              	movwf	___lwdiv@divisor+1
  3796  0015' 083D'              	movf	fround@prec,w
  3797  0016' 00AE'              	movwf	??_fround
  3798  0017' 01AF'              	clrf	??_fround+1
  3799  0018' 082E'              	movf	??_fround,w
  3800  0019' 0088'              	movwf	___lwdiv@dividend
  3801  001A' 082F'              	movf	??_fround+1,w
  3802  001B' 0089'              	movwf	___lwdiv@dividend+1
  3803  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  3804  0021' 1283               	bcf	3,5	;RP0=0, select bank0
  3805  0022' 1303               	bcf	3,6	;RP1=0, select bank0
  3806  0023' 0806'              	movf	?___lwdiv,w
  3807  0024' 00B0'              	movwf	??_fround+2
  3808  0025' 3001               	movlw	1
  3809  0026'                    u7245:
  3810  0026' 1003               	clrc
  3811  0027' 0DB0'              	rlf	??_fround+2,f
  3812  0028' 3EFF               	addlw	-1
  3813  0029' 1D03               	skipz
  3814  002A' 2800'              	goto	u7245
  3815  002B' 1003               	clrc
  3816  002C' 0D30'              	rlf	??_fround+2,w
  3817  002D' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3818  002E' 0084               	movwf	4
  3819  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3820  0034' 00B1'              	movwf	??_fround+3
  3821  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3822  003A' 00B2'              	movwf	??_fround+4
  3823  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3824  0040' 00B3'              	movwf	??_fround+5
  3825  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3826  0046' 00B4'              	movwf	??_fround+6
  3827  0047' 0834'              	movf	??_fround+6,w
  3828  0048' 0097'              	movwf	___flmul@a+3
  3829  0049' 0833'              	movf	??_fround+5,w
  3830  004A' 0096'              	movwf	___flmul@a+2
  3831  004B' 0832'              	movf	??_fround+4,w
  3832  004C' 0095'              	movwf	___flmul@a+1
  3833  004D' 0831'              	movf	??_fround+3,w
  3834  004E' 0094'              	movwf	___flmul@a
  3835  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3836  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  3837  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  3838  0056' 0813'              	movf	?___flmul+3,w
  3839  0057' 00BC'              	movwf	_fround$1103+3
  3840  0058' 0812'              	movf	?___flmul+2,w
  3841  0059' 00BB'              	movwf	_fround$1103+2
  3842  005A' 0811'              	movf	?___flmul+1,w
  3843  005B' 00BA'              	movwf	_fround$1103+1
  3844  005C' 0810'              	movf	?___flmul,w
  3845  005D' 00B9'              	movwf	_fround$1103
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3848  005E' 300A               	movlw	10
  3849  005F' 0086'              	movwf	___lwdiv@divisor
  3850  0060' 3000               	movlw	0
  3851  0061' 0087'              	movwf	___lwdiv@divisor+1
  3852  0062' 083D'              	movf	fround@prec,w
  3853  0063' 00AE'              	movwf	??_fround
  3854  0064' 01AF'              	clrf	??_fround+1
  3855  0065' 082E'              	movf	??_fround,w
  3856  0066' 0082'              	movwf	___lwmod@dividend
  3857  0067' 082F'              	movf	??_fround+1,w
  3858  0068' 0083'              	movwf	___lwmod@dividend+1
  3859  0069' 3064               	movlw	100
  3860  006A' 0080'              	movwf	___lwmod@divisor
  3861  006B' 3000               	movlw	0
  3862  006C' 0081'              	movwf	___lwmod@divisor+1
  3863  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  3864  0072' 1283               	bcf	3,5	;RP0=0, select bank0
  3865  0073' 1303               	bcf	3,6	;RP1=0, select bank0
  3866  0074' 0801'              	movf	?___lwmod+1,w
  3867  0075' 0089'              	movwf	___lwdiv@dividend+1
  3868  0076' 0800'              	movf	?___lwmod,w
  3869  0077' 0088'              	movwf	___lwdiv@dividend
  3870  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  3871  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  3872  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  3873  007F' 0806'              	movf	?___lwdiv,w
  3874  0080' 00B0'              	movwf	??_fround+2
  3875  0081' 3001               	movlw	1
  3876  0082'                    u7255:
  3877  0082' 1003               	clrc
  3878  0083' 0DB0'              	rlf	??_fround+2,f
  3879  0084' 3EFF               	addlw	-1
  3880  0085' 1D03               	skipz
  3881  0086' 2800'              	goto	u7255
  3882  0087' 1003               	clrc
  3883  0088' 0D30'              	rlf	??_fround+2,w
  3884  0089' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3885  008A' 0084               	movwf	4
  3886  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3887  0090' 00B1'              	movwf	??_fround+3
  3888  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3889  0096' 00B2'              	movwf	??_fround+4
  3890  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3891  009C' 00B3'              	movwf	??_fround+5
  3892  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3893  00A2' 00B4'              	movwf	??_fround+6
  3894  00A3' 0834'              	movf	??_fround+6,w
  3895  00A4' 0093'              	movwf	___flmul@b+3
  3896  00A5' 0833'              	movf	??_fround+5,w
  3897  00A6' 0092'              	movwf	___flmul@b+2
  3898  00A7' 0832'              	movf	??_fround+4,w
  3899  00A8' 0091'              	movwf	___flmul@b+1
  3900  00A9' 0831'              	movf	??_fround+3,w
  3901  00AA' 0090'              	movwf	___flmul@b
  3902  00AB' 083C'              	movf	_fround$1103+3,w
  3903  00AC' 0097'              	movwf	___flmul@a+3
  3904  00AD' 083B'              	movf	_fround$1103+2,w
  3905  00AE' 0096'              	movwf	___flmul@a+2
  3906  00AF' 083A'              	movf	_fround$1103+1,w
  3907  00B0' 0095'              	movwf	___flmul@a+1
  3908  00B1' 0839'              	movf	_fround$1103,w
  3909  00B2' 0094'              	movwf	___flmul@a
  3910  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3911  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  3912  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  3913  00BA' 0813'              	movf	?___flmul+3,w
  3914  00BB' 00B8'              	movwf	_fround$1104+3
  3915  00BC' 0812'              	movf	?___flmul+2,w
  3916  00BD' 00B7'              	movwf	_fround$1104+2
  3917  00BE' 0811'              	movf	?___flmul+1,w
  3918  00BF' 00B6'              	movwf	_fround$1104+1
  3919  00C0' 0810'              	movf	?___flmul,w
  3920  00C1' 00B5'              	movwf	_fround$1104
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3923  00C2' 300A               	movlw	10
  3924  00C3' 0080'              	movwf	___lwmod@divisor
  3925  00C4' 3000               	movlw	0
  3926  00C5' 0081'              	movwf	___lwmod@divisor+1
  3927  00C6' 083D'              	movf	fround@prec,w
  3928  00C7' 00AE'              	movwf	??_fround
  3929  00C8' 01AF'              	clrf	??_fround+1
  3930  00C9' 082E'              	movf	??_fround,w
  3931  00CA' 0082'              	movwf	___lwmod@dividend
  3932  00CB' 082F'              	movf	??_fround+1,w
  3933  00CC' 0083'              	movwf	___lwmod@dividend+1
  3934  00CD' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  3935  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  3936  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  3937  00D4' 0800'              	movf	?___lwmod,w
  3938  00D5' 00B0'              	movwf	??_fround+2
  3939  00D6' 3001               	movlw	1
  3940  00D7'                    u7265:
  3941  00D7' 1003               	clrc
  3942  00D8' 0DB0'              	rlf	??_fround+2,f
  3943  00D9' 3EFF               	addlw	-1
  3944  00DA' 1D03               	skipz
  3945  00DB' 2800'              	goto	u7265
  3946  00DC' 1003               	clrc
  3947  00DD' 0D30'              	rlf	??_fround+2,w
  3948  00DE' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3949  00DF' 0084               	movwf	4
  3950  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3951  00E5' 00B1'              	movwf	??_fround+3
  3952  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3953  00EB' 00B2'              	movwf	??_fround+4
  3954  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3955  00F1' 00B3'              	movwf	??_fround+5
  3956  00F2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3957  00F7' 00B4'              	movwf	??_fround+6
  3958  00F8' 0834'              	movf	??_fround+6,w
  3959  00F9' 0093'              	movwf	___flmul@b+3
  3960  00FA' 0833'              	movf	??_fround+5,w
  3961  00FB' 0092'              	movwf	___flmul@b+2
  3962  00FC' 0832'              	movf	??_fround+4,w
  3963  00FD' 0091'              	movwf	___flmul@b+1
  3964  00FE' 0831'              	movf	??_fround+3,w
  3965  00FF' 0090'              	movwf	___flmul@b
  3966  0100' 0838'              	movf	_fround$1104+3,w
  3967  0101' 0097'              	movwf	___flmul@a+3
  3968  0102' 0837'              	movf	_fround$1104+2,w
  3969  0103' 0096'              	movwf	___flmul@a+2
  3970  0104' 0836'              	movf	_fround$1104+1,w
  3971  0105' 0095'              	movwf	___flmul@a+1
  3972  0106' 0835'              	movf	_fround$1104,w
  3973  0107' 0094'              	movwf	___flmul@a
  3974  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3975  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  3976  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  3977  010F' 0813'              	movf	?___flmul+3,w
  3978  0110' 00AD'              	movwf	?_fround+3
  3979  0111' 0812'              	movf	?___flmul+2,w
  3980  0112' 00AC'              	movwf	?_fround+2
  3981  0113' 0811'              	movf	?___flmul+1,w
  3982  0114' 00AB'              	movwf	?_fround+1
  3983  0115' 0810'              	movf	?___flmul,w
  3984  0116' 00AA'              	movwf	?_fround
  3985  0117' 2800'              	goto	l312
  3986  0118'                    l4413:
  3987  0118' 300B               	movlw	11
  3988  0119' 023D'              	subwf	fround@prec,w
  3989  011A' 1C03               	skipc
  3990  011B' 2800'              	goto	u7271
  3991  011C' 2800'              	goto	u7270
  3992  011D'                    u7271:
  3993  011D' 2800'              	goto	l4419
  3994  011E'                    u7270:
  3995  011E'                    l4415:
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3998  011E' 303F               	movlw	63
  3999  011F' 0093'              	movwf	___flmul@b+3
  4000  0120' 3000               	movlw	0
  4001  0121' 0092'              	movwf	___flmul@b+2
  4002  0122' 3000               	movlw	0
  4003  0123' 0091'              	movwf	___flmul@b+1
  4004  0124' 3000               	movlw	0
  4005  0125' 0090'              	movwf	___flmul@b
  4006  0126' 300A               	movlw	10
  4007  0127' 0086'              	movwf	___lwdiv@divisor
  4008  0128' 3000               	movlw	0
  4009  0129' 0087'              	movwf	___lwdiv@divisor+1
  4010  012A' 083D'              	movf	fround@prec,w
  4011  012B' 00AE'              	movwf	??_fround
  4012  012C' 01AF'              	clrf	??_fround+1
  4013  012D' 082E'              	movf	??_fround,w
  4014  012E' 0088'              	movwf	___lwdiv@dividend
  4015  012F' 082F'              	movf	??_fround+1,w
  4016  0130' 0089'              	movwf	___lwdiv@dividend+1
  4017  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4018  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  4019  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  4020  0138' 0806'              	movf	?___lwdiv,w
  4021  0139' 00B0'              	movwf	??_fround+2
  4022  013A' 3001               	movlw	1
  4023  013B'                    u7285:
  4024  013B' 1003               	clrc
  4025  013C' 0DB0'              	rlf	??_fround+2,f
  4026  013D' 3EFF               	addlw	-1
  4027  013E' 1D03               	skipz
  4028  013F' 2800'              	goto	u7285
  4029  0140' 1003               	clrc
  4030  0141' 0D30'              	rlf	??_fround+2,w
  4031  0142' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4032  0143' 0084               	movwf	4
  4033  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4034  0149' 00B1'              	movwf	??_fround+3
  4035  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4036  014F' 00B2'              	movwf	??_fround+4
  4037  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4038  0155' 00B3'              	movwf	??_fround+5
  4039  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4040  015B' 00B4'              	movwf	??_fround+6
  4041  015C' 0834'              	movf	??_fround+6,w
  4042  015D' 0097'              	movwf	___flmul@a+3
  4043  015E' 0833'              	movf	??_fround+5,w
  4044  015F' 0096'              	movwf	___flmul@a+2
  4045  0160' 0832'              	movf	??_fround+4,w
  4046  0161' 0095'              	movwf	___flmul@a+1
  4047  0162' 0831'              	movf	??_fround+3,w
  4048  0163' 0094'              	movwf	___flmul@a
  4049  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4050  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  4051  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  4052  016B' 0813'              	movf	?___flmul+3,w
  4053  016C' 00BC'              	movwf	_fround$1103+3
  4054  016D' 0812'              	movf	?___flmul+2,w
  4055  016E' 00BB'              	movwf	_fround$1103+2
  4056  016F' 0811'              	movf	?___flmul+1,w
  4057  0170' 00BA'              	movwf	_fround$1103+1
  4058  0171' 0810'              	movf	?___flmul,w
  4059  0172' 00B9'              	movwf	_fround$1103
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4062  0173' 300A               	movlw	10
  4063  0174' 0080'              	movwf	___lwmod@divisor
  4064  0175' 3000               	movlw	0
  4065  0176' 0081'              	movwf	___lwmod@divisor+1
  4066  0177' 083D'              	movf	fround@prec,w
  4067  0178' 00AE'              	movwf	??_fround
  4068  0179' 01AF'              	clrf	??_fround+1
  4069  017A' 082E'              	movf	??_fround,w
  4070  017B' 0082'              	movwf	___lwmod@dividend
  4071  017C' 082F'              	movf	??_fround+1,w
  4072  017D' 0083'              	movwf	___lwmod@dividend+1
  4073  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4074  0183' 1283               	bcf	3,5	;RP0=0, select bank0
  4075  0184' 1303               	bcf	3,6	;RP1=0, select bank0
  4076  0185' 0800'              	movf	?___lwmod,w
  4077  0186' 00B0'              	movwf	??_fround+2
  4078  0187' 3001               	movlw	1
  4079  0188'                    u7295:
  4080  0188' 1003               	clrc
  4081  0189' 0DB0'              	rlf	??_fround+2,f
  4082  018A' 3EFF               	addlw	-1
  4083  018B' 1D03               	skipz
  4084  018C' 2800'              	goto	u7295
  4085  018D' 1003               	clrc
  4086  018E' 0D30'              	rlf	??_fround+2,w
  4087  018F' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4088  0190' 0084               	movwf	4
  4089  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4090  0196' 00B1'              	movwf	??_fround+3
  4091  0197' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4092  019C' 00B2'              	movwf	??_fround+4
  4093  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4094  01A2' 00B3'              	movwf	??_fround+5
  4095  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4096  01A8' 00B4'              	movwf	??_fround+6
  4097  01A9' 0834'              	movf	??_fround+6,w
  4098  01AA' 0093'              	movwf	___flmul@b+3
  4099  01AB' 0833'              	movf	??_fround+5,w
  4100  01AC' 0092'              	movwf	___flmul@b+2
  4101  01AD' 0832'              	movf	??_fround+4,w
  4102  01AE' 0091'              	movwf	___flmul@b+1
  4103  01AF' 0831'              	movf	??_fround+3,w
  4104  01B0' 0090'              	movwf	___flmul@b
  4105  01B1' 083C'              	movf	_fround$1103+3,w
  4106  01B2' 0097'              	movwf	___flmul@a+3
  4107  01B3' 083B'              	movf	_fround$1103+2,w
  4108  01B4' 0096'              	movwf	___flmul@a+2
  4109  01B5' 083A'              	movf	_fround$1103+1,w
  4110  01B6' 0095'              	movwf	___flmul@a+1
  4111  01B7' 0839'              	movf	_fround$1103,w
  4112  01B8' 0094'              	movwf	___flmul@a
  4113  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4114  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  4115  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  4116  01C0' 0813'              	movf	?___flmul+3,w
  4117  01C1' 00AD'              	movwf	?_fround+3
  4118  01C2' 0812'              	movf	?___flmul+2,w
  4119  01C3' 00AC'              	movwf	?_fround+2
  4120  01C4' 0811'              	movf	?___flmul+1,w
  4121  01C5' 00AB'              	movwf	?_fround+1
  4122  01C6' 0810'              	movf	?___flmul,w
  4123  01C7' 00AA'              	movwf	?_fround
  4124  01C8' 2800'              	goto	l312
  4125  01C9'                    l4419:
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4128  01C9' 303F               	movlw	63
  4129  01CA' 0093'              	movwf	___flmul@b+3
  4130  01CB' 3000               	movlw	0
  4131  01CC' 0092'              	movwf	___flmul@b+2
  4132  01CD' 3000               	movlw	0
  4133  01CE' 0091'              	movwf	___flmul@b+1
  4134  01CF' 3000               	movlw	0
  4135  01D0' 0090'              	movwf	___flmul@b
  4136  01D1' 083D'              	movf	fround@prec,w
  4137  01D2' 00AE'              	movwf	??_fround
  4138  01D3' 3001               	movlw	1
  4139  01D4'                    u7305:
  4140  01D4' 1003               	clrc
  4141  01D5' 0DAE'              	rlf	??_fround,f
  4142  01D6' 3EFF               	addlw	-1
  4143  01D7' 1D03               	skipz
  4144  01D8' 2800'              	goto	u7305
  4145  01D9' 1003               	clrc
  4146  01DA' 0D2E'              	rlf	??_fround,w
  4147  01DB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4148  01DC' 0084               	movwf	4
  4149  01DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4150  01E2' 00AF'              	movwf	??_fround+1
  4151  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4152  01E8' 00B0'              	movwf	??_fround+2
  4153  01E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4154  01EE' 00B1'              	movwf	??_fround+3
  4155  01EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4156  01F4' 00B2'              	movwf	??_fround+4
  4157  01F5' 0832'              	movf	??_fround+4,w
  4158  01F6' 0097'              	movwf	___flmul@a+3
  4159  01F7' 0831'              	movf	??_fround+3,w
  4160  01F8' 0096'              	movwf	___flmul@a+2
  4161  01F9' 0830'              	movf	??_fround+2,w
  4162  01FA' 0095'              	movwf	___flmul@a+1
  4163  01FB' 082F'              	movf	??_fround+1,w
  4164  01FC' 0094'              	movwf	___flmul@a
  4165  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4166  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  4167  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  4168  0204' 0813'              	movf	?___flmul+3,w
  4169  0205' 00AD'              	movwf	?_fround+3
  4170  0206' 0812'              	movf	?___flmul+2,w
  4171  0207' 00AC'              	movwf	?_fround+2
  4172  0208' 0811'              	movf	?___flmul+1,w
  4173  0209' 00AB'              	movwf	?_fround+1
  4174  020A' 0810'              	movf	?___flmul,w
  4175  020B' 00AA'              	movwf	?_fround
  4176  020C'                    l312:
  4177  020C' 0008               	return
  4178  020D'                    __end_of_fround:
  4179                           
  4180                           	psect	text7
  4181  0000'                    __ptext7:	
  4182 ;; *************** function ___lwmod *****************
  4183 ;; Defined at:
  4184 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  divisor         2    0[BANK0 ] unsigned int 
  4187 ;;  dividend        2    2[BANK0 ] unsigned int 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  counter         1    5[BANK0 ] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2    0[BANK0 ] unsigned int 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4199 ;;      Params:         0       4       0       0       0
  4200 ;;      Locals:         0       1       0       0       0
  4201 ;;      Temps:          0       1       0       0       0
  4202 ;;      Totals:         0       6       0       0       0
  4203 ;;Total ram usage:        6 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    2
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_fround
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function ___lwmod
  4215  0000'                    ___lwmod:
  4216  0000'                    l4015:	
  4217                           ;incstack = 0
  4218                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4219                           
  4220  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4221  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4222  0002' 0800'              	movf	___lwmod@divisor,w
  4223  0003' 0401'              	iorwf	___lwmod@divisor+1,w
  4224  0004' 1903               	btfsc	3,2
  4225  0005' 2800'              	goto	u6341
  4226  0006' 2800'              	goto	u6340
  4227  0007'                    u6341:
  4228  0007' 2800'              	goto	l4033
  4229  0008'                    u6340:
  4230  0008'                    l4017:
  4231  0008' 0185'              	clrf	___lwmod@counter
  4232  0009' 0A85'              	incf	___lwmod@counter,f
  4233  000A' 2800'              	goto	l4023
  4234  000B'                    l4019:
  4235  000B' 3001               	movlw	1
  4236  000C'                    u6355:
  4237  000C' 1003               	clrc
  4238  000D' 0D80'              	rlf	___lwmod@divisor,f
  4239  000E' 0D81'              	rlf	___lwmod@divisor+1,f
  4240  000F' 3EFF               	addlw	-1
  4241  0010' 1D03               	skipz
  4242  0011' 2800'              	goto	u6355
  4243  0012'                    l4021:
  4244  0012' 3001               	movlw	1
  4245  0013' 0084'              	movwf	??___lwmod
  4246  0014' 0804'              	movf	??___lwmod,w
  4247  0015' 0785'              	addwf	___lwmod@counter,f
  4248  0016'                    l4023:
  4249  0016' 1F81'              	btfss	___lwmod@divisor+1,7
  4250  0017' 2800'              	goto	u6361
  4251  0018' 2800'              	goto	u6360
  4252  0019'                    u6361:
  4253  0019' 2800'              	goto	l4019
  4254  001A'                    u6360:
  4255  001A'                    l4025:
  4256  001A' 0801'              	movf	___lwmod@divisor+1,w
  4257  001B' 0203'              	subwf	___lwmod@dividend+1,w
  4258  001C' 1D03               	skipz
  4259  001D' 2800'              	goto	u6375
  4260  001E' 0800'              	movf	___lwmod@divisor,w
  4261  001F' 0202'              	subwf	___lwmod@dividend,w
  4262  0020'                    u6375:
  4263  0020' 1C03               	skipc
  4264  0021' 2800'              	goto	u6371
  4265  0022' 2800'              	goto	u6370
  4266  0023'                    u6371:
  4267  0023' 2800'              	goto	l4029
  4268  0024'                    u6370:
  4269  0024'                    l4027:
  4270  0024' 0800'              	movf	___lwmod@divisor,w
  4271  0025' 0282'              	subwf	___lwmod@dividend,f
  4272  0026' 0801'              	movf	___lwmod@divisor+1,w
  4273  0027' 1C03               	skipc
  4274  0028' 0383'              	decf	___lwmod@dividend+1,f
  4275  0029' 0283'              	subwf	___lwmod@dividend+1,f
  4276  002A'                    l4029:
  4277  002A' 3001               	movlw	1
  4278  002B'                    u6385:
  4279  002B' 1003               	clrc
  4280  002C' 0C81'              	rrf	___lwmod@divisor+1,f
  4281  002D' 0C80'              	rrf	___lwmod@divisor,f
  4282  002E' 3EFF               	addlw	-1
  4283  002F' 1D03               	skipz
  4284  0030' 2800'              	goto	u6385
  4285  0031'                    l4031:
  4286  0031' 3001               	movlw	1
  4287  0032' 0285'              	subwf	___lwmod@counter,f
  4288  0033' 1D03               	btfss	3,2
  4289  0034' 2800'              	goto	u6391
  4290  0035' 2800'              	goto	u6390
  4291  0036'                    u6391:
  4292  0036' 2800'              	goto	l4025
  4293  0037'                    u6390:
  4294  0037'                    l4033:
  4295  0037' 0803'              	movf	___lwmod@dividend+1,w
  4296  0038' 0081'              	movwf	?___lwmod+1
  4297  0039' 0802'              	movf	___lwmod@dividend,w
  4298  003A' 0080'              	movwf	?___lwmod
  4299  003B'                    l722:
  4300  003B' 0008               	return
  4301  003C'                    __end_of___lwmod:
  4302                           
  4303                           	psect	text8
  4304  0000'                    __ptext8:	
  4305 ;; *************** function ___lwdiv *****************
  4306 ;; Defined at:
  4307 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  divisor         2    6[BANK0 ] unsigned int 
  4310 ;;  dividend        2    8[BANK0 ] unsigned int 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  quotient        2   11[BANK0 ] unsigned int 
  4313 ;;  counter         1   13[BANK0 ] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  2    6[BANK0 ] unsigned int 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       4       0       0       0
  4324 ;;      Locals:         0       3       0       0       0
  4325 ;;      Temps:          0       1       0       0       0
  4326 ;;      Totals:         0       8       0       0       0
  4327 ;;Total ram usage:        8 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    2
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_fround
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function ___lwdiv
  4339  0000'                    ___lwdiv:
  4340  0000'                    l2577:	
  4341                           ;incstack = 0
  4342                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4343                           
  4344  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4345  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4346  0002' 018B'              	clrf	___lwdiv@quotient
  4347  0003' 018C'              	clrf	___lwdiv@quotient+1
  4348  0004'                    l2579:
  4349  0004' 0806'              	movf	___lwdiv@divisor,w
  4350  0005' 0407'              	iorwf	___lwdiv@divisor+1,w
  4351  0006' 1903               	btfsc	3,2
  4352  0007' 2800'              	goto	u3351
  4353  0008' 2800'              	goto	u3350
  4354  0009'                    u3351:
  4355  0009' 2800'              	goto	l2599
  4356  000A'                    u3350:
  4357  000A'                    l2581:
  4358  000A' 018D'              	clrf	___lwdiv@counter
  4359  000B' 0A8D'              	incf	___lwdiv@counter,f
  4360  000C' 2800'              	goto	l2587
  4361  000D'                    l2583:
  4362  000D' 3001               	movlw	1
  4363  000E'                    u3365:
  4364  000E' 1003               	clrc
  4365  000F' 0D86'              	rlf	___lwdiv@divisor,f
  4366  0010' 0D87'              	rlf	___lwdiv@divisor+1,f
  4367  0011' 3EFF               	addlw	-1
  4368  0012' 1D03               	skipz
  4369  0013' 2800'              	goto	u3365
  4370  0014'                    l2585:
  4371  0014' 3001               	movlw	1
  4372  0015' 008A'              	movwf	??___lwdiv
  4373  0016' 080A'              	movf	??___lwdiv,w
  4374  0017' 078D'              	addwf	___lwdiv@counter,f
  4375  0018'                    l2587:
  4376  0018' 1F87'              	btfss	___lwdiv@divisor+1,7
  4377  0019' 2800'              	goto	u3371
  4378  001A' 2800'              	goto	u3370
  4379  001B'                    u3371:
  4380  001B' 2800'              	goto	l2583
  4381  001C'                    u3370:
  4382  001C'                    l2589:
  4383  001C' 3001               	movlw	1
  4384  001D'                    u3385:
  4385  001D' 1003               	clrc
  4386  001E' 0D8B'              	rlf	___lwdiv@quotient,f
  4387  001F' 0D8C'              	rlf	___lwdiv@quotient+1,f
  4388  0020' 3EFF               	addlw	-1
  4389  0021' 1D03               	skipz
  4390  0022' 2800'              	goto	u3385
  4391  0023' 0807'              	movf	___lwdiv@divisor+1,w
  4392  0024' 0209'              	subwf	___lwdiv@dividend+1,w
  4393  0025' 1D03               	skipz
  4394  0026' 2800'              	goto	u3395
  4395  0027' 0806'              	movf	___lwdiv@divisor,w
  4396  0028' 0208'              	subwf	___lwdiv@dividend,w
  4397  0029'                    u3395:
  4398  0029' 1C03               	skipc
  4399  002A' 2800'              	goto	u3391
  4400  002B' 2800'              	goto	u3390
  4401  002C'                    u3391:
  4402  002C' 2800'              	goto	l2595
  4403  002D'                    u3390:
  4404  002D'                    l2591:
  4405  002D' 0806'              	movf	___lwdiv@divisor,w
  4406  002E' 0288'              	subwf	___lwdiv@dividend,f
  4407  002F' 0807'              	movf	___lwdiv@divisor+1,w
  4408  0030' 1C03               	skipc
  4409  0031' 0389'              	decf	___lwdiv@dividend+1,f
  4410  0032' 0289'              	subwf	___lwdiv@dividend+1,f
  4411  0033'                    l2593:
  4412  0033' 140B'              	bsf	___lwdiv@quotient,0
  4413  0034'                    l2595:
  4414  0034' 3001               	movlw	1
  4415  0035'                    u3405:
  4416  0035' 1003               	clrc
  4417  0036' 0C87'              	rrf	___lwdiv@divisor+1,f
  4418  0037' 0C86'              	rrf	___lwdiv@divisor,f
  4419  0038' 3EFF               	addlw	-1
  4420  0039' 1D03               	skipz
  4421  003A' 2800'              	goto	u3405
  4422  003B'                    l2597:
  4423  003B' 3001               	movlw	1
  4424  003C' 028D'              	subwf	___lwdiv@counter,f
  4425  003D' 1D03               	btfss	3,2
  4426  003E' 2800'              	goto	u3411
  4427  003F' 2800'              	goto	u3410
  4428  0040'                    u3411:
  4429  0040' 2800'              	goto	l2589
  4430  0041'                    u3410:
  4431  0041'                    l2599:
  4432  0041' 080C'              	movf	___lwdiv@quotient+1,w
  4433  0042' 0087'              	movwf	?___lwdiv+1
  4434  0043' 080B'              	movf	___lwdiv@quotient,w
  4435  0044' 0086'              	movwf	?___lwdiv
  4436  0045'                    l712:
  4437  0045' 0008               	return
  4438  0046'                    __end_of___lwdiv:
  4439                           
  4440                           	psect	text9
  4441  0000'                    __ptext9:	
  4442 ;; *************** function __tdiv_to_l_ *****************
  4443 ;; Defined at:
  4444 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  f1              4    0[BANK0 ] float 
  4447 ;;  f2              4    4[BANK0 ] float 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  quot            4   12[BANK0 ] unsigned long 
  4450 ;;  exp1            1   17[BANK0 ] unsigned char 
  4451 ;;  cntr            1   16[BANK0 ] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  4    0[BANK0 ] unsigned long 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       8       0       0       0
  4462 ;;      Locals:         0       6       0       0       0
  4463 ;;      Temps:          0       4       0       0       0
  4464 ;;      Totals:         0      18       0       0       0
  4465 ;;Total ram usage:       18 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    2
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_sprintf
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function __tdiv_to_l_
  4477  0000'                    __tdiv_to_l_:
  4478  0000'                    l4475:	
  4479                           ;incstack = 0
  4480                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4481                           
  4482  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4483  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4484  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  4485  0003' 0088'              	movwf	??__tdiv_to_l_
  4486  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  4487  0005' 0089'              	movwf	??__tdiv_to_l_+1
  4488  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  4489  0007' 008A'              	movwf	??__tdiv_to_l_+2
  4490  0008' 1003               	clrc
  4491  0009' 0D09'              	rlf	??__tdiv_to_l_+1,w
  4492  000A' 0D0A'              	rlf	??__tdiv_to_l_+2,w
  4493  000B' 008B'              	movwf	??__tdiv_to_l_+3
  4494  000C' 080B'              	movf	??__tdiv_to_l_+3,w
  4495  000D' 0091'              	movwf	__tdiv_to_l_@exp1
  4496  000E' 0811'              	movf	__tdiv_to_l_@exp1,w
  4497  000F' 1D03               	btfss	3,2
  4498  0010' 2800'              	goto	u7501
  4499  0011' 2800'              	goto	u7500
  4500  0012'                    u7501:
  4501  0012' 2800'              	goto	l4481
  4502  0013'                    u7500:
  4503  0013'                    l4477:
  4504  0013' 3000               	movlw	0
  4505  0014' 0083'              	movwf	?__tdiv_to_l_+3
  4506  0015' 3000               	movlw	0
  4507  0016' 0082'              	movwf	?__tdiv_to_l_+2
  4508  0017' 3000               	movlw	0
  4509  0018' 0081'              	movwf	?__tdiv_to_l_+1
  4510  0019' 3000               	movlw	0
  4511  001A' 0080'              	movwf	?__tdiv_to_l_
  4512  001B' 2800'              	goto	l623
  4513  001C'                    l4481:
  4514  001C' 0804'              	movf	__tdiv_to_l_@f2,w
  4515  001D' 0088'              	movwf	??__tdiv_to_l_
  4516  001E' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4517  001F' 0089'              	movwf	??__tdiv_to_l_+1
  4518  0020' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4519  0021' 008A'              	movwf	??__tdiv_to_l_+2
  4520  0022' 1003               	clrc
  4521  0023' 0D09'              	rlf	??__tdiv_to_l_+1,w
  4522  0024' 0D0A'              	rlf	??__tdiv_to_l_+2,w
  4523  0025' 008B'              	movwf	??__tdiv_to_l_+3
  4524  0026' 080B'              	movf	??__tdiv_to_l_+3,w
  4525  0027' 0090'              	movwf	__tdiv_to_l_@cntr
  4526  0028' 0810'              	movf	__tdiv_to_l_@cntr,w
  4527  0029' 1D03               	btfss	3,2
  4528  002A' 2800'              	goto	u7511
  4529  002B' 2800'              	goto	u7510
  4530  002C'                    u7511:
  4531  002C' 2800'              	goto	l624
  4532  002D'                    u7510:
  4533  002D' 2800'              	goto	l4477
  4534  002E'                    l624:
  4535  002E' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  4536  002F'                    l4487:
  4537  002F' 30FF               	movlw	255
  4538  0030' 0580'              	andwf	__tdiv_to_l_@f1,f
  4539  0031' 30FF               	movlw	255
  4540  0032' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  4541  0033' 3000               	movlw	0
  4542  0034' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  4543  0035'                    l4489:
  4544  0035' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  4545  0036' 30FF               	movlw	255
  4546  0037' 0584'              	andwf	__tdiv_to_l_@f2,f
  4547  0038' 30FF               	movlw	255
  4548  0039' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  4549  003A' 3000               	movlw	0
  4550  003B' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  4551  003C' 3000               	movlw	0
  4552  003D' 008F'              	movwf	__tdiv_to_l_@quot+3
  4553  003E' 3000               	movlw	0
  4554  003F' 008E'              	movwf	__tdiv_to_l_@quot+2
  4555  0040' 3000               	movlw	0
  4556  0041' 008D'              	movwf	__tdiv_to_l_@quot+1
  4557  0042' 3000               	movlw	0
  4558  0043' 008C'              	movwf	__tdiv_to_l_@quot
  4559  0044'                    l4491:
  4560  0044' 307F               	movlw	127
  4561  0045' 0291'              	subwf	__tdiv_to_l_@exp1,f
  4562  0046'                    l4493:
  4563  0046' 3098               	movlw	152
  4564  0047' 0710'              	addwf	__tdiv_to_l_@cntr,w
  4565  0048' 0088'              	movwf	??__tdiv_to_l_
  4566  0049' 0808'              	movf	??__tdiv_to_l_,w
  4567  004A' 0291'              	subwf	__tdiv_to_l_@exp1,f
  4568  004B' 3018               	movlw	24
  4569  004C' 0088'              	movwf	??__tdiv_to_l_
  4570  004D' 0808'              	movf	??__tdiv_to_l_,w
  4571  004E' 0090'              	movwf	__tdiv_to_l_@cntr
  4572  004F'                    l4495:
  4573  004F' 3001               	movlw	1
  4574  0050' 0088'              	movwf	??__tdiv_to_l_
  4575  0051'                    u7525:
  4576  0051' 1003               	clrc
  4577  0052' 0D8C'              	rlf	__tdiv_to_l_@quot,f
  4578  0053' 0D8D'              	rlf	__tdiv_to_l_@quot+1,f
  4579  0054' 0D8E'              	rlf	__tdiv_to_l_@quot+2,f
  4580  0055' 0D8F'              	rlf	__tdiv_to_l_@quot+3,f
  4581  0056' 0B88'              	decfsz	??__tdiv_to_l_,f
  4582  0057' 2800'              	goto	u7525
  4583  0058'                    l4497:
  4584  0058' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4585  0059' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  4586  005A' 1D03               	skipz
  4587  005B' 2800'              	goto	u7535
  4588  005C' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4589  005D' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  4590  005E' 1D03               	skipz
  4591  005F' 2800'              	goto	u7535
  4592  0060' 0804'              	movf	__tdiv_to_l_@f2,w
  4593  0061' 0200'              	subwf	__tdiv_to_l_@f1,w
  4594  0062'                    u7535:
  4595  0062' 1C03               	skipc
  4596  0063' 2800'              	goto	u7531
  4597  0064' 2800'              	goto	u7530
  4598  0065'                    u7531:
  4599  0065' 2800'              	goto	l4503
  4600  0066'                    u7530:
  4601  0066'                    l4499:
  4602  0066' 0804'              	movf	__tdiv_to_l_@f2,w
  4603  0067' 0280'              	subwf	__tdiv_to_l_@f1,f
  4604  0068' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4605  0069' 1C03               	skipc
  4606  006A' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  4607  006B' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  4608  006C' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4609  006D' 1C03               	skipc
  4610  006E' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  4611  006F' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  4612  0070'                    l4501:
  4613  0070' 140C'              	bsf	__tdiv_to_l_@quot,0
  4614  0071'                    l4503:
  4615  0071' 3001               	movlw	1
  4616  0072'                    u7545:
  4617  0072' 1003               	clrc
  4618  0073' 0D80'              	rlf	__tdiv_to_l_@f1,f
  4619  0074' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  4620  0075' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  4621  0076' 3EFF               	addlw	-1
  4622  0077' 1D03               	skipz
  4623  0078' 2800'              	goto	u7545
  4624  0079'                    l4505:
  4625  0079' 3001               	movlw	1
  4626  007A' 0290'              	subwf	__tdiv_to_l_@cntr,f
  4627  007B' 1D03               	btfss	3,2
  4628  007C' 2800'              	goto	u7551
  4629  007D' 2800'              	goto	u7550
  4630  007E'                    u7551:
  4631  007E' 2800'              	goto	l4495
  4632  007F'                    u7550:
  4633  007F'                    l627:
  4634  007F' 1F91'              	btfss	__tdiv_to_l_@exp1,7
  4635  0080' 2800'              	goto	u7561
  4636  0081' 2800'              	goto	u7560
  4637  0082'                    u7561:
  4638  0082' 2800'              	goto	l4515
  4639  0083'                    u7560:
  4640  0083'                    l4507:
  4641  0083' 0811'              	movf	__tdiv_to_l_@exp1,w
  4642  0084' 3A80               	xorlw	128
  4643  0085' 3E97               	addlw	151
  4644  0086' 1803               	skipnc
  4645  0087' 2800'              	goto	u7571
  4646  0088' 2800'              	goto	u7570
  4647  0089'                    u7571:
  4648  0089' 2800'              	goto	l4513
  4649  008A'                    u7570:
  4650  008A' 2800'              	goto	l4477
  4651  008B'                    l4513:
  4652  008B' 3001               	movlw	1
  4653  008C'                    u7585:
  4654  008C' 1003               	clrc
  4655  008D' 0C8F'              	rrf	__tdiv_to_l_@quot+3,f
  4656  008E' 0C8E'              	rrf	__tdiv_to_l_@quot+2,f
  4657  008F' 0C8D'              	rrf	__tdiv_to_l_@quot+1,f
  4658  0090' 0C8C'              	rrf	__tdiv_to_l_@quot,f
  4659  0091' 3EFF               	addlw	-1
  4660  0092' 1D03               	skipz
  4661  0093' 2800'              	goto	u7585
  4662  0094' 3001               	movlw	1
  4663  0095' 0088'              	movwf	??__tdiv_to_l_
  4664  0096' 0808'              	movf	??__tdiv_to_l_,w
  4665  0097' 0791'              	addwf	__tdiv_to_l_@exp1,f
  4666  0098' 1D03               	btfss	3,2
  4667  0099' 2800'              	goto	u7591
  4668  009A' 2800'              	goto	u7590
  4669  009B'                    u7591:
  4670  009B' 2800'              	goto	l4513
  4671  009C'                    u7590:
  4672  009C' 2800'              	goto	l4523
  4673  009D'                    l4515:
  4674  009D' 3018               	movlw	24
  4675  009E' 0211'              	subwf	__tdiv_to_l_@exp1,w
  4676  009F' 1C03               	skipc
  4677  00A0' 2800'              	goto	u7601
  4678  00A1' 2800'              	goto	u7600
  4679  00A2'                    u7601:
  4680  00A2' 2800'              	goto	l634
  4681  00A3'                    u7600:
  4682  00A3' 2800'              	goto	l4477
  4683  00A4'                    l4521:
  4684  00A4' 3001               	movlw	1
  4685  00A5' 0088'              	movwf	??__tdiv_to_l_
  4686  00A6'                    u7615:
  4687  00A6' 1003               	clrc
  4688  00A7' 0D8C'              	rlf	__tdiv_to_l_@quot,f
  4689  00A8' 0D8D'              	rlf	__tdiv_to_l_@quot+1,f
  4690  00A9' 0D8E'              	rlf	__tdiv_to_l_@quot+2,f
  4691  00AA' 0D8F'              	rlf	__tdiv_to_l_@quot+3,f
  4692  00AB' 0B88'              	decfsz	??__tdiv_to_l_,f
  4693  00AC' 2800'              	goto	u7615
  4694  00AD' 3001               	movlw	1
  4695  00AE' 0291'              	subwf	__tdiv_to_l_@exp1,f
  4696  00AF'                    l634:
  4697  00AF' 0811'              	movf	__tdiv_to_l_@exp1,w
  4698  00B0' 1D03               	btfss	3,2
  4699  00B1' 2800'              	goto	u7621
  4700  00B2' 2800'              	goto	u7620
  4701  00B3'                    u7621:
  4702  00B3' 2800'              	goto	l4521
  4703  00B4'                    u7620:
  4704  00B4'                    l4523:
  4705  00B4' 080F'              	movf	__tdiv_to_l_@quot+3,w
  4706  00B5' 0083'              	movwf	?__tdiv_to_l_+3
  4707  00B6' 080E'              	movf	__tdiv_to_l_@quot+2,w
  4708  00B7' 0082'              	movwf	?__tdiv_to_l_+2
  4709  00B8' 080D'              	movf	__tdiv_to_l_@quot+1,w
  4710  00B9' 0081'              	movwf	?__tdiv_to_l_+1
  4711  00BA' 080C'              	movf	__tdiv_to_l_@quot,w
  4712  00BB' 0080'              	movwf	?__tdiv_to_l_
  4713  00BC'                    l623:
  4714  00BC' 0008               	return
  4715  00BD'                    __end_of__tdiv_to_l_:
  4716                           
  4717                           	psect	text10
  4718  0000'                    __ptext10:	
  4719 ;; *************** function __div_to_l_ *****************
  4720 ;; Defined at:
  4721 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  f1              4    0[BANK0 ] unsigned long 
  4724 ;;  f2              4    4[BANK0 ] unsigned long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  quot            4    9[BANK0 ] unsigned long 
  4727 ;;  exp1            1   14[BANK0 ] unsigned char 
  4728 ;;  cntr            1   13[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4    0[BANK0 ] unsigned long 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       8       0       0       0
  4739 ;;      Locals:         0       6       0       0       0
  4740 ;;      Temps:          0       1       0       0       0
  4741 ;;      Totals:         0      15       0       0       0
  4742 ;;Total ram usage:       15 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    2
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_sprintf
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function __div_to_l_
  4754  0000'                    __div_to_l_:
  4755  0000'                    l4527:	
  4756                           ;incstack = 0
  4757                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4758                           
  4759  0000' 1003               	clrc
  4760  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  4761  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  4762  0003' 0D02'              	rlf	__div_to_l_@f1+2,w
  4763  0004' 0D03'              	rlf	__div_to_l_@f1+3,w
  4764  0005' 0088'              	movwf	??__div_to_l_
  4765  0006' 0808'              	movf	??__div_to_l_,w
  4766  0007' 008E'              	movwf	__div_to_l_@exp1
  4767  0008' 080E'              	movf	__div_to_l_@exp1,w
  4768  0009' 1D03               	btfss	3,2
  4769  000A' 2800'              	goto	u7631
  4770  000B' 2800'              	goto	u7630
  4771  000C'                    u7631:
  4772  000C' 2800'              	goto	l4533
  4773  000D'                    u7630:
  4774  000D'                    l4529:
  4775  000D' 3000               	movlw	0
  4776  000E' 0083'              	movwf	?__div_to_l_+3
  4777  000F' 3000               	movlw	0
  4778  0010' 0082'              	movwf	?__div_to_l_+2
  4779  0011' 3000               	movlw	0
  4780  0012' 0081'              	movwf	?__div_to_l_+1
  4781  0013' 3000               	movlw	0
  4782  0014' 0080'              	movwf	?__div_to_l_
  4783  0015' 2800'              	goto	l576
  4784  0016'                    l4533:
  4785  0016' 1003               	clrc
  4786  0017' 0D06'              	rlf	__div_to_l_@f2+2,w
  4787  0018' 0D07'              	rlf	__div_to_l_@f2+3,w
  4788  0019' 0088'              	movwf	??__div_to_l_
  4789  001A' 0808'              	movf	??__div_to_l_,w
  4790  001B' 008D'              	movwf	__div_to_l_@cntr
  4791  001C' 080D'              	movf	__div_to_l_@cntr,w
  4792  001D' 1D03               	btfss	3,2
  4793  001E' 2800'              	goto	u7641
  4794  001F' 2800'              	goto	u7640
  4795  0020'                    u7641:
  4796  0020' 2800'              	goto	l577
  4797  0021'                    u7640:
  4798  0021' 2800'              	goto	l4529
  4799  0022'                    l577:
  4800  0022' 1782'              	bsf	__div_to_l_@f1+2,7
  4801  0023'                    l4539:
  4802  0023' 30FF               	movlw	255
  4803  0024' 0580'              	andwf	__div_to_l_@f1,f
  4804  0025' 30FF               	movlw	255
  4805  0026' 0581'              	andwf	__div_to_l_@f1+1,f
  4806  0027' 30FF               	movlw	255
  4807  0028' 0582'              	andwf	__div_to_l_@f1+2,f
  4808  0029' 3000               	movlw	0
  4809  002A' 0583'              	andwf	__div_to_l_@f1+3,f
  4810  002B'                    l4541:
  4811  002B' 1786'              	bsf	__div_to_l_@f2+2,7
  4812  002C' 30FF               	movlw	255
  4813  002D' 0584'              	andwf	__div_to_l_@f2,f
  4814  002E' 30FF               	movlw	255
  4815  002F' 0585'              	andwf	__div_to_l_@f2+1,f
  4816  0030' 30FF               	movlw	255
  4817  0031' 0586'              	andwf	__div_to_l_@f2+2,f
  4818  0032' 3000               	movlw	0
  4819  0033' 0587'              	andwf	__div_to_l_@f2+3,f
  4820  0034' 3000               	movlw	0
  4821  0035' 008C'              	movwf	__div_to_l_@quot+3
  4822  0036' 3000               	movlw	0
  4823  0037' 008B'              	movwf	__div_to_l_@quot+2
  4824  0038' 3000               	movlw	0
  4825  0039' 008A'              	movwf	__div_to_l_@quot+1
  4826  003A' 3000               	movlw	0
  4827  003B' 0089'              	movwf	__div_to_l_@quot
  4828  003C'                    l4543:
  4829  003C' 307F               	movlw	127
  4830  003D' 028E'              	subwf	__div_to_l_@exp1,f
  4831  003E'                    l4545:
  4832  003E' 30A0               	movlw	160
  4833  003F' 070D'              	addwf	__div_to_l_@cntr,w
  4834  0040' 0088'              	movwf	??__div_to_l_
  4835  0041' 0808'              	movf	??__div_to_l_,w
  4836  0042' 028E'              	subwf	__div_to_l_@exp1,f
  4837  0043' 3020               	movlw	32
  4838  0044' 0088'              	movwf	??__div_to_l_
  4839  0045' 0808'              	movf	??__div_to_l_,w
  4840  0046' 008D'              	movwf	__div_to_l_@cntr
  4841  0047'                    l4547:
  4842  0047' 3001               	movlw	1
  4843  0048' 0088'              	movwf	??__div_to_l_
  4844  0049'                    u7655:
  4845  0049' 1003               	clrc
  4846  004A' 0D89'              	rlf	__div_to_l_@quot,f
  4847  004B' 0D8A'              	rlf	__div_to_l_@quot+1,f
  4848  004C' 0D8B'              	rlf	__div_to_l_@quot+2,f
  4849  004D' 0D8C'              	rlf	__div_to_l_@quot+3,f
  4850  004E' 0B88'              	decfsz	??__div_to_l_,f
  4851  004F' 2800'              	goto	u7655
  4852  0050'                    l4549:
  4853  0050' 0807'              	movf	__div_to_l_@f2+3,w
  4854  0051' 0203'              	subwf	__div_to_l_@f1+3,w
  4855  0052' 1D03               	skipz
  4856  0053' 2800'              	goto	u7665
  4857  0054' 0806'              	movf	__div_to_l_@f2+2,w
  4858  0055' 0202'              	subwf	__div_to_l_@f1+2,w
  4859  0056' 1D03               	skipz
  4860  0057' 2800'              	goto	u7665
  4861  0058' 0805'              	movf	__div_to_l_@f2+1,w
  4862  0059' 0201'              	subwf	__div_to_l_@f1+1,w
  4863  005A' 1D03               	skipz
  4864  005B' 2800'              	goto	u7665
  4865  005C' 0804'              	movf	__div_to_l_@f2,w
  4866  005D' 0200'              	subwf	__div_to_l_@f1,w
  4867  005E'                    u7665:
  4868  005E' 1C03               	skipc
  4869  005F' 2800'              	goto	u7661
  4870  0060' 2800'              	goto	u7660
  4871  0061'                    u7661:
  4872  0061' 2800'              	goto	l4555
  4873  0062'                    u7660:
  4874  0062'                    l4551:
  4875  0062' 0804'              	movf	__div_to_l_@f2,w
  4876  0063' 0280'              	subwf	__div_to_l_@f1,f
  4877  0064' 0805'              	movf	__div_to_l_@f2+1,w
  4878  0065' 1C03               	skipc
  4879  0066' 0F05'              	incfsz	__div_to_l_@f2+1,w
  4880  0067' 0281'              	subwf	__div_to_l_@f1+1,f
  4881  0068' 0806'              	movf	__div_to_l_@f2+2,w
  4882  0069' 1C03               	skipc
  4883  006A' 0F06'              	incfsz	__div_to_l_@f2+2,w
  4884  006B' 0282'              	subwf	__div_to_l_@f1+2,f
  4885  006C' 0807'              	movf	__div_to_l_@f2+3,w
  4886  006D' 1C03               	skipc
  4887  006E' 0F07'              	incfsz	__div_to_l_@f2+3,w
  4888  006F' 0283'              	subwf	__div_to_l_@f1+3,f
  4889  0070'                    l4553:
  4890  0070' 1409'              	bsf	__div_to_l_@quot,0
  4891  0071'                    l4555:
  4892  0071' 3001               	movlw	1
  4893  0072' 0088'              	movwf	??__div_to_l_
  4894  0073'                    u7675:
  4895  0073' 1003               	clrc
  4896  0074' 0D80'              	rlf	__div_to_l_@f1,f
  4897  0075' 0D81'              	rlf	__div_to_l_@f1+1,f
  4898  0076' 0D82'              	rlf	__div_to_l_@f1+2,f
  4899  0077' 0D83'              	rlf	__div_to_l_@f1+3,f
  4900  0078' 0B88'              	decfsz	??__div_to_l_,f
  4901  0079' 2800'              	goto	u7675
  4902  007A'                    l4557:
  4903  007A' 3001               	movlw	1
  4904  007B' 028D'              	subwf	__div_to_l_@cntr,f
  4905  007C' 1D03               	btfss	3,2
  4906  007D' 2800'              	goto	u7681
  4907  007E' 2800'              	goto	u7680
  4908  007F'                    u7681:
  4909  007F' 2800'              	goto	l4547
  4910  0080'                    u7680:
  4911  0080'                    l580:
  4912  0080' 1F8E'              	btfss	__div_to_l_@exp1,7
  4913  0081' 2800'              	goto	u7691
  4914  0082' 2800'              	goto	u7690
  4915  0083'                    u7691:
  4916  0083' 2800'              	goto	l4567
  4917  0084'                    u7690:
  4918  0084'                    l4559:
  4919  0084' 080E'              	movf	__div_to_l_@exp1,w
  4920  0085' 3A80               	xorlw	128
  4921  0086' 3E9F               	addlw	159
  4922  0087' 1803               	skipnc
  4923  0088' 2800'              	goto	u7701
  4924  0089' 2800'              	goto	u7700
  4925  008A'                    u7701:
  4926  008A' 2800'              	goto	l4565
  4927  008B'                    u7700:
  4928  008B' 2800'              	goto	l4529
  4929  008C'                    l4565:
  4930  008C' 3001               	movlw	1
  4931  008D'                    u7715:
  4932  008D' 1003               	clrc
  4933  008E' 0C8C'              	rrf	__div_to_l_@quot+3,f
  4934  008F' 0C8B'              	rrf	__div_to_l_@quot+2,f
  4935  0090' 0C8A'              	rrf	__div_to_l_@quot+1,f
  4936  0091' 0C89'              	rrf	__div_to_l_@quot,f
  4937  0092' 3EFF               	addlw	-1
  4938  0093' 1D03               	skipz
  4939  0094' 2800'              	goto	u7715
  4940  0095' 3001               	movlw	1
  4941  0096' 0088'              	movwf	??__div_to_l_
  4942  0097' 0808'              	movf	??__div_to_l_,w
  4943  0098' 078E'              	addwf	__div_to_l_@exp1,f
  4944  0099' 1D03               	btfss	3,2
  4945  009A' 2800'              	goto	u7721
  4946  009B' 2800'              	goto	u7720
  4947  009C'                    u7721:
  4948  009C' 2800'              	goto	l4565
  4949  009D'                    u7720:
  4950  009D' 2800'              	goto	l4575
  4951  009E'                    l4567:
  4952  009E' 3020               	movlw	32
  4953  009F' 020E'              	subwf	__div_to_l_@exp1,w
  4954  00A0' 1C03               	skipc
  4955  00A1' 2800'              	goto	u7731
  4956  00A2' 2800'              	goto	u7730
  4957  00A3'                    u7731:
  4958  00A3' 2800'              	goto	l587
  4959  00A4'                    u7730:
  4960  00A4' 2800'              	goto	l4529
  4961  00A5'                    l4573:
  4962  00A5' 3001               	movlw	1
  4963  00A6' 0088'              	movwf	??__div_to_l_
  4964  00A7'                    u7745:
  4965  00A7' 1003               	clrc
  4966  00A8' 0D89'              	rlf	__div_to_l_@quot,f
  4967  00A9' 0D8A'              	rlf	__div_to_l_@quot+1,f
  4968  00AA' 0D8B'              	rlf	__div_to_l_@quot+2,f
  4969  00AB' 0D8C'              	rlf	__div_to_l_@quot+3,f
  4970  00AC' 0B88'              	decfsz	??__div_to_l_,f
  4971  00AD' 2800'              	goto	u7745
  4972  00AE' 3001               	movlw	1
  4973  00AF' 028E'              	subwf	__div_to_l_@exp1,f
  4974  00B0'                    l587:
  4975  00B0' 080E'              	movf	__div_to_l_@exp1,w
  4976  00B1' 1D03               	btfss	3,2
  4977  00B2' 2800'              	goto	u7751
  4978  00B3' 2800'              	goto	u7750
  4979  00B4'                    u7751:
  4980  00B4' 2800'              	goto	l4573
  4981  00B5'                    u7750:
  4982  00B5'                    l4575:
  4983  00B5' 080C'              	movf	__div_to_l_@quot+3,w
  4984  00B6' 0083'              	movwf	?__div_to_l_+3
  4985  00B7' 080B'              	movf	__div_to_l_@quot+2,w
  4986  00B8' 0082'              	movwf	?__div_to_l_+2
  4987  00B9' 080A'              	movf	__div_to_l_@quot+1,w
  4988  00BA' 0081'              	movwf	?__div_to_l_+1
  4989  00BB' 0809'              	movf	__div_to_l_@quot,w
  4990  00BC' 0080'              	movwf	?__div_to_l_
  4991  00BD'                    l576:
  4992  00BD' 0008               	return
  4993  00BE'                    __end_of__div_to_l_:
  4994                           
  4995                           	psect	text11
  4996  0000'                    __ptext11:	
  4997 ;; *************** function ___wmul *****************
  4998 ;; Defined at:
  4999 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5002 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  product         2    4[BANK0 ] unsigned int 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  2    0[BANK0 ] unsigned int 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5014 ;;      Params:         0       4       0       0       0
  5015 ;;      Locals:         0       2       0       0       0
  5016 ;;      Temps:          0       0       0       0       0
  5017 ;;      Totals:         0       6       0       0       0
  5018 ;;Total ram usage:        6 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    2
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_sprintf
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function ___wmul
  5030  0000'                    ___wmul:
  5031  0000'                    l4579:	
  5032                           ;incstack = 0
  5033                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5034                           
  5035  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5036  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5037  0002' 0184'              	clrf	___wmul@product
  5038  0003' 0185'              	clrf	___wmul@product+1
  5039  0004'                    l4581:
  5040  0004' 1C00'              	btfss	___wmul@multiplier,0
  5041  0005' 2800'              	goto	u7761
  5042  0006' 2800'              	goto	u7760
  5043  0007'                    u7761:
  5044  0007' 2800'              	goto	l406
  5045  0008'                    u7760:
  5046  0008'                    l4583:
  5047  0008' 0802'              	movf	___wmul@multiplicand,w
  5048  0009' 0784'              	addwf	___wmul@product,f
  5049  000A' 1803               	skipnc
  5050  000B' 0A85'              	incf	___wmul@product+1,f
  5051  000C' 0803'              	movf	___wmul@multiplicand+1,w
  5052  000D' 0785'              	addwf	___wmul@product+1,f
  5053  000E'                    l406:
  5054  000E' 3001               	movlw	1
  5055  000F'                    u7775:
  5056  000F' 1003               	clrc
  5057  0010' 0D82'              	rlf	___wmul@multiplicand,f
  5058  0011' 0D83'              	rlf	___wmul@multiplicand+1,f
  5059  0012' 3EFF               	addlw	-1
  5060  0013' 1D03               	skipz
  5061  0014' 2800'              	goto	u7775
  5062  0015'                    l4585:
  5063  0015' 3001               	movlw	1
  5064  0016'                    u7785:
  5065  0016' 1003               	clrc
  5066  0017' 0C81'              	rrf	___wmul@multiplier+1,f
  5067  0018' 0C80'              	rrf	___wmul@multiplier,f
  5068  0019' 3EFF               	addlw	-1
  5069  001A' 1D03               	skipz
  5070  001B' 2800'              	goto	u7785
  5071  001C'                    l4587:
  5072  001C' 0800'              	movf	___wmul@multiplier,w
  5073  001D' 0401'              	iorwf	___wmul@multiplier+1,w
  5074  001E' 1D03               	btfss	3,2
  5075  001F' 2800'              	goto	u7791
  5076  0020' 2800'              	goto	u7790
  5077  0021'                    u7791:
  5078  0021' 2800'              	goto	l4581
  5079  0022'                    u7790:
  5080  0022'                    l4589:
  5081  0022' 0805'              	movf	___wmul@product+1,w
  5082  0023' 0081'              	movwf	?___wmul+1
  5083  0024' 0804'              	movf	___wmul@product,w
  5084  0025' 0080'              	movwf	?___wmul
  5085  0026'                    l408:
  5086  0026' 0008               	return
  5087  0027'                    __end_of___wmul:
  5088                           
  5089                           	psect	text12
  5090  0000'                    __ptext12:	
  5091 ;; *************** function ___llmod *****************
  5092 ;; Defined at:
  5093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  divisor         4    0[BANK0 ] unsigned long 
  5096 ;;  dividend        4    4[BANK0 ] unsigned long 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  counter         1    9[BANK0 ] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  4    0[BANK0 ] unsigned long 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         0       8       0       0       0
  5109 ;;      Locals:         0       1       0       0       0
  5110 ;;      Temps:          0       1       0       0       0
  5111 ;;      Totals:         0      10       0       0       0
  5112 ;;Total ram usage:       10 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    2
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_sprintf
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function ___llmod
  5124  0000'                    ___llmod:
  5125  0000'                    l4657:	
  5126                           ;incstack = 0
  5127                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5128                           
  5129  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5130  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5131  0002' 0803'              	movf	___llmod@divisor+3,w
  5132  0003' 0402'              	iorwf	___llmod@divisor+2,w
  5133  0004' 0401'              	iorwf	___llmod@divisor+1,w
  5134  0005' 0400'              	iorwf	___llmod@divisor,w
  5135  0006' 1903               	skipnz
  5136  0007' 2800'              	goto	u7981
  5137  0008' 2800'              	goto	u7980
  5138  0009'                    u7981:
  5139  0009' 2800'              	goto	l4673
  5140  000A'                    u7980:
  5141  000A'                    l4659:
  5142  000A' 0189'              	clrf	___llmod@counter
  5143  000B' 0A89'              	incf	___llmod@counter,f
  5144  000C' 2800'              	goto	l4663
  5145  000D'                    l4661:
  5146  000D' 3001               	movlw	1
  5147  000E' 0088'              	movwf	??___llmod
  5148  000F'                    u7995:
  5149  000F' 1003               	clrc
  5150  0010' 0D80'              	rlf	___llmod@divisor,f
  5151  0011' 0D81'              	rlf	___llmod@divisor+1,f
  5152  0012' 0D82'              	rlf	___llmod@divisor+2,f
  5153  0013' 0D83'              	rlf	___llmod@divisor+3,f
  5154  0014' 0B88'              	decfsz	??___llmod,f
  5155  0015' 2800'              	goto	u7995
  5156  0016' 3001               	movlw	1
  5157  0017' 0088'              	movwf	??___llmod
  5158  0018' 0808'              	movf	??___llmod,w
  5159  0019' 0789'              	addwf	___llmod@counter,f
  5160  001A'                    l4663:
  5161  001A' 1F83'              	btfss	___llmod@divisor+3,7
  5162  001B' 2800'              	goto	u8001
  5163  001C' 2800'              	goto	u8000
  5164  001D'                    u8001:
  5165  001D' 2800'              	goto	l4661
  5166  001E'                    u8000:
  5167  001E'                    l4665:
  5168  001E' 0803'              	movf	___llmod@divisor+3,w
  5169  001F' 0207'              	subwf	___llmod@dividend+3,w
  5170  0020' 1D03               	skipz
  5171  0021' 2800'              	goto	u8015
  5172  0022' 0802'              	movf	___llmod@divisor+2,w
  5173  0023' 0206'              	subwf	___llmod@dividend+2,w
  5174  0024' 1D03               	skipz
  5175  0025' 2800'              	goto	u8015
  5176  0026' 0801'              	movf	___llmod@divisor+1,w
  5177  0027' 0205'              	subwf	___llmod@dividend+1,w
  5178  0028' 1D03               	skipz
  5179  0029' 2800'              	goto	u8015
  5180  002A' 0800'              	movf	___llmod@divisor,w
  5181  002B' 0204'              	subwf	___llmod@dividend,w
  5182  002C'                    u8015:
  5183  002C' 1C03               	skipc
  5184  002D' 2800'              	goto	u8011
  5185  002E' 2800'              	goto	u8010
  5186  002F'                    u8011:
  5187  002F' 2800'              	goto	l4669
  5188  0030'                    u8010:
  5189  0030'                    l4667:
  5190  0030' 0800'              	movf	___llmod@divisor,w
  5191  0031' 0284'              	subwf	___llmod@dividend,f
  5192  0032' 0801'              	movf	___llmod@divisor+1,w
  5193  0033' 1C03               	skipc
  5194  0034' 0F01'              	incfsz	___llmod@divisor+1,w
  5195  0035' 0285'              	subwf	___llmod@dividend+1,f
  5196  0036' 0802'              	movf	___llmod@divisor+2,w
  5197  0037' 1C03               	skipc
  5198  0038' 0F02'              	incfsz	___llmod@divisor+2,w
  5199  0039' 0286'              	subwf	___llmod@dividend+2,f
  5200  003A' 0803'              	movf	___llmod@divisor+3,w
  5201  003B' 1C03               	skipc
  5202  003C' 0F03'              	incfsz	___llmod@divisor+3,w
  5203  003D' 0287'              	subwf	___llmod@dividend+3,f
  5204  003E'                    l4669:
  5205  003E' 3001               	movlw	1
  5206  003F'                    u8025:
  5207  003F' 1003               	clrc
  5208  0040' 0C83'              	rrf	___llmod@divisor+3,f
  5209  0041' 0C82'              	rrf	___llmod@divisor+2,f
  5210  0042' 0C81'              	rrf	___llmod@divisor+1,f
  5211  0043' 0C80'              	rrf	___llmod@divisor,f
  5212  0044' 3EFF               	addlw	-1
  5213  0045' 1D03               	skipz
  5214  0046' 2800'              	goto	u8025
  5215  0047'                    l4671:
  5216  0047' 3001               	movlw	1
  5217  0048' 0289'              	subwf	___llmod@counter,f
  5218  0049' 1D03               	btfss	3,2
  5219  004A' 2800'              	goto	u8031
  5220  004B' 2800'              	goto	u8030
  5221  004C'                    u8031:
  5222  004C' 2800'              	goto	l4665
  5223  004D'                    u8030:
  5224  004D'                    l4673:
  5225  004D' 0807'              	movf	___llmod@dividend+3,w
  5226  004E' 0083'              	movwf	?___llmod+3
  5227  004F' 0806'              	movf	___llmod@dividend+2,w
  5228  0050' 0082'              	movwf	?___llmod+2
  5229  0051' 0805'              	movf	___llmod@dividend+1,w
  5230  0052' 0081'              	movwf	?___llmod+1
  5231  0053' 0804'              	movf	___llmod@dividend,w
  5232  0054' 0080'              	movwf	?___llmod
  5233  0055'                    l662:
  5234  0055' 0008               	return
  5235  0056'                    __end_of___llmod:
  5236                           
  5237                           	psect	text13
  5238  0000'                    __ptext13:	
  5239 ;; *************** function ___lldiv *****************
  5240 ;; Defined at:
  5241 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  divisor         4    0[BANK0 ] unsigned long 
  5244 ;;  dividend        4    4[BANK0 ] unsigned long 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  quotient        4    9[BANK0 ] unsigned long 
  5247 ;;  counter         1   13[BANK0 ] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  4    0[BANK0 ] unsigned long 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5257 ;;      Params:         0       8       0       0       0
  5258 ;;      Locals:         0       5       0       0       0
  5259 ;;      Temps:          0       1       0       0       0
  5260 ;;      Totals:         0      14       0       0       0
  5261 ;;Total ram usage:       14 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    2
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_sprintf
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           
  5272                           ;psect for function ___lldiv
  5273  0000'                    ___lldiv:
  5274  0000'                    l4593:	
  5275                           ;incstack = 0
  5276                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5277                           
  5278  0000' 3000               	movlw	0
  5279  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5280  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5281  0003' 008C'              	movwf	___lldiv@quotient+3
  5282  0004' 3000               	movlw	0
  5283  0005' 008B'              	movwf	___lldiv@quotient+2
  5284  0006' 3000               	movlw	0
  5285  0007' 008A'              	movwf	___lldiv@quotient+1
  5286  0008' 3000               	movlw	0
  5287  0009' 0089'              	movwf	___lldiv@quotient
  5288  000A' 0803'              	movf	___lldiv@divisor+3,w
  5289  000B' 0402'              	iorwf	___lldiv@divisor+2,w
  5290  000C' 0401'              	iorwf	___lldiv@divisor+1,w
  5291  000D' 0400'              	iorwf	___lldiv@divisor,w
  5292  000E' 1903               	skipnz
  5293  000F' 2800'              	goto	u7801
  5294  0010' 2800'              	goto	u7800
  5295  0011'                    u7801:
  5296  0011' 2800'              	goto	l4613
  5297  0012'                    u7800:
  5298  0012'                    l4595:
  5299  0012' 018D'              	clrf	___lldiv@counter
  5300  0013' 0A8D'              	incf	___lldiv@counter,f
  5301  0014' 2800'              	goto	l4599
  5302  0015'                    l4597:
  5303  0015' 3001               	movlw	1
  5304  0016' 0088'              	movwf	??___lldiv
  5305  0017'                    u7815:
  5306  0017' 1003               	clrc
  5307  0018' 0D80'              	rlf	___lldiv@divisor,f
  5308  0019' 0D81'              	rlf	___lldiv@divisor+1,f
  5309  001A' 0D82'              	rlf	___lldiv@divisor+2,f
  5310  001B' 0D83'              	rlf	___lldiv@divisor+3,f
  5311  001C' 0B88'              	decfsz	??___lldiv,f
  5312  001D' 2800'              	goto	u7815
  5313  001E' 3001               	movlw	1
  5314  001F' 0088'              	movwf	??___lldiv
  5315  0020' 0808'              	movf	??___lldiv,w
  5316  0021' 078D'              	addwf	___lldiv@counter,f
  5317  0022'                    l4599:
  5318  0022' 1F83'              	btfss	___lldiv@divisor+3,7
  5319  0023' 2800'              	goto	u7821
  5320  0024' 2800'              	goto	u7820
  5321  0025'                    u7821:
  5322  0025' 2800'              	goto	l4597
  5323  0026'                    u7820:
  5324  0026'                    l4601:
  5325  0026' 3001               	movlw	1
  5326  0027' 0088'              	movwf	??___lldiv
  5327  0028'                    u7835:
  5328  0028' 1003               	clrc
  5329  0029' 0D89'              	rlf	___lldiv@quotient,f
  5330  002A' 0D8A'              	rlf	___lldiv@quotient+1,f
  5331  002B' 0D8B'              	rlf	___lldiv@quotient+2,f
  5332  002C' 0D8C'              	rlf	___lldiv@quotient+3,f
  5333  002D' 0B88'              	decfsz	??___lldiv,f
  5334  002E' 2800'              	goto	u7835
  5335  002F'                    l4603:
  5336  002F' 0803'              	movf	___lldiv@divisor+3,w
  5337  0030' 0207'              	subwf	___lldiv@dividend+3,w
  5338  0031' 1D03               	skipz
  5339  0032' 2800'              	goto	u7845
  5340  0033' 0802'              	movf	___lldiv@divisor+2,w
  5341  0034' 0206'              	subwf	___lldiv@dividend+2,w
  5342  0035' 1D03               	skipz
  5343  0036' 2800'              	goto	u7845
  5344  0037' 0801'              	movf	___lldiv@divisor+1,w
  5345  0038' 0205'              	subwf	___lldiv@dividend+1,w
  5346  0039' 1D03               	skipz
  5347  003A' 2800'              	goto	u7845
  5348  003B' 0800'              	movf	___lldiv@divisor,w
  5349  003C' 0204'              	subwf	___lldiv@dividend,w
  5350  003D'                    u7845:
  5351  003D' 1C03               	skipc
  5352  003E' 2800'              	goto	u7841
  5353  003F' 2800'              	goto	u7840
  5354  0040'                    u7841:
  5355  0040' 2800'              	goto	l4609
  5356  0041'                    u7840:
  5357  0041'                    l4605:
  5358  0041' 0800'              	movf	___lldiv@divisor,w
  5359  0042' 0284'              	subwf	___lldiv@dividend,f
  5360  0043' 0801'              	movf	___lldiv@divisor+1,w
  5361  0044' 1C03               	skipc
  5362  0045' 0F01'              	incfsz	___lldiv@divisor+1,w
  5363  0046' 0285'              	subwf	___lldiv@dividend+1,f
  5364  0047' 0802'              	movf	___lldiv@divisor+2,w
  5365  0048' 1C03               	skipc
  5366  0049' 0F02'              	incfsz	___lldiv@divisor+2,w
  5367  004A' 0286'              	subwf	___lldiv@dividend+2,f
  5368  004B' 0803'              	movf	___lldiv@divisor+3,w
  5369  004C' 1C03               	skipc
  5370  004D' 0F03'              	incfsz	___lldiv@divisor+3,w
  5371  004E' 0287'              	subwf	___lldiv@dividend+3,f
  5372  004F'                    l4607:
  5373  004F' 1409'              	bsf	___lldiv@quotient,0
  5374  0050'                    l4609:
  5375  0050' 3001               	movlw	1
  5376  0051'                    u7855:
  5377  0051' 1003               	clrc
  5378  0052' 0C83'              	rrf	___lldiv@divisor+3,f
  5379  0053' 0C82'              	rrf	___lldiv@divisor+2,f
  5380  0054' 0C81'              	rrf	___lldiv@divisor+1,f
  5381  0055' 0C80'              	rrf	___lldiv@divisor,f
  5382  0056' 3EFF               	addlw	-1
  5383  0057' 1D03               	skipz
  5384  0058' 2800'              	goto	u7855
  5385  0059'                    l4611:
  5386  0059' 3001               	movlw	1
  5387  005A' 028D'              	subwf	___lldiv@counter,f
  5388  005B' 1D03               	btfss	3,2
  5389  005C' 2800'              	goto	u7861
  5390  005D' 2800'              	goto	u7860
  5391  005E'                    u7861:
  5392  005E' 2800'              	goto	l4601
  5393  005F'                    u7860:
  5394  005F'                    l4613:
  5395  005F' 080C'              	movf	___lldiv@quotient+3,w
  5396  0060' 0083'              	movwf	?___lldiv+3
  5397  0061' 080B'              	movf	___lldiv@quotient+2,w
  5398  0062' 0082'              	movwf	?___lldiv+2
  5399  0063' 080A'              	movf	___lldiv@quotient+1,w
  5400  0064' 0081'              	movwf	?___lldiv+1
  5401  0065' 0809'              	movf	___lldiv@quotient,w
  5402  0066' 0080'              	movwf	?___lldiv
  5403  0067'                    l442:
  5404  0067' 0008               	return
  5405  0068'                    __end_of___lldiv:
  5406                           
  5407                           	psect	text14
  5408  0000'                    __ptext14:	
  5409 ;; *************** function ___fltol *****************
  5410 ;; Defined at:
  5411 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  f1              4   61[BANK0 ] unsigned long 
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;  exp1            1   71[BANK0 ] unsigned char 
  5416 ;;  sign1           1   70[BANK0 ] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  4   61[BANK0 ] long 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5426 ;;      Params:         0       4       0       0       0
  5427 ;;      Locals:         0       2       0       0       0
  5428 ;;      Temps:          0       5       0       0       0
  5429 ;;      Totals:         0      11       0       0       0
  5430 ;;Total ram usage:       11 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    2
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_sprintf
  5437 ;;		_COM1
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function ___fltol
  5443  0000'                    ___fltol:
  5444  0000'                    l3245:	
  5445                           ;incstack = 0
  5446                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5447                           
  5448  0000' 1003               	clrc
  5449  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5450  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5451  0003' 0D3F'              	rlf	___fltol@f1+2,w
  5452  0004' 0D40'              	rlf	___fltol@f1+3,w
  5453  0005' 00C1'              	movwf	??___fltol
  5454  0006' 0841'              	movf	??___fltol,w
  5455  0007' 00C7'              	movwf	___fltol@exp1
  5456  0008' 0847'              	movf	___fltol@exp1,w
  5457  0009' 1D03               	btfss	3,2
  5458  000A' 2800'              	goto	u5061
  5459  000B' 2800'              	goto	u5060
  5460  000C'                    u5061:
  5461  000C' 2800'              	goto	l3251
  5462  000D'                    u5060:
  5463  000D'                    l3247:
  5464  000D' 3000               	movlw	0
  5465  000E' 00C0'              	movwf	?___fltol+3
  5466  000F' 3000               	movlw	0
  5467  0010' 00BF'              	movwf	?___fltol+2
  5468  0011' 3000               	movlw	0
  5469  0012' 00BE'              	movwf	?___fltol+1
  5470  0013' 3000               	movlw	0
  5471  0014' 00BD'              	movwf	?___fltol
  5472  0015' 2800'              	goto	l609
  5473  0016'                    l3251:
  5474  0016' 083D'              	movf	___fltol@f1,w
  5475  0017' 00C1'              	movwf	??___fltol
  5476  0018' 083E'              	movf	___fltol@f1+1,w
  5477  0019' 00C2'              	movwf	??___fltol+1
  5478  001A' 083F'              	movf	___fltol@f1+2,w
  5479  001B' 00C3'              	movwf	??___fltol+2
  5480  001C' 0840'              	movf	___fltol@f1+3,w
  5481  001D' 00C4'              	movwf	??___fltol+3
  5482  001E' 301F               	movlw	31
  5483  001F'                    u5075:
  5484  001F' 1003               	clrc
  5485  0020' 0CC4'              	rrf	??___fltol+3,f
  5486  0021' 0CC3'              	rrf	??___fltol+2,f
  5487  0022' 0CC2'              	rrf	??___fltol+1,f
  5488  0023' 0CC1'              	rrf	??___fltol,f
  5489  0024'                    u5070:
  5490  0024' 3EFF               	addlw	-1
  5491  0025' 1D03               	skipz
  5492  0026' 2800'              	goto	u5075
  5493  0027' 0841'              	movf	??___fltol,w
  5494  0028' 00C5'              	movwf	??___fltol+4
  5495  0029' 0845'              	movf	??___fltol+4,w
  5496  002A' 00C6'              	movwf	___fltol@sign1
  5497  002B'                    l3253:
  5498  002B' 17BF'              	bsf	___fltol@f1+2,7
  5499  002C'                    l3255:
  5500  002C' 30FF               	movlw	255
  5501  002D' 05BD'              	andwf	___fltol@f1,f
  5502  002E' 30FF               	movlw	255
  5503  002F' 05BE'              	andwf	___fltol@f1+1,f
  5504  0030' 30FF               	movlw	255
  5505  0031' 05BF'              	andwf	___fltol@f1+2,f
  5506  0032' 3000               	movlw	0
  5507  0033' 05C0'              	andwf	___fltol@f1+3,f
  5508  0034'                    l3257:
  5509  0034' 3096               	movlw	150
  5510  0035' 02C7'              	subwf	___fltol@exp1,f
  5511  0036'                    l3259:
  5512  0036' 1FC7'              	btfss	___fltol@exp1,7
  5513  0037' 2800'              	goto	u5081
  5514  0038' 2800'              	goto	u5080
  5515  0039'                    u5081:
  5516  0039' 2800'              	goto	l3269
  5517  003A'                    u5080:
  5518  003A'                    l3261:
  5519  003A' 0847'              	movf	___fltol@exp1,w
  5520  003B' 3A80               	xorlw	128
  5521  003C' 3E97               	addlw	151
  5522  003D' 1803               	skipnc
  5523  003E' 2800'              	goto	u5091
  5524  003F' 2800'              	goto	u5090
  5525  0040'                    u5091:
  5526  0040' 2800'              	goto	l3267
  5527  0041'                    u5090:
  5528  0041' 2800'              	goto	l3247
  5529  0042'                    l3267:
  5530  0042' 3001               	movlw	1
  5531  0043'                    u5105:
  5532  0043' 1003               	clrc
  5533  0044' 0CC0'              	rrf	___fltol@f1+3,f
  5534  0045' 0CBF'              	rrf	___fltol@f1+2,f
  5535  0046' 0CBE'              	rrf	___fltol@f1+1,f
  5536  0047' 0CBD'              	rrf	___fltol@f1,f
  5537  0048' 3EFF               	addlw	-1
  5538  0049' 1D03               	skipz
  5539  004A' 2800'              	goto	u5105
  5540  004B' 3001               	movlw	1
  5541  004C' 00C1'              	movwf	??___fltol
  5542  004D' 0841'              	movf	??___fltol,w
  5543  004E' 07C7'              	addwf	___fltol@exp1,f
  5544  004F' 1D03               	btfss	3,2
  5545  0050' 2800'              	goto	u5111
  5546  0051' 2800'              	goto	u5110
  5547  0052'                    u5111:
  5548  0052' 2800'              	goto	l3267
  5549  0053'                    u5110:
  5550  0053' 2800'              	goto	l3277
  5551  0054'                    l3269:
  5552  0054' 3020               	movlw	32
  5553  0055' 0247'              	subwf	___fltol@exp1,w
  5554  0056' 1C03               	skipc
  5555  0057' 2800'              	goto	u5121
  5556  0058' 2800'              	goto	u5120
  5557  0059'                    u5121:
  5558  0059' 2800'              	goto	l616
  5559  005A'                    u5120:
  5560  005A' 2800'              	goto	l3247
  5561  005B'                    l3275:
  5562  005B' 3001               	movlw	1
  5563  005C' 00C1'              	movwf	??___fltol
  5564  005D'                    u5135:
  5565  005D' 1003               	clrc
  5566  005E' 0DBD'              	rlf	___fltol@f1,f
  5567  005F' 0DBE'              	rlf	___fltol@f1+1,f
  5568  0060' 0DBF'              	rlf	___fltol@f1+2,f
  5569  0061' 0DC0'              	rlf	___fltol@f1+3,f
  5570  0062' 0BC1'              	decfsz	??___fltol,f
  5571  0063' 2800'              	goto	u5135
  5572  0064' 3001               	movlw	1
  5573  0065' 02C7'              	subwf	___fltol@exp1,f
  5574  0066'                    l616:
  5575  0066' 0847'              	movf	___fltol@exp1,w
  5576  0067' 1D03               	btfss	3,2
  5577  0068' 2800'              	goto	u5141
  5578  0069' 2800'              	goto	u5140
  5579  006A'                    u5141:
  5580  006A' 2800'              	goto	l3275
  5581  006B'                    u5140:
  5582  006B'                    l3277:
  5583  006B' 0846'              	movf	___fltol@sign1,w
  5584  006C' 1903               	btfsc	3,2
  5585  006D' 2800'              	goto	u5151
  5586  006E' 2800'              	goto	u5150
  5587  006F'                    u5151:
  5588  006F' 2800'              	goto	l619
  5589  0070'                    u5150:
  5590  0070'                    l3279:
  5591  0070' 09BD'              	comf	___fltol@f1,f
  5592  0071' 09BE'              	comf	___fltol@f1+1,f
  5593  0072' 09BF'              	comf	___fltol@f1+2,f
  5594  0073' 09C0'              	comf	___fltol@f1+3,f
  5595  0074' 0ABD'              	incf	___fltol@f1,f
  5596  0075' 1903               	skipnz
  5597  0076' 0ABE'              	incf	___fltol@f1+1,f
  5598  0077' 1903               	skipnz
  5599  0078' 0ABF'              	incf	___fltol@f1+2,f
  5600  0079' 1903               	skipnz
  5601  007A' 0AC0'              	incf	___fltol@f1+3,f
  5602  007B'                    l619:
  5603  007B'                    l609:
  5604  007B' 0008               	return
  5605  007C'                    __end_of___fltol:
  5606                           
  5607                           	psect	text15
  5608  0000'                    __ptext15:	
  5609 ;; *************** function ___flsub *****************
  5610 ;; Defined at:
  5611 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  a               4    4[BANK1 ] long 
  5614 ;;  b               4    8[BANK1 ] long 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  4    4[BANK1 ] long 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5626 ;;      Params:         0       0       8       0       0
  5627 ;;      Locals:         0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0
  5629 ;;      Totals:         0       0       8       0       0
  5630 ;;Total ram usage:        8 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    3
  5633 ;; This function calls:
  5634 ;;		___fladd
  5635 ;; This function is called by:
  5636 ;;		_sprintf
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function ___flsub
  5642  0000'                    ___flsub:
  5643  0000'                    l4677:	
  5644                           ;incstack = 0
  5645                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5646                           
  5647  0000' 3080               	movlw	128
  5648  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  5649  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  5650  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  5651  0004'                    l4679:
  5652  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  5653  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  5654  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  5655  0007' 00C1'              	movwf	___fladd@b+3
  5656  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  5657  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  5658  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  5659  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  5660  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  5661  000D' 00C0'              	movwf	___fladd@b+2
  5662  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  5663  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  5664  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  5665  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  5666  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  5667  0013' 00BF'              	movwf	___fladd@b+1
  5668  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  5669  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  5670  0016' 0800'              	movf	___flsub@b^(0+128),w
  5671  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  5672  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  5673  0019' 00BE'              	movwf	___fladd@b
  5674  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  5675  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  5676  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  5677  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  5678  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  5679  001F' 00C5'              	movwf	___fladd@a+3
  5680  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  5681  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  5682  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  5683  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  5684  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  5685  0025' 00C4'              	movwf	___fladd@a+2
  5686  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  5687  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  5688  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  5689  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  5690  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  5691  002B' 00C3'              	movwf	___fladd@a+1
  5692  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  5693  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  5694  002E' 0800'              	movf	___flsub@a^(0+128),w
  5695  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  5696  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  5697  0031' 00C2'              	movwf	___fladd@a
  5698  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  5699  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  5700  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  5701  0039' 0841'              	movf	?___fladd+3,w
  5702  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  5703  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  5704  003C' 0080'              	movwf	(?___flsub+3)^(0+128)
  5705  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  5706  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  5707  003F' 0840'              	movf	?___fladd+2,w
  5708  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  5709  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  5710  0042' 0080'              	movwf	(?___flsub+2)^(0+128)
  5711  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  5712  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  5713  0045' 083F'              	movf	?___fladd+1,w
  5714  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  5715  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  5716  0048' 0080'              	movwf	(?___flsub+1)^(0+128)
  5717  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  5718  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  5719  004B' 083E'              	movf	?___fladd,w
  5720  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  5721  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  5722  004E' 0080'              	movwf	?___flsub^(0+128)
  5723  004F'                    l779:
  5724  004F' 0008               	return
  5725  0050'                    __end_of___flsub:
  5726                           
  5727                           	psect	text16
  5728  0000'                    __ptext16:	
  5729 ;; *************** function ___fladd *****************
  5730 ;; Defined at:
  5731 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  b               4   62[BANK0 ] long 
  5734 ;;  a               4   66[BANK0 ] long 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  grs             1    3[BANK1 ] unsigned char 
  5737 ;;  bexp            1    2[BANK1 ] unsigned char 
  5738 ;;  aexp            1    1[BANK1 ] unsigned char 
  5739 ;;  signs           1    0[BANK1 ] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  4   62[BANK0 ] unsigned char 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0, btemp+1
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5749 ;;      Params:         0       8       0       0       0
  5750 ;;      Locals:         0       0       4       0       0
  5751 ;;      Temps:          0       8       0       0       0
  5752 ;;      Totals:         0      16       4       0       0
  5753 ;;Total ram usage:       20 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    2
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_sprintf
  5760 ;;		___flsub
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function ___fladd
  5766  0000'                    ___fladd:
  5767  0000'                    l4037:	
  5768                           ;incstack = 0
  5769                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5770                           
  5771  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5772  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5773  0002' 0841'              	movf	___fladd@b+3,w
  5774  0003' 3980               	andlw	128
  5775  0004' 00C6'              	movwf	??___fladd
  5776  0005' 0846'              	movf	??___fladd,w
  5777  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  5778  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  5779  0008' 0080'              	movwf	___fladd@signs^(0+128)
  5780  0009'                    l4039:
  5781  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  5782  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  5783  000B' 0841'              	movf	___fladd@b+3,w
  5784  000C' 00C6'              	movwf	??___fladd
  5785  000D' 0746'              	addwf	??___fladd,w
  5786  000E' 00C7'              	movwf	??___fladd+1
  5787  000F' 0847'              	movf	??___fladd+1,w
  5788  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  5789  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  5790  0012' 0080'              	movwf	___fladd@bexp^(0+128)
  5791  0013'                    l4041:
  5792  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  5793  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  5794  0015' 1FC0'              	btfss	___fladd@b+2,7
  5795  0016' 2800'              	goto	u6401
  5796  0017' 2800'              	goto	u6400
  5797  0018'                    u6401:
  5798  0018' 2800'              	goto	l4045
  5799  0019'                    u6400:
  5800  0019'                    l4043:
  5801  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  5802  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  5803  001B' 1400'              	bsf	___fladd@bexp^(0+128),0
  5804  001C'                    l4045:
  5805  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  5806  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  5807  001E' 0800'              	movf	___fladd@bexp^(0+128),w
  5808  001F' 1903               	btfsc	3,2
  5809  0020' 2800'              	goto	u6411
  5810  0021' 2800'              	goto	u6410
  5811  0022'                    u6411:
  5812  0022' 2800'              	goto	l4055
  5813  0023'                    u6410:
  5814  0023'                    l4047:
  5815  0023' 0A00'              	incf	___fladd@bexp^(0+128),w
  5816  0024' 1D03               	btfss	3,2
  5817  0025' 2800'              	goto	u6421
  5818  0026' 2800'              	goto	u6420
  5819  0027'                    u6421:
  5820  0027' 2800'              	goto	l4051
  5821  0028'                    u6420:
  5822  0028'                    l4049:
  5823  0028' 3000               	movlw	0
  5824  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  5825  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  5826  002B' 00C1'              	movwf	___fladd@b+3
  5827  002C' 3000               	movlw	0
  5828  002D' 00C0'              	movwf	___fladd@b+2
  5829  002E' 3000               	movlw	0
  5830  002F' 00BF'              	movwf	___fladd@b+1
  5831  0030' 3000               	movlw	0
  5832  0031' 00BE'              	movwf	___fladd@b
  5833  0032'                    l4051:
  5834  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  5835  0033' 17C0'              	bsf	___fladd@b+2,7
  5836  0034'                    l4053:
  5837  0034' 01C1'              	clrf	___fladd@b+3
  5838  0035' 2800'              	goto	l4057
  5839  0036'                    l4055:
  5840  0036' 3000               	movlw	0
  5841  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  5842  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  5843  0039' 00C1'              	movwf	___fladd@b+3
  5844  003A' 3000               	movlw	0
  5845  003B' 00C0'              	movwf	___fladd@b+2
  5846  003C' 3000               	movlw	0
  5847  003D' 00BF'              	movwf	___fladd@b+1
  5848  003E' 3000               	movlw	0
  5849  003F' 00BE'              	movwf	___fladd@b
  5850  0040'                    l4057:
  5851  0040' 0845'              	movf	___fladd@a+3,w
  5852  0041' 3980               	andlw	128
  5853  0042' 00C6'              	movwf	??___fladd
  5854  0043' 0846'              	movf	??___fladd,w
  5855  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  5856  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  5857  0046' 0080'              	movwf	___fladd@aexp^(0+128)
  5858  0047'                    l4059:
  5859  0047' 0800'              	movf	___fladd@aexp^(0+128),w
  5860  0048' 0600'              	xorwf	___fladd@signs^(0+128),w
  5861  0049' 1903               	skipnz
  5862  004A' 2800'              	goto	u6431
  5863  004B' 2800'              	goto	u6430
  5864  004C'                    u6431:
  5865  004C' 2800'              	goto	l4063
  5866  004D'                    u6430:
  5867  004D'                    l4061:
  5868  004D' 1700'              	bsf	___fladd@signs^(0+128),6
  5869  004E'                    l4063:
  5870  004E' 1283               	bcf	3,5	;RP0=0, select bank0
  5871  004F' 1303               	bcf	3,6	;RP1=0, select bank0
  5872  0050' 0845'              	movf	___fladd@a+3,w
  5873  0051' 00C6'              	movwf	??___fladd
  5874  0052' 0746'              	addwf	??___fladd,w
  5875  0053' 00C7'              	movwf	??___fladd+1
  5876  0054' 0847'              	movf	??___fladd+1,w
  5877  0055' 1683               	bsf	3,5	;RP0=1, select bank1
  5878  0056' 1303               	bcf	3,6	;RP1=0, select bank1
  5879  0057' 0080'              	movwf	___fladd@aexp^(0+128)
  5880  0058'                    l4065:
  5881  0058' 1283               	bcf	3,5	;RP0=0, select bank0
  5882  0059' 1303               	bcf	3,6	;RP1=0, select bank0
  5883  005A' 1FC4'              	btfss	___fladd@a+2,7
  5884  005B' 2800'              	goto	u6441
  5885  005C' 2800'              	goto	u6440
  5886  005D'                    u6441:
  5887  005D' 2800'              	goto	l4069
  5888  005E'                    u6440:
  5889  005E'                    l4067:
  5890  005E' 1683               	bsf	3,5	;RP0=1, select bank1
  5891  005F' 1303               	bcf	3,6	;RP1=0, select bank1
  5892  0060' 1400'              	bsf	___fladd@aexp^(0+128),0
  5893  0061'                    l4069:
  5894  0061' 1683               	bsf	3,5	;RP0=1, select bank1
  5895  0062' 1303               	bcf	3,6	;RP1=0, select bank1
  5896  0063' 0800'              	movf	___fladd@aexp^(0+128),w
  5897  0064' 1903               	btfsc	3,2
  5898  0065' 2800'              	goto	u6451
  5899  0066' 2800'              	goto	u6450
  5900  0067'                    u6451:
  5901  0067' 2800'              	goto	l4079
  5902  0068'                    u6450:
  5903  0068'                    l4071:
  5904  0068' 0A00'              	incf	___fladd@aexp^(0+128),w
  5905  0069' 1D03               	btfss	3,2
  5906  006A' 2800'              	goto	u6461
  5907  006B' 2800'              	goto	u6460
  5908  006C'                    u6461:
  5909  006C' 2800'              	goto	l4075
  5910  006D'                    u6460:
  5911  006D'                    l4073:
  5912  006D' 3000               	movlw	0
  5913  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  5914  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  5915  0070' 00C5'              	movwf	___fladd@a+3
  5916  0071' 3000               	movlw	0
  5917  0072' 00C4'              	movwf	___fladd@a+2
  5918  0073' 3000               	movlw	0
  5919  0074' 00C3'              	movwf	___fladd@a+1
  5920  0075' 3000               	movlw	0
  5921  0076' 00C2'              	movwf	___fladd@a
  5922  0077'                    l4075:
  5923  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  5924  0078' 17C4'              	bsf	___fladd@a+2,7
  5925  0079'                    l4077:
  5926  0079' 01C5'              	clrf	___fladd@a+3
  5927  007A' 2800'              	goto	l733
  5928  007B'                    l4079:
  5929  007B' 3000               	movlw	0
  5930  007C' 1283               	bcf	3,5	;RP0=0, select bank0
  5931  007D' 1303               	bcf	3,6	;RP1=0, select bank0
  5932  007E' 00C5'              	movwf	___fladd@a+3
  5933  007F' 3000               	movlw	0
  5934  0080' 00C4'              	movwf	___fladd@a+2
  5935  0081' 3000               	movlw	0
  5936  0082' 00C3'              	movwf	___fladd@a+1
  5937  0083' 3000               	movlw	0
  5938  0084' 00C2'              	movwf	___fladd@a
  5939  0085'                    l733:
  5940  0085' 1683               	bsf	3,5	;RP0=1, select bank1
  5941  0086' 1303               	bcf	3,6	;RP1=0, select bank1
  5942  0087' 0800'              	movf	___fladd@bexp^(0+128),w
  5943  0088' 0200'              	subwf	___fladd@aexp^(0+128),w
  5944  0089' 1803               	skipnc
  5945  008A' 2800'              	goto	u6471
  5946  008B' 2800'              	goto	u6470
  5947  008C'                    u6471:
  5948  008C' 2800'              	goto	l4115
  5949  008D'                    u6470:
  5950  008D'                    l4081:
  5951  008D' 1F00'              	btfss	___fladd@signs^(0+128),6
  5952  008E' 2800'              	goto	u6481
  5953  008F' 2800'              	goto	u6480
  5954  0090'                    u6481:
  5955  0090' 2800'              	goto	l4085
  5956  0091'                    u6480:
  5957  0091'                    l4083:
  5958  0091' 3080               	movlw	128
  5959  0092' 1283               	bcf	3,5	;RP0=0, select bank0
  5960  0093' 1303               	bcf	3,6	;RP1=0, select bank0
  5961  0094' 00C6'              	movwf	??___fladd
  5962  0095' 0846'              	movf	??___fladd,w
  5963  0096' 1683               	bsf	3,5	;RP0=1, select bank1
  5964  0097' 1303               	bcf	3,6	;RP1=0, select bank1
  5965  0098' 0680'              	xorwf	___fladd@signs^(0+128),f
  5966  0099'                    l4085:
  5967  0099' 0800'              	movf	___fladd@bexp^(0+128),w
  5968  009A' 1283               	bcf	3,5	;RP0=0, select bank0
  5969  009B' 1303               	bcf	3,6	;RP1=0, select bank0
  5970  009C' 00C6'              	movwf	??___fladd
  5971  009D' 0846'              	movf	??___fladd,w
  5972  009E' 1683               	bsf	3,5	;RP0=1, select bank1
  5973  009F' 1303               	bcf	3,6	;RP1=0, select bank1
  5974  00A0' 0080'              	movwf	___fladd@grs^(0+128)
  5975  00A1'                    l4087:
  5976  00A1' 0800'              	movf	___fladd@aexp^(0+128),w
  5977  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  5978  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  5979  00A4' 00C6'              	movwf	??___fladd
  5980  00A5' 0846'              	movf	??___fladd,w
  5981  00A6' 1683               	bsf	3,5	;RP0=1, select bank1
  5982  00A7' 1303               	bcf	3,6	;RP1=0, select bank1
  5983  00A8' 0080'              	movwf	___fladd@bexp^(0+128)
  5984  00A9'                    l4089:
  5985  00A9' 0800'              	movf	___fladd@grs^(0+128),w
  5986  00AA' 1283               	bcf	3,5	;RP0=0, select bank0
  5987  00AB' 1303               	bcf	3,6	;RP1=0, select bank0
  5988  00AC' 00C6'              	movwf	??___fladd
  5989  00AD' 0846'              	movf	??___fladd,w
  5990  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  5991  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
  5992  00B0' 0080'              	movwf	___fladd@aexp^(0+128)
  5993  00B1'                    l4091:
  5994  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  5995  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  5996  00B3' 083E'              	movf	___fladd@b,w
  5997  00B4' 00C6'              	movwf	??___fladd
  5998  00B5' 0846'              	movf	??___fladd,w
  5999  00B6' 1683               	bsf	3,5	;RP0=1, select bank1
  6000  00B7' 1303               	bcf	3,6	;RP1=0, select bank1
  6001  00B8' 0080'              	movwf	___fladd@grs^(0+128)
  6002  00B9'                    l4093:
  6003  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  6004  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  6005  00BB' 0842'              	movf	___fladd@a,w
  6006  00BC' 00C6'              	movwf	??___fladd
  6007  00BD' 0846'              	movf	??___fladd,w
  6008  00BE' 00BE'              	movwf	___fladd@b
  6009  00BF'                    l4095:
  6010  00BF' 1683               	bsf	3,5	;RP0=1, select bank1
  6011  00C0' 1303               	bcf	3,6	;RP1=0, select bank1
  6012  00C1' 0800'              	movf	___fladd@grs^(0+128),w
  6013  00C2' 1283               	bcf	3,5	;RP0=0, select bank0
  6014  00C3' 1303               	bcf	3,6	;RP1=0, select bank0
  6015  00C4' 00C6'              	movwf	??___fladd
  6016  00C5' 0846'              	movf	??___fladd,w
  6017  00C6' 00C2'              	movwf	___fladd@a
  6018  00C7'                    l4097:
  6019  00C7' 083F'              	movf	___fladd@b+1,w
  6020  00C8' 00C6'              	movwf	??___fladd
  6021  00C9' 0846'              	movf	??___fladd,w
  6022  00CA' 1683               	bsf	3,5	;RP0=1, select bank1
  6023  00CB' 1303               	bcf	3,6	;RP1=0, select bank1
  6024  00CC' 0080'              	movwf	___fladd@grs^(0+128)
  6025  00CD'                    l4099:
  6026  00CD' 1283               	bcf	3,5	;RP0=0, select bank0
  6027  00CE' 1303               	bcf	3,6	;RP1=0, select bank0
  6028  00CF' 0843'              	movf	___fladd@a+1,w
  6029  00D0' 00C6'              	movwf	??___fladd
  6030  00D1' 0846'              	movf	??___fladd,w
  6031  00D2' 00BF'              	movwf	___fladd@b+1
  6032  00D3'                    l4101:
  6033  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
  6034  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
  6035  00D5' 0800'              	movf	___fladd@grs^(0+128),w
  6036  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  6037  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  6038  00D8' 00C6'              	movwf	??___fladd
  6039  00D9' 0846'              	movf	??___fladd,w
  6040  00DA' 00C3'              	movwf	___fladd@a+1
  6041  00DB'                    l4103:
  6042  00DB' 0840'              	movf	___fladd@b+2,w
  6043  00DC' 00C6'              	movwf	??___fladd
  6044  00DD' 0846'              	movf	??___fladd,w
  6045  00DE' 1683               	bsf	3,5	;RP0=1, select bank1
  6046  00DF' 1303               	bcf	3,6	;RP1=0, select bank1
  6047  00E0' 0080'              	movwf	___fladd@grs^(0+128)
  6048  00E1'                    l4105:
  6049  00E1' 1283               	bcf	3,5	;RP0=0, select bank0
  6050  00E2' 1303               	bcf	3,6	;RP1=0, select bank0
  6051  00E3' 0844'              	movf	___fladd@a+2,w
  6052  00E4' 00C6'              	movwf	??___fladd
  6053  00E5' 0846'              	movf	??___fladd,w
  6054  00E6' 00C0'              	movwf	___fladd@b+2
  6055  00E7'                    l4107:
  6056  00E7' 1683               	bsf	3,5	;RP0=1, select bank1
  6057  00E8' 1303               	bcf	3,6	;RP1=0, select bank1
  6058  00E9' 0800'              	movf	___fladd@grs^(0+128),w
  6059  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  6060  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  6061  00EC' 00C6'              	movwf	??___fladd
  6062  00ED' 0846'              	movf	??___fladd,w
  6063  00EE' 00C4'              	movwf	___fladd@a+2
  6064  00EF'                    l4109:
  6065  00EF' 0841'              	movf	___fladd@b+3,w
  6066  00F0' 00C6'              	movwf	??___fladd
  6067  00F1' 0846'              	movf	??___fladd,w
  6068  00F2' 1683               	bsf	3,5	;RP0=1, select bank1
  6069  00F3' 1303               	bcf	3,6	;RP1=0, select bank1
  6070  00F4' 0080'              	movwf	___fladd@grs^(0+128)
  6071  00F5'                    l4111:
  6072  00F5' 1283               	bcf	3,5	;RP0=0, select bank0
  6073  00F6' 1303               	bcf	3,6	;RP1=0, select bank0
  6074  00F7' 0845'              	movf	___fladd@a+3,w
  6075  00F8' 00C6'              	movwf	??___fladd
  6076  00F9' 0846'              	movf	??___fladd,w
  6077  00FA' 00C1'              	movwf	___fladd@b+3
  6078  00FB'                    l4113:
  6079  00FB' 1683               	bsf	3,5	;RP0=1, select bank1
  6080  00FC' 1303               	bcf	3,6	;RP1=0, select bank1
  6081  00FD' 0800'              	movf	___fladd@grs^(0+128),w
  6082  00FE' 1283               	bcf	3,5	;RP0=0, select bank0
  6083  00FF' 1303               	bcf	3,6	;RP1=0, select bank0
  6084  0100' 00C6'              	movwf	??___fladd
  6085  0101' 0846'              	movf	??___fladd,w
  6086  0102' 00C5'              	movwf	___fladd@a+3
  6087  0103'                    l4115:
  6088  0103' 1683               	bsf	3,5	;RP0=1, select bank1
  6089  0104' 1303               	bcf	3,6	;RP1=0, select bank1
  6090  0105' 0180'              	clrf	___fladd@grs^(0+128)
  6091  0106'                    l4117:
  6092  0106' 0800'              	movf	___fladd@aexp^(0+128),w
  6093  0107' 1283               	bcf	3,5	;RP0=0, select bank0
  6094  0108' 1303               	bcf	3,6	;RP1=0, select bank0
  6095  0109' 00C6'              	movwf	??___fladd
  6096  010A' 01C7'              	clrf	??___fladd+1
  6097  010B' 0847'              	movf	??___fladd+1,w
  6098  010C' 00C9'              	movwf	??___fladd+3
  6099  010D' 1683               	bsf	3,5	;RP0=1, select bank1
  6100  010E' 1303               	bcf	3,6	;RP1=0, select bank1
  6101  010F' 0800'              	movf	___fladd@bexp^(0+128),w
  6102  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  6103  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  6104  0112' 0246'              	subwf	??___fladd,w
  6105  0113' 00C8'              	movwf	??___fladd+2
  6106  0114' 1C03               	skipc
  6107  0115' 03C9'              	decf	??___fladd+3,f
  6108  0116' 0849'              	movf	??___fladd+3,w
  6109  0117' 3A80               	xorlw	128
  6110  0118' 00FF               	movwf	btemp+1
  6111  0119' 3080               	movlw	128
  6112  011A' 027F               	subwf	btemp+1,w
  6113  011B' 1D03               	skipz
  6114  011C' 2800'              	goto	u6495
  6115  011D' 301A               	movlw	26
  6116  011E' 0248'              	subwf	??___fladd+2,w
  6117  011F'                    u6495:
  6118  011F' 1C03               	skipc
  6119  0120' 2800'              	goto	u6491
  6120  0121' 2800'              	goto	u6490
  6121  0122'                    u6491:
  6122  0122' 2800'              	goto	l4133
  6123  0123'                    u6490:
  6124  0123'                    l4119:
  6125  0123' 1283               	bcf	3,5	;RP0=0, select bank0
  6126  0124' 1303               	bcf	3,6	;RP1=0, select bank0
  6127  0125' 0841'              	movf	___fladd@b+3,w
  6128  0126' 0440'              	iorwf	___fladd@b+2,w
  6129  0127' 043F'              	iorwf	___fladd@b+1,w
  6130  0128' 043E'              	iorwf	___fladd@b,w
  6131  0129' 1D03               	skipz
  6132  012A' 2800'              	goto	u6501
  6133  012B' 2800'              	goto	u6500
  6134  012C'                    u6501:
  6135  012C' 3001               	movlw	1
  6136  012D' 2800'              	goto	u6510
  6137  012E'                    u6500:
  6138  012E' 3000               	movlw	0
  6139  012F'                    u6510:
  6140  012F' 00C6'              	movwf	??___fladd
  6141  0130' 0846'              	movf	??___fladd,w
  6142  0131' 1683               	bsf	3,5	;RP0=1, select bank1
  6143  0132' 1303               	bcf	3,6	;RP1=0, select bank1
  6144  0133' 0080'              	movwf	___fladd@grs^(0+128)
  6145  0134' 3000               	movlw	0
  6146  0135' 1283               	bcf	3,5	;RP0=0, select bank0
  6147  0136' 1303               	bcf	3,6	;RP1=0, select bank0
  6148  0137' 00C1'              	movwf	___fladd@b+3
  6149  0138' 3000               	movlw	0
  6150  0139' 00C0'              	movwf	___fladd@b+2
  6151  013A' 3000               	movlw	0
  6152  013B' 00BF'              	movwf	___fladd@b+1
  6153  013C' 3000               	movlw	0
  6154  013D' 00BE'              	movwf	___fladd@b
  6155  013E' 1683               	bsf	3,5	;RP0=1, select bank1
  6156  013F' 1303               	bcf	3,6	;RP1=0, select bank1
  6157  0140' 0800'              	movf	___fladd@aexp^(0+128),w
  6158  0141' 1283               	bcf	3,5	;RP0=0, select bank0
  6159  0142' 1303               	bcf	3,6	;RP1=0, select bank0
  6160  0143' 00C6'              	movwf	??___fladd
  6161  0144' 0846'              	movf	??___fladd,w
  6162  0145' 1683               	bsf	3,5	;RP0=1, select bank1
  6163  0146' 1303               	bcf	3,6	;RP1=0, select bank1
  6164  0147' 0080'              	movwf	___fladd@bexp^(0+128)
  6165  0148' 2800'              	goto	l737
  6166  0149'                    l739:
  6167  0149' 1C00'              	btfss	___fladd@grs^(0+128),0
  6168  014A' 2800'              	goto	u6521
  6169  014B' 2800'              	goto	u6520
  6170  014C'                    u6521:
  6171  014C' 2800'              	goto	l4123
  6172  014D'                    u6520:
  6173  014D'                    l4121:
  6174  014D' 0800'              	movf	___fladd@grs^(0+128),w
  6175  014E' 1283               	bcf	3,5	;RP0=0, select bank0
  6176  014F' 1303               	bcf	3,6	;RP1=0, select bank0
  6177  0150' 00C6'              	movwf	??___fladd
  6178  0151' 1003               	clrc
  6179  0152' 0C46'              	rrf	??___fladd,w
  6180  0153' 3801               	iorlw	1
  6181  0154' 00C7'              	movwf	??___fladd+1
  6182  0155' 0847'              	movf	??___fladd+1,w
  6183  0156' 1683               	bsf	3,5	;RP0=1, select bank1
  6184  0157' 1303               	bcf	3,6	;RP1=0, select bank1
  6185  0158' 0080'              	movwf	___fladd@grs^(0+128)
  6186  0159' 2800'              	goto	l4125
  6187  015A'                    l4123:
  6188  015A' 1003               	clrc
  6189  015B' 0C80'              	rrf	___fladd@grs^(0+128),f
  6190  015C'                    l4125:
  6191  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  6192  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  6193  015E' 1C3E'              	btfss	___fladd@b,0
  6194  015F' 2800'              	goto	u6531
  6195  0160' 2800'              	goto	u6530
  6196  0161'                    u6531:
  6197  0161' 2800'              	goto	l4129
  6198  0162'                    u6530:
  6199  0162'                    l4127:
  6200  0162' 1683               	bsf	3,5	;RP0=1, select bank1
  6201  0163' 1303               	bcf	3,6	;RP1=0, select bank1
  6202  0164' 1780'              	bsf	___fladd@grs^(0+128),7
  6203  0165'                    l4129:
  6204  0165' 3001               	movlw	1
  6205  0166' 1283               	bcf	3,5	;RP0=0, select bank0
  6206  0167' 00C6'              	movwf	??___fladd
  6207  0168'                    u6545:
  6208  0168' 0D41'              	rlf	___fladd@b+3,w
  6209  0169' 0CC1'              	rrf	___fladd@b+3,f
  6210  016A' 0CC0'              	rrf	___fladd@b+2,f
  6211  016B' 0CBF'              	rrf	___fladd@b+1,f
  6212  016C' 0CBE'              	rrf	___fladd@b,f
  6213  016D' 0B80'              	decfsz	??___fladd& (0+127),f
  6214  016E' 2800'              	goto	u6545
  6215  016F'                    l4131:
  6216  016F' 3001               	movlw	1
  6217  0170' 00C6'              	movwf	??___fladd
  6218  0171' 0846'              	movf	??___fladd,w
  6219  0172' 1683               	bsf	3,5	;RP0=1, select bank1
  6220  0173' 1303               	bcf	3,6	;RP1=0, select bank1
  6221  0174' 0780'              	addwf	___fladd@bexp^(0+128),f
  6222  0175'                    l4133:
  6223  0175' 1683               	bsf	3,5	;RP0=1, select bank1
  6224  0176' 1303               	bcf	3,6	;RP1=0, select bank1
  6225  0177' 0800'              	movf	___fladd@aexp^(0+128),w
  6226  0178' 0200'              	subwf	___fladd@bexp^(0+128),w
  6227  0179' 1C03               	skipc
  6228  017A' 2800'              	goto	u6551
  6229  017B' 2800'              	goto	u6550
  6230  017C'                    u6551:
  6231  017C' 2800'              	goto	l739
  6232  017D'                    u6550:
  6233  017D'                    l737:
  6234  017D' 1B00'              	btfsc	___fladd@signs^(0+128),6
  6235  017E' 2800'              	goto	u6561
  6236  017F' 2800'              	goto	u6560
  6237  0180'                    u6561:
  6238  0180' 2800'              	goto	l4159
  6239  0181'                    u6560:
  6240  0181'                    l4135:
  6241  0181' 0800'              	movf	___fladd@bexp^(0+128),w
  6242  0182' 1D03               	btfss	3,2
  6243  0183' 2800'              	goto	u6571
  6244  0184' 2800'              	goto	u6570
  6245  0185'                    u6571:
  6246  0185' 2800'              	goto	l4141
  6247  0186'                    u6570:
  6248  0186'                    l4137:
  6249  0186' 3000               	movlw	0
  6250  0187' 1283               	bcf	3,5	;RP0=0, select bank0
  6251  0188' 1303               	bcf	3,6	;RP1=0, select bank0
  6252  0189' 00C1'              	movwf	?___fladd+3
  6253  018A' 3000               	movlw	0
  6254  018B' 00C0'              	movwf	?___fladd+2
  6255  018C' 3000               	movlw	0
  6256  018D' 00BF'              	movwf	?___fladd+1
  6257  018E' 3000               	movlw	0
  6258  018F' 00BE'              	movwf	?___fladd
  6259  0190' 2800'              	goto	l746
  6260  0191'                    l4141:
  6261  0191' 1283               	bcf	3,5	;RP0=0, select bank0
  6262  0192' 1303               	bcf	3,6	;RP1=0, select bank0
  6263  0193' 0842'              	movf	___fladd@a,w
  6264  0194' 07BE'              	addwf	___fladd@b,f
  6265  0195' 0843'              	movf	___fladd@a+1,w
  6266  0196' 1103               	clrz
  6267  0197' 1803               	skipnc
  6268  0198' 3E01               	addlw	1
  6269  0199' 1903               	skipnz
  6270  019A' 2800'              	goto	u6581
  6271  019B' 07BF'              	addwf	___fladd@b+1,f
  6272  019C'                    u6581:
  6273  019C' 0844'              	movf	___fladd@a+2,w
  6274  019D' 1103               	clrz
  6275  019E' 1803               	skipnc
  6276  019F' 3E01               	addlw	1
  6277  01A0' 1903               	skipnz
  6278  01A1' 2800'              	goto	u6582
  6279  01A2' 07C0'              	addwf	___fladd@b+2,f
  6280  01A3'                    u6582:
  6281  01A3' 0845'              	movf	___fladd@a+3,w
  6282  01A4' 1103               	clrz
  6283  01A5' 1803               	skipnc
  6284  01A6' 3E01               	addlw	1
  6285  01A7' 1903               	skipnz
  6286  01A8' 2800'              	goto	u6583
  6287  01A9' 07C1'              	addwf	___fladd@b+3,f
  6288  01AA'                    u6583:
  6289  01AA'                    l4143:
  6290  01AA' 1C41'              	btfss	___fladd@b+3,0
  6291  01AB' 2800'              	goto	u6591
  6292  01AC' 2800'              	goto	u6590
  6293  01AD'                    u6591:
  6294  01AD' 2800'              	goto	l4193
  6295  01AE'                    u6590:
  6296  01AE'                    l4145:
  6297  01AE' 1683               	bsf	3,5	;RP0=1, select bank1
  6298  01AF' 1303               	bcf	3,6	;RP1=0, select bank1
  6299  01B0' 1C00'              	btfss	___fladd@grs^(0+128),0
  6300  01B1' 2800'              	goto	u6601
  6301  01B2' 2800'              	goto	u6600
  6302  01B3'                    u6601:
  6303  01B3' 2800'              	goto	l4149
  6304  01B4'                    u6600:
  6305  01B4'                    l4147:
  6306  01B4' 0800'              	movf	___fladd@grs^(0+128),w
  6307  01B5' 1283               	bcf	3,5	;RP0=0, select bank0
  6308  01B6' 1303               	bcf	3,6	;RP1=0, select bank0
  6309  01B7' 00C6'              	movwf	??___fladd
  6310  01B8' 1003               	clrc
  6311  01B9' 0C46'              	rrf	??___fladd,w
  6312  01BA' 3801               	iorlw	1
  6313  01BB' 00C7'              	movwf	??___fladd+1
  6314  01BC' 0847'              	movf	??___fladd+1,w
  6315  01BD' 1683               	bsf	3,5	;RP0=1, select bank1
  6316  01BE' 1303               	bcf	3,6	;RP1=0, select bank1
  6317  01BF' 0080'              	movwf	___fladd@grs^(0+128)
  6318  01C0' 2800'              	goto	l4151
  6319  01C1'                    l4149:
  6320  01C1' 1003               	clrc
  6321  01C2' 0C80'              	rrf	___fladd@grs^(0+128),f
  6322  01C3'                    l4151:
  6323  01C3' 1283               	bcf	3,5	;RP0=0, select bank0
  6324  01C4' 1303               	bcf	3,6	;RP1=0, select bank0
  6325  01C5' 1C3E'              	btfss	___fladd@b,0
  6326  01C6' 2800'              	goto	u6611
  6327  01C7' 2800'              	goto	u6610
  6328  01C8'                    u6611:
  6329  01C8' 2800'              	goto	l4155
  6330  01C9'                    u6610:
  6331  01C9'                    l4153:
  6332  01C9' 1683               	bsf	3,5	;RP0=1, select bank1
  6333  01CA' 1303               	bcf	3,6	;RP1=0, select bank1
  6334  01CB' 1780'              	bsf	___fladd@grs^(0+128),7
  6335  01CC'                    l4155:
  6336  01CC' 3001               	movlw	1
  6337  01CD' 1283               	bcf	3,5	;RP0=0, select bank0
  6338  01CE' 00C6'              	movwf	??___fladd
  6339  01CF'                    u6625:
  6340  01CF' 0D41'              	rlf	___fladd@b+3,w
  6341  01D0' 0CC1'              	rrf	___fladd@b+3,f
  6342  01D1' 0CC0'              	rrf	___fladd@b+2,f
  6343  01D2' 0CBF'              	rrf	___fladd@b+1,f
  6344  01D3' 0CBE'              	rrf	___fladd@b,f
  6345  01D4' 0B80'              	decfsz	??___fladd& (0+127),f
  6346  01D5' 2800'              	goto	u6625
  6347  01D6'                    l4157:
  6348  01D6' 3001               	movlw	1
  6349  01D7' 00C6'              	movwf	??___fladd
  6350  01D8' 0846'              	movf	??___fladd,w
  6351  01D9' 1683               	bsf	3,5	;RP0=1, select bank1
  6352  01DA' 1303               	bcf	3,6	;RP1=0, select bank1
  6353  01DB' 0780'              	addwf	___fladd@bexp^(0+128),f
  6354  01DC' 2800'              	goto	l4193
  6355  01DD'                    l4159:
  6356  01DD' 1283               	bcf	3,5	;RP0=0, select bank0
  6357  01DE' 1303               	bcf	3,6	;RP1=0, select bank0
  6358  01DF' 0841'              	movf	___fladd@b+3,w
  6359  01E0' 3A80               	xorlw	128
  6360  01E1' 00FF               	movwf	btemp+1
  6361  01E2' 0845'              	movf	___fladd@a+3,w
  6362  01E3' 3A80               	xorlw	128
  6363  01E4' 027F               	subwf	btemp+1,w
  6364  01E5' 1D03               	skipz
  6365  01E6' 2800'              	goto	u6633
  6366  01E7' 0844'              	movf	___fladd@a+2,w
  6367  01E8' 0240'              	subwf	___fladd@b+2,w
  6368  01E9' 1D03               	skipz
  6369  01EA' 2800'              	goto	u6633
  6370  01EB' 0843'              	movf	___fladd@a+1,w
  6371  01EC' 023F'              	subwf	___fladd@b+1,w
  6372  01ED' 1D03               	skipz
  6373  01EE' 2800'              	goto	u6633
  6374  01EF' 0842'              	movf	___fladd@a,w
  6375  01F0' 023E'              	subwf	___fladd@b,w
  6376  01F1'                    u6633:
  6377  01F1' 1803               	skipnc
  6378  01F2' 2800'              	goto	u6631
  6379  01F3' 2800'              	goto	u6630
  6380  01F4'                    u6631:
  6381  01F4' 2800'              	goto	l4169
  6382  01F5'                    u6630:
  6383  01F5'                    l4161:
  6384  01F5' 30FF               	movlw	255
  6385  01F6' 00C6'              	movwf	??___fladd
  6386  01F7' 30FF               	movlw	255
  6387  01F8' 00C7'              	movwf	??___fladd+1
  6388  01F9' 30FF               	movlw	255
  6389  01FA' 00C8'              	movwf	??___fladd+2
  6390  01FB' 30FF               	movlw	255
  6391  01FC' 00C9'              	movwf	??___fladd+3
  6392  01FD' 0842'              	movf	___fladd@a,w
  6393  01FE' 00CA'              	movwf	??___fladd+4
  6394  01FF' 0843'              	movf	___fladd@a+1,w
  6395  0200' 00CB'              	movwf	??___fladd+5
  6396  0201' 0844'              	movf	___fladd@a+2,w
  6397  0202' 00CC'              	movwf	??___fladd+6
  6398  0203' 0845'              	movf	___fladd@a+3,w
  6399  0204' 00CD'              	movwf	??___fladd+7
  6400  0205' 083E'              	movf	___fladd@b,w
  6401  0206' 02CA'              	subwf	??___fladd+4,f
  6402  0207' 083F'              	movf	___fladd@b+1,w
  6403  0208' 1C03               	skipc
  6404  0209' 0F3F'              	incfsz	___fladd@b+1,w
  6405  020A' 2800'              	goto	u6641
  6406  020B' 2800'              	goto	u6642
  6407  020C'                    u6641:
  6408  020C' 02CB'              	subwf	??___fladd+5,f
  6409  020D'                    u6642:
  6410  020D' 0840'              	movf	___fladd@b+2,w
  6411  020E' 1C03               	skipc
  6412  020F' 0F40'              	incfsz	___fladd@b+2,w
  6413  0210' 2800'              	goto	u6643
  6414  0211' 2800'              	goto	u6644
  6415  0212'                    u6643:
  6416  0212' 02CC'              	subwf	??___fladd+6,f
  6417  0213'                    u6644:
  6418  0213' 0841'              	movf	___fladd@b+3,w
  6419  0214' 1C03               	skipc
  6420  0215' 0F41'              	incfsz	___fladd@b+3,w
  6421  0216' 2800'              	goto	u6645
  6422  0217' 2800'              	goto	u6646
  6423  0218'                    u6645:
  6424  0218' 02CD'              	subwf	??___fladd+7,f
  6425  0219'                    u6646:
  6426  0219' 084A'              	movf	??___fladd+4,w
  6427  021A' 07C6'              	addwf	??___fladd,f
  6428  021B' 084B'              	movf	??___fladd+5,w
  6429  021C' 1803               	skipnc
  6430  021D' 0F4B'              	incfsz	??___fladd+5,w
  6431  021E' 2800'              	goto	u6650
  6432  021F' 2800'              	goto	u6651
  6433  0220'                    u6650:
  6434  0220' 07C7'              	addwf	??___fladd+1,f
  6435  0221'                    u6651:
  6436  0221' 084C'              	movf	??___fladd+6,w
  6437  0222' 1803               	skipnc
  6438  0223' 0F4C'              	incfsz	??___fladd+6,w
  6439  0224' 2800'              	goto	u6652
  6440  0225' 2800'              	goto	u6653
  6441  0226'                    u6652:
  6442  0226' 07C8'              	addwf	??___fladd+2,f
  6443  0227'                    u6653:
  6444  0227' 084D'              	movf	??___fladd+7,w
  6445  0228' 1803               	skipnc
  6446  0229' 0A4D'              	incf	??___fladd+7,w
  6447  022A' 07C9'              	addwf	??___fladd+3,f
  6448  022B' 0849'              	movf	??___fladd+3,w
  6449  022C' 00C1'              	movwf	___fladd@b+3
  6450  022D' 0848'              	movf	??___fladd+2,w
  6451  022E' 00C0'              	movwf	___fladd@b+2
  6452  022F' 0847'              	movf	??___fladd+1,w
  6453  0230' 00BF'              	movwf	___fladd@b+1
  6454  0231' 0846'              	movf	??___fladd,w
  6455  0232' 00BE'              	movwf	___fladd@b
  6456  0233'                    l4163:
  6457  0233' 3080               	movlw	128
  6458  0234' 00C6'              	movwf	??___fladd
  6459  0235' 0846'              	movf	??___fladd,w
  6460  0236' 1683               	bsf	3,5	;RP0=1, select bank1
  6461  0237' 1303               	bcf	3,6	;RP1=0, select bank1
  6462  0238' 0680'              	xorwf	___fladd@signs^(0+128),f
  6463  0239' 0980'              	comf	___fladd@grs^(0+128),f
  6464  023A' 0A80'              	incf	___fladd@grs^(0+128),f
  6465  023B'                    l4165:
  6466  023B' 0800'              	movf	___fladd@grs^(0+128),w
  6467  023C' 1D03               	btfss	3,2
  6468  023D' 2800'              	goto	u6661
  6469  023E' 2800'              	goto	u6660
  6470  023F'                    u6661:
  6471  023F' 2800'              	goto	l754
  6472  0240'                    u6660:
  6473  0240'                    l4167:
  6474  0240' 3001               	movlw	1
  6475  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  6476  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  6477  0243' 07BE'              	addwf	___fladd@b,f
  6478  0244' 3000               	movlw	0
  6479  0245' 1803               	skipnc
  6480  0246' 3001               	movlw	1
  6481  0247' 07BF'              	addwf	___fladd@b+1,f
  6482  0248' 3000               	movlw	0
  6483  0249' 1803               	skipnc
  6484  024A' 3001               	movlw	1
  6485  024B' 07C0'              	addwf	___fladd@b+2,f
  6486  024C' 3000               	movlw	0
  6487  024D' 1803               	skipnc
  6488  024E' 3001               	movlw	1
  6489  024F' 07C1'              	addwf	___fladd@b+3,f
  6490  0250' 2800'              	goto	l754
  6491  0251'                    l4169:
  6492  0251' 0842'              	movf	___fladd@a,w
  6493  0252' 02BE'              	subwf	___fladd@b,f
  6494  0253' 0843'              	movf	___fladd@a+1,w
  6495  0254' 1C03               	skipc
  6496  0255' 0F43'              	incfsz	___fladd@a+1,w
  6497  0256' 02BF'              	subwf	___fladd@b+1,f
  6498  0257' 0844'              	movf	___fladd@a+2,w
  6499  0258' 1C03               	skipc
  6500  0259' 0F44'              	incfsz	___fladd@a+2,w
  6501  025A' 02C0'              	subwf	___fladd@b+2,f
  6502  025B' 0845'              	movf	___fladd@a+3,w
  6503  025C' 1C03               	skipc
  6504  025D' 0F45'              	incfsz	___fladd@a+3,w
  6505  025E' 02C1'              	subwf	___fladd@b+3,f
  6506  025F'                    l754:
  6507  025F' 1283               	bcf	3,5	;RP0=0, select bank0
  6508  0260' 0841'              	movf	___fladd@b+3,w
  6509  0261' 0440'              	iorwf	___fladd@b+2,w
  6510  0262' 043F'              	iorwf	___fladd@b+1,w
  6511  0263' 043E'              	iorwf	___fladd@b,w
  6512  0264' 1D03               	skipz
  6513  0265' 2800'              	goto	u6671
  6514  0266' 2800'              	goto	u6670
  6515  0267'                    u6671:
  6516  0267' 2800'              	goto	l4191
  6517  0268'                    u6670:
  6518  0268'                    l4171:
  6519  0268' 1683               	bsf	3,5	;RP0=1, select bank1
  6520  0269' 1303               	bcf	3,6	;RP1=0, select bank1
  6521  026A' 0800'              	movf	___fladd@grs^(0+128),w
  6522  026B' 1D03               	btfss	3,2
  6523  026C' 2800'              	goto	u6681
  6524  026D' 2800'              	goto	u6680
  6525  026E'                    u6681:
  6526  026E' 2800'              	goto	l4191
  6527  026F'                    u6680:
  6528  026F'                    l4173:
  6529  026F' 3000               	movlw	0
  6530  0270' 1283               	bcf	3,5	;RP0=0, select bank0
  6531  0271' 1303               	bcf	3,6	;RP1=0, select bank0
  6532  0272' 00C1'              	movwf	?___fladd+3
  6533  0273' 3000               	movlw	0
  6534  0274' 00C0'              	movwf	?___fladd+2
  6535  0275' 3000               	movlw	0
  6536  0276' 00BF'              	movwf	?___fladd+1
  6537  0277' 3000               	movlw	0
  6538  0278' 00BE'              	movwf	?___fladd
  6539  0279' 2800'              	goto	l746
  6540  027A'                    l4177:
  6541  027A' 3001               	movlw	1
  6542  027B' 00C6'              	movwf	??___fladd
  6543  027C'                    u6695:
  6544  027C' 1003               	clrc
  6545  027D' 0DBE'              	rlf	___fladd@b,f
  6546  027E' 0DBF'              	rlf	___fladd@b+1,f
  6547  027F' 0DC0'              	rlf	___fladd@b+2,f
  6548  0280' 0DC1'              	rlf	___fladd@b+3,f
  6549  0281' 0BC6'              	decfsz	??___fladd,f
  6550  0282' 2800'              	goto	u6695
  6551  0283'                    l4179:
  6552  0283' 1683               	bsf	3,5	;RP0=1, select bank1
  6553  0284' 1303               	bcf	3,6	;RP1=0, select bank1
  6554  0285' 1F80'              	btfss	___fladd@grs^(0+128),7
  6555  0286' 2800'              	goto	u6701
  6556  0287' 2800'              	goto	u6700
  6557  0288'                    u6701:
  6558  0288' 2800'              	goto	l758
  6559  0289'                    u6700:
  6560  0289'                    l4181:
  6561  0289' 1283               	bcf	3,5	;RP0=0, select bank0
  6562  028A' 1303               	bcf	3,6	;RP1=0, select bank0
  6563  028B' 143E'              	bsf	___fladd@b,0
  6564  028C'                    l758:
  6565  028C' 1683               	bsf	3,5	;RP0=1, select bank1
  6566  028D' 1303               	bcf	3,6	;RP1=0, select bank1
  6567  028E' 1C00'              	btfss	___fladd@grs^(0+128),0
  6568  028F' 2800'              	goto	u6711
  6569  0290' 2800'              	goto	u6710
  6570  0291'                    u6711:
  6571  0291' 2800'              	goto	l4185
  6572  0292'                    u6710:
  6573  0292'                    l4183:
  6574  0292' 1403               	setc
  6575  0293' 0D80'              	rlf	___fladd@grs^(0+128),f
  6576  0294' 2800'              	goto	l4187
  6577  0295'                    l4185:
  6578  0295' 1003               	clrc
  6579  0296' 0D80'              	rlf	___fladd@grs^(0+128),f
  6580  0297'                    l4187:
  6581  0297' 0800'              	movf	___fladd@bexp^(0+128),w
  6582  0298' 1903               	btfsc	3,2
  6583  0299' 2800'              	goto	u6721
  6584  029A' 2800'              	goto	u6720
  6585  029B'                    u6721:
  6586  029B' 2800'              	goto	l4191
  6587  029C'                    u6720:
  6588  029C'                    l4189:
  6589  029C' 3001               	movlw	1
  6590  029D' 0280'              	subwf	___fladd@bexp^(0+128),f
  6591  029E'                    l4191:
  6592  029E' 1283               	bcf	3,5	;RP0=0, select bank0
  6593  029F' 1FC0'              	btfss	___fladd@b+2,7
  6594  02A0' 2800'              	goto	u6731
  6595  02A1' 2800'              	goto	u6730
  6596  02A2'                    u6731:
  6597  02A2' 2800'              	goto	l4177
  6598  02A3'                    u6730:
  6599  02A3'                    l4193:
  6600  02A3' 1683               	bsf	3,5	;RP0=1, select bank1
  6601  02A4' 1303               	bcf	3,6	;RP1=0, select bank1
  6602  02A5' 0180'              	clrf	___fladd@aexp^(0+128)
  6603  02A6'                    l4195:
  6604  02A6' 1F80'              	btfss	___fladd@grs^(0+128),7
  6605  02A7' 2800'              	goto	u6741
  6606  02A8' 2800'              	goto	u6740
  6607  02A9'                    u6741:
  6608  02A9' 2800'              	goto	l4203
  6609  02AA'                    u6740:
  6610  02AA'                    l4197:
  6611  02AA' 0800'              	movf	___fladd@grs^(0+128),w
  6612  02AB' 397F               	andlw	127
  6613  02AC' 1903               	btfsc	3,2
  6614  02AD' 2800'              	goto	u6751
  6615  02AE' 2800'              	goto	u6750
  6616  02AF'                    u6751:
  6617  02AF' 2800'              	goto	l764
  6618  02B0'                    u6750:
  6619  02B0'                    l4199:
  6620  02B0' 1683               	bsf	3,5	;RP0=1, select bank1
  6621  02B1' 1303               	bcf	3,6	;RP1=0, select bank1
  6622  02B2' 0180'              	clrf	___fladd@aexp^(0+128)
  6623  02B3' 0A80'              	incf	___fladd@aexp^(0+128),f
  6624  02B4' 2800'              	goto	l4203
  6625  02B5'                    l764:
  6626  02B5' 1283               	bcf	3,5	;RP0=0, select bank0
  6627  02B6' 1303               	bcf	3,6	;RP1=0, select bank0
  6628  02B7' 1C3E'              	btfss	___fladd@b,0
  6629  02B8' 2800'              	goto	u6761
  6630  02B9' 2800'              	goto	u6760
  6631  02BA'                    u6761:
  6632  02BA' 2800'              	goto	l4203
  6633  02BB'                    u6760:
  6634  02BB' 2800'              	goto	l4199
  6635  02BC'                    l4203:
  6636  02BC' 1683               	bsf	3,5	;RP0=1, select bank1
  6637  02BD' 1303               	bcf	3,6	;RP1=0, select bank1
  6638  02BE' 0800'              	movf	___fladd@aexp^(0+128),w
  6639  02BF' 1903               	btfsc	3,2
  6640  02C0' 2800'              	goto	u6771
  6641  02C1' 2800'              	goto	u6770
  6642  02C2'                    u6771:
  6643  02C2' 2800'              	goto	l767
  6644  02C3'                    u6770:
  6645  02C3'                    l4205:
  6646  02C3' 3001               	movlw	1
  6647  02C4' 1283               	bcf	3,5	;RP0=0, select bank0
  6648  02C5' 1303               	bcf	3,6	;RP1=0, select bank0
  6649  02C6' 07BE'              	addwf	___fladd@b,f
  6650  02C7' 3000               	movlw	0
  6651  02C8' 1803               	skipnc
  6652  02C9' 3001               	movlw	1
  6653  02CA' 07BF'              	addwf	___fladd@b+1,f
  6654  02CB' 3000               	movlw	0
  6655  02CC' 1803               	skipnc
  6656  02CD' 3001               	movlw	1
  6657  02CE' 07C0'              	addwf	___fladd@b+2,f
  6658  02CF' 3000               	movlw	0
  6659  02D0' 1803               	skipnc
  6660  02D1' 3001               	movlw	1
  6661  02D2' 07C1'              	addwf	___fladd@b+3,f
  6662  02D3'                    l4207:
  6663  02D3' 1C41'              	btfss	___fladd@b+3,0
  6664  02D4' 2800'              	goto	u6781
  6665  02D5' 2800'              	goto	u6780
  6666  02D6'                    u6781:
  6667  02D6' 2800'              	goto	l767
  6668  02D7'                    u6780:
  6669  02D7'                    l4209:
  6670  02D7' 083E'              	movf	___fladd@b,w
  6671  02D8' 00C6'              	movwf	??___fladd
  6672  02D9' 083F'              	movf	___fladd@b+1,w
  6673  02DA' 00C7'              	movwf	??___fladd+1
  6674  02DB' 0840'              	movf	___fladd@b+2,w
  6675  02DC' 00C8'              	movwf	??___fladd+2
  6676  02DD' 0841'              	movf	___fladd@b+3,w
  6677  02DE' 00C9'              	movwf	??___fladd+3
  6678  02DF' 3001               	movlw	1
  6679  02E0' 00CA'              	movwf	??___fladd+4
  6680  02E1'                    u6795:
  6681  02E1' 0D49'              	rlf	??___fladd+3,w
  6682  02E2' 0CC9'              	rrf	??___fladd+3,f
  6683  02E3' 0CC8'              	rrf	??___fladd+2,f
  6684  02E4' 0CC7'              	rrf	??___fladd+1,f
  6685  02E5' 0CC6'              	rrf	??___fladd,f
  6686  02E6'                    u6790:
  6687  02E6' 0BCA'              	decfsz	??___fladd+4,f
  6688  02E7' 2800'              	goto	u6795
  6689  02E8' 0849'              	movf	??___fladd+3,w
  6690  02E9' 00C1'              	movwf	___fladd@b+3
  6691  02EA' 0848'              	movf	??___fladd+2,w
  6692  02EB' 00C0'              	movwf	___fladd@b+2
  6693  02EC' 0847'              	movf	??___fladd+1,w
  6694  02ED' 00BF'              	movwf	___fladd@b+1
  6695  02EE' 0846'              	movf	??___fladd,w
  6696  02EF' 00BE'              	movwf	___fladd@b
  6697  02F0' 1683               	bsf	3,5	;RP0=1, select bank1
  6698  02F1' 1303               	bcf	3,6	;RP1=0, select bank1
  6699  02F2' 0A00'              	incf	___fladd@bexp^(0+128),w
  6700  02F3' 1903               	btfsc	3,2
  6701  02F4' 2800'              	goto	u6801
  6702  02F5' 2800'              	goto	u6800
  6703  02F6'                    u6801:
  6704  02F6' 2800'              	goto	l767
  6705  02F7'                    u6800:
  6706  02F7'                    l4211:
  6707  02F7' 3001               	movlw	1
  6708  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  6709  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  6710  02FA' 00C6'              	movwf	??___fladd
  6711  02FB' 0846'              	movf	??___fladd,w
  6712  02FC' 1683               	bsf	3,5	;RP0=1, select bank1
  6713  02FD' 1303               	bcf	3,6	;RP1=0, select bank1
  6714  02FE' 0780'              	addwf	___fladd@bexp^(0+128),f
  6715  02FF'                    l767:
  6716  02FF' 1683               	bsf	3,5	;RP0=1, select bank1
  6717  0300' 1303               	bcf	3,6	;RP1=0, select bank1
  6718  0301' 0A00'              	incf	___fladd@bexp^(0+128),w
  6719  0302' 1903               	btfsc	3,2
  6720  0303' 2800'              	goto	u6811
  6721  0304' 2800'              	goto	u6810
  6722  0305'                    u6811:
  6723  0305' 2800'              	goto	l4215
  6724  0306'                    u6810:
  6725  0306'                    l4213:
  6726  0306' 0800'              	movf	___fladd@bexp^(0+128),w
  6727  0307' 1D03               	btfss	3,2
  6728  0308' 2800'              	goto	u6821
  6729  0309' 2800'              	goto	u6820
  6730  030A'                    u6821:
  6731  030A' 2800'              	goto	l4221
  6732  030B'                    u6820:
  6733  030B'                    l4215:
  6734  030B' 3000               	movlw	0
  6735  030C' 1283               	bcf	3,5	;RP0=0, select bank0
  6736  030D' 1303               	bcf	3,6	;RP1=0, select bank0
  6737  030E' 00C1'              	movwf	___fladd@b+3
  6738  030F' 3000               	movlw	0
  6739  0310' 00C0'              	movwf	___fladd@b+2
  6740  0311' 3000               	movlw	0
  6741  0312' 00BF'              	movwf	___fladd@b+1
  6742  0313' 3000               	movlw	0
  6743  0314' 00BE'              	movwf	___fladd@b
  6744  0315'                    l4217:
  6745  0315' 1683               	bsf	3,5	;RP0=1, select bank1
  6746  0316' 1303               	bcf	3,6	;RP1=0, select bank1
  6747  0317' 0800'              	movf	___fladd@bexp^(0+128),w
  6748  0318' 1D03               	btfss	3,2
  6749  0319' 2800'              	goto	u6831
  6750  031A' 2800'              	goto	u6830
  6751  031B'                    u6831:
  6752  031B' 2800'              	goto	l4221
  6753  031C'                    u6830:
  6754  031C'                    l4219:
  6755  031C' 0180'              	clrf	___fladd@signs^(0+128)
  6756  031D'                    l4221:
  6757  031D' 1C00'              	btfss	___fladd@bexp^(0+128),0
  6758  031E' 2800'              	goto	u6841
  6759  031F' 2800'              	goto	u6840
  6760  0320'                    u6841:
  6761  0320' 2800'              	goto	l4225
  6762  0321'                    u6840:
  6763  0321'                    l4223:
  6764  0321' 1283               	bcf	3,5	;RP0=0, select bank0
  6765  0322' 1303               	bcf	3,6	;RP1=0, select bank0
  6766  0323' 17C0'              	bsf	___fladd@b+2,7
  6767  0324' 2800'              	goto	l775
  6768  0325'                    l4225:
  6769  0325' 307F               	movlw	127
  6770  0326' 1283               	bcf	3,5	;RP0=0, select bank0
  6771  0327' 1303               	bcf	3,6	;RP1=0, select bank0
  6772  0328' 00C6'              	movwf	??___fladd
  6773  0329' 0846'              	movf	??___fladd,w
  6774  032A' 05C0'              	andwf	___fladd@b+2,f
  6775  032B'                    l775:
  6776  032B' 1683               	bsf	3,5	;RP0=1, select bank1
  6777  032C' 1303               	bcf	3,6	;RP1=0, select bank1
  6778  032D' 0800'              	movf	___fladd@bexp^(0+128),w
  6779  032E' 1283               	bcf	3,5	;RP0=0, select bank0
  6780  032F' 1303               	bcf	3,6	;RP1=0, select bank0
  6781  0330' 00C6'              	movwf	??___fladd
  6782  0331' 1003               	clrc
  6783  0332' 0C46'              	rrf	??___fladd,w
  6784  0333' 00C7'              	movwf	??___fladd+1
  6785  0334' 0847'              	movf	??___fladd+1,w
  6786  0335' 00C1'              	movwf	___fladd@b+3
  6787  0336'                    l4227:
  6788  0336' 1683               	bsf	3,5	;RP0=1, select bank1
  6789  0337' 1303               	bcf	3,6	;RP1=0, select bank1
  6790  0338' 1F80'              	btfss	___fladd@signs^(0+128),7
  6791  0339' 2800'              	goto	u6851
  6792  033A' 2800'              	goto	u6850
  6793  033B'                    u6851:
  6794  033B' 2800'              	goto	l776
  6795  033C'                    u6850:
  6796  033C'                    l4229:
  6797  033C' 1283               	bcf	3,5	;RP0=0, select bank0
  6798  033D' 1303               	bcf	3,6	;RP1=0, select bank0
  6799  033E' 17C1'              	bsf	___fladd@b+3,7
  6800  033F'                    l776:
  6801  033F'                    l746:
  6802  033F' 0008               	return
  6803  0340'                    __end_of___fladd:
  6804                           
  6805                           	psect	text17
  6806  0000'                    __ptext17:	
  6807 ;; *************** function ___flneg *****************
  6808 ;; Defined at:
  6809 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  f1              4    0[BANK0 ] unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  4    0[BANK0 ] unsigned char 
  6816 ;; Registers used:
  6817 ;;		wreg
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6823 ;;      Params:         0       4       0       0       0
  6824 ;;      Locals:         0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0
  6826 ;;      Totals:         0       4       0       0       0
  6827 ;;Total ram usage:        4 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    2
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_sprintf
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function ___flneg
  6839  0000'                    ___flneg:
  6840  0000'                    l4649:	
  6841                           ;incstack = 0
  6842                           ; Regs used in ___flneg: [wreg]
  6843                           
  6844  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6845  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6846  0002' 0803'              	movf	___flneg@f1+3,w
  6847  0003' 0402'              	iorwf	___flneg@f1+2,w
  6848  0004' 0401'              	iorwf	___flneg@f1+1,w
  6849  0005' 0400'              	iorwf	___flneg@f1,w
  6850  0006' 1903               	skipnz
  6851  0007' 2800'              	goto	u7971
  6852  0008' 2800'              	goto	u7970
  6853  0009'                    u7971:
  6854  0009' 2800'              	goto	l4653
  6855  000A'                    u7970:
  6856  000A'                    l4651:
  6857  000A' 3080               	movlw	128
  6858  000B' 0683'              	xorwf	___flneg@f1+3,f
  6859  000C'                    l4653:
  6860  000C'                    l605:
  6861  000C' 0008               	return
  6862  000D'                    __end_of___flneg:
  6863                           
  6864                           	psect	text18
  6865  0000'                    __ptext18:	
  6866 ;; *************** function ___flge *****************
  6867 ;; Defined at:
  6868 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  ff1             4    0[BANK0 ] unsigned char 
  6871 ;;  ff2             4    4[BANK0 ] unsigned char 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;		None               void
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6883 ;;      Params:         0       8       0       0       0
  6884 ;;      Locals:         0       0       0       0       0
  6885 ;;      Temps:          0       4       0       0       0
  6886 ;;      Totals:         0      12       0       0       0
  6887 ;;Total ram usage:       12 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    2
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_sprintf
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           
  6898                           ;psect for function ___flge
  6899  0000'                    ___flge:
  6900  0000'                    l4629:	
  6901                           ;incstack = 0
  6902                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6903                           
  6904  0000' 3000               	movlw	0
  6905  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  6906  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  6907  0003' 0500'              	andwf	___flge@ff1,w
  6908  0004' 0088'              	movwf	??___flge
  6909  0005' 3000               	movlw	0
  6910  0006' 0501'              	andwf	___flge@ff1+1,w
  6911  0007' 0089'              	movwf	??___flge+1
  6912  0008' 3080               	movlw	128
  6913  0009' 0502'              	andwf	___flge@ff1+2,w
  6914  000A' 008A'              	movwf	??___flge+2
  6915  000B' 307F               	movlw	127
  6916  000C' 0503'              	andwf	___flge@ff1+3,w
  6917  000D' 008B'              	movwf	??___flge+3
  6918  000E' 080B'              	movf	??___flge+3,w
  6919  000F' 040A'              	iorwf	??___flge+2,w
  6920  0010' 0409'              	iorwf	??___flge+1,w
  6921  0011' 0408'              	iorwf	??___flge,w
  6922  0012' 1D03               	skipz
  6923  0013' 2800'              	goto	u7901
  6924  0014' 2800'              	goto	u7900
  6925  0015'                    u7901:
  6926  0015' 2800'              	goto	l597
  6927  0016'                    u7900:
  6928  0016'                    l4631:
  6929  0016' 3000               	movlw	0
  6930  0017' 0083'              	movwf	___flge@ff1+3
  6931  0018' 3000               	movlw	0
  6932  0019' 0082'              	movwf	___flge@ff1+2
  6933  001A' 3000               	movlw	0
  6934  001B' 0081'              	movwf	___flge@ff1+1
  6935  001C' 3000               	movlw	0
  6936  001D' 0080'              	movwf	___flge@ff1
  6937  001E'                    l597:
  6938  001E' 3000               	movlw	0
  6939  001F' 0504'              	andwf	___flge@ff2,w
  6940  0020' 0088'              	movwf	??___flge
  6941  0021' 3000               	movlw	0
  6942  0022' 0505'              	andwf	___flge@ff2+1,w
  6943  0023' 0089'              	movwf	??___flge+1
  6944  0024' 3080               	movlw	128
  6945  0025' 0506'              	andwf	___flge@ff2+2,w
  6946  0026' 008A'              	movwf	??___flge+2
  6947  0027' 307F               	movlw	127
  6948  0028' 0507'              	andwf	___flge@ff2+3,w
  6949  0029' 008B'              	movwf	??___flge+3
  6950  002A' 080B'              	movf	??___flge+3,w
  6951  002B' 040A'              	iorwf	??___flge+2,w
  6952  002C' 0409'              	iorwf	??___flge+1,w
  6953  002D' 0408'              	iorwf	??___flge,w
  6954  002E' 1D03               	skipz
  6955  002F' 2800'              	goto	u7911
  6956  0030' 2800'              	goto	u7910
  6957  0031'                    u7911:
  6958  0031' 2800'              	goto	l4635
  6959  0032'                    u7910:
  6960  0032'                    l4633:
  6961  0032' 3000               	movlw	0
  6962  0033' 0087'              	movwf	___flge@ff2+3
  6963  0034' 3000               	movlw	0
  6964  0035' 0086'              	movwf	___flge@ff2+2
  6965  0036' 3000               	movlw	0
  6966  0037' 0085'              	movwf	___flge@ff2+1
  6967  0038' 3000               	movlw	0
  6968  0039' 0084'              	movwf	___flge@ff2
  6969  003A'                    l4635:
  6970  003A' 1F83'              	btfss	___flge@ff1+3,7
  6971  003B' 2800'              	goto	u7921
  6972  003C' 2800'              	goto	u7920
  6973  003D'                    u7921:
  6974  003D' 2800'              	goto	l4639
  6975  003E'                    u7920:
  6976  003E'                    l4637:
  6977  003E' 3000               	movlw	0
  6978  003F' 0088'              	movwf	??___flge
  6979  0040' 3000               	movlw	0
  6980  0041' 0089'              	movwf	??___flge+1
  6981  0042' 3000               	movlw	0
  6982  0043' 008A'              	movwf	??___flge+2
  6983  0044' 3080               	movlw	128
  6984  0045' 008B'              	movwf	??___flge+3
  6985  0046' 0800'              	movf	___flge@ff1,w
  6986  0047' 0288'              	subwf	??___flge,f
  6987  0048' 0801'              	movf	___flge@ff1+1,w
  6988  0049' 1C03               	skipc
  6989  004A' 0F01'              	incfsz	___flge@ff1+1,w
  6990  004B' 2800'              	goto	u7931
  6991  004C' 2800'              	goto	u7932
  6992  004D'                    u7931:
  6993  004D' 0289'              	subwf	??___flge+1,f
  6994  004E'                    u7932:
  6995  004E' 0802'              	movf	___flge@ff1+2,w
  6996  004F' 1C03               	skipc
  6997  0050' 0F02'              	incfsz	___flge@ff1+2,w
  6998  0051' 2800'              	goto	u7933
  6999  0052' 2800'              	goto	u7934
  7000  0053'                    u7933:
  7001  0053' 028A'              	subwf	??___flge+2,f
  7002  0054'                    u7934:
  7003  0054' 0803'              	movf	___flge@ff1+3,w
  7004  0055' 1C03               	skipc
  7005  0056' 0F03'              	incfsz	___flge@ff1+3,w
  7006  0057' 2800'              	goto	u7935
  7007  0058' 2800'              	goto	u7936
  7008  0059'                    u7935:
  7009  0059' 028B'              	subwf	??___flge+3,f
  7010  005A'                    u7936:
  7011  005A' 080B'              	movf	??___flge+3,w
  7012  005B' 0083'              	movwf	___flge@ff1+3
  7013  005C' 080A'              	movf	??___flge+2,w
  7014  005D' 0082'              	movwf	___flge@ff1+2
  7015  005E' 0809'              	movf	??___flge+1,w
  7016  005F' 0081'              	movwf	___flge@ff1+1
  7017  0060' 0808'              	movf	??___flge,w
  7018  0061' 0080'              	movwf	___flge@ff1
  7019  0062'                    l4639:
  7020  0062' 1F87'              	btfss	___flge@ff2+3,7
  7021  0063' 2800'              	goto	u7941
  7022  0064' 2800'              	goto	u7940
  7023  0065'                    u7941:
  7024  0065' 2800'              	goto	l600
  7025  0066'                    u7940:
  7026  0066'                    l4641:
  7027  0066' 3000               	movlw	0
  7028  0067' 0088'              	movwf	??___flge
  7029  0068' 3000               	movlw	0
  7030  0069' 0089'              	movwf	??___flge+1
  7031  006A' 3000               	movlw	0
  7032  006B' 008A'              	movwf	??___flge+2
  7033  006C' 3080               	movlw	128
  7034  006D' 008B'              	movwf	??___flge+3
  7035  006E' 0804'              	movf	___flge@ff2,w
  7036  006F' 0288'              	subwf	??___flge,f
  7037  0070' 0805'              	movf	___flge@ff2+1,w
  7038  0071' 1C03               	skipc
  7039  0072' 0F05'              	incfsz	___flge@ff2+1,w
  7040  0073' 2800'              	goto	u7951
  7041  0074' 2800'              	goto	u7952
  7042  0075'                    u7951:
  7043  0075' 0289'              	subwf	??___flge+1,f
  7044  0076'                    u7952:
  7045  0076' 0806'              	movf	___flge@ff2+2,w
  7046  0077' 1C03               	skipc
  7047  0078' 0F06'              	incfsz	___flge@ff2+2,w
  7048  0079' 2800'              	goto	u7953
  7049  007A' 2800'              	goto	u7954
  7050  007B'                    u7953:
  7051  007B' 028A'              	subwf	??___flge+2,f
  7052  007C'                    u7954:
  7053  007C' 0807'              	movf	___flge@ff2+3,w
  7054  007D' 1C03               	skipc
  7055  007E' 0F07'              	incfsz	___flge@ff2+3,w
  7056  007F' 2800'              	goto	u7955
  7057  0080' 2800'              	goto	u7956
  7058  0081'                    u7955:
  7059  0081' 028B'              	subwf	??___flge+3,f
  7060  0082'                    u7956:
  7061  0082' 080B'              	movf	??___flge+3,w
  7062  0083' 0087'              	movwf	___flge@ff2+3
  7063  0084' 080A'              	movf	??___flge+2,w
  7064  0085' 0086'              	movwf	___flge@ff2+2
  7065  0086' 0809'              	movf	??___flge+1,w
  7066  0087' 0085'              	movwf	___flge@ff2+1
  7067  0088' 0808'              	movf	??___flge,w
  7068  0089' 0084'              	movwf	___flge@ff2
  7069  008A'                    l600:
  7070  008A' 3080               	movlw	128
  7071  008B' 0683'              	xorwf	___flge@ff1+3,f
  7072  008C' 3080               	movlw	128
  7073  008D' 0687'              	xorwf	___flge@ff2+3,f
  7074  008E' 0807'              	movf	___flge@ff2+3,w
  7075  008F' 0203'              	subwf	___flge@ff1+3,w
  7076  0090' 1D03               	skipz
  7077  0091' 2800'              	goto	u7965
  7078  0092' 0806'              	movf	___flge@ff2+2,w
  7079  0093' 0202'              	subwf	___flge@ff1+2,w
  7080  0094' 1D03               	skipz
  7081  0095' 2800'              	goto	u7965
  7082  0096' 0805'              	movf	___flge@ff2+1,w
  7083  0097' 0201'              	subwf	___flge@ff1+1,w
  7084  0098' 1D03               	skipz
  7085  0099' 2800'              	goto	u7965
  7086  009A' 0804'              	movf	___flge@ff2,w
  7087  009B' 0200'              	subwf	___flge@ff1,w
  7088  009C'                    u7965:
  7089  009C' 1803               	skipnc
  7090  009D' 2800'              	goto	u7961
  7091  009E' 2800'              	goto	u7960
  7092  009F'                    u7961:
  7093  009F' 2800'              	goto	l4645
  7094  00A0'                    u7960:
  7095  00A0'                    l4643:
  7096  00A0' 1003               	clrc
  7097  00A1' 2800'              	goto	l601
  7098  00A2'                    l4645:
  7099  00A2' 1403               	setc
  7100  00A3'                    l601:
  7101  00A3' 0008               	return
  7102  00A4'                    __end_of___flge:
  7103                           
  7104                           	psect	text19
  7105  0000'                    __ptext19:	
  7106 ;; *************** function ___fleq *****************
  7107 ;; Defined at:
  7108 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  ff1             4    0[BANK0 ] unsigned char 
  7111 ;;  ff2             4    4[BANK0 ] unsigned char 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;		None               void
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7123 ;;      Params:         0       8       0       0       0
  7124 ;;      Locals:         0       0       0       0       0
  7125 ;;      Temps:          0       4       0       0       0
  7126 ;;      Totals:         0      12       0       0       0
  7127 ;;Total ram usage:       12 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    2
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_sprintf
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function ___fleq
  7139  0000'                    ___fleq:
  7140  0000'                    l4617:	
  7141                           ;incstack = 0
  7142                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7143                           
  7144  0000' 3000               	movlw	0
  7145  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7146  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7147  0003' 0500'              	andwf	___fleq@ff1,w
  7148  0004' 0088'              	movwf	??___fleq
  7149  0005' 3000               	movlw	0
  7150  0006' 0501'              	andwf	___fleq@ff1+1,w
  7151  0007' 0089'              	movwf	??___fleq+1
  7152  0008' 3080               	movlw	128
  7153  0009' 0502'              	andwf	___fleq@ff1+2,w
  7154  000A' 008A'              	movwf	??___fleq+2
  7155  000B' 307F               	movlw	127
  7156  000C' 0503'              	andwf	___fleq@ff1+3,w
  7157  000D' 008B'              	movwf	??___fleq+3
  7158  000E' 080B'              	movf	??___fleq+3,w
  7159  000F' 040A'              	iorwf	??___fleq+2,w
  7160  0010' 0409'              	iorwf	??___fleq+1,w
  7161  0011' 0408'              	iorwf	??___fleq,w
  7162  0012' 1D03               	skipz
  7163  0013' 2800'              	goto	u7871
  7164  0014' 2800'              	goto	u7870
  7165  0015'                    u7871:
  7166  0015' 2800'              	goto	l592
  7167  0016'                    u7870:
  7168  0016'                    l4619:
  7169  0016' 3000               	movlw	0
  7170  0017' 0083'              	movwf	___fleq@ff1+3
  7171  0018' 3000               	movlw	0
  7172  0019' 0082'              	movwf	___fleq@ff1+2
  7173  001A' 3000               	movlw	0
  7174  001B' 0081'              	movwf	___fleq@ff1+1
  7175  001C' 3000               	movlw	0
  7176  001D' 0080'              	movwf	___fleq@ff1
  7177  001E'                    l592:
  7178  001E' 3000               	movlw	0
  7179  001F' 0504'              	andwf	___fleq@ff2,w
  7180  0020' 0088'              	movwf	??___fleq
  7181  0021' 3000               	movlw	0
  7182  0022' 0505'              	andwf	___fleq@ff2+1,w
  7183  0023' 0089'              	movwf	??___fleq+1
  7184  0024' 3080               	movlw	128
  7185  0025' 0506'              	andwf	___fleq@ff2+2,w
  7186  0026' 008A'              	movwf	??___fleq+2
  7187  0027' 307F               	movlw	127
  7188  0028' 0507'              	andwf	___fleq@ff2+3,w
  7189  0029' 008B'              	movwf	??___fleq+3
  7190  002A' 080B'              	movf	??___fleq+3,w
  7191  002B' 040A'              	iorwf	??___fleq+2,w
  7192  002C' 0409'              	iorwf	??___fleq+1,w
  7193  002D' 0408'              	iorwf	??___fleq,w
  7194  002E' 1D03               	skipz
  7195  002F' 2800'              	goto	u7881
  7196  0030' 2800'              	goto	u7880
  7197  0031'                    u7881:
  7198  0031' 2800'              	goto	l593
  7199  0032'                    u7880:
  7200  0032'                    l4621:
  7201  0032' 3000               	movlw	0
  7202  0033' 0087'              	movwf	___fleq@ff2+3
  7203  0034' 3000               	movlw	0
  7204  0035' 0086'              	movwf	___fleq@ff2+2
  7205  0036' 3000               	movlw	0
  7206  0037' 0085'              	movwf	___fleq@ff2+1
  7207  0038' 3000               	movlw	0
  7208  0039' 0084'              	movwf	___fleq@ff2
  7209  003A'                    l593:
  7210  003A' 0807'              	movf	___fleq@ff2+3,w
  7211  003B' 0603'              	xorwf	___fleq@ff1+3,w
  7212  003C' 1D03               	skipz
  7213  003D' 2800'              	goto	u7895
  7214  003E' 0806'              	movf	___fleq@ff2+2,w
  7215  003F' 0602'              	xorwf	___fleq@ff1+2,w
  7216  0040' 1D03               	skipz
  7217  0041' 2800'              	goto	u7895
  7218  0042' 0805'              	movf	___fleq@ff2+1,w
  7219  0043' 0601'              	xorwf	___fleq@ff1+1,w
  7220  0044' 1D03               	skipz
  7221  0045' 2800'              	goto	u7895
  7222  0046' 0804'              	movf	___fleq@ff2,w
  7223  0047' 0600'              	xorwf	___fleq@ff1,w
  7224  0048'                    u7895:
  7225  0048' 1903               	skipnz
  7226  0049' 2800'              	goto	u7891
  7227  004A' 2800'              	goto	u7890
  7228  004B'                    u7891:
  7229  004B' 2800'              	goto	l4625
  7230  004C'                    u7890:
  7231  004C'                    l4623:
  7232  004C' 1003               	clrc
  7233  004D' 2800'              	goto	l594
  7234  004E'                    l4625:
  7235  004E' 1403               	setc
  7236  004F'                    l594:
  7237  004F' 0008               	return
  7238  0050'                    __end_of___fleq:
  7239                           
  7240                           	psect	text20
  7241  0000'                    __ptext20:	
  7242 ;; *************** function _setup *****************
  7243 ;; Defined at:
  7244 ;;		line 124 in file "main.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      void 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7258 ;;      Params:         0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    2
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_main
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           
  7273                           ;psect for function _setup
  7274  0000'                    _setup:
  7275  0000'                    l4727:	
  7276                           ;incstack = 0
  7277                           ; Regs used in _setup: [wreg+status,2]
  7278                           
  7279                           
  7280                           ;main.c: 125:     ANSEL = 0b00000011;
  7281  0000' 3003               	movlw	3
  7282  0001' 1683               	bsf	3,5	;RP0=1, select bank3
  7283  0002' 1703               	bsf	3,6	;RP1=1, select bank3
  7284  0003' 0088               	movwf	8	;volatile
  7285  0004'                    l4729:
  7286                           
  7287                           ;main.c: 126:     ANSELH = 0;
  7288  0004' 0189               	clrf	9	;volatile
  7289  0005'                    l4731:
  7290                           
  7291                           ;main.c: 127:     TRISA = 0b00000011;
  7292  0005' 3003               	movlw	3
  7293  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  7294  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  7295  0008' 0085               	movwf	5	;volatile
  7296                           
  7297                           ;main.c: 128:     TRISB = 0;
  7298  0009' 0186               	clrf	6	;volatile
  7299                           
  7300                           ;main.c: 130:     TRISD = 0;
  7301  000A' 0188               	clrf	8	;volatile
  7302                           
  7303                           ;main.c: 131:     TRISE = 0;
  7304  000B' 0189               	clrf	9	;volatile
  7305                           
  7306                           ;main.c: 132:     PORTA = 0;
  7307  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  7308  000D' 1303               	bcf	3,6	;RP1=0, select bank0
  7309  000E' 0185               	clrf	5	;volatile
  7310                           
  7311                           ;main.c: 133:     PORTB = 0;
  7312  000F' 0186               	clrf	6	;volatile
  7313                           
  7314                           ;main.c: 135:     PORTD = 0;
  7315  0010' 0188               	clrf	8	;volatile
  7316                           
  7317                           ;main.c: 136:     PORTE = 0;
  7318  0011' 0189               	clrf	9	;volatile
  7319                           
  7320                           ;main.c: 138:     ADCON1 = 0b00000000;
  7321  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  7322  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  7323  0014' 019F               	clrf	31	;volatile
  7324  0015'                    l4733:
  7325                           
  7326                           ;main.c: 139:     PIE1bits.ADIE = 0;
  7327  0015' 130C               	bcf	12,6	;volatile
  7328  0016'                    l4735:
  7329                           
  7330                           ;main.c: 140:     PIR1bits.ADIF = 0;
  7331  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  7332  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  7333  0018' 130C               	bcf	12,6	;volatile
  7334                           
  7335                           ;main.c: 141:     OPTION_REG = 0b00000000;
  7336  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  7337  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  7338  001B' 0181               	clrf	1	;volatile
  7339                           
  7340                           ;main.c: 142:     INTCON = 0b00000000;
  7341  001C' 018B               	clrf	11	;volatile
  7342  001D'                    l4737:
  7343                           
  7344                           ;main.c: 144:     SPBRG = 12;
  7345  001D' 300C               	movlw	12
  7346  001E' 0099               	movwf	25	;volatile
  7347  001F'                    l4739:
  7348                           
  7349                           ;main.c: 145:     TXSTAbits.CSRC = 0;
  7350  001F' 1398               	bcf	24,7	;volatile
  7351  0020'                    l4741:
  7352                           
  7353                           ;main.c: 146:     TXSTAbits.TX9 = 0;
  7354  0020' 1318               	bcf	24,6	;volatile
  7355  0021'                    l4743:
  7356                           
  7357                           ;main.c: 147:     TXSTAbits.TXEN = 1;
  7358  0021' 1698               	bsf	24,5	;volatile
  7359  0022'                    l4745:
  7360                           
  7361                           ;main.c: 148:     TXSTAbits.SYNC = 0;
  7362  0022' 1218               	bcf	24,4	;volatile
  7363  0023'                    l4747:
  7364                           
  7365                           ;main.c: 149:     TXSTAbits.BRGH = 0;
  7366  0023' 1118               	bcf	24,2	;volatile
  7367  0024'                    l4749:
  7368                           
  7369                           ;main.c: 150:     TXSTAbits.TRMT = 0;
  7370  0024' 1098               	bcf	24,1	;volatile
  7371  0025'                    l4751:
  7372                           
  7373                           ;main.c: 152:     RCSTAbits.SPEN = 1;
  7374  0025' 1283               	bcf	3,5	;RP0=0, select bank0
  7375  0026' 1303               	bcf	3,6	;RP1=0, select bank0
  7376  0027' 1798               	bsf	24,7	;volatile
  7377  0028'                    l4753:
  7378                           
  7379                           ;main.c: 153:     RCSTAbits.RX9 = 0;
  7380  0028' 1318               	bcf	24,6	;volatile
  7381  0029'                    l4755:
  7382                           
  7383                           ;main.c: 154:     RCSTAbits.CREN = 1;
  7384  0029' 1618               	bsf	24,4	;volatile
  7385  002A'                    l104:
  7386  002A' 0008               	return
  7387  002B'                    __end_of_setup:
  7388                           
  7389                           	psect	text21
  7390  0000'                    __ptext21:	
  7391 ;; *************** function _Lcd_Write_String *****************
  7392 ;; Defined at:
  7393 ;;		line 132 in file "LCD.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  a               2    3[BANK0 ] PTR unsigned char 
  7396 ;;		 -> data(16), STR_3(4), STR_2(4), STR_1(4), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  i               2    8[BANK0 ] int 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7408 ;;      Params:         0       2       0       0       0
  7409 ;;      Locals:         0       2       0       0       0
  7410 ;;      Temps:          0       3       0       0       0
  7411 ;;      Totals:         0       7       0       0       0
  7412 ;;Total ram usage:        7 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    4
  7415 ;; This function calls:
  7416 ;;		_Lcd_Write_Char
  7417 ;; This function is called by:
  7418 ;;		_main
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           
  7423                           ;psect for function _Lcd_Write_String
  7424  0000'                    _Lcd_Write_String:
  7425  0000'                    l4781:	
  7426                           ;incstack = 0
  7427                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7428                           
  7429                           
  7430                           ;LCD.c: 132: void Lcd_Write_String(char *a);LCD.c: 133: {;LCD.c: 134:  int i;;LCD.c: 135
      +                          :  for(i=0;a[i]!='\0';i++)
  7431  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7432  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7433  0002' 0188'              	clrf	Lcd_Write_String@i
  7434  0003' 0189'              	clrf	Lcd_Write_String@i+1
  7435  0004' 2800'              	goto	l4787
  7436  0005'                    l4783:
  7437                           
  7438                           ;LCD.c: 136:     Lcd_Write_Char(a[i]);
  7439  0005' 0808'              	movf	Lcd_Write_String@i,w
  7440  0006' 0703'              	addwf	Lcd_Write_String@a,w
  7441  0007' 0086'              	movwf	??_Lcd_Write_String+1
  7442  0008' 0804'              	movf	Lcd_Write_String@a+1,w
  7443  0009' 0085'              	movwf	??_Lcd_Write_String
  7444  000A' 1803               	skipnc
  7445  000B' 0A85'              	incf	??_Lcd_Write_String,f
  7446  000C' 1F88'              	btfss	Lcd_Write_String@i,7
  7447  000D' 2800'              	goto	u8200
  7448  000E' 0385'              	decf	??_Lcd_Write_String,f
  7449  000F'                    u8200:
  7450  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  7451  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  7452  0011' 0805'              	movf	??_Lcd_Write_String,w
  7453  0012' 0087'              	movwf	??_Lcd_Write_String+2
  7454  0013' 0807'              	movf	??_Lcd_Write_String+2,w
  7455  0014' 00FF               	movwf	btemp+1
  7456  0015' 0806'              	movf	??_Lcd_Write_String+1,w
  7457  0016' 0084               	movwf	4
  7458  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  7459  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  7460  0021'                    l4785:
  7461  0021' 3001               	movlw	1
  7462  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  7463  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  7464  0024' 0788'              	addwf	Lcd_Write_String@i,f
  7465  0025' 1803               	skipnc
  7466  0026' 0A89'              	incf	Lcd_Write_String@i+1,f
  7467  0027' 3000               	movlw	0
  7468  0028' 0789'              	addwf	Lcd_Write_String@i+1,f
  7469  0029'                    l4787:
  7470  0029' 0808'              	movf	Lcd_Write_String@i,w
  7471  002A' 0703'              	addwf	Lcd_Write_String@a,w
  7472  002B' 0086'              	movwf	??_Lcd_Write_String+1
  7473  002C' 0804'              	movf	Lcd_Write_String@a+1,w
  7474  002D' 0085'              	movwf	??_Lcd_Write_String
  7475  002E' 1803               	skipnc
  7476  002F' 0A85'              	incf	??_Lcd_Write_String,f
  7477  0030' 1F88'              	btfss	Lcd_Write_String@i,7
  7478  0031' 2800'              	goto	u8210
  7479  0032' 0385'              	decf	??_Lcd_Write_String,f
  7480  0033'                    u8210:
  7481  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  7482  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  7483  0035' 0805'              	movf	??_Lcd_Write_String,w
  7484  0036' 0087'              	movwf	??_Lcd_Write_String+2
  7485  0037' 0807'              	movf	??_Lcd_Write_String+2,w
  7486  0038' 00FF               	movwf	btemp+1
  7487  0039' 0806'              	movf	??_Lcd_Write_String+1,w
  7488  003A' 0084               	movwf	4
  7489  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  7490  0040' 3A00               	xorlw	0
  7491  0041' 1D03               	skipz
  7492  0042' 2800'              	goto	u8221
  7493  0043' 2800'              	goto	u8220
  7494  0044'                    u8221:
  7495  0044' 2800'              	goto	l4783
  7496  0045'                    u8220:
  7497  0045'                    l157:
  7498  0045' 0008               	return
  7499  0046'                    __end_of_Lcd_Write_String:
  7500                           
  7501                           	psect	text22
  7502  0000'                    __ptext22:	
  7503 ;; *************** function _Lcd_Write_Char *****************
  7504 ;; Defined at:
  7505 ;;		line 115 in file "LCD.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  a               1    wreg     unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  a               1    2[BANK0 ] unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0, pclath, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         0       0       0       0       0
  7520 ;;      Locals:         0       1       0       0       0
  7521 ;;      Temps:          0       1       0       0       0
  7522 ;;      Totals:         0       2       0       0       0
  7523 ;;Total ram usage:        2 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    3
  7526 ;; This function calls:
  7527 ;;		_Lcd_Port
  7528 ;; This function is called by:
  7529 ;;		_Lcd_Write_String
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           
  7534                           ;psect for function _Lcd_Write_Char
  7535  0000'                    _Lcd_Write_Char:
  7536                           
  7537                           ;incstack = 0
  7538                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7539                           ;Lcd_Write_Char@a stored from wreg
  7540  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7541  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7542  0002' 0082'              	movwf	Lcd_Write_Char@a
  7543  0003'                    l4395:
  7544                           
  7545                           ;LCD.c: 115: void Lcd_Write_Char(char a);LCD.c: 116: {;LCD.c: 121:    RE0 = 1;
  7546  0003' 1409               	bsf	9,0	;volatile
  7547  0004'                    l4397:
  7548                           
  7549                           ;LCD.c: 126:    Lcd_Port(a);
  7550  0004' 0802'              	movf	Lcd_Write_Char@a,w
  7551  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  7552  000A'                    l4399:
  7553                           
  7554                           ;LCD.c: 127:    RE1 = 1;
  7555  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  7556  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  7557  000C' 1489               	bsf	9,1	;volatile
  7558  000D'                    l4401:
  7559                           
  7560                           ;LCD.c: 128:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  7561  000D' 3019               	movlw	25
  7562  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  7563  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  7564  0010' 0081'              	movwf	??_Lcd_Write_Char
  7565  0011'                    u8727:
  7566  0011' 0B81'              	decfsz	??_Lcd_Write_Char,f
  7567  0012' 2800'              	goto	u8727
  7568  0013' 2800'              	nop2
  7569  0014'                    l4403:
  7570                           
  7571                           ;LCD.c: 129:    RE1 = 0;
  7572  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  7573  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  7574  0016' 1089               	bcf	9,1	;volatile
  7575  0017'                    l151:
  7576  0017' 0008               	return
  7577  0018'                    __end_of_Lcd_Write_Char:
  7578                           
  7579                           	psect	text23
  7580  0000'                    __ptext23:	
  7581 ;; *************** function _Lcd_Set_Cursor *****************
  7582 ;; Defined at:
  7583 ;;		line 75 in file "LCD.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  a               1    wreg     unsigned char 
  7586 ;;  b               1    4[BANK0 ] unsigned char 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  a               1    6[BANK0 ] unsigned char 
  7589 ;;  temp            1    7[BANK0 ] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0, pclath, cstack
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7599 ;;      Params:         0       1       0       0       0
  7600 ;;      Locals:         0       2       0       0       0
  7601 ;;      Temps:          0       1       0       0       0
  7602 ;;      Totals:         0       4       0       0       0
  7603 ;;Total ram usage:        4 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    4
  7606 ;; This function calls:
  7607 ;;		_Lcd_Cmd
  7608 ;; This function is called by:
  7609 ;;		_main
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           
  7614                           ;psect for function _Lcd_Set_Cursor
  7615  0000'                    _Lcd_Set_Cursor:
  7616                           
  7617                           ;incstack = 0
  7618                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7619                           ;Lcd_Set_Cursor@a stored from wreg
  7620  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7621  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7622  0002' 0086'              	movwf	Lcd_Set_Cursor@a
  7623  0003'                    l4769:
  7624                           
  7625                           ;LCD.c: 75: void Lcd_Set_Cursor(char a, char b);LCD.c: 76: {;LCD.c: 77:  char temp;;LCD.
      +                          c: 78:  if(a == 1)
  7626  0003' 0306'              	decf	Lcd_Set_Cursor@a,w
  7627  0004' 1D03               	btfss	3,2
  7628  0005' 2800'              	goto	u8181
  7629  0006' 2800'              	goto	u8180
  7630  0007'                    u8181:
  7631  0007' 2800'              	goto	l4775
  7632  0008'                    u8180:
  7633  0008'                    l4771:
  7634                           
  7635                           ;LCD.c: 79:  {;LCD.c: 80:    temp = 0x80 + b - 1;
  7636  0008' 0804'              	movf	Lcd_Set_Cursor@b,w
  7637  0009' 3E7F               	addlw	127
  7638  000A' 0085'              	movwf	??_Lcd_Set_Cursor
  7639  000B' 0805'              	movf	??_Lcd_Set_Cursor,w
  7640  000C' 0087'              	movwf	Lcd_Set_Cursor@temp
  7641  000D'                    l4773:
  7642                           
  7643                           ;LCD.c: 84:   Lcd_Cmd(temp);
  7644  000D' 0807'              	movf	Lcd_Set_Cursor@temp,w
  7645  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7646                           
  7647                           ;LCD.c: 85:  }
  7648  0013' 2800'              	goto	l145
  7649  0014'                    l4775:
  7650  0014' 3002               	movlw	2
  7651  0015' 0606'              	xorwf	Lcd_Set_Cursor@a,w
  7652  0016' 1D03               	btfss	3,2
  7653  0017' 2800'              	goto	u8191
  7654  0018' 2800'              	goto	u8190
  7655  0019'                    u8191:
  7656  0019' 2800'              	goto	l145
  7657  001A'                    u8190:
  7658  001A'                    l4777:
  7659                           
  7660                           ;LCD.c: 87:  {;LCD.c: 88:   temp = 0xC0 + b - 1;
  7661  001A' 0804'              	movf	Lcd_Set_Cursor@b,w
  7662  001B' 3EBF               	addlw	191
  7663  001C' 0085'              	movwf	??_Lcd_Set_Cursor
  7664  001D' 0805'              	movf	??_Lcd_Set_Cursor,w
  7665  001E' 0087'              	movwf	Lcd_Set_Cursor@temp
  7666  001F'                    l4779:
  7667                           
  7668                           ;LCD.c: 92:   Lcd_Cmd(temp);
  7669  001F' 0807'              	movf	Lcd_Set_Cursor@temp,w
  7670  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7671  0025'                    l145:
  7672  0025' 0008               	return
  7673  0026'                    __end_of_Lcd_Set_Cursor:
  7674                           
  7675                           	psect	text24
  7676  0000'                    __ptext24:	
  7677 ;; *************** function _Lcd_Init *****************
  7678 ;; Defined at:
  7679 ;;		line 96 in file "LCD.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0, pclath, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7693 ;;      Params:         0       0       0       0       0
  7694 ;;      Locals:         0       0       0       0       0
  7695 ;;      Temps:          0       2       0       0       0
  7696 ;;      Totals:         0       2       0       0       0
  7697 ;;Total ram usage:        2 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    4
  7700 ;; This function calls:
  7701 ;;		_Lcd_Cmd
  7702 ;;		_Lcd_Port
  7703 ;; This function is called by:
  7704 ;;		_main
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           
  7709                           ;psect for function _Lcd_Init
  7710  0000'                    _Lcd_Init:
  7711  0000'                    l4757:	
  7712                           ;incstack = 0
  7713                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7714                           
  7715                           
  7716                           ;LCD.c: 98:   Lcd_Port(0x00);
  7717  0000' 3000               	movlw	0
  7718  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  7719  0006'                    l4759:
  7720                           
  7721                           ;LCD.c: 99:    _delay((unsigned long)((20)*(8000000/4000.0)));
  7722  0006' 3034               	movlw	52
  7723  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  7724  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  7725  0009' 0085'              	movwf	??_Lcd_Init+1
  7726  000A' 30F1               	movlw	241
  7727  000B' 0084'              	movwf	??_Lcd_Init
  7728  000C'                    u8737:
  7729  000C' 0B84'              	decfsz	??_Lcd_Init,f
  7730  000D' 2800'              	goto	u8737
  7731  000E' 0B85'              	decfsz	??_Lcd_Init+1,f
  7732  000F' 2800'              	goto	u8737
  7733  0010'                    l4761:
  7734                           
  7735                           ;LCD.c: 100:   Lcd_Cmd(0x30);
  7736  0010' 3030               	movlw	48
  7737  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7738                           
  7739                           ;LCD.c: 101:  _delay((unsigned long)((5)*(8000000/4000.0)));
  7740  0016' 300D               	movlw	13
  7741  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  7742  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  7743  0019' 0085'              	movwf	??_Lcd_Init+1
  7744  001A' 30FB               	movlw	251
  7745  001B' 0084'              	movwf	??_Lcd_Init
  7746  001C'                    u8747:
  7747  001C' 0B84'              	decfsz	??_Lcd_Init,f
  7748  001D' 2800'              	goto	u8747
  7749  001E' 0B85'              	decfsz	??_Lcd_Init+1,f
  7750  001F' 2800'              	goto	u8747
  7751  0020'                    l4763:
  7752                           
  7753                           ;LCD.c: 102:   Lcd_Cmd(0x30);
  7754  0020' 3030               	movlw	48
  7755  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7756  0026'                    l4765:
  7757                           
  7758                           ;LCD.c: 103:  _delay((unsigned long)((11)*(8000000/4000.0)));
  7759  0026' 301D               	movlw	29
  7760  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  7761  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  7762  0029' 0085'              	movwf	??_Lcd_Init+1
  7763  002A' 3090               	movlw	144
  7764  002B' 0084'              	movwf	??_Lcd_Init
  7765  002C'                    u8757:
  7766  002C' 0B84'              	decfsz	??_Lcd_Init,f
  7767  002D' 2800'              	goto	u8757
  7768  002E' 0B85'              	decfsz	??_Lcd_Init+1,f
  7769  002F' 2800'              	goto	u8757
  7770  0030' 0000               	nop
  7771                           
  7772                           ;LCD.c: 104:   Lcd_Cmd(0x30);
  7773  0031' 3030               	movlw	48
  7774  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7775                           
  7776                           ;LCD.c: 106:   Lcd_Cmd(0x38);
  7777  0037' 3038               	movlw	56
  7778  0038' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7779                           
  7780                           ;LCD.c: 107:   Lcd_Cmd(0x0C);
  7781  003D' 300C               	movlw	12
  7782  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7783                           
  7784                           ;LCD.c: 108:   Lcd_Cmd(0x01);
  7785  0043' 3001               	movlw	1
  7786  0044' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7787                           
  7788                           ;LCD.c: 109:   Lcd_Cmd(0x06);
  7789  0049' 3006               	movlw	6
  7790  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7791  004F'                    l148:
  7792  004F' 0008               	return
  7793  0050'                    __end_of_Lcd_Init:
  7794                           
  7795                           	psect	text25
  7796  0000'                    __ptext25:	
  7797 ;; *************** function _Lcd_Clear *****************
  7798 ;; Defined at:
  7799 ;;		line 69 in file "LCD.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;		None
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      void 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, pclath, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7813 ;;      Params:         0       0       0       0       0
  7814 ;;      Locals:         0       0       0       0       0
  7815 ;;      Temps:          0       0       0       0       0
  7816 ;;      Totals:         0       0       0       0       0
  7817 ;;Total ram usage:        0 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    4
  7820 ;; This function calls:
  7821 ;;		_Lcd_Cmd
  7822 ;; This function is called by:
  7823 ;;		_main
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           
  7828                           ;psect for function _Lcd_Clear
  7829  0000'                    _Lcd_Clear:
  7830  0000'                    l4767:	
  7831                           ;incstack = 0
  7832                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  7833                           
  7834                           
  7835                           ;LCD.c: 71:  Lcd_Cmd(0);
  7836  0000' 3000               	movlw	0
  7837  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7838                           
  7839                           ;LCD.c: 72:  Lcd_Cmd(1);
  7840  0006' 3001               	movlw	1
  7841  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  7842  000C'                    l139:
  7843  000C' 0008               	return
  7844  000D'                    __end_of_Lcd_Clear:
  7845                           
  7846                           	psect	text26
  7847  0000'                    __ptext26:	
  7848 ;; *************** function _Lcd_Cmd *****************
  7849 ;; Defined at:
  7850 ;;		line 60 in file "LCD.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  a               1    wreg     unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  a               1    3[BANK0 ] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7864 ;;      Params:         0       0       0       0       0
  7865 ;;      Locals:         0       1       0       0       0
  7866 ;;      Temps:          0       2       0       0       0
  7867 ;;      Totals:         0       3       0       0       0
  7868 ;;Total ram usage:        3 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    3
  7871 ;; This function calls:
  7872 ;;		_Lcd_Port
  7873 ;; This function is called by:
  7874 ;;		_Lcd_Clear
  7875 ;;		_Lcd_Set_Cursor
  7876 ;;		_Lcd_Init
  7877 ;;		_Lcd_Shift_Right
  7878 ;;		_Lcd_Shift_Left
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function _Lcd_Cmd
  7884  0000'                    _Lcd_Cmd:
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7888                           ;Lcd_Cmd@a stored from wreg
  7889  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7890  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7891  0002' 0083'              	movwf	Lcd_Cmd@a
  7892  0003'                    l4385:
  7893                           
  7894                           ;LCD.c: 60: void Lcd_Cmd(char a);LCD.c: 61: {;LCD.c: 62:  RE0 = 0;
  7895  0003' 1009               	bcf	9,0	;volatile
  7896  0004'                    l4387:
  7897                           
  7898                           ;LCD.c: 63:  Lcd_Port(a);
  7899  0004' 0803'              	movf	Lcd_Cmd@a,w
  7900  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  7901  000A'                    l4389:
  7902                           
  7903                           ;LCD.c: 64:  RE1 = 1;
  7904  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  7905  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  7906  000C' 1489               	bsf	9,1	;volatile
  7907  000D'                    l4391:
  7908                           
  7909                           ;LCD.c: 65:         _delay((unsigned long)((4)*(8000000/4000.0)));
  7910  000D' 300B               	movlw	11
  7911  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  7912  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  7913  0010' 0082'              	movwf	??_Lcd_Cmd+1
  7914  0011' 3061               	movlw	97
  7915  0012' 0081'              	movwf	??_Lcd_Cmd
  7916  0013'                    u8767:
  7917  0013' 0B81'              	decfsz	??_Lcd_Cmd,f
  7918  0014' 2800'              	goto	u8767
  7919  0015' 0B82'              	decfsz	??_Lcd_Cmd+1,f
  7920  0016' 2800'              	goto	u8767
  7921  0017' 2800'              	nop2
  7922  0018'                    l4393:
  7923                           
  7924                           ;LCD.c: 66:         RE1 = 0;
  7925  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  7926  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  7927  001A' 1089               	bcf	9,1	;volatile
  7928  001B'                    l136:
  7929  001B' 0008               	return
  7930  001C'                    __end_of_Lcd_Cmd:
  7931                           
  7932                           	psect	text27
  7933  0000'                    __ptext27:	
  7934 ;; *************** function _Lcd_Port *****************
  7935 ;; Defined at:
  7936 ;;		line 17 in file "LCD.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  a               1    wreg     unsigned char 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  a               1    0[BANK0 ] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7950 ;;      Params:         0       0       0       0       0
  7951 ;;      Locals:         0       1       0       0       0
  7952 ;;      Temps:          0       0       0       0       0
  7953 ;;      Totals:         0       1       0       0       0
  7954 ;;Total ram usage:        1 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    2
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_Lcd_Cmd
  7961 ;;		_Lcd_Init
  7962 ;;		_Lcd_Write_Char
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function _Lcd_Port
  7968  0000'                    _Lcd_Port:
  7969                           
  7970                           ;incstack = 0
  7971                           ; Regs used in _Lcd_Port: [wreg]
  7972                           ;Lcd_Port@a stored from wreg
  7973  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7974  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7975  0002' 0080'              	movwf	Lcd_Port@a
  7976  0003'                    l3975:
  7977                           
  7978                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  7979  0003' 0800'              	movf	Lcd_Port@a,w
  7980  0004' 0088               	movwf	8	;volatile
  7981  0005'                    l133:
  7982  0005' 0008               	return
  7983  0006'                    __end_of_Lcd_Port:
  7984                           
  7985                           	psect	text28
  7986  0000'                    __ptext28:	
  7987 ;; *************** function _ADC_CH1 *****************
  7988 ;; Defined at:
  7989 ;;		line 178 in file "main.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;		None
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1    wreg      void 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8003 ;;      Params:         0       0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0
  8005 ;;      Temps:          0       4       0       0       0
  8006 ;;      Totals:         0       4       0       0       0
  8007 ;;Total ram usage:        4 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    4
  8010 ;; This function calls:
  8011 ;;		_ADC_ch
  8012 ;;		_ADC_val
  8013 ;;		___fldiv
  8014 ;;		___flmul
  8015 ;;		___xxtofl
  8016 ;; This function is called by:
  8017 ;;		_main
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function _ADC_CH1
  8023  0000'                    _ADC_CH1:
  8024  0000'                    l4807:	
  8025                           ;incstack = 0
  8026                           ; Regs used in _ADC_CH1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8027                           
  8028                           
  8029                           ;main.c: 179:     ADC_ch(1);
  8030  0000' 3001               	movlw	1
  8031  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8032  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8033  0003' 0080'              	movwf	ADC_ch@channel
  8034  0004' 3000               	movlw	0
  8035  0005' 0081'              	movwf	ADC_ch@channel+1
  8036  0006' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_ch
  8037  000B'                    l4809:
  8038                           
  8039                           ;main.c: 180:     ADCON0bits.ADCS0 = 1;
  8040  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  8041  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  8042  000D' 171F               	bsf	31,6	;volatile
  8043  000E'                    l4811:
  8044                           
  8045                           ;main.c: 181:     ADCON0bits.ADCS1 = 0;
  8046  000E' 139F               	bcf	31,7	;volatile
  8047  000F'                    l4813:
  8048                           
  8049                           ;main.c: 182:     ADCON0bits.ADON = 1;
  8050  000F' 141F               	bsf	31,0	;volatile
  8051  0010'                    l4815:
  8052                           
  8053                           ;main.c: 183:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  8054  0010' 3019               	movlw	25
  8055  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  8056  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  8057  0013' 00C4'              	movwf	??_ADC_CH1
  8058  0014'                    u8777:
  8059  0014' 0BC4'              	decfsz	??_ADC_CH1,f
  8060  0015' 2800'              	goto	u8777
  8061  0016' 2800'              	nop2
  8062  0017'                    l4817:
  8063                           
  8064                           ;main.c: 184:     ADCON0bits.GO = 1;
  8065  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  8066  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  8067  0019' 149F               	bsf	31,1	;volatile
  8068                           
  8069                           ;main.c: 185:     while(ADCON0bits.GO != 0){
  8070  001A' 2800'              	goto	l4823
  8071  001B'                    l4819:
  8072                           
  8073                           ;main.c: 186:         ADC_res2 = ADC_val(ADRESL, ADRESH);
  8074  001B' 081E               	movf	30,w	;volatile
  8075  001C' 00C4'              	movwf	??_ADC_CH1
  8076  001D' 0844'              	movf	??_ADC_CH1,w
  8077  001E' 0080'              	movwf	ADC_val@ADRES_H
  8078  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  8079  0020' 1303               	bcf	3,6	;RP1=0, select bank1
  8080  0021' 081E               	movf	30,w	;volatile
  8081  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_val
  8082  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  8083  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  8084  0029' 00C5'              	movwf	??_ADC_CH1+1
  8085  002A' 0845'              	movf	??_ADC_CH1+1,w
  8086  002B' 0083'              	movwf	_ADC_res2
  8087  002C'                    l4821:
  8088                           
  8089                           ;main.c: 187:         VAL2 = ((ADC_res2 * 5.0)/255);
  8090  002C' 3043               	movlw	67
  8091  002D' 00AD'              	movwf	___fldiv@a+3
  8092  002E' 307F               	movlw	127
  8093  002F' 00AC'              	movwf	___fldiv@a+2
  8094  0030' 3000               	movlw	0
  8095  0031' 00AB'              	movwf	___fldiv@a+1
  8096  0032' 3000               	movlw	0
  8097  0033' 00AA'              	movwf	___fldiv@a
  8098  0034' 3040               	movlw	64
  8099  0035' 0093'              	movwf	___flmul@b+3
  8100  0036' 30A0               	movlw	160
  8101  0037' 0092'              	movwf	___flmul@b+2
  8102  0038' 3000               	movlw	0
  8103  0039' 0091'              	movwf	___flmul@b+1
  8104  003A' 3000               	movlw	0
  8105  003B' 0090'              	movwf	___flmul@b
  8106  003C' 0803'              	movf	_ADC_res2,w
  8107  003D' 00C4'              	movwf	??_ADC_CH1
  8108  003E' 01C5'              	clrf	??_ADC_CH1+1
  8109  003F' 01C6'              	clrf	??_ADC_CH1+2
  8110  0040' 01C7'              	clrf	??_ADC_CH1+3
  8111  0041' 0847'              	movf	??_ADC_CH1+3,w
  8112  0042' 0083'              	movwf	___xxtofl@val+3
  8113  0043' 0846'              	movf	??_ADC_CH1+2,w
  8114  0044' 0082'              	movwf	___xxtofl@val+2
  8115  0045' 0845'              	movf	??_ADC_CH1+1,w
  8116  0046' 0081'              	movwf	___xxtofl@val+1
  8117  0047' 0844'              	movf	??_ADC_CH1,w
  8118  0048' 0080'              	movwf	___xxtofl@val
  8119  0049' 3001               	movlw	1
  8120  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  8121  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  8122  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  8123  0051' 0803'              	movf	?___xxtofl+3,w
  8124  0052' 0097'              	movwf	___flmul@a+3
  8125  0053' 0802'              	movf	?___xxtofl+2,w
  8126  0054' 0096'              	movwf	___flmul@a+2
  8127  0055' 0801'              	movf	?___xxtofl+1,w
  8128  0056' 0095'              	movwf	___flmul@a+1
  8129  0057' 0800'              	movf	?___xxtofl,w
  8130  0058' 0094'              	movwf	___flmul@a
  8131  0059' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  8132  005E' 1283               	bcf	3,5	;RP0=0, select bank0
  8133  005F' 1303               	bcf	3,6	;RP1=0, select bank0
  8134  0060' 0813'              	movf	?___flmul+3,w
  8135  0061' 00B1'              	movwf	___fldiv@b+3
  8136  0062' 0812'              	movf	?___flmul+2,w
  8137  0063' 00B0'              	movwf	___fldiv@b+2
  8138  0064' 0811'              	movf	?___flmul+1,w
  8139  0065' 00AF'              	movwf	___fldiv@b+1
  8140  0066' 0810'              	movf	?___flmul,w
  8141  0067' 00AE'              	movwf	___fldiv@b
  8142  0068' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  8143  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  8144  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  8145  006F' 082D'              	movf	?___fldiv+3,w
  8146  0070' 1683               	bsf	3,5	;RP0=1, select bank1
  8147  0071' 1303               	bcf	3,6	;RP1=0, select bank1
  8148  0072' 0080'              	movwf	(_VAL2+3)^(0+128)
  8149  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  8150  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  8151  0075' 082C'              	movf	?___fldiv+2,w
  8152  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  8153  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  8154  0078' 0080'              	movwf	(_VAL2+2)^(0+128)
  8155  0079' 1283               	bcf	3,5	;RP0=0, select bank0
  8156  007A' 1303               	bcf	3,6	;RP1=0, select bank0
  8157  007B' 082B'              	movf	?___fldiv+1,w
  8158  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  8159  007D' 1303               	bcf	3,6	;RP1=0, select bank1
  8160  007E' 0080'              	movwf	(_VAL2+1)^(0+128)
  8161  007F' 1283               	bcf	3,5	;RP0=0, select bank0
  8162  0080' 1303               	bcf	3,6	;RP1=0, select bank0
  8163  0081' 082A'              	movf	?___fldiv,w
  8164  0082' 1683               	bsf	3,5	;RP0=1, select bank1
  8165  0083' 1303               	bcf	3,6	;RP1=0, select bank1
  8166  0084' 0080'              	movwf	_VAL2^(0+128)
  8167  0085'                    l4823:
  8168                           
  8169                           ;main.c: 185:     while(ADCON0bits.GO != 0){
  8170  0085' 1283               	bcf	3,5	;RP0=0, select bank0
  8171  0086' 189F               	btfsc	31,1	;volatile
  8172  0087' 2800'              	goto	u8241
  8173  0088' 2800'              	goto	u8240
  8174  0089'                    u8241:
  8175  0089' 2800'              	goto	l4819
  8176  008A'                    u8240:
  8177  008A'                    l116:
  8178  008A' 0008               	return
  8179  008B'                    __end_of_ADC_CH1:
  8180                           
  8181                           	psect	text29
  8182  0000'                    __ptext29:	
  8183 ;; *************** function _ADC_CH0 *****************
  8184 ;; Defined at:
  8185 ;;		line 163 in file "main.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8199 ;;      Params:         0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0
  8201 ;;      Temps:          0       4       0       0       0
  8202 ;;      Totals:         0       4       0       0       0
  8203 ;;Total ram usage:        4 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    4
  8206 ;; This function calls:
  8207 ;;		_ADC_ch
  8208 ;;		_ADC_val
  8209 ;;		___fldiv
  8210 ;;		___flmul
  8211 ;;		___xxtofl
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           
  8218                           ;psect for function _ADC_CH0
  8219  0000'                    _ADC_CH0:
  8220  0000'                    l4789:	
  8221                           ;incstack = 0
  8222                           ; Regs used in _ADC_CH0: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8223                           
  8224                           
  8225                           ;main.c: 164:     ADC_ch(0);
  8226  0000' 3000               	movlw	0
  8227  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8228  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8229  0003' 0080'              	movwf	ADC_ch@channel
  8230  0004' 0081'              	movwf	ADC_ch@channel+1
  8231  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_ch
  8232  000A'                    l4791:
  8233                           
  8234                           ;main.c: 166:     ADCON0bits.ADCS0 = 1;
  8235  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  8236  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  8237  000C' 171F               	bsf	31,6	;volatile
  8238  000D'                    l4793:
  8239                           
  8240                           ;main.c: 167:     ADCON0bits.ADCS1 = 0;
  8241  000D' 139F               	bcf	31,7	;volatile
  8242  000E'                    l4795:
  8243                           
  8244                           ;main.c: 168:     ADCON0bits.ADON = 1;
  8245  000E' 141F               	bsf	31,0	;volatile
  8246  000F'                    l4797:
  8247                           
  8248                           ;main.c: 169:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  8249  000F' 3019               	movlw	25
  8250  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  8251  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  8252  0012' 00C4'              	movwf	??_ADC_CH0
  8253  0013'                    u8787:
  8254  0013' 0BC4'              	decfsz	??_ADC_CH0,f
  8255  0014' 2800'              	goto	u8787
  8256  0015' 2800'              	nop2
  8257  0016'                    l4799:
  8258                           
  8259                           ;main.c: 170:     ADCON0bits.GO = 1;
  8260  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  8261  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  8262  0018' 149F               	bsf	31,1	;volatile
  8263                           
  8264                           ;main.c: 171:     while(ADCON0bits.GO != 0){
  8265  0019' 2800'              	goto	l4805
  8266  001A'                    l4801:
  8267                           
  8268                           ;main.c: 172:         ADC_res1 = ADC_val(ADRESL, ADRESH);
  8269  001A' 081E               	movf	30,w	;volatile
  8270  001B' 00C4'              	movwf	??_ADC_CH0
  8271  001C' 0844'              	movf	??_ADC_CH0,w
  8272  001D' 0080'              	movwf	ADC_val@ADRES_H
  8273  001E' 1683               	bsf	3,5	;RP0=1, select bank1
  8274  001F' 1303               	bcf	3,6	;RP1=0, select bank1
  8275  0020' 081E               	movf	30,w	;volatile
  8276  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_val
  8277  0026' 1283               	bcf	3,5	;RP0=0, select bank0
  8278  0027' 1303               	bcf	3,6	;RP1=0, select bank0
  8279  0028' 00C5'              	movwf	??_ADC_CH0+1
  8280  0029' 0845'              	movf	??_ADC_CH0+1,w
  8281  002A' 0084'              	movwf	_ADC_res1
  8282  002B'                    l4803:
  8283                           
  8284                           ;main.c: 173:         VAL1 = ((ADC_res1 * 5.0)/255);
  8285  002B' 3043               	movlw	67
  8286  002C' 00AD'              	movwf	___fldiv@a+3
  8287  002D' 307F               	movlw	127
  8288  002E' 00AC'              	movwf	___fldiv@a+2
  8289  002F' 3000               	movlw	0
  8290  0030' 00AB'              	movwf	___fldiv@a+1
  8291  0031' 3000               	movlw	0
  8292  0032' 00AA'              	movwf	___fldiv@a
  8293  0033' 3040               	movlw	64
  8294  0034' 0093'              	movwf	___flmul@b+3
  8295  0035' 30A0               	movlw	160
  8296  0036' 0092'              	movwf	___flmul@b+2
  8297  0037' 3000               	movlw	0
  8298  0038' 0091'              	movwf	___flmul@b+1
  8299  0039' 3000               	movlw	0
  8300  003A' 0090'              	movwf	___flmul@b
  8301  003B' 0804'              	movf	_ADC_res1,w
  8302  003C' 00C4'              	movwf	??_ADC_CH0
  8303  003D' 01C5'              	clrf	??_ADC_CH0+1
  8304  003E' 01C6'              	clrf	??_ADC_CH0+2
  8305  003F' 01C7'              	clrf	??_ADC_CH0+3
  8306  0040' 0847'              	movf	??_ADC_CH0+3,w
  8307  0041' 0083'              	movwf	___xxtofl@val+3
  8308  0042' 0846'              	movf	??_ADC_CH0+2,w
  8309  0043' 0082'              	movwf	___xxtofl@val+2
  8310  0044' 0845'              	movf	??_ADC_CH0+1,w
  8311  0045' 0081'              	movwf	___xxtofl@val+1
  8312  0046' 0844'              	movf	??_ADC_CH0,w
  8313  0047' 0080'              	movwf	___xxtofl@val
  8314  0048' 3001               	movlw	1
  8315  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  8316  004E' 1283               	bcf	3,5	;RP0=0, select bank0
  8317  004F' 1303               	bcf	3,6	;RP1=0, select bank0
  8318  0050' 0803'              	movf	?___xxtofl+3,w
  8319  0051' 0097'              	movwf	___flmul@a+3
  8320  0052' 0802'              	movf	?___xxtofl+2,w
  8321  0053' 0096'              	movwf	___flmul@a+2
  8322  0054' 0801'              	movf	?___xxtofl+1,w
  8323  0055' 0095'              	movwf	___flmul@a+1
  8324  0056' 0800'              	movf	?___xxtofl,w
  8325  0057' 0094'              	movwf	___flmul@a
  8326  0058' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  8327  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  8328  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  8329  005F' 0813'              	movf	?___flmul+3,w
  8330  0060' 00B1'              	movwf	___fldiv@b+3
  8331  0061' 0812'              	movf	?___flmul+2,w
  8332  0062' 00B0'              	movwf	___fldiv@b+2
  8333  0063' 0811'              	movf	?___flmul+1,w
  8334  0064' 00AF'              	movwf	___fldiv@b+1
  8335  0065' 0810'              	movf	?___flmul,w
  8336  0066' 00AE'              	movwf	___fldiv@b
  8337  0067' 120A' 118A' 2000' 120A' 118A' 	fcall	___fldiv
  8338  006C' 1283               	bcf	3,5	;RP0=0, select bank0
  8339  006D' 1303               	bcf	3,6	;RP1=0, select bank0
  8340  006E' 082D'              	movf	?___fldiv+3,w
  8341  006F' 1683               	bsf	3,5	;RP0=1, select bank1
  8342  0070' 1303               	bcf	3,6	;RP1=0, select bank1
  8343  0071' 0080'              	movwf	(_VAL1+3)^(0+128)
  8344  0072' 1283               	bcf	3,5	;RP0=0, select bank0
  8345  0073' 1303               	bcf	3,6	;RP1=0, select bank0
  8346  0074' 082C'              	movf	?___fldiv+2,w
  8347  0075' 1683               	bsf	3,5	;RP0=1, select bank1
  8348  0076' 1303               	bcf	3,6	;RP1=0, select bank1
  8349  0077' 0080'              	movwf	(_VAL1+2)^(0+128)
  8350  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  8351  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  8352  007A' 082B'              	movf	?___fldiv+1,w
  8353  007B' 1683               	bsf	3,5	;RP0=1, select bank1
  8354  007C' 1303               	bcf	3,6	;RP1=0, select bank1
  8355  007D' 0080'              	movwf	(_VAL1+1)^(0+128)
  8356  007E' 1283               	bcf	3,5	;RP0=0, select bank0
  8357  007F' 1303               	bcf	3,6	;RP1=0, select bank0
  8358  0080' 082A'              	movf	?___fldiv,w
  8359  0081' 1683               	bsf	3,5	;RP0=1, select bank1
  8360  0082' 1303               	bcf	3,6	;RP1=0, select bank1
  8361  0083' 0080'              	movwf	_VAL1^(0+128)
  8362  0084'                    l4805:
  8363                           
  8364                           ;main.c: 171:     while(ADCON0bits.GO != 0){
  8365  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  8366  0085' 189F               	btfsc	31,1	;volatile
  8367  0086' 2800'              	goto	u8231
  8368  0087' 2800'              	goto	u8230
  8369  0088'                    u8231:
  8370  0088' 2800'              	goto	l4801
  8371  0089'                    u8230:
  8372  0089'                    l110:
  8373  0089' 0008               	return
  8374  008A'                    __end_of_ADC_CH0:
  8375                           
  8376                           	psect	text30
  8377  0000'                    __ptext30:	
  8378 ;; *************** function ___xxtofl *****************
  8379 ;; Defined at:
  8380 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  sign            1    wreg     unsigned char 
  8383 ;;  val             4    0[BANK0 ] long 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  sign            1    8[BANK0 ] unsigned char 
  8386 ;;  arg             4   10[BANK0 ] unsigned long 
  8387 ;;  exp             1    9[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  4    0[BANK0 ] unsigned char 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8397 ;;      Params:         0       4       0       0       0
  8398 ;;      Locals:         0       6       0       0       0
  8399 ;;      Temps:          0       4       0       0       0
  8400 ;;      Totals:         0      14       0       0       0
  8401 ;;Total ram usage:       14 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    2
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_ADC_CH0
  8408 ;;		_ADC_CH1
  8409 ;;		_sprintf
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function ___xxtofl
  8415  0000'                    ___xxtofl:
  8416                           
  8417                           ;incstack = 0
  8418                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8419                           ;___xxtofl@sign stored from wreg
  8420  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8421  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8422  0002' 0088'              	movwf	___xxtofl@sign
  8423  0003'                    l4683:
  8424  0003' 0808'              	movf	___xxtofl@sign,w
  8425  0004' 1903               	btfsc	3,2
  8426  0005' 2800'              	goto	u8041
  8427  0006' 2800'              	goto	u8040
  8428  0007'                    u8041:
  8429  0007' 2800'              	goto	l4689
  8430  0008'                    u8040:
  8431  0008'                    l4685:
  8432  0008' 1F83'              	btfss	___xxtofl@val+3,7
  8433  0009' 2800'              	goto	u8051
  8434  000A' 2800'              	goto	u8050
  8435  000B'                    u8051:
  8436  000B' 2800'              	goto	l4689
  8437  000C'                    u8050:
  8438  000C'                    l4687:
  8439  000C' 0900'              	comf	___xxtofl@val,w
  8440  000D' 008A'              	movwf	___xxtofl@arg
  8441  000E' 0901'              	comf	___xxtofl@val+1,w
  8442  000F' 008B'              	movwf	___xxtofl@arg+1
  8443  0010' 0902'              	comf	___xxtofl@val+2,w
  8444  0011' 008C'              	movwf	___xxtofl@arg+2
  8445  0012' 0903'              	comf	___xxtofl@val+3,w
  8446  0013' 008D'              	movwf	___xxtofl@arg+3
  8447  0014' 0A8A'              	incf	___xxtofl@arg,f
  8448  0015' 1903               	skipnz
  8449  0016' 0A8B'              	incf	___xxtofl@arg+1,f
  8450  0017' 1903               	skipnz
  8451  0018' 0A8C'              	incf	___xxtofl@arg+2,f
  8452  0019' 1903               	skipnz
  8453  001A' 0A8D'              	incf	___xxtofl@arg+3,f
  8454  001B' 2800'              	goto	l873
  8455  001C'                    l4689:
  8456  001C' 0803'              	movf	___xxtofl@val+3,w
  8457  001D' 008D'              	movwf	___xxtofl@arg+3
  8458  001E' 0802'              	movf	___xxtofl@val+2,w
  8459  001F' 008C'              	movwf	___xxtofl@arg+2
  8460  0020' 0801'              	movf	___xxtofl@val+1,w
  8461  0021' 008B'              	movwf	___xxtofl@arg+1
  8462  0022' 0800'              	movf	___xxtofl@val,w
  8463  0023' 008A'              	movwf	___xxtofl@arg
  8464  0024'                    l873:
  8465  0024' 0803'              	movf	___xxtofl@val+3,w
  8466  0025' 0402'              	iorwf	___xxtofl@val+2,w
  8467  0026' 0401'              	iorwf	___xxtofl@val+1,w
  8468  0027' 0400'              	iorwf	___xxtofl@val,w
  8469  0028' 1D03               	skipz
  8470  0029' 2800'              	goto	u8061
  8471  002A' 2800'              	goto	u8060
  8472  002B'                    u8061:
  8473  002B' 2800'              	goto	l4695
  8474  002C'                    u8060:
  8475  002C'                    l4691:
  8476  002C' 3000               	movlw	0
  8477  002D' 0083'              	movwf	?___xxtofl+3
  8478  002E' 3000               	movlw	0
  8479  002F' 0082'              	movwf	?___xxtofl+2
  8480  0030' 3000               	movlw	0
  8481  0031' 0081'              	movwf	?___xxtofl+1
  8482  0032' 3000               	movlw	0
  8483  0033' 0080'              	movwf	?___xxtofl
  8484  0034' 2800'              	goto	l875
  8485  0035'                    l4695:
  8486  0035' 3096               	movlw	150
  8487  0036' 0084'              	movwf	??___xxtofl
  8488  0037' 0804'              	movf	??___xxtofl,w
  8489  0038' 0089'              	movwf	___xxtofl@exp
  8490  0039' 2800'              	goto	l4699
  8491  003A'                    l4697:
  8492  003A' 3001               	movlw	1
  8493  003B' 0084'              	movwf	??___xxtofl
  8494  003C' 0804'              	movf	??___xxtofl,w
  8495  003D' 0789'              	addwf	___xxtofl@exp,f
  8496  003E' 3001               	movlw	1
  8497  003F'                    u8075:
  8498  003F' 1003               	clrc
  8499  0040' 0C8D'              	rrf	___xxtofl@arg+3,f
  8500  0041' 0C8C'              	rrf	___xxtofl@arg+2,f
  8501  0042' 0C8B'              	rrf	___xxtofl@arg+1,f
  8502  0043' 0C8A'              	rrf	___xxtofl@arg,f
  8503  0044' 3EFF               	addlw	-1
  8504  0045' 1D03               	skipz
  8505  0046' 2800'              	goto	u8075
  8506  0047'                    l4699:
  8507  0047' 30FE               	movlw	254
  8508  0048' 050D'              	andwf	___xxtofl@arg+3,w
  8509  0049' 1D03               	btfss	3,2
  8510  004A' 2800'              	goto	u8081
  8511  004B' 2800'              	goto	u8080
  8512  004C'                    u8081:
  8513  004C' 2800'              	goto	l4697
  8514  004D'                    u8080:
  8515  004D' 2800'              	goto	l879
  8516  004E'                    l4701:
  8517  004E' 3001               	movlw	1
  8518  004F' 0084'              	movwf	??___xxtofl
  8519  0050' 0804'              	movf	??___xxtofl,w
  8520  0051' 0789'              	addwf	___xxtofl@exp,f
  8521  0052'                    l4703:
  8522  0052' 3001               	movlw	1
  8523  0053' 078A'              	addwf	___xxtofl@arg,f
  8524  0054' 3000               	movlw	0
  8525  0055' 1803               	skipnc
  8526  0056' 3001               	movlw	1
  8527  0057' 078B'              	addwf	___xxtofl@arg+1,f
  8528  0058' 3000               	movlw	0
  8529  0059' 1803               	skipnc
  8530  005A' 3001               	movlw	1
  8531  005B' 078C'              	addwf	___xxtofl@arg+2,f
  8532  005C' 3000               	movlw	0
  8533  005D' 1803               	skipnc
  8534  005E' 3001               	movlw	1
  8535  005F' 078D'              	addwf	___xxtofl@arg+3,f
  8536  0060'                    l4705:
  8537  0060' 3001               	movlw	1
  8538  0061'                    u8095:
  8539  0061' 1003               	clrc
  8540  0062' 0C8D'              	rrf	___xxtofl@arg+3,f
  8541  0063' 0C8C'              	rrf	___xxtofl@arg+2,f
  8542  0064' 0C8B'              	rrf	___xxtofl@arg+1,f
  8543  0065' 0C8A'              	rrf	___xxtofl@arg,f
  8544  0066' 3EFF               	addlw	-1
  8545  0067' 1D03               	skipz
  8546  0068' 2800'              	goto	u8095
  8547  0069'                    l879:
  8548  0069' 30FF               	movlw	255
  8549  006A' 050D'              	andwf	___xxtofl@arg+3,w
  8550  006B' 1D03               	btfss	3,2
  8551  006C' 2800'              	goto	u8101
  8552  006D' 2800'              	goto	u8100
  8553  006E'                    u8101:
  8554  006E' 2800'              	goto	l4701
  8555  006F'                    u8100:
  8556  006F' 2800'              	goto	l4709
  8557  0070'                    l4707:
  8558  0070' 3001               	movlw	1
  8559  0071' 0289'              	subwf	___xxtofl@exp,f
  8560  0072' 3001               	movlw	1
  8561  0073' 0084'              	movwf	??___xxtofl
  8562  0074'                    u8115:
  8563  0074' 1003               	clrc
  8564  0075' 0D8A'              	rlf	___xxtofl@arg,f
  8565  0076' 0D8B'              	rlf	___xxtofl@arg+1,f
  8566  0077' 0D8C'              	rlf	___xxtofl@arg+2,f
  8567  0078' 0D8D'              	rlf	___xxtofl@arg+3,f
  8568  0079' 0B84'              	decfsz	??___xxtofl,f
  8569  007A' 2800'              	goto	u8115
  8570  007B'                    l4709:
  8571  007B' 1B8C'              	btfsc	___xxtofl@arg+2,7
  8572  007C' 2800'              	goto	u8121
  8573  007D' 2800'              	goto	u8120
  8574  007E'                    u8121:
  8575  007E' 2800'              	goto	l886
  8576  007F'                    u8120:
  8577  007F'                    l4711:
  8578  007F' 3002               	movlw	2
  8579  0080' 0209'              	subwf	___xxtofl@exp,w
  8580  0081' 1803               	skipnc
  8581  0082' 2800'              	goto	u8131
  8582  0083' 2800'              	goto	u8130
  8583  0084'                    u8131:
  8584  0084' 2800'              	goto	l4707
  8585  0085'                    u8130:
  8586  0085'                    l886:
  8587  0085' 1809'              	btfsc	___xxtofl@exp,0
  8588  0086' 2800'              	goto	u8141
  8589  0087' 2800'              	goto	u8140
  8590  0088'                    u8141:
  8591  0088' 2800'              	goto	l887
  8592  0089'                    u8140:
  8593  0089'                    l4713:
  8594  0089' 30FF               	movlw	255
  8595  008A' 058A'              	andwf	___xxtofl@arg,f
  8596  008B' 30FF               	movlw	255
  8597  008C' 058B'              	andwf	___xxtofl@arg+1,f
  8598  008D' 307F               	movlw	127
  8599  008E' 058C'              	andwf	___xxtofl@arg+2,f
  8600  008F' 30FF               	movlw	255
  8601  0090' 058D'              	andwf	___xxtofl@arg+3,f
  8602  0091'                    l887:
  8603  0091' 1003               	clrc
  8604  0092' 0C89'              	rrf	___xxtofl@exp,f
  8605  0093'                    l4715:
  8606  0093' 0809'              	movf	___xxtofl@exp,w
  8607  0094' 0084'              	movwf	??___xxtofl
  8608  0095' 0185'              	clrf	??___xxtofl+1
  8609  0096' 0186'              	clrf	??___xxtofl+2
  8610  0097' 0187'              	clrf	??___xxtofl+3
  8611  0098' 3018               	movlw	24
  8612  0099'                    u8155:
  8613  0099' 1003               	clrc
  8614  009A' 0D84'              	rlf	??___xxtofl,f
  8615  009B' 0D85'              	rlf	??___xxtofl+1,f
  8616  009C' 0D86'              	rlf	??___xxtofl+2,f
  8617  009D' 0D87'              	rlf	??___xxtofl+3,f
  8618  009E'                    u8150:
  8619  009E' 3EFF               	addlw	-1
  8620  009F' 1D03               	skipz
  8621  00A0' 2800'              	goto	u8155
  8622  00A1' 0804'              	movf	??___xxtofl,w
  8623  00A2' 048A'              	iorwf	___xxtofl@arg,f
  8624  00A3' 0805'              	movf	??___xxtofl+1,w
  8625  00A4' 048B'              	iorwf	___xxtofl@arg+1,f
  8626  00A5' 0806'              	movf	??___xxtofl+2,w
  8627  00A6' 048C'              	iorwf	___xxtofl@arg+2,f
  8628  00A7' 0807'              	movf	??___xxtofl+3,w
  8629  00A8' 048D'              	iorwf	___xxtofl@arg+3,f
  8630  00A9'                    l4717:
  8631  00A9' 0808'              	movf	___xxtofl@sign,w
  8632  00AA' 1903               	btfsc	3,2
  8633  00AB' 2800'              	goto	u8161
  8634  00AC' 2800'              	goto	u8160
  8635  00AD'                    u8161:
  8636  00AD' 2800'              	goto	l4723
  8637  00AE'                    u8160:
  8638  00AE'                    l4719:
  8639  00AE' 1F83'              	btfss	___xxtofl@val+3,7
  8640  00AF' 2800'              	goto	u8171
  8641  00B0' 2800'              	goto	u8170
  8642  00B1'                    u8171:
  8643  00B1' 2800'              	goto	l4723
  8644  00B2'                    u8170:
  8645  00B2'                    l4721:
  8646  00B2' 178D'              	bsf	___xxtofl@arg+3,7
  8647  00B3'                    l4723:
  8648  00B3' 080D'              	movf	___xxtofl@arg+3,w
  8649  00B4' 0083'              	movwf	?___xxtofl+3
  8650  00B5' 080C'              	movf	___xxtofl@arg+2,w
  8651  00B6' 0082'              	movwf	?___xxtofl+2
  8652  00B7' 080B'              	movf	___xxtofl@arg+1,w
  8653  00B8' 0081'              	movwf	?___xxtofl+1
  8654  00B9' 080A'              	movf	___xxtofl@arg,w
  8655  00BA' 0080'              	movwf	?___xxtofl
  8656  00BB'                    l875:
  8657  00BB' 0008               	return
  8658  00BC'                    __end_of___xxtofl:
  8659                           
  8660                           	psect	text31
  8661  0000'                    __ptext31:	
  8662 ;; *************** function ___flmul *****************
  8663 ;; Defined at:
  8664 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  b               4   16[BANK0 ] unsigned char 
  8667 ;;  a               4   20[BANK0 ] unsigned char 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  prod            4   36[BANK0 ] struct .
  8670 ;;  grs             4   31[BANK0 ] unsigned long 
  8671 ;;  temp            2   40[BANK0 ] struct .
  8672 ;;  bexp            1   35[BANK0 ] unsigned char 
  8673 ;;  aexp            1   30[BANK0 ] unsigned char 
  8674 ;;  sign            1   29[BANK0 ] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  4   16[BANK0 ] unsigned char 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8684 ;;      Params:         0       8       0       0       0
  8685 ;;      Locals:         0      13       0       0       0
  8686 ;;      Temps:          0       5       0       0       0
  8687 ;;      Totals:         0      26       0       0       0
  8688 ;;Total ram usage:       26 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    3
  8691 ;; This function calls:
  8692 ;;		__Umul8_16
  8693 ;; This function is called by:
  8694 ;;		_ADC_CH0
  8695 ;;		_ADC_CH1
  8696 ;;		_fround
  8697 ;;		_scale
  8698 ;;		_sprintf
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function ___flmul
  8704  0000'                    ___flmul:
  8705  0000'                    l4231:	
  8706                           ;incstack = 0
  8707                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8708                           
  8709  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8710  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8711  0002' 0813'              	movf	___flmul@b+3,w
  8712  0003' 3980               	andlw	128
  8713  0004' 0098'              	movwf	??___flmul
  8714  0005' 0818'              	movf	??___flmul,w
  8715  0006' 009D'              	movwf	___flmul@sign
  8716  0007'                    l4233:
  8717  0007' 0813'              	movf	___flmul@b+3,w
  8718  0008' 0098'              	movwf	??___flmul
  8719  0009' 0718'              	addwf	??___flmul,w
  8720  000A' 0099'              	movwf	??___flmul+1
  8721  000B' 0819'              	movf	??___flmul+1,w
  8722  000C' 00A3'              	movwf	___flmul@bexp
  8723  000D'                    l4235:
  8724  000D' 1F92'              	btfss	___flmul@b+2,7
  8725  000E' 2800'              	goto	u6861
  8726  000F' 2800'              	goto	u6860
  8727  0010'                    u6861:
  8728  0010' 2800'              	goto	l4239
  8729  0011'                    u6860:
  8730  0011'                    l4237:
  8731  0011' 1423'              	bsf	___flmul@bexp,0
  8732  0012'                    l4239:
  8733  0012' 0823'              	movf	___flmul@bexp,w
  8734  0013' 1903               	btfsc	3,2
  8735  0014' 2800'              	goto	u6871
  8736  0015' 2800'              	goto	u6870
  8737  0016'                    u6871:
  8738  0016' 2800'              	goto	l4247
  8739  0017'                    u6870:
  8740  0017'                    l4241:
  8741  0017' 0A23'              	incf	___flmul@bexp,w
  8742  0018' 1D03               	btfss	3,2
  8743  0019' 2800'              	goto	u6881
  8744  001A' 2800'              	goto	u6880
  8745  001B'                    u6881:
  8746  001B' 2800'              	goto	l4245
  8747  001C'                    u6880:
  8748  001C'                    l4243:
  8749  001C' 3000               	movlw	0
  8750  001D' 0093'              	movwf	___flmul@b+3
  8751  001E' 3000               	movlw	0
  8752  001F' 0092'              	movwf	___flmul@b+2
  8753  0020' 3000               	movlw	0
  8754  0021' 0091'              	movwf	___flmul@b+1
  8755  0022' 3000               	movlw	0
  8756  0023' 0090'              	movwf	___flmul@b
  8757  0024'                    l4245:
  8758  0024' 1792'              	bsf	___flmul@b+2,7
  8759  0025' 2800'              	goto	l4249
  8760  0026'                    l4247:
  8761  0026' 3000               	movlw	0
  8762  0027' 0093'              	movwf	___flmul@b+3
  8763  0028' 3000               	movlw	0
  8764  0029' 0092'              	movwf	___flmul@b+2
  8765  002A' 3000               	movlw	0
  8766  002B' 0091'              	movwf	___flmul@b+1
  8767  002C' 3000               	movlw	0
  8768  002D' 0090'              	movwf	___flmul@b
  8769  002E'                    l4249:
  8770  002E' 0817'              	movf	___flmul@a+3,w
  8771  002F' 3980               	andlw	128
  8772  0030' 0098'              	movwf	??___flmul
  8773  0031' 0818'              	movf	??___flmul,w
  8774  0032' 069D'              	xorwf	___flmul@sign,f
  8775  0033'                    l4251:
  8776  0033' 0817'              	movf	___flmul@a+3,w
  8777  0034' 0098'              	movwf	??___flmul
  8778  0035' 0718'              	addwf	??___flmul,w
  8779  0036' 0099'              	movwf	??___flmul+1
  8780  0037' 0819'              	movf	??___flmul+1,w
  8781  0038' 009E'              	movwf	___flmul@aexp
  8782  0039'                    l4253:
  8783  0039' 1F96'              	btfss	___flmul@a+2,7
  8784  003A' 2800'              	goto	u6891
  8785  003B' 2800'              	goto	u6890
  8786  003C'                    u6891:
  8787  003C' 2800'              	goto	l4257
  8788  003D'                    u6890:
  8789  003D'                    l4255:
  8790  003D' 141E'              	bsf	___flmul@aexp,0
  8791  003E'                    l4257:
  8792  003E' 081E'              	movf	___flmul@aexp,w
  8793  003F' 1903               	btfsc	3,2
  8794  0040' 2800'              	goto	u6901
  8795  0041' 2800'              	goto	u6900
  8796  0042'                    u6901:
  8797  0042' 2800'              	goto	l4265
  8798  0043'                    u6900:
  8799  0043'                    l4259:
  8800  0043' 0A1E'              	incf	___flmul@aexp,w
  8801  0044' 1D03               	btfss	3,2
  8802  0045' 2800'              	goto	u6911
  8803  0046' 2800'              	goto	u6910
  8804  0047'                    u6911:
  8805  0047' 2800'              	goto	l4263
  8806  0048'                    u6910:
  8807  0048'                    l4261:
  8808  0048' 3000               	movlw	0
  8809  0049' 0097'              	movwf	___flmul@a+3
  8810  004A' 3000               	movlw	0
  8811  004B' 0096'              	movwf	___flmul@a+2
  8812  004C' 3000               	movlw	0
  8813  004D' 0095'              	movwf	___flmul@a+1
  8814  004E' 3000               	movlw	0
  8815  004F' 0094'              	movwf	___flmul@a
  8816  0050'                    l4263:
  8817  0050' 1796'              	bsf	___flmul@a+2,7
  8818  0051' 2800'              	goto	l4267
  8819  0052'                    l4265:
  8820  0052' 3000               	movlw	0
  8821  0053' 0097'              	movwf	___flmul@a+3
  8822  0054' 3000               	movlw	0
  8823  0055' 0096'              	movwf	___flmul@a+2
  8824  0056' 3000               	movlw	0
  8825  0057' 0095'              	movwf	___flmul@a+1
  8826  0058' 3000               	movlw	0
  8827  0059' 0094'              	movwf	___flmul@a
  8828  005A'                    l4267:
  8829  005A' 081E'              	movf	___flmul@aexp,w
  8830  005B' 1903               	btfsc	3,2
  8831  005C' 2800'              	goto	u6921
  8832  005D' 2800'              	goto	u6920
  8833  005E'                    u6921:
  8834  005E' 2800'              	goto	l4271
  8835  005F'                    u6920:
  8836  005F'                    l4269:
  8837  005F' 0823'              	movf	___flmul@bexp,w
  8838  0060' 1D03               	btfss	3,2
  8839  0061' 2800'              	goto	u6931
  8840  0062' 2800'              	goto	u6930
  8841  0063'                    u6931:
  8842  0063' 2800'              	goto	l4275
  8843  0064'                    u6930:
  8844  0064'                    l4271:
  8845  0064' 3000               	movlw	0
  8846  0065' 0093'              	movwf	?___flmul+3
  8847  0066' 3000               	movlw	0
  8848  0067' 0092'              	movwf	?___flmul+2
  8849  0068' 3000               	movlw	0
  8850  0069' 0091'              	movwf	?___flmul+1
  8851  006A' 3000               	movlw	0
  8852  006B' 0090'              	movwf	?___flmul
  8853  006C' 2800'              	goto	l829
  8854  006D'                    l4275:
  8855  006D' 0810'              	movf	___flmul@b,w
  8856  006E' 0098'              	movwf	??___flmul
  8857  006F' 0818'              	movf	??___flmul,w
  8858  0070' 0080'              	movwf	__Umul8_16@multiplicand
  8859  0071' 0816'              	movf	___flmul@a+2,w
  8860  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8861  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  8862  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  8863  0079' 0801'              	movf	?__Umul8_16+1,w
  8864  007A' 00A9'              	movwf	___flmul@temp+1
  8865  007B' 0800'              	movf	?__Umul8_16,w
  8866  007C' 00A8'              	movwf	___flmul@temp
  8867  007D'                    l4277:
  8868  007D' 0828'              	movf	___flmul@temp,w
  8869  007E' 0098'              	movwf	??___flmul
  8870  007F' 0199'              	clrf	??___flmul+1
  8871  0080' 019A'              	clrf	??___flmul+2
  8872  0081' 019B'              	clrf	??___flmul+3
  8873  0082' 081B'              	movf	??___flmul+3,w
  8874  0083' 00A2'              	movwf	___flmul@grs+3
  8875  0084' 081A'              	movf	??___flmul+2,w
  8876  0085' 00A1'              	movwf	___flmul@grs+2
  8877  0086' 0819'              	movf	??___flmul+1,w
  8878  0087' 00A0'              	movwf	___flmul@grs+1
  8879  0088' 0818'              	movf	??___flmul,w
  8880  0089' 009F'              	movwf	___flmul@grs
  8881  008A'                    l4279:
  8882  008A' 0829'              	movf	___flmul@temp+1,w
  8883  008B' 0098'              	movwf	??___flmul
  8884  008C' 0199'              	clrf	??___flmul+1
  8885  008D' 019A'              	clrf	??___flmul+2
  8886  008E' 019B'              	clrf	??___flmul+3
  8887  008F' 081B'              	movf	??___flmul+3,w
  8888  0090' 00A7'              	movwf	___flmul@prod+3
  8889  0091' 081A'              	movf	??___flmul+2,w
  8890  0092' 00A6'              	movwf	___flmul@prod+2
  8891  0093' 0819'              	movf	??___flmul+1,w
  8892  0094' 00A5'              	movwf	___flmul@prod+1
  8893  0095' 0818'              	movf	??___flmul,w
  8894  0096' 00A4'              	movwf	___flmul@prod
  8895  0097' 0811'              	movf	___flmul@b+1,w
  8896  0098' 0098'              	movwf	??___flmul
  8897  0099' 0818'              	movf	??___flmul,w
  8898  009A' 0080'              	movwf	__Umul8_16@multiplicand
  8899  009B' 0815'              	movf	___flmul@a+1,w
  8900  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8901  00A1' 1283               	bcf	3,5	;RP0=0, select bank0
  8902  00A2' 1303               	bcf	3,6	;RP1=0, select bank0
  8903  00A3' 0801'              	movf	?__Umul8_16+1,w
  8904  00A4' 00A9'              	movwf	___flmul@temp+1
  8905  00A5' 0800'              	movf	?__Umul8_16,w
  8906  00A6' 00A8'              	movwf	___flmul@temp
  8907  00A7'                    l4281:
  8908  00A7' 0828'              	movf	___flmul@temp,w
  8909  00A8' 0098'              	movwf	??___flmul
  8910  00A9' 0199'              	clrf	??___flmul+1
  8911  00AA' 019A'              	clrf	??___flmul+2
  8912  00AB' 019B'              	clrf	??___flmul+3
  8913  00AC' 0818'              	movf	??___flmul,w
  8914  00AD' 079F'              	addwf	___flmul@grs,f
  8915  00AE' 0819'              	movf	??___flmul+1,w
  8916  00AF' 1103               	clrz
  8917  00B0' 1803               	skipnc
  8918  00B1' 3E01               	addlw	1
  8919  00B2' 1903               	skipnz
  8920  00B3' 2800'              	goto	u6941
  8921  00B4' 07A0'              	addwf	___flmul@grs+1,f
  8922  00B5'                    u6941:
  8923  00B5' 081A'              	movf	??___flmul+2,w
  8924  00B6' 1103               	clrz
  8925  00B7' 1803               	skipnc
  8926  00B8' 3E01               	addlw	1
  8927  00B9' 1903               	skipnz
  8928  00BA' 2800'              	goto	u6942
  8929  00BB' 07A1'              	addwf	___flmul@grs+2,f
  8930  00BC'                    u6942:
  8931  00BC' 081B'              	movf	??___flmul+3,w
  8932  00BD' 1103               	clrz
  8933  00BE' 1803               	skipnc
  8934  00BF' 3E01               	addlw	1
  8935  00C0' 1903               	skipnz
  8936  00C1' 2800'              	goto	u6943
  8937  00C2' 07A2'              	addwf	___flmul@grs+3,f
  8938  00C3'                    u6943:
  8939  00C3'                    l4283:
  8940  00C3' 0829'              	movf	___flmul@temp+1,w
  8941  00C4' 0098'              	movwf	??___flmul
  8942  00C5' 0199'              	clrf	??___flmul+1
  8943  00C6' 019A'              	clrf	??___flmul+2
  8944  00C7' 019B'              	clrf	??___flmul+3
  8945  00C8' 0818'              	movf	??___flmul,w
  8946  00C9' 07A4'              	addwf	___flmul@prod,f
  8947  00CA' 0819'              	movf	??___flmul+1,w
  8948  00CB' 1103               	clrz
  8949  00CC' 1803               	skipnc
  8950  00CD' 3E01               	addlw	1
  8951  00CE' 1903               	skipnz
  8952  00CF' 2800'              	goto	u6951
  8953  00D0' 07A5'              	addwf	___flmul@prod+1,f
  8954  00D1'                    u6951:
  8955  00D1' 081A'              	movf	??___flmul+2,w
  8956  00D2' 1103               	clrz
  8957  00D3' 1803               	skipnc
  8958  00D4' 3E01               	addlw	1
  8959  00D5' 1903               	skipnz
  8960  00D6' 2800'              	goto	u6952
  8961  00D7' 07A6'              	addwf	___flmul@prod+2,f
  8962  00D8'                    u6952:
  8963  00D8' 081B'              	movf	??___flmul+3,w
  8964  00D9' 1103               	clrz
  8965  00DA' 1803               	skipnc
  8966  00DB' 3E01               	addlw	1
  8967  00DC' 1903               	skipnz
  8968  00DD' 2800'              	goto	u6953
  8969  00DE' 07A7'              	addwf	___flmul@prod+3,f
  8970  00DF'                    u6953:
  8971  00DF' 0812'              	movf	___flmul@b+2,w
  8972  00E0' 0098'              	movwf	??___flmul
  8973  00E1' 0818'              	movf	??___flmul,w
  8974  00E2' 0080'              	movwf	__Umul8_16@multiplicand
  8975  00E3' 0814'              	movf	___flmul@a,w
  8976  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8977  00E9' 1283               	bcf	3,5	;RP0=0, select bank0
  8978  00EA' 1303               	bcf	3,6	;RP1=0, select bank0
  8979  00EB' 0801'              	movf	?__Umul8_16+1,w
  8980  00EC' 00A9'              	movwf	___flmul@temp+1
  8981  00ED' 0800'              	movf	?__Umul8_16,w
  8982  00EE' 00A8'              	movwf	___flmul@temp
  8983  00EF'                    l4285:
  8984  00EF' 0828'              	movf	___flmul@temp,w
  8985  00F0' 0098'              	movwf	??___flmul
  8986  00F1' 0199'              	clrf	??___flmul+1
  8987  00F2' 019A'              	clrf	??___flmul+2
  8988  00F3' 019B'              	clrf	??___flmul+3
  8989  00F4' 0818'              	movf	??___flmul,w
  8990  00F5' 079F'              	addwf	___flmul@grs,f
  8991  00F6' 0819'              	movf	??___flmul+1,w
  8992  00F7' 1103               	clrz
  8993  00F8' 1803               	skipnc
  8994  00F9' 3E01               	addlw	1
  8995  00FA' 1903               	skipnz
  8996  00FB' 2800'              	goto	u6961
  8997  00FC' 07A0'              	addwf	___flmul@grs+1,f
  8998  00FD'                    u6961:
  8999  00FD' 081A'              	movf	??___flmul+2,w
  9000  00FE' 1103               	clrz
  9001  00FF' 1803               	skipnc
  9002  0100' 3E01               	addlw	1
  9003  0101' 1903               	skipnz
  9004  0102' 2800'              	goto	u6962
  9005  0103' 07A1'              	addwf	___flmul@grs+2,f
  9006  0104'                    u6962:
  9007  0104' 081B'              	movf	??___flmul+3,w
  9008  0105' 1103               	clrz
  9009  0106' 1803               	skipnc
  9010  0107' 3E01               	addlw	1
  9011  0108' 1903               	skipnz
  9012  0109' 2800'              	goto	u6963
  9013  010A' 07A2'              	addwf	___flmul@grs+3,f
  9014  010B'                    u6963:
  9015  010B'                    l4287:
  9016  010B' 0829'              	movf	___flmul@temp+1,w
  9017  010C' 0098'              	movwf	??___flmul
  9018  010D' 0199'              	clrf	??___flmul+1
  9019  010E' 019A'              	clrf	??___flmul+2
  9020  010F' 019B'              	clrf	??___flmul+3
  9021  0110' 0818'              	movf	??___flmul,w
  9022  0111' 07A4'              	addwf	___flmul@prod,f
  9023  0112' 0819'              	movf	??___flmul+1,w
  9024  0113' 1103               	clrz
  9025  0114' 1803               	skipnc
  9026  0115' 3E01               	addlw	1
  9027  0116' 1903               	skipnz
  9028  0117' 2800'              	goto	u6971
  9029  0118' 07A5'              	addwf	___flmul@prod+1,f
  9030  0119'                    u6971:
  9031  0119' 081A'              	movf	??___flmul+2,w
  9032  011A' 1103               	clrz
  9033  011B' 1803               	skipnc
  9034  011C' 3E01               	addlw	1
  9035  011D' 1903               	skipnz
  9036  011E' 2800'              	goto	u6972
  9037  011F' 07A6'              	addwf	___flmul@prod+2,f
  9038  0120'                    u6972:
  9039  0120' 081B'              	movf	??___flmul+3,w
  9040  0121' 1103               	clrz
  9041  0122' 1803               	skipnc
  9042  0123' 3E01               	addlw	1
  9043  0124' 1903               	skipnz
  9044  0125' 2800'              	goto	u6973
  9045  0126' 07A7'              	addwf	___flmul@prod+3,f
  9046  0127'                    u6973:
  9047  0127'                    l4289:
  9048  0127' 3008               	movlw	8
  9049  0128' 0098'              	movwf	??___flmul
  9050  0129'                    u6985:
  9051  0129' 1003               	clrc
  9052  012A' 0D9F'              	rlf	___flmul@grs,f
  9053  012B' 0DA0'              	rlf	___flmul@grs+1,f
  9054  012C' 0DA1'              	rlf	___flmul@grs+2,f
  9055  012D' 0DA2'              	rlf	___flmul@grs+3,f
  9056  012E' 0B98'              	decfsz	??___flmul,f
  9057  012F' 2800'              	goto	u6985
  9058  0130'                    l4291:
  9059  0130' 0811'              	movf	___flmul@b+1,w
  9060  0131' 0098'              	movwf	??___flmul
  9061  0132' 0818'              	movf	??___flmul,w
  9062  0133' 0080'              	movwf	__Umul8_16@multiplicand
  9063  0134' 0814'              	movf	___flmul@a,w
  9064  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9065  013A' 1283               	bcf	3,5	;RP0=0, select bank0
  9066  013B' 1303               	bcf	3,6	;RP1=0, select bank0
  9067  013C' 0801'              	movf	?__Umul8_16+1,w
  9068  013D' 00A9'              	movwf	___flmul@temp+1
  9069  013E' 0800'              	movf	?__Umul8_16,w
  9070  013F' 00A8'              	movwf	___flmul@temp
  9071  0140'                    l4293:
  9072  0140' 0828'              	movf	___flmul@temp,w
  9073  0141' 0098'              	movwf	??___flmul
  9074  0142' 0829'              	movf	___flmul@temp+1,w
  9075  0143' 0099'              	movwf	??___flmul+1
  9076  0144' 019A'              	clrf	??___flmul+2
  9077  0145' 019B'              	clrf	??___flmul+3
  9078  0146' 0818'              	movf	??___flmul,w
  9079  0147' 079F'              	addwf	___flmul@grs,f
  9080  0148' 0819'              	movf	??___flmul+1,w
  9081  0149' 1103               	clrz
  9082  014A' 1803               	skipnc
  9083  014B' 3E01               	addlw	1
  9084  014C' 1903               	skipnz
  9085  014D' 2800'              	goto	u6991
  9086  014E' 07A0'              	addwf	___flmul@grs+1,f
  9087  014F'                    u6991:
  9088  014F' 081A'              	movf	??___flmul+2,w
  9089  0150' 1103               	clrz
  9090  0151' 1803               	skipnc
  9091  0152' 3E01               	addlw	1
  9092  0153' 1903               	skipnz
  9093  0154' 2800'              	goto	u6992
  9094  0155' 07A1'              	addwf	___flmul@grs+2,f
  9095  0156'                    u6992:
  9096  0156' 081B'              	movf	??___flmul+3,w
  9097  0157' 1103               	clrz
  9098  0158' 1803               	skipnc
  9099  0159' 3E01               	addlw	1
  9100  015A' 1903               	skipnz
  9101  015B' 2800'              	goto	u6993
  9102  015C' 07A2'              	addwf	___flmul@grs+3,f
  9103  015D'                    u6993:
  9104  015D'                    l4295:
  9105  015D' 0810'              	movf	___flmul@b,w
  9106  015E' 0098'              	movwf	??___flmul
  9107  015F' 0818'              	movf	??___flmul,w
  9108  0160' 0080'              	movwf	__Umul8_16@multiplicand
  9109  0161' 0815'              	movf	___flmul@a+1,w
  9110  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9111  0167' 1283               	bcf	3,5	;RP0=0, select bank0
  9112  0168' 1303               	bcf	3,6	;RP1=0, select bank0
  9113  0169' 0801'              	movf	?__Umul8_16+1,w
  9114  016A' 00A9'              	movwf	___flmul@temp+1
  9115  016B' 0800'              	movf	?__Umul8_16,w
  9116  016C' 00A8'              	movwf	___flmul@temp
  9117  016D'                    l4297:
  9118  016D' 0828'              	movf	___flmul@temp,w
  9119  016E' 0098'              	movwf	??___flmul
  9120  016F' 0829'              	movf	___flmul@temp+1,w
  9121  0170' 0099'              	movwf	??___flmul+1
  9122  0171' 019A'              	clrf	??___flmul+2
  9123  0172' 019B'              	clrf	??___flmul+3
  9124  0173' 0818'              	movf	??___flmul,w
  9125  0174' 079F'              	addwf	___flmul@grs,f
  9126  0175' 0819'              	movf	??___flmul+1,w
  9127  0176' 1103               	clrz
  9128  0177' 1803               	skipnc
  9129  0178' 3E01               	addlw	1
  9130  0179' 1903               	skipnz
  9131  017A' 2800'              	goto	u7001
  9132  017B' 07A0'              	addwf	___flmul@grs+1,f
  9133  017C'                    u7001:
  9134  017C' 081A'              	movf	??___flmul+2,w
  9135  017D' 1103               	clrz
  9136  017E' 1803               	skipnc
  9137  017F' 3E01               	addlw	1
  9138  0180' 1903               	skipnz
  9139  0181' 2800'              	goto	u7002
  9140  0182' 07A1'              	addwf	___flmul@grs+2,f
  9141  0183'                    u7002:
  9142  0183' 081B'              	movf	??___flmul+3,w
  9143  0184' 1103               	clrz
  9144  0185' 1803               	skipnc
  9145  0186' 3E01               	addlw	1
  9146  0187' 1903               	skipnz
  9147  0188' 2800'              	goto	u7003
  9148  0189' 07A2'              	addwf	___flmul@grs+3,f
  9149  018A'                    u7003:
  9150  018A'                    l4299:
  9151  018A' 3008               	movlw	8
  9152  018B' 0098'              	movwf	??___flmul
  9153  018C'                    u7015:
  9154  018C' 1003               	clrc
  9155  018D' 0D9F'              	rlf	___flmul@grs,f
  9156  018E' 0DA0'              	rlf	___flmul@grs+1,f
  9157  018F' 0DA1'              	rlf	___flmul@grs+2,f
  9158  0190' 0DA2'              	rlf	___flmul@grs+3,f
  9159  0191' 0B98'              	decfsz	??___flmul,f
  9160  0192' 2800'              	goto	u7015
  9161  0193' 0810'              	movf	___flmul@b,w
  9162  0194' 0098'              	movwf	??___flmul
  9163  0195' 0818'              	movf	??___flmul,w
  9164  0196' 0080'              	movwf	__Umul8_16@multiplicand
  9165  0197' 0814'              	movf	___flmul@a,w
  9166  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9167  019D' 1283               	bcf	3,5	;RP0=0, select bank0
  9168  019E' 1303               	bcf	3,6	;RP1=0, select bank0
  9169  019F' 0801'              	movf	?__Umul8_16+1,w
  9170  01A0' 00A9'              	movwf	___flmul@temp+1
  9171  01A1' 0800'              	movf	?__Umul8_16,w
  9172  01A2' 00A8'              	movwf	___flmul@temp
  9173  01A3'                    l4301:
  9174  01A3' 0828'              	movf	___flmul@temp,w
  9175  01A4' 0098'              	movwf	??___flmul
  9176  01A5' 0829'              	movf	___flmul@temp+1,w
  9177  01A6' 0099'              	movwf	??___flmul+1
  9178  01A7' 019A'              	clrf	??___flmul+2
  9179  01A8' 019B'              	clrf	??___flmul+3
  9180  01A9' 0818'              	movf	??___flmul,w
  9181  01AA' 079F'              	addwf	___flmul@grs,f
  9182  01AB' 0819'              	movf	??___flmul+1,w
  9183  01AC' 1103               	clrz
  9184  01AD' 1803               	skipnc
  9185  01AE' 3E01               	addlw	1
  9186  01AF' 1903               	skipnz
  9187  01B0' 2800'              	goto	u7021
  9188  01B1' 07A0'              	addwf	___flmul@grs+1,f
  9189  01B2'                    u7021:
  9190  01B2' 081A'              	movf	??___flmul+2,w
  9191  01B3' 1103               	clrz
  9192  01B4' 1803               	skipnc
  9193  01B5' 3E01               	addlw	1
  9194  01B6' 1903               	skipnz
  9195  01B7' 2800'              	goto	u7022
  9196  01B8' 07A1'              	addwf	___flmul@grs+2,f
  9197  01B9'                    u7022:
  9198  01B9' 081B'              	movf	??___flmul+3,w
  9199  01BA' 1103               	clrz
  9200  01BB' 1803               	skipnc
  9201  01BC' 3E01               	addlw	1
  9202  01BD' 1903               	skipnz
  9203  01BE' 2800'              	goto	u7023
  9204  01BF' 07A2'              	addwf	___flmul@grs+3,f
  9205  01C0'                    u7023:
  9206  01C0'                    l4303:
  9207  01C0' 0811'              	movf	___flmul@b+1,w
  9208  01C1' 0098'              	movwf	??___flmul
  9209  01C2' 0818'              	movf	??___flmul,w
  9210  01C3' 0080'              	movwf	__Umul8_16@multiplicand
  9211  01C4' 0816'              	movf	___flmul@a+2,w
  9212  01C5' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9213  01CA' 1283               	bcf	3,5	;RP0=0, select bank0
  9214  01CB' 1303               	bcf	3,6	;RP1=0, select bank0
  9215  01CC' 0801'              	movf	?__Umul8_16+1,w
  9216  01CD' 00A9'              	movwf	___flmul@temp+1
  9217  01CE' 0800'              	movf	?__Umul8_16,w
  9218  01CF' 00A8'              	movwf	___flmul@temp
  9219  01D0' 0828'              	movf	___flmul@temp,w
  9220  01D1' 0098'              	movwf	??___flmul
  9221  01D2' 0829'              	movf	___flmul@temp+1,w
  9222  01D3' 0099'              	movwf	??___flmul+1
  9223  01D4' 019A'              	clrf	??___flmul+2
  9224  01D5' 019B'              	clrf	??___flmul+3
  9225  01D6' 0818'              	movf	??___flmul,w
  9226  01D7' 07A4'              	addwf	___flmul@prod,f
  9227  01D8' 0819'              	movf	??___flmul+1,w
  9228  01D9' 1103               	clrz
  9229  01DA' 1803               	skipnc
  9230  01DB' 3E01               	addlw	1
  9231  01DC' 1903               	skipnz
  9232  01DD' 2800'              	goto	u7031
  9233  01DE' 07A5'              	addwf	___flmul@prod+1,f
  9234  01DF'                    u7031:
  9235  01DF' 081A'              	movf	??___flmul+2,w
  9236  01E0' 1103               	clrz
  9237  01E1' 1803               	skipnc
  9238  01E2' 3E01               	addlw	1
  9239  01E3' 1903               	skipnz
  9240  01E4' 2800'              	goto	u7032
  9241  01E5' 07A6'              	addwf	___flmul@prod+2,f
  9242  01E6'                    u7032:
  9243  01E6' 081B'              	movf	??___flmul+3,w
  9244  01E7' 1103               	clrz
  9245  01E8' 1803               	skipnc
  9246  01E9' 3E01               	addlw	1
  9247  01EA' 1903               	skipnz
  9248  01EB' 2800'              	goto	u7033
  9249  01EC' 07A7'              	addwf	___flmul@prod+3,f
  9250  01ED'                    u7033:
  9251  01ED'                    l4305:
  9252  01ED' 0812'              	movf	___flmul@b+2,w
  9253  01EE' 0098'              	movwf	??___flmul
  9254  01EF' 0818'              	movf	??___flmul,w
  9255  01F0' 0080'              	movwf	__Umul8_16@multiplicand
  9256  01F1' 0815'              	movf	___flmul@a+1,w
  9257  01F2' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9258  01F7' 1283               	bcf	3,5	;RP0=0, select bank0
  9259  01F8' 1303               	bcf	3,6	;RP1=0, select bank0
  9260  01F9' 0801'              	movf	?__Umul8_16+1,w
  9261  01FA' 00A9'              	movwf	___flmul@temp+1
  9262  01FB' 0800'              	movf	?__Umul8_16,w
  9263  01FC' 00A8'              	movwf	___flmul@temp
  9264  01FD'                    l4307:
  9265  01FD' 0828'              	movf	___flmul@temp,w
  9266  01FE' 0098'              	movwf	??___flmul
  9267  01FF' 0829'              	movf	___flmul@temp+1,w
  9268  0200' 0099'              	movwf	??___flmul+1
  9269  0201' 019A'              	clrf	??___flmul+2
  9270  0202' 019B'              	clrf	??___flmul+3
  9271  0203' 0818'              	movf	??___flmul,w
  9272  0204' 07A4'              	addwf	___flmul@prod,f
  9273  0205' 0819'              	movf	??___flmul+1,w
  9274  0206' 1103               	clrz
  9275  0207' 1803               	skipnc
  9276  0208' 3E01               	addlw	1
  9277  0209' 1903               	skipnz
  9278  020A' 2800'              	goto	u7041
  9279  020B' 07A5'              	addwf	___flmul@prod+1,f
  9280  020C'                    u7041:
  9281  020C' 081A'              	movf	??___flmul+2,w
  9282  020D' 1103               	clrz
  9283  020E' 1803               	skipnc
  9284  020F' 3E01               	addlw	1
  9285  0210' 1903               	skipnz
  9286  0211' 2800'              	goto	u7042
  9287  0212' 07A6'              	addwf	___flmul@prod+2,f
  9288  0213'                    u7042:
  9289  0213' 081B'              	movf	??___flmul+3,w
  9290  0214' 1103               	clrz
  9291  0215' 1803               	skipnc
  9292  0216' 3E01               	addlw	1
  9293  0217' 1903               	skipnz
  9294  0218' 2800'              	goto	u7043
  9295  0219' 07A7'              	addwf	___flmul@prod+3,f
  9296  021A'                    u7043:
  9297  021A' 0812'              	movf	___flmul@b+2,w
  9298  021B' 0098'              	movwf	??___flmul
  9299  021C' 0818'              	movf	??___flmul,w
  9300  021D' 0080'              	movwf	__Umul8_16@multiplicand
  9301  021E' 0816'              	movf	___flmul@a+2,w
  9302  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9303  0224' 1283               	bcf	3,5	;RP0=0, select bank0
  9304  0225' 1303               	bcf	3,6	;RP1=0, select bank0
  9305  0226' 0801'              	movf	?__Umul8_16+1,w
  9306  0227' 00A9'              	movwf	___flmul@temp+1
  9307  0228' 0800'              	movf	?__Umul8_16,w
  9308  0229' 00A8'              	movwf	___flmul@temp
  9309  022A'                    l4309:
  9310  022A' 0828'              	movf	___flmul@temp,w
  9311  022B' 0098'              	movwf	??___flmul
  9312  022C' 0829'              	movf	___flmul@temp+1,w
  9313  022D' 0099'              	movwf	??___flmul+1
  9314  022E' 019A'              	clrf	??___flmul+2
  9315  022F' 019B'              	clrf	??___flmul+3
  9316  0230' 3008               	movlw	8
  9317  0231'                    u7055:
  9318  0231' 1003               	clrc
  9319  0232' 0D98'              	rlf	??___flmul,f
  9320  0233' 0D99'              	rlf	??___flmul+1,f
  9321  0234' 0D9A'              	rlf	??___flmul+2,f
  9322  0235' 0D9B'              	rlf	??___flmul+3,f
  9323  0236'                    u7050:
  9324  0236' 3EFF               	addlw	-1
  9325  0237' 1D03               	skipz
  9326  0238' 2800'              	goto	u7055
  9327  0239' 0818'              	movf	??___flmul,w
  9328  023A' 07A4'              	addwf	___flmul@prod,f
  9329  023B' 0819'              	movf	??___flmul+1,w
  9330  023C' 1103               	clrz
  9331  023D' 1803               	skipnc
  9332  023E' 3E01               	addlw	1
  9333  023F' 1903               	skipnz
  9334  0240' 2800'              	goto	u7061
  9335  0241' 07A5'              	addwf	___flmul@prod+1,f
  9336  0242'                    u7061:
  9337  0242' 081A'              	movf	??___flmul+2,w
  9338  0243' 1103               	clrz
  9339  0244' 1803               	skipnc
  9340  0245' 3E01               	addlw	1
  9341  0246' 1903               	skipnz
  9342  0247' 2800'              	goto	u7062
  9343  0248' 07A6'              	addwf	___flmul@prod+2,f
  9344  0249'                    u7062:
  9345  0249' 081B'              	movf	??___flmul+3,w
  9346  024A' 1103               	clrz
  9347  024B' 1803               	skipnc
  9348  024C' 3E01               	addlw	1
  9349  024D' 1903               	skipnz
  9350  024E' 2800'              	goto	u7063
  9351  024F' 07A7'              	addwf	___flmul@prod+3,f
  9352  0250'                    u7063:
  9353  0250'                    l4311:
  9354  0250' 081F'              	movf	___flmul@grs,w
  9355  0251' 0098'              	movwf	??___flmul
  9356  0252' 0820'              	movf	___flmul@grs+1,w
  9357  0253' 0099'              	movwf	??___flmul+1
  9358  0254' 0821'              	movf	___flmul@grs+2,w
  9359  0255' 009A'              	movwf	??___flmul+2
  9360  0256' 0822'              	movf	___flmul@grs+3,w
  9361  0257' 009B'              	movwf	??___flmul+3
  9362  0258' 3018               	movlw	24
  9363  0259'                    u7075:
  9364  0259' 1003               	clrc
  9365  025A' 0C9B'              	rrf	??___flmul+3,f
  9366  025B' 0C9A'              	rrf	??___flmul+2,f
  9367  025C' 0C99'              	rrf	??___flmul+1,f
  9368  025D' 0C98'              	rrf	??___flmul,f
  9369  025E'                    u7070:
  9370  025E' 3EFF               	addlw	-1
  9371  025F' 1D03               	skipz
  9372  0260' 2800'              	goto	u7075
  9373  0261' 0818'              	movf	??___flmul,w
  9374  0262' 07A4'              	addwf	___flmul@prod,f
  9375  0263' 0819'              	movf	??___flmul+1,w
  9376  0264' 1103               	clrz
  9377  0265' 1803               	skipnc
  9378  0266' 3E01               	addlw	1
  9379  0267' 1903               	skipnz
  9380  0268' 2800'              	goto	u7081
  9381  0269' 07A5'              	addwf	___flmul@prod+1,f
  9382  026A'                    u7081:
  9383  026A' 081A'              	movf	??___flmul+2,w
  9384  026B' 1103               	clrz
  9385  026C' 1803               	skipnc
  9386  026D' 3E01               	addlw	1
  9387  026E' 1903               	skipnz
  9388  026F' 2800'              	goto	u7082
  9389  0270' 07A6'              	addwf	___flmul@prod+2,f
  9390  0271'                    u7082:
  9391  0271' 081B'              	movf	??___flmul+3,w
  9392  0272' 1103               	clrz
  9393  0273' 1803               	skipnc
  9394  0274' 3E01               	addlw	1
  9395  0275' 1903               	skipnz
  9396  0276' 2800'              	goto	u7083
  9397  0277' 07A7'              	addwf	___flmul@prod+3,f
  9398  0278'                    u7083:
  9399  0278'                    l4313:
  9400  0278' 3008               	movlw	8
  9401  0279' 0098'              	movwf	??___flmul
  9402  027A'                    u7095:
  9403  027A' 1003               	clrc
  9404  027B' 0D9F'              	rlf	___flmul@grs,f
  9405  027C' 0DA0'              	rlf	___flmul@grs+1,f
  9406  027D' 0DA1'              	rlf	___flmul@grs+2,f
  9407  027E' 0DA2'              	rlf	___flmul@grs+3,f
  9408  027F' 0B98'              	decfsz	??___flmul,f
  9409  0280' 2800'              	goto	u7095
  9410  0281'                    l4315:
  9411  0281' 0823'              	movf	___flmul@bexp,w
  9412  0282' 071E'              	addwf	___flmul@aexp,w
  9413  0283' 0098'              	movwf	??___flmul
  9414  0284' 0199'              	clrf	??___flmul+1
  9415  0285' 0D99'              	rlf	??___flmul+1,f
  9416  0286' 0818'              	movf	??___flmul,w
  9417  0287' 3E82               	addlw	130
  9418  0288' 00A8'              	movwf	___flmul@temp
  9419  0289' 0819'              	movf	??___flmul+1,w
  9420  028A' 1803               	skipnc
  9421  028B' 3E01               	addlw	1
  9422  028C' 3EFF               	addlw	255
  9423  028D' 00A9'              	movwf	___flmul@temp+1
  9424  028E' 2800'              	goto	l4327
  9425  028F'                    l4317:
  9426  028F' 3001               	movlw	1
  9427  0290' 0098'              	movwf	??___flmul
  9428  0291'                    u7105:
  9429  0291' 1003               	clrc
  9430  0292' 0DA4'              	rlf	___flmul@prod,f
  9431  0293' 0DA5'              	rlf	___flmul@prod+1,f
  9432  0294' 0DA6'              	rlf	___flmul@prod+2,f
  9433  0295' 0DA7'              	rlf	___flmul@prod+3,f
  9434  0296' 0B98'              	decfsz	??___flmul,f
  9435  0297' 2800'              	goto	u7105
  9436  0298'                    l4319:
  9437  0298' 1FA2'              	btfss	___flmul@grs+3,7
  9438  0299' 2800'              	goto	u7111
  9439  029A' 2800'              	goto	u7110
  9440  029B'                    u7111:
  9441  029B' 2800'              	goto	l4323
  9442  029C'                    u7110:
  9443  029C'                    l4321:
  9444  029C' 1424'              	bsf	___flmul@prod,0
  9445  029D'                    l4323:
  9446  029D' 3001               	movlw	1
  9447  029E' 0098'              	movwf	??___flmul
  9448  029F'                    u7125:
  9449  029F' 1003               	clrc
  9450  02A0' 0D9F'              	rlf	___flmul@grs,f
  9451  02A1' 0DA0'              	rlf	___flmul@grs+1,f
  9452  02A2' 0DA1'              	rlf	___flmul@grs+2,f
  9453  02A3' 0DA2'              	rlf	___flmul@grs+3,f
  9454  02A4' 0B98'              	decfsz	??___flmul,f
  9455  02A5' 2800'              	goto	u7125
  9456  02A6'                    l4325:
  9457  02A6' 30FF               	movlw	255
  9458  02A7' 07A8'              	addwf	___flmul@temp,f
  9459  02A8' 1803               	skipnc
  9460  02A9' 0AA9'              	incf	___flmul@temp+1,f
  9461  02AA' 30FF               	movlw	255
  9462  02AB' 07A9'              	addwf	___flmul@temp+1,f
  9463  02AC'                    l4327:
  9464  02AC' 1FA6'              	btfss	___flmul@prod+2,7
  9465  02AD' 2800'              	goto	u7131
  9466  02AE' 2800'              	goto	u7130
  9467  02AF'                    u7131:
  9468  02AF' 2800'              	goto	l4317
  9469  02B0'                    u7130:
  9470  02B0'                    l4329:
  9471  02B0' 019E'              	clrf	___flmul@aexp
  9472  02B1'                    l4331:
  9473  02B1' 1FA2'              	btfss	___flmul@grs+3,7
  9474  02B2' 2800'              	goto	u7141
  9475  02B3' 2800'              	goto	u7140
  9476  02B4'                    u7141:
  9477  02B4' 2800'              	goto	l4339
  9478  02B5'                    u7140:
  9479  02B5'                    l4333:
  9480  02B5' 30FF               	movlw	255
  9481  02B6' 051F'              	andwf	___flmul@grs,w
  9482  02B7' 0098'              	movwf	??___flmul
  9483  02B8' 30FF               	movlw	255
  9484  02B9' 0520'              	andwf	___flmul@grs+1,w
  9485  02BA' 0099'              	movwf	??___flmul+1
  9486  02BB' 30FF               	movlw	255
  9487  02BC' 0521'              	andwf	___flmul@grs+2,w
  9488  02BD' 009A'              	movwf	??___flmul+2
  9489  02BE' 307F               	movlw	127
  9490  02BF' 0522'              	andwf	___flmul@grs+3,w
  9491  02C0' 009B'              	movwf	??___flmul+3
  9492  02C1' 081B'              	movf	??___flmul+3,w
  9493  02C2' 041A'              	iorwf	??___flmul+2,w
  9494  02C3' 0419'              	iorwf	??___flmul+1,w
  9495  02C4' 0418'              	iorwf	??___flmul,w
  9496  02C5' 1903               	skipnz
  9497  02C6' 2800'              	goto	u7151
  9498  02C7' 2800'              	goto	u7150
  9499  02C8'                    u7151:
  9500  02C8' 2800'              	goto	l835
  9501  02C9'                    u7150:
  9502  02C9'                    l4335:
  9503  02C9' 019E'              	clrf	___flmul@aexp
  9504  02CA' 0A9E'              	incf	___flmul@aexp,f
  9505  02CB' 2800'              	goto	l4339
  9506  02CC'                    l835:
  9507  02CC' 1C24'              	btfss	___flmul@prod,0
  9508  02CD' 2800'              	goto	u7161
  9509  02CE' 2800'              	goto	u7160
  9510  02CF'                    u7161:
  9511  02CF' 2800'              	goto	l4339
  9512  02D0'                    u7160:
  9513  02D0' 2800'              	goto	l4335
  9514  02D1'                    l4339:
  9515  02D1' 081E'              	movf	___flmul@aexp,w
  9516  02D2' 1903               	btfsc	3,2
  9517  02D3' 2800'              	goto	u7171
  9518  02D4' 2800'              	goto	u7170
  9519  02D5'                    u7171:
  9520  02D5' 2800'              	goto	l4349
  9521  02D6'                    u7170:
  9522  02D6'                    l4341:
  9523  02D6' 3001               	movlw	1
  9524  02D7' 07A4'              	addwf	___flmul@prod,f
  9525  02D8' 3000               	movlw	0
  9526  02D9' 1803               	skipnc
  9527  02DA' 3001               	movlw	1
  9528  02DB' 07A5'              	addwf	___flmul@prod+1,f
  9529  02DC' 3000               	movlw	0
  9530  02DD' 1803               	skipnc
  9531  02DE' 3001               	movlw	1
  9532  02DF' 07A6'              	addwf	___flmul@prod+2,f
  9533  02E0' 3000               	movlw	0
  9534  02E1' 1803               	skipnc
  9535  02E2' 3001               	movlw	1
  9536  02E3' 07A7'              	addwf	___flmul@prod+3,f
  9537  02E4'                    l4343:
  9538  02E4' 1C27'              	btfss	___flmul@prod+3,0
  9539  02E5' 2800'              	goto	u7181
  9540  02E6' 2800'              	goto	u7180
  9541  02E7'                    u7181:
  9542  02E7' 2800'              	goto	l4349
  9543  02E8'                    u7180:
  9544  02E8'                    l4345:
  9545  02E8' 0824'              	movf	___flmul@prod,w
  9546  02E9' 0098'              	movwf	??___flmul
  9547  02EA' 0825'              	movf	___flmul@prod+1,w
  9548  02EB' 0099'              	movwf	??___flmul+1
  9549  02EC' 0826'              	movf	___flmul@prod+2,w
  9550  02ED' 009A'              	movwf	??___flmul+2
  9551  02EE' 0827'              	movf	___flmul@prod+3,w
  9552  02EF' 009B'              	movwf	??___flmul+3
  9553  02F0' 3001               	movlw	1
  9554  02F1' 009C'              	movwf	??___flmul+4
  9555  02F2'                    u7195:
  9556  02F2' 0D1B'              	rlf	??___flmul+3,w
  9557  02F3' 0C9B'              	rrf	??___flmul+3,f
  9558  02F4' 0C9A'              	rrf	??___flmul+2,f
  9559  02F5' 0C99'              	rrf	??___flmul+1,f
  9560  02F6' 0C98'              	rrf	??___flmul,f
  9561  02F7'                    u7190:
  9562  02F7' 0B9C'              	decfsz	??___flmul+4,f
  9563  02F8' 2800'              	goto	u7195
  9564  02F9' 081B'              	movf	??___flmul+3,w
  9565  02FA' 00A7'              	movwf	___flmul@prod+3
  9566  02FB' 081A'              	movf	??___flmul+2,w
  9567  02FC' 00A6'              	movwf	___flmul@prod+2
  9568  02FD' 0819'              	movf	??___flmul+1,w
  9569  02FE' 00A5'              	movwf	___flmul@prod+1
  9570  02FF' 0818'              	movf	??___flmul,w
  9571  0300' 00A4'              	movwf	___flmul@prod
  9572  0301'                    l4347:
  9573  0301' 3001               	movlw	1
  9574  0302' 07A8'              	addwf	___flmul@temp,f
  9575  0303' 1803               	skipnc
  9576  0304' 0AA9'              	incf	___flmul@temp+1,f
  9577  0305' 3000               	movlw	0
  9578  0306' 07A9'              	addwf	___flmul@temp+1,f
  9579  0307'                    l4349:
  9580  0307' 0829'              	movf	___flmul@temp+1,w
  9581  0308' 3A80               	xorlw	128
  9582  0309' 00FF               	movwf	btemp+1
  9583  030A' 3080               	movlw	128
  9584  030B' 027F               	subwf	btemp+1,w
  9585  030C' 1D03               	skipz
  9586  030D' 2800'              	goto	u7205
  9587  030E' 30FF               	movlw	255
  9588  030F' 0228'              	subwf	___flmul@temp,w
  9589  0310'                    u7205:
  9590  0310' 1C03               	skipc
  9591  0311' 2800'              	goto	u7201
  9592  0312' 2800'              	goto	u7200
  9593  0313'                    u7201:
  9594  0313' 2800'              	goto	l4353
  9595  0314'                    u7200:
  9596  0314'                    l4351:
  9597  0314' 307F               	movlw	127
  9598  0315' 1283               	bcf	3,5	;RP0=0, select bank0
  9599  0316' 1303               	bcf	3,6	;RP1=0, select bank0
  9600  0317' 00A7'              	movwf	___flmul@prod+3
  9601  0318' 3080               	movlw	128
  9602  0319' 00A6'              	movwf	___flmul@prod+2
  9603  031A' 3000               	movlw	0
  9604  031B' 00A5'              	movwf	___flmul@prod+1
  9605  031C' 3000               	movlw	0
  9606  031D' 00A4'              	movwf	___flmul@prod
  9607  031E' 2800'              	goto	l841
  9608  031F'                    l4353:
  9609  031F' 1283               	bcf	3,5	;RP0=0, select bank0
  9610  0320' 1303               	bcf	3,6	;RP1=0, select bank0
  9611  0321' 0829'              	movf	___flmul@temp+1,w
  9612  0322' 3A80               	xorlw	128
  9613  0323' 00FF               	movwf	btemp+1
  9614  0324' 3080               	movlw	128
  9615  0325' 027F               	subwf	btemp+1,w
  9616  0326' 1D03               	skipz
  9617  0327' 2800'              	goto	u7215
  9618  0328' 3001               	movlw	1
  9619  0329' 0228'              	subwf	___flmul@temp,w
  9620  032A'                    u7215:
  9621  032A' 1803               	skipnc
  9622  032B' 2800'              	goto	u7211
  9623  032C' 2800'              	goto	u7210
  9624  032D'                    u7211:
  9625  032D' 2800'              	goto	l4359
  9626  032E'                    u7210:
  9627  032E'                    l4355:
  9628  032E' 3000               	movlw	0
  9629  032F' 1283               	bcf	3,5	;RP0=0, select bank0
  9630  0330' 1303               	bcf	3,6	;RP1=0, select bank0
  9631  0331' 00A7'              	movwf	___flmul@prod+3
  9632  0332' 3000               	movlw	0
  9633  0333' 00A6'              	movwf	___flmul@prod+2
  9634  0334' 3000               	movlw	0
  9635  0335' 00A5'              	movwf	___flmul@prod+1
  9636  0336' 3000               	movlw	0
  9637  0337' 00A4'              	movwf	___flmul@prod
  9638  0338'                    l4357:
  9639  0338' 019D'              	clrf	___flmul@sign
  9640  0339' 2800'              	goto	l841
  9641  033A'                    l4359:
  9642  033A' 1283               	bcf	3,5	;RP0=0, select bank0
  9643  033B' 1303               	bcf	3,6	;RP1=0, select bank0
  9644  033C' 0828'              	movf	___flmul@temp,w
  9645  033D' 0098'              	movwf	??___flmul
  9646  033E' 0818'              	movf	??___flmul,w
  9647  033F' 00A3'              	movwf	___flmul@bexp
  9648  0340' 30FF               	movlw	255
  9649  0341' 05A4'              	andwf	___flmul@prod,f
  9650  0342' 30FF               	movlw	255
  9651  0343' 05A5'              	andwf	___flmul@prod+1,f
  9652  0344' 307F               	movlw	127
  9653  0345' 05A6'              	andwf	___flmul@prod+2,f
  9654  0346' 3000               	movlw	0
  9655  0347' 05A7'              	andwf	___flmul@prod+3,f
  9656  0348'                    l4361:
  9657  0348' 1C23'              	btfss	___flmul@bexp,0
  9658  0349' 2800'              	goto	u7221
  9659  034A' 2800'              	goto	u7220
  9660  034B'                    u7221:
  9661  034B' 2800'              	goto	l4365
  9662  034C'                    u7220:
  9663  034C'                    l4363:
  9664  034C' 17A6'              	bsf	___flmul@prod+2,7
  9665  034D'                    l4365:
  9666  034D' 0823'              	movf	___flmul@bexp,w
  9667  034E' 0098'              	movwf	??___flmul
  9668  034F' 1003               	clrc
  9669  0350' 0C18'              	rrf	??___flmul,w
  9670  0351' 0099'              	movwf	??___flmul+1
  9671  0352' 0819'              	movf	??___flmul+1,w
  9672  0353' 00A7'              	movwf	___flmul@prod+3
  9673  0354'                    l841:
  9674  0354' 081D'              	movf	___flmul@sign,w
  9675  0355' 0098'              	movwf	??___flmul
  9676  0356' 0818'              	movf	??___flmul,w
  9677  0357' 04A7'              	iorwf	___flmul@prod+3,f
  9678  0358'                    l4367:
  9679  0358' 0827'              	movf	___flmul@prod+3,w
  9680  0359' 0093'              	movwf	?___flmul+3
  9681  035A' 0826'              	movf	___flmul@prod+2,w
  9682  035B' 0092'              	movwf	?___flmul+2
  9683  035C' 0825'              	movf	___flmul@prod+1,w
  9684  035D' 0091'              	movwf	?___flmul+1
  9685  035E' 0824'              	movf	___flmul@prod,w
  9686  035F' 0090'              	movwf	?___flmul
  9687  0360'                    l829:
  9688  0360' 0008               	return
  9689  0361'                    __end_of___flmul:
  9690                           
  9691                           	psect	text32
  9692  0000'                    __ptext32:	
  9693 ;; *************** function __Umul8_16 *****************
  9694 ;; Defined at:
  9695 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  multiplier      1    wreg     unsigned char 
  9698 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9701 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9702 ;;  product         2    4[BANK0 ] unsigned int 
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  2    0[BANK0 ] unsigned int 
  9705 ;; Registers used:
  9706 ;;		wreg, status,2, status,0
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9712 ;;      Params:         0       2       0       0       0
  9713 ;;      Locals:         0       5       0       0       0
  9714 ;;      Temps:          0       2       0       0       0
  9715 ;;      Totals:         0       9       0       0       0
  9716 ;;Total ram usage:        9 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; Hardware stack levels required when called:    2
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		___flmul
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           
  9727                           ;psect for function __Umul8_16
  9728  0000'                    __Umul8_16:
  9729                           
  9730                           ;incstack = 0
  9731                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9732                           ;__Umul8_16@multiplier stored from wreg
  9733  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9734  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9735  0002' 0088'              	movwf	__Umul8_16@multiplier
  9736  0003'                    l3961:
  9737  0003' 0184'              	clrf	__Umul8_16@product
  9738  0004' 0185'              	clrf	__Umul8_16@product+1
  9739  0005'                    l3963:
  9740  0005' 0800'              	movf	__Umul8_16@multiplicand,w
  9741  0006' 0082'              	movwf	??__Umul8_16
  9742  0007' 0183'              	clrf	??__Umul8_16+1
  9743  0008' 0802'              	movf	??__Umul8_16,w
  9744  0009' 0086'              	movwf	__Umul8_16@word_mpld
  9745  000A' 0803'              	movf	??__Umul8_16+1,w
  9746  000B' 0087'              	movwf	__Umul8_16@word_mpld+1
  9747  000C'                    l3965:
  9748  000C' 1C08'              	btfss	__Umul8_16@multiplier,0
  9749  000D' 2800'              	goto	u6221
  9750  000E' 2800'              	goto	u6220
  9751  000F'                    u6221:
  9752  000F' 2800'              	goto	l848
  9753  0010'                    u6220:
  9754  0010'                    l3967:
  9755  0010' 0806'              	movf	__Umul8_16@word_mpld,w
  9756  0011' 0784'              	addwf	__Umul8_16@product,f
  9757  0012' 1803               	skipnc
  9758  0013' 0A85'              	incf	__Umul8_16@product+1,f
  9759  0014' 0807'              	movf	__Umul8_16@word_mpld+1,w
  9760  0015' 0785'              	addwf	__Umul8_16@product+1,f
  9761  0016'                    l848:
  9762  0016' 3001               	movlw	1
  9763  0017'                    u6235:
  9764  0017' 1003               	clrc
  9765  0018' 0D86'              	rlf	__Umul8_16@word_mpld,f
  9766  0019' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  9767  001A' 3EFF               	addlw	-1
  9768  001B' 1D03               	skipz
  9769  001C' 2800'              	goto	u6235
  9770  001D' 1003               	clrc
  9771  001E' 0C88'              	rrf	__Umul8_16@multiplier,f
  9772  001F'                    l3969:
  9773  001F' 0808'              	movf	__Umul8_16@multiplier,w
  9774  0020' 1D03               	btfss	3,2
  9775  0021' 2800'              	goto	u6241
  9776  0022' 2800'              	goto	u6240
  9777  0023'                    u6241:
  9778  0023' 2800'              	goto	l3965
  9779  0024'                    u6240:
  9780  0024'                    l3971:
  9781  0024' 0805'              	movf	__Umul8_16@product+1,w
  9782  0025' 0081'              	movwf	?__Umul8_16+1
  9783  0026' 0804'              	movf	__Umul8_16@product,w
  9784  0027' 0080'              	movwf	?__Umul8_16
  9785  0028'                    l850:
  9786  0028' 0008               	return
  9787  0029'                    __end_of__Umul8_16:
  9788                           
  9789                           	psect	text33
  9790  0000'                    __ptext33:	
  9791 ;; *************** function ___fldiv *****************
  9792 ;; Defined at:
  9793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  a               4   42[BANK0 ] unsigned int 
  9796 ;;  b               4   46[BANK0 ] unsigned int 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  grs             4   62[BANK0 ] unsigned long 
  9799 ;;  rem             4   55[BANK0 ] unsigned long 
  9800 ;;  new_exp         2   60[BANK0 ] int 
  9801 ;;  aexp            1   67[BANK0 ] unsigned char 
  9802 ;;  bexp            1   66[BANK0 ] unsigned char 
  9803 ;;  sign            1   59[BANK0 ] unsigned char 
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  4   42[BANK0 ] unsigned char 
  9806 ;; Registers used:
  9807 ;;		wreg, status,2, status,0, btemp+1
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9813 ;;      Params:         0       8       0       0       0
  9814 ;;      Locals:         0      13       0       0       0
  9815 ;;      Temps:          0       5       0       0       0
  9816 ;;      Totals:         0      26       0       0       0
  9817 ;;Total ram usage:       26 bytes
  9818 ;; Hardware stack levels used:    1
  9819 ;; Hardware stack levels required when called:    2
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_ADC_CH0
  9824 ;;		_ADC_CH1
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function ___fldiv
  9830  0000'                    ___fldiv:
  9831  0000'                    l3307:	
  9832                           ;incstack = 0
  9833                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9834                           
  9835  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9836  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9837  0002' 0831'              	movf	___fldiv@b+3,w
  9838  0003' 3980               	andlw	128
  9839  0004' 00B2'              	movwf	??___fldiv
  9840  0005' 0832'              	movf	??___fldiv,w
  9841  0006' 00BB'              	movwf	___fldiv@sign
  9842  0007'                    l3309:
  9843  0007' 0831'              	movf	___fldiv@b+3,w
  9844  0008' 00B2'              	movwf	??___fldiv
  9845  0009' 0732'              	addwf	??___fldiv,w
  9846  000A' 00B3'              	movwf	??___fldiv+1
  9847  000B' 0833'              	movf	??___fldiv+1,w
  9848  000C' 00C2'              	movwf	___fldiv@bexp
  9849  000D'                    l3311:
  9850  000D' 1FB0'              	btfss	___fldiv@b+2,7
  9851  000E' 2800'              	goto	u5221
  9852  000F' 2800'              	goto	u5220
  9853  0010'                    u5221:
  9854  0010' 2800'              	goto	l3315
  9855  0011'                    u5220:
  9856  0011'                    l3313:
  9857  0011' 1442'              	bsf	___fldiv@bexp,0
  9858  0012'                    l3315:
  9859  0012' 0842'              	movf	___fldiv@bexp,w
  9860  0013' 1903               	btfsc	3,2
  9861  0014' 2800'              	goto	u5231
  9862  0015' 2800'              	goto	u5230
  9863  0016'                    u5231:
  9864  0016' 2800'              	goto	l3325
  9865  0017'                    u5230:
  9866  0017'                    l3317:
  9867  0017' 0A42'              	incf	___fldiv@bexp,w
  9868  0018' 1D03               	btfss	3,2
  9869  0019' 2800'              	goto	u5241
  9870  001A' 2800'              	goto	u5240
  9871  001B'                    u5241:
  9872  001B' 2800'              	goto	l3321
  9873  001C'                    u5240:
  9874  001C'                    l3319:
  9875  001C' 3000               	movlw	0
  9876  001D' 00B1'              	movwf	___fldiv@b+3
  9877  001E' 3000               	movlw	0
  9878  001F' 00B0'              	movwf	___fldiv@b+2
  9879  0020' 3000               	movlw	0
  9880  0021' 00AF'              	movwf	___fldiv@b+1
  9881  0022' 3000               	movlw	0
  9882  0023' 00AE'              	movwf	___fldiv@b
  9883  0024'                    l3321:
  9884  0024' 17B0'              	bsf	___fldiv@b+2,7
  9885  0025'                    l3323:
  9886  0025' 01B1'              	clrf	___fldiv@b+3
  9887  0026' 2800'              	goto	l3327
  9888  0027'                    l3325:
  9889  0027' 3000               	movlw	0
  9890  0028' 00B1'              	movwf	___fldiv@b+3
  9891  0029' 3000               	movlw	0
  9892  002A' 00B0'              	movwf	___fldiv@b+2
  9893  002B' 3000               	movlw	0
  9894  002C' 00AF'              	movwf	___fldiv@b+1
  9895  002D' 3000               	movlw	0
  9896  002E' 00AE'              	movwf	___fldiv@b
  9897  002F'                    l3327:
  9898  002F' 082D'              	movf	___fldiv@a+3,w
  9899  0030' 3980               	andlw	128
  9900  0031' 00B2'              	movwf	??___fldiv
  9901  0032' 0832'              	movf	??___fldiv,w
  9902  0033' 06BB'              	xorwf	___fldiv@sign,f
  9903  0034'                    l3329:
  9904  0034' 082D'              	movf	___fldiv@a+3,w
  9905  0035' 00B2'              	movwf	??___fldiv
  9906  0036' 0732'              	addwf	??___fldiv,w
  9907  0037' 00B3'              	movwf	??___fldiv+1
  9908  0038' 0833'              	movf	??___fldiv+1,w
  9909  0039' 00C3'              	movwf	___fldiv@aexp
  9910  003A'                    l3331:
  9911  003A' 1FAC'              	btfss	___fldiv@a+2,7
  9912  003B' 2800'              	goto	u5251
  9913  003C' 2800'              	goto	u5250
  9914  003D'                    u5251:
  9915  003D' 2800'              	goto	l3335
  9916  003E'                    u5250:
  9917  003E'                    l3333:
  9918  003E' 1443'              	bsf	___fldiv@aexp,0
  9919  003F'                    l3335:
  9920  003F' 0843'              	movf	___fldiv@aexp,w
  9921  0040' 1903               	btfsc	3,2
  9922  0041' 2800'              	goto	u5261
  9923  0042' 2800'              	goto	u5260
  9924  0043'                    u5261:
  9925  0043' 2800'              	goto	l3345
  9926  0044'                    u5260:
  9927  0044'                    l3337:
  9928  0044' 0A43'              	incf	___fldiv@aexp,w
  9929  0045' 1D03               	btfss	3,2
  9930  0046' 2800'              	goto	u5271
  9931  0047' 2800'              	goto	u5270
  9932  0048'                    u5271:
  9933  0048' 2800'              	goto	l3341
  9934  0049'                    u5270:
  9935  0049'                    l3339:
  9936  0049' 3000               	movlw	0
  9937  004A' 00AD'              	movwf	___fldiv@a+3
  9938  004B' 3000               	movlw	0
  9939  004C' 00AC'              	movwf	___fldiv@a+2
  9940  004D' 3000               	movlw	0
  9941  004E' 00AB'              	movwf	___fldiv@a+1
  9942  004F' 3000               	movlw	0
  9943  0050' 00AA'              	movwf	___fldiv@a
  9944  0051'                    l3341:
  9945  0051' 17AC'              	bsf	___fldiv@a+2,7
  9946  0052'                    l3343:
  9947  0052' 01AD'              	clrf	___fldiv@a+3
  9948  0053' 2800'              	goto	l789
  9949  0054'                    l3345:
  9950  0054' 3000               	movlw	0
  9951  0055' 00AD'              	movwf	___fldiv@a+3
  9952  0056' 3000               	movlw	0
  9953  0057' 00AC'              	movwf	___fldiv@a+2
  9954  0058' 3000               	movlw	0
  9955  0059' 00AB'              	movwf	___fldiv@a+1
  9956  005A' 3000               	movlw	0
  9957  005B' 00AA'              	movwf	___fldiv@a
  9958  005C'                    l789:
  9959  005C' 082D'              	movf	___fldiv@a+3,w
  9960  005D' 042C'              	iorwf	___fldiv@a+2,w
  9961  005E' 042B'              	iorwf	___fldiv@a+1,w
  9962  005F' 042A'              	iorwf	___fldiv@a,w
  9963  0060' 1D03               	skipz
  9964  0061' 2800'              	goto	u5281
  9965  0062' 2800'              	goto	u5280
  9966  0063'                    u5281:
  9967  0063' 2800'              	goto	l3355
  9968  0064'                    u5280:
  9969  0064'                    l3347:
  9970  0064' 3000               	movlw	0
  9971  0065' 00B1'              	movwf	___fldiv@b+3
  9972  0066' 3000               	movlw	0
  9973  0067' 00B0'              	movwf	___fldiv@b+2
  9974  0068' 3000               	movlw	0
  9975  0069' 00AF'              	movwf	___fldiv@b+1
  9976  006A' 3000               	movlw	0
  9977  006B' 00AE'              	movwf	___fldiv@b
  9978  006C' 3080               	movlw	128
  9979  006D' 04B0'              	iorwf	___fldiv@b+2,f
  9980  006E' 307F               	movlw	127
  9981  006F' 04B1'              	iorwf	___fldiv@b+3,f
  9982  0070'                    l3349:
  9983  0070' 083B'              	movf	___fldiv@sign,w
  9984  0071' 00B2'              	movwf	??___fldiv
  9985  0072' 0832'              	movf	??___fldiv,w
  9986  0073' 04B1'              	iorwf	___fldiv@b+3,f
  9987  0074'                    l3351:
  9988  0074' 0831'              	movf	___fldiv@b+3,w
  9989  0075' 00AD'              	movwf	?___fldiv+3
  9990  0076' 0830'              	movf	___fldiv@b+2,w
  9991  0077' 00AC'              	movwf	?___fldiv+2
  9992  0078' 082F'              	movf	___fldiv@b+1,w
  9993  0079' 00AB'              	movwf	?___fldiv+1
  9994  007A' 082E'              	movf	___fldiv@b,w
  9995  007B' 00AA'              	movwf	?___fldiv
  9996  007C' 2800'              	goto	l791
  9997  007D'                    l3355:
  9998  007D' 0842'              	movf	___fldiv@bexp,w
  9999  007E' 1D03               	btfss	3,2
 10000  007F' 2800'              	goto	u5291
 10001  0080' 2800'              	goto	u5290
 10002  0081'                    u5291:
 10003  0081' 2800'              	goto	l3361
 10004  0082'                    u5290:
 10005  0082'                    l3357:
 10006  0082' 3000               	movlw	0
 10007  0083' 00AD'              	movwf	?___fldiv+3
 10008  0084' 3000               	movlw	0
 10009  0085' 00AC'              	movwf	?___fldiv+2
 10010  0086' 3000               	movlw	0
 10011  0087' 00AB'              	movwf	?___fldiv+1
 10012  0088' 3000               	movlw	0
 10013  0089' 00AA'              	movwf	?___fldiv
 10014  008A' 2800'              	goto	l791
 10015  008B'                    l3361:
 10016  008B' 0842'              	movf	___fldiv@bexp,w
 10017  008C' 00B2'              	movwf	??___fldiv
 10018  008D' 01B3'              	clrf	??___fldiv+1
 10019  008E' 0833'              	movf	??___fldiv+1,w
 10020  008F' 00B5'              	movwf	??___fldiv+3
 10021  0090' 0843'              	movf	___fldiv@aexp,w
 10022  0091' 0232'              	subwf	??___fldiv,w
 10023  0092' 00B4'              	movwf	??___fldiv+2
 10024  0093' 1C03               	skipc
 10025  0094' 03B5'              	decf	??___fldiv+3,f
 10026  0095' 0834'              	movf	??___fldiv+2,w
 10027  0096' 3E7F               	addlw	127
 10028  0097' 00BC'              	movwf	___fldiv@new_exp
 10029  0098' 0835'              	movf	??___fldiv+3,w
 10030  0099' 1803               	skipnc
 10031  009A' 3E01               	addlw	1
 10032  009B' 3E00               	addlw	0
 10033  009C' 00BD'              	movwf	___fldiv@new_exp+1
 10034  009D'                    l3363:
 10035  009D' 0831'              	movf	___fldiv@b+3,w
 10036  009E' 00BA'              	movwf	___fldiv@rem+3
 10037  009F' 0830'              	movf	___fldiv@b+2,w
 10038  00A0' 00B9'              	movwf	___fldiv@rem+2
 10039  00A1' 082F'              	movf	___fldiv@b+1,w
 10040  00A2' 00B8'              	movwf	___fldiv@rem+1
 10041  00A3' 082E'              	movf	___fldiv@b,w
 10042  00A4' 00B7'              	movwf	___fldiv@rem
 10043  00A5'                    l3365:
 10044  00A5' 3000               	movlw	0
 10045  00A6' 00B1'              	movwf	___fldiv@b+3
 10046  00A7' 3000               	movlw	0
 10047  00A8' 00B0'              	movwf	___fldiv@b+2
 10048  00A9' 3000               	movlw	0
 10049  00AA' 00AF'              	movwf	___fldiv@b+1
 10050  00AB' 3000               	movlw	0
 10051  00AC' 00AE'              	movwf	___fldiv@b
 10052  00AD'                    l3367:
 10053  00AD' 3000               	movlw	0
 10054  00AE' 00C1'              	movwf	___fldiv@grs+3
 10055  00AF' 3000               	movlw	0
 10056  00B0' 00C0'              	movwf	___fldiv@grs+2
 10057  00B1' 3000               	movlw	0
 10058  00B2' 00BF'              	movwf	___fldiv@grs+1
 10059  00B3' 3000               	movlw	0
 10060  00B4' 00BE'              	movwf	___fldiv@grs
 10061  00B5'                    l3369:
 10062  00B5' 01C3'              	clrf	___fldiv@aexp
 10063  00B6' 2800'              	goto	l3389
 10064  00B7'                    l3371:
 10065  00B7' 0843'              	movf	___fldiv@aexp,w
 10066  00B8' 1903               	btfsc	3,2
 10067  00B9' 2800'              	goto	u5301
 10068  00BA' 2800'              	goto	u5300
 10069  00BB'                    u5301:
 10070  00BB' 2800'              	goto	l3381
 10071  00BC'                    u5300:
 10072  00BC'                    l3373:
 10073  00BC' 3001               	movlw	1
 10074  00BD' 00B2'              	movwf	??___fldiv
 10075  00BE'                    u5315:
 10076  00BE' 1003               	clrc
 10077  00BF' 0DB7'              	rlf	___fldiv@rem,f
 10078  00C0' 0DB8'              	rlf	___fldiv@rem+1,f
 10079  00C1' 0DB9'              	rlf	___fldiv@rem+2,f
 10080  00C2' 0DBA'              	rlf	___fldiv@rem+3,f
 10081  00C3' 0BB2'              	decfsz	??___fldiv,f
 10082  00C4' 2800'              	goto	u5315
 10083  00C5' 3001               	movlw	1
 10084  00C6' 00B2'              	movwf	??___fldiv
 10085  00C7'                    u5325:
 10086  00C7' 1003               	clrc
 10087  00C8' 0DAE'              	rlf	___fldiv@b,f
 10088  00C9' 0DAF'              	rlf	___fldiv@b+1,f
 10089  00CA' 0DB0'              	rlf	___fldiv@b+2,f
 10090  00CB' 0DB1'              	rlf	___fldiv@b+3,f
 10091  00CC' 0BB2'              	decfsz	??___fldiv,f
 10092  00CD' 2800'              	goto	u5325
 10093  00CE'                    l3375:
 10094  00CE' 1FC1'              	btfss	___fldiv@grs+3,7
 10095  00CF' 2800'              	goto	u5331
 10096  00D0' 2800'              	goto	u5330
 10097  00D1'                    u5331:
 10098  00D1' 2800'              	goto	l3379
 10099  00D2'                    u5330:
 10100  00D2'                    l3377:
 10101  00D2' 142E'              	bsf	___fldiv@b,0
 10102  00D3'                    l3379:
 10103  00D3' 3001               	movlw	1
 10104  00D4' 00B2'              	movwf	??___fldiv
 10105  00D5'                    u5345:
 10106  00D5' 1003               	clrc
 10107  00D6' 0DBE'              	rlf	___fldiv@grs,f
 10108  00D7' 0DBF'              	rlf	___fldiv@grs+1,f
 10109  00D8' 0DC0'              	rlf	___fldiv@grs+2,f
 10110  00D9' 0DC1'              	rlf	___fldiv@grs+3,f
 10111  00DA' 0BB2'              	decfsz	??___fldiv,f
 10112  00DB' 2800'              	goto	u5345
 10113  00DC'                    l3381:
 10114  00DC' 082D'              	movf	___fldiv@a+3,w
 10115  00DD' 023A'              	subwf	___fldiv@rem+3,w
 10116  00DE' 1D03               	skipz
 10117  00DF' 2800'              	goto	u5355
 10118  00E0' 082C'              	movf	___fldiv@a+2,w
 10119  00E1' 0239'              	subwf	___fldiv@rem+2,w
 10120  00E2' 1D03               	skipz
 10121  00E3' 2800'              	goto	u5355
 10122  00E4' 082B'              	movf	___fldiv@a+1,w
 10123  00E5' 0238'              	subwf	___fldiv@rem+1,w
 10124  00E6' 1D03               	skipz
 10125  00E7' 2800'              	goto	u5355
 10126  00E8' 082A'              	movf	___fldiv@a,w
 10127  00E9' 0237'              	subwf	___fldiv@rem,w
 10128  00EA'                    u5355:
 10129  00EA' 1C03               	skipc
 10130  00EB' 2800'              	goto	u5351
 10131  00EC' 2800'              	goto	u5350
 10132  00ED'                    u5351:
 10133  00ED' 2800'              	goto	l3387
 10134  00EE'                    u5350:
 10135  00EE'                    l3383:
 10136  00EE' 1741'              	bsf	___fldiv@grs+3,6
 10137  00EF'                    l3385:
 10138  00EF' 082A'              	movf	___fldiv@a,w
 10139  00F0' 02B7'              	subwf	___fldiv@rem,f
 10140  00F1' 082B'              	movf	___fldiv@a+1,w
 10141  00F2' 1C03               	skipc
 10142  00F3' 0F2B'              	incfsz	___fldiv@a+1,w
 10143  00F4' 02B8'              	subwf	___fldiv@rem+1,f
 10144  00F5' 082C'              	movf	___fldiv@a+2,w
 10145  00F6' 1C03               	skipc
 10146  00F7' 0F2C'              	incfsz	___fldiv@a+2,w
 10147  00F8' 02B9'              	subwf	___fldiv@rem+2,f
 10148  00F9' 082D'              	movf	___fldiv@a+3,w
 10149  00FA' 1C03               	skipc
 10150  00FB' 0F2D'              	incfsz	___fldiv@a+3,w
 10151  00FC' 02BA'              	subwf	___fldiv@rem+3,f
 10152  00FD'                    l3387:
 10153  00FD' 3001               	movlw	1
 10154  00FE' 00B2'              	movwf	??___fldiv
 10155  00FF' 0832'              	movf	??___fldiv,w
 10156  0100' 07C3'              	addwf	___fldiv@aexp,f
 10157  0101'                    l3389:
 10158  0101' 301A               	movlw	26
 10159  0102' 0243'              	subwf	___fldiv@aexp,w
 10160  0103' 1C03               	skipc
 10161  0104' 2800'              	goto	u5361
 10162  0105' 2800'              	goto	u5360
 10163  0106'                    u5361:
 10164  0106' 2800'              	goto	l3371
 10165  0107'                    u5360:
 10166  0107'                    l3391:
 10167  0107' 083A'              	movf	___fldiv@rem+3,w
 10168  0108' 0439'              	iorwf	___fldiv@rem+2,w
 10169  0109' 0438'              	iorwf	___fldiv@rem+1,w
 10170  010A' 0437'              	iorwf	___fldiv@rem,w
 10171  010B' 1903               	skipnz
 10172  010C' 2800'              	goto	u5371
 10173  010D' 2800'              	goto	u5370
 10174  010E'                    u5371:
 10175  010E' 2800'              	goto	l3405
 10176  010F'                    u5370:
 10177  010F'                    l3393:
 10178  010F' 143E'              	bsf	___fldiv@grs,0
 10179  0110' 2800'              	goto	l3405
 10180  0111'                    l3395:
 10181  0111' 3001               	movlw	1
 10182  0112' 00B2'              	movwf	??___fldiv
 10183  0113'                    u5385:
 10184  0113' 1003               	clrc
 10185  0114' 0DAE'              	rlf	___fldiv@b,f
 10186  0115' 0DAF'              	rlf	___fldiv@b+1,f
 10187  0116' 0DB0'              	rlf	___fldiv@b+2,f
 10188  0117' 0DB1'              	rlf	___fldiv@b+3,f
 10189  0118' 0BB2'              	decfsz	??___fldiv,f
 10190  0119' 2800'              	goto	u5385
 10191  011A'                    l3397:
 10192  011A' 1FC1'              	btfss	___fldiv@grs+3,7
 10193  011B' 2800'              	goto	u5391
 10194  011C' 2800'              	goto	u5390
 10195  011D'                    u5391:
 10196  011D' 2800'              	goto	l3401
 10197  011E'                    u5390:
 10198  011E'                    l3399:
 10199  011E' 142E'              	bsf	___fldiv@b,0
 10200  011F'                    l3401:
 10201  011F' 3001               	movlw	1
 10202  0120' 00B2'              	movwf	??___fldiv
 10203  0121'                    u5405:
 10204  0121' 1003               	clrc
 10205  0122' 0DBE'              	rlf	___fldiv@grs,f
 10206  0123' 0DBF'              	rlf	___fldiv@grs+1,f
 10207  0124' 0DC0'              	rlf	___fldiv@grs+2,f
 10208  0125' 0DC1'              	rlf	___fldiv@grs+3,f
 10209  0126' 0BB2'              	decfsz	??___fldiv,f
 10210  0127' 2800'              	goto	u5405
 10211  0128'                    l3403:
 10212  0128' 30FF               	movlw	255
 10213  0129' 07BC'              	addwf	___fldiv@new_exp,f
 10214  012A' 1803               	skipnc
 10215  012B' 0ABD'              	incf	___fldiv@new_exp+1,f
 10216  012C' 30FF               	movlw	255
 10217  012D' 07BD'              	addwf	___fldiv@new_exp+1,f
 10218  012E'                    l3405:
 10219  012E' 1FB0'              	btfss	___fldiv@b+2,7
 10220  012F' 2800'              	goto	u5411
 10221  0130' 2800'              	goto	u5410
 10222  0131'                    u5411:
 10223  0131' 2800'              	goto	l3395
 10224  0132'                    u5410:
 10225  0132'                    l3407:
 10226  0132' 01C3'              	clrf	___fldiv@aexp
 10227  0133'                    l3409:
 10228  0133' 1FC1'              	btfss	___fldiv@grs+3,7
 10229  0134' 2800'              	goto	u5421
 10230  0135' 2800'              	goto	u5420
 10231  0136'                    u5421:
 10232  0136' 2800'              	goto	l3417
 10233  0137'                    u5420:
 10234  0137'                    l3411:
 10235  0137' 30FF               	movlw	255
 10236  0138' 053E'              	andwf	___fldiv@grs,w
 10237  0139' 00B2'              	movwf	??___fldiv
 10238  013A' 30FF               	movlw	255
 10239  013B' 053F'              	andwf	___fldiv@grs+1,w
 10240  013C' 00B3'              	movwf	??___fldiv+1
 10241  013D' 30FF               	movlw	255
 10242  013E' 0540'              	andwf	___fldiv@grs+2,w
 10243  013F' 00B4'              	movwf	??___fldiv+2
 10244  0140' 307F               	movlw	127
 10245  0141' 0541'              	andwf	___fldiv@grs+3,w
 10246  0142' 00B5'              	movwf	??___fldiv+3
 10247  0143' 0835'              	movf	??___fldiv+3,w
 10248  0144' 0434'              	iorwf	??___fldiv+2,w
 10249  0145' 0433'              	iorwf	??___fldiv+1,w
 10250  0146' 0432'              	iorwf	??___fldiv,w
 10251  0147' 1903               	skipnz
 10252  0148' 2800'              	goto	u5431
 10253  0149' 2800'              	goto	u5430
 10254  014A'                    u5431:
 10255  014A' 2800'              	goto	l805
 10256  014B'                    u5430:
 10257  014B'                    l3413:
 10258  014B' 01C3'              	clrf	___fldiv@aexp
 10259  014C' 0AC3'              	incf	___fldiv@aexp,f
 10260  014D' 2800'              	goto	l3417
 10261  014E'                    l805:
 10262  014E' 1C2E'              	btfss	___fldiv@b,0
 10263  014F' 2800'              	goto	u5441
 10264  0150' 2800'              	goto	u5440
 10265  0151'                    u5441:
 10266  0151' 2800'              	goto	l3417
 10267  0152'                    u5440:
 10268  0152' 2800'              	goto	l3413
 10269  0153'                    l3417:
 10270  0153' 0843'              	movf	___fldiv@aexp,w
 10271  0154' 1903               	btfsc	3,2
 10272  0155' 2800'              	goto	u5451
 10273  0156' 2800'              	goto	u5450
 10274  0157'                    u5451:
 10275  0157' 2800'              	goto	l3427
 10276  0158'                    u5450:
 10277  0158'                    l3419:
 10278  0158' 3001               	movlw	1
 10279  0159' 07AE'              	addwf	___fldiv@b,f
 10280  015A' 3000               	movlw	0
 10281  015B' 1803               	skipnc
 10282  015C' 3001               	movlw	1
 10283  015D' 07AF'              	addwf	___fldiv@b+1,f
 10284  015E' 3000               	movlw	0
 10285  015F' 1803               	skipnc
 10286  0160' 3001               	movlw	1
 10287  0161' 07B0'              	addwf	___fldiv@b+2,f
 10288  0162' 3000               	movlw	0
 10289  0163' 1803               	skipnc
 10290  0164' 3001               	movlw	1
 10291  0165' 07B1'              	addwf	___fldiv@b+3,f
 10292  0166'                    l3421:
 10293  0166' 1C31'              	btfss	___fldiv@b+3,0
 10294  0167' 2800'              	goto	u5461
 10295  0168' 2800'              	goto	u5460
 10296  0169'                    u5461:
 10297  0169' 2800'              	goto	l3427
 10298  016A'                    u5460:
 10299  016A'                    l3423:
 10300  016A' 082E'              	movf	___fldiv@b,w
 10301  016B' 00B2'              	movwf	??___fldiv
 10302  016C' 082F'              	movf	___fldiv@b+1,w
 10303  016D' 00B3'              	movwf	??___fldiv+1
 10304  016E' 0830'              	movf	___fldiv@b+2,w
 10305  016F' 00B4'              	movwf	??___fldiv+2
 10306  0170' 0831'              	movf	___fldiv@b+3,w
 10307  0171' 00B5'              	movwf	??___fldiv+3
 10308  0172' 3001               	movlw	1
 10309  0173' 00B6'              	movwf	??___fldiv+4
 10310  0174'                    u5475:
 10311  0174' 0D35'              	rlf	??___fldiv+3,w
 10312  0175' 0CB5'              	rrf	??___fldiv+3,f
 10313  0176' 0CB4'              	rrf	??___fldiv+2,f
 10314  0177' 0CB3'              	rrf	??___fldiv+1,f
 10315  0178' 0CB2'              	rrf	??___fldiv,f
 10316  0179'                    u5470:
 10317  0179' 0BB6'              	decfsz	??___fldiv+4,f
 10318  017A' 2800'              	goto	u5475
 10319  017B' 0835'              	movf	??___fldiv+3,w
 10320  017C' 00B1'              	movwf	___fldiv@b+3
 10321  017D' 0834'              	movf	??___fldiv+2,w
 10322  017E' 00B0'              	movwf	___fldiv@b+2
 10323  017F' 0833'              	movf	??___fldiv+1,w
 10324  0180' 00AF'              	movwf	___fldiv@b+1
 10325  0181' 0832'              	movf	??___fldiv,w
 10326  0182' 00AE'              	movwf	___fldiv@b
 10327  0183'                    l3425:
 10328  0183' 3001               	movlw	1
 10329  0184' 07BC'              	addwf	___fldiv@new_exp,f
 10330  0185' 1803               	skipnc
 10331  0186' 0ABD'              	incf	___fldiv@new_exp+1,f
 10332  0187' 3000               	movlw	0
 10333  0188' 07BD'              	addwf	___fldiv@new_exp+1,f
 10334  0189'                    l3427:
 10335  0189' 083D'              	movf	___fldiv@new_exp+1,w
 10336  018A' 3A80               	xorlw	128
 10337  018B' 00FF               	movwf	btemp+1
 10338  018C' 3080               	movlw	128
 10339  018D' 027F               	subwf	btemp+1,w
 10340  018E' 1D03               	skipz
 10341  018F' 2800'              	goto	u5485
 10342  0190' 30FF               	movlw	255
 10343  0191' 023C'              	subwf	___fldiv@new_exp,w
 10344  0192'                    u5485:
 10345  0192' 1C03               	skipc
 10346  0193' 2800'              	goto	u5481
 10347  0194' 2800'              	goto	u5480
 10348  0195'                    u5481:
 10349  0195' 2800'              	goto	l3431
 10350  0196'                    u5480:
 10351  0196'                    l3429:
 10352  0196' 30FF               	movlw	255
 10353  0197' 1283               	bcf	3,5	;RP0=0, select bank0
 10354  0198' 1303               	bcf	3,6	;RP1=0, select bank0
 10355  0199' 00BC'              	movwf	___fldiv@new_exp
 10356  019A' 3000               	movlw	0
 10357  019B' 00BD'              	movwf	___fldiv@new_exp+1
 10358  019C' 3000               	movlw	0
 10359  019D' 00B1'              	movwf	___fldiv@b+3
 10360  019E' 3000               	movlw	0
 10361  019F' 00B0'              	movwf	___fldiv@b+2
 10362  01A0' 3000               	movlw	0
 10363  01A1' 00AF'              	movwf	___fldiv@b+1
 10364  01A2' 3000               	movlw	0
 10365  01A3' 00AE'              	movwf	___fldiv@b
 10366  01A4'                    l3431:
 10367  01A4' 1283               	bcf	3,5	;RP0=0, select bank0
 10368  01A5' 1303               	bcf	3,6	;RP1=0, select bank0
 10369  01A6' 083D'              	movf	___fldiv@new_exp+1,w
 10370  01A7' 3A80               	xorlw	128
 10371  01A8' 00FF               	movwf	btemp+1
 10372  01A9' 3080               	movlw	128
 10373  01AA' 027F               	subwf	btemp+1,w
 10374  01AB' 1D03               	skipz
 10375  01AC' 2800'              	goto	u5495
 10376  01AD' 3001               	movlw	1
 10377  01AE' 023C'              	subwf	___fldiv@new_exp,w
 10378  01AF'                    u5495:
 10379  01AF' 1803               	skipnc
 10380  01B0' 2800'              	goto	u5491
 10381  01B1' 2800'              	goto	u5490
 10382  01B2'                    u5491:
 10383  01B2' 2800'              	goto	l811
 10384  01B3'                    u5490:
 10385  01B3'                    l3433:
 10386  01B3' 1283               	bcf	3,5	;RP0=0, select bank0
 10387  01B4' 1303               	bcf	3,6	;RP1=0, select bank0
 10388  01B5' 01BC'              	clrf	___fldiv@new_exp
 10389  01B6' 01BD'              	clrf	___fldiv@new_exp+1
 10390  01B7'                    l3435:
 10391  01B7' 3000               	movlw	0
 10392  01B8' 00B1'              	movwf	___fldiv@b+3
 10393  01B9' 3000               	movlw	0
 10394  01BA' 00B0'              	movwf	___fldiv@b+2
 10395  01BB' 3000               	movlw	0
 10396  01BC' 00AF'              	movwf	___fldiv@b+1
 10397  01BD' 3000               	movlw	0
 10398  01BE' 00AE'              	movwf	___fldiv@b
 10399  01BF'                    l3437:
 10400  01BF' 01BB'              	clrf	___fldiv@sign
 10401  01C0'                    l811:
 10402  01C0' 1283               	bcf	3,5	;RP0=0, select bank0
 10403  01C1' 1303               	bcf	3,6	;RP1=0, select bank0
 10404  01C2' 083C'              	movf	___fldiv@new_exp,w
 10405  01C3' 00B2'              	movwf	??___fldiv
 10406  01C4' 0832'              	movf	??___fldiv,w
 10407  01C5' 00C2'              	movwf	___fldiv@bexp
 10408  01C6'                    l3439:
 10409  01C6' 1C42'              	btfss	___fldiv@bexp,0
 10410  01C7' 2800'              	goto	u5501
 10411  01C8' 2800'              	goto	u5500
 10412  01C9'                    u5501:
 10413  01C9' 2800'              	goto	l3443
 10414  01CA'                    u5500:
 10415  01CA'                    l3441:
 10416  01CA' 17B0'              	bsf	___fldiv@b+2,7
 10417  01CB' 2800'              	goto	l813
 10418  01CC'                    l3443:
 10419  01CC' 307F               	movlw	127
 10420  01CD' 00B2'              	movwf	??___fldiv
 10421  01CE' 0832'              	movf	??___fldiv,w
 10422  01CF' 05B0'              	andwf	___fldiv@b+2,f
 10423  01D0'                    l813:
 10424  01D0' 0842'              	movf	___fldiv@bexp,w
 10425  01D1' 00B2'              	movwf	??___fldiv
 10426  01D2' 1003               	clrc
 10427  01D3' 0C32'              	rrf	??___fldiv,w
 10428  01D4' 00B3'              	movwf	??___fldiv+1
 10429  01D5' 0833'              	movf	??___fldiv+1,w
 10430  01D6' 00B1'              	movwf	___fldiv@b+3
 10431  01D7' 083B'              	movf	___fldiv@sign,w
 10432  01D8' 00B2'              	movwf	??___fldiv
 10433  01D9' 0832'              	movf	??___fldiv,w
 10434  01DA' 04B1'              	iorwf	___fldiv@b+3,f
 10435  01DB' 2800'              	goto	l3351
 10436  01DC'                    l791:
 10437  01DC' 0008               	return
 10438  01DD'                    __end_of___fldiv:
 10439                           
 10440                           	psect	text34
 10441  0000'                    __ptext34:	
 10442 ;; *************** function _ADC_val *****************
 10443 ;; Defined at:
 10444 ;;		line 12 in file "ADC.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  ADRES_L         1    wreg     unsigned char 
 10447 ;;  ADRES_H         1    0[BANK0 ] unsigned char 
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;  ADRES_L         1    0[COMMON] unsigned char 
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  1    wreg      unsigned char 
 10452 ;; Registers used:
 10453 ;;		wreg
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10459 ;;      Params:         0       1       0       0       0
 10460 ;;      Locals:         0       0       0       0       0
 10461 ;;      Temps:          0       1       0       0       0
 10462 ;;      Totals:         0       2       0       0       0
 10463 ;;Total ram usage:        2 bytes
 10464 ;; Hardware stack levels used:    1
 10465 ;; Hardware stack levels required when called:    2
 10466 ;; This function calls:
 10467 ;;		Nothing
 10468 ;; This function is called by:
 10469 ;;		_ADC_CH0
 10470 ;;		_ADC_CH1
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           
 10475                           ;psect for function _ADC_val
 10476  0000'                    _ADC_val:
 10477  0000'                    l4381:	
 10478                           ;incstack = 0
 10479                           ; Regs used in _ADC_val: [wreg]
 10480                           
 10481                           
 10482                           ;ADC.c: 13:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
 10483  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10484  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10485  0002' 081E               	movf	30,w	;volatile
 10486  0003' 0081'              	movwf	??_ADC_val
 10487  0004' 0801'              	movf	??_ADC_val,w
 10488  0005' 0080'              	movwf	_VALOR_ADC
 10489                           
 10490                           ;ADC.c: 15:     return VALOR_ADC;
 10491  0006' 0800'              	movf	_VALOR_ADC,w
 10492  0007'                    l176:
 10493  0007' 0008               	return
 10494  0008'                    __end_of_ADC_val:
 10495                           
 10496                           	psect	text35
 10497  0000'                    __ptext35:	
 10498 ;; *************** function _ADC_ch *****************
 10499 ;; Defined at:
 10500 ;;		line 18 in file "ADC.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;  channel         2    0[BANK0 ] unsigned short 
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;		None
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  2    0[BANK0 ] unsigned int 
 10507 ;; Registers used:
 10508 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10514 ;;      Params:         0       2       0       0       0
 10515 ;;      Locals:         0       0       0       0       0
 10516 ;;      Temps:          0       0       0       0       0
 10517 ;;      Totals:         0       2       0       0       0
 10518 ;;Total ram usage:        2 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    2
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_ADC_CH0
 10525 ;;		_ADC_CH1
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _ADC_ch
 10531  0000'                    _ADC_ch:
 10532  0000'                    l4371:	
 10533                           ;incstack = 0
 10534                           ; Regs used in _ADC_ch: [wreg-fsr0h+status,2+status,0]
 10535                           
 10536                           
 10537                           ;ADC.c: 19:      switch (channel) {
 10538  0000' 2800'              	goto	l4375
 10539  0001'                    l180:	
 10540                           ;ADC.c: 20:         case 0:
 10541                           
 10542                           
 10543                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
 10544  0001' 129F               	bcf	31,5	;volatile
 10545                           
 10546                           ;ADC.c: 22:             ADCON0bits.CHS2 = 0;
 10547  0002' 121F               	bcf	31,4	;volatile
 10548                           
 10549                           ;ADC.c: 23:             ADCON0bits.CHS1 = 0;
 10550  0003' 119F               	bcf	31,3	;volatile
 10551                           
 10552                           ;ADC.c: 24:             ADCON0bits.CHS0 = 0;
 10553  0004' 111F               	bcf	31,2	;volatile
 10554                           
 10555                           ;ADC.c: 26:             break;
 10556  0005' 2800'              	goto	l184
 10557  0006'                    l182:	
 10558                           ;ADC.c: 27:         case 1:
 10559                           
 10560                           
 10561                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
 10562  0006' 129F               	bcf	31,5	;volatile
 10563                           
 10564                           ;ADC.c: 29:             ADCON0bits.CHS2 = 0;
 10565  0007' 121F               	bcf	31,4	;volatile
 10566                           
 10567                           ;ADC.c: 30:             ADCON0bits.CHS1 = 0;
 10568  0008' 119F               	bcf	31,3	;volatile
 10569                           
 10570                           ;ADC.c: 31:             ADCON0bits.CHS0 = 1;
 10571  0009' 151F               	bsf	31,2	;volatile
 10572                           
 10573                           ;ADC.c: 32:             break;
 10574  000A' 2800'              	goto	l184
 10575  000B'                    l183:	
 10576                           ;ADC.c: 33:         default:
 10577                           
 10578                           
 10579                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
 10580  000B' 129F               	bcf	31,5	;volatile
 10581                           
 10582                           ;ADC.c: 35:             ADCON0bits.CHS2 = 0;
 10583  000C' 121F               	bcf	31,4	;volatile
 10584                           
 10585                           ;ADC.c: 36:             ADCON0bits.CHS1 = 0;
 10586  000D' 119F               	bcf	31,3	;volatile
 10587                           
 10588                           ;ADC.c: 37:             ADCON0bits.CHS0 = 0;
 10589  000E' 111F               	bcf	31,2	;volatile
 10590                           
 10591                           ;ADC.c: 38:             break;
 10592  000F' 2800'              	goto	l184
 10593  0010'                    l4375:
 10594                           
 10595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10596                           ; Switch size 1, requested type "simple"
 10597                           ; Number of cases is 1, Range of values is 0 to 0
 10598                           ; switch strategies available:
 10599                           ; Name         Instructions Cycles
 10600                           ; simple_byte            4     3 (average)
 10601                           ; direct_byte           11     8 (fixed)
 10602                           ; jumptable            260     6 (fixed)
 10603                           ;	Chosen strategy is simple_byte
 10604  0010' 1283               	bcf	3,5	;RP0=0, select bank0
 10605  0011' 1303               	bcf	3,6	;RP1=0, select bank0
 10606  0012' 0801'              	movf	ADC_ch@channel+1,w
 10607  0013' 3A00               	xorlw	0	; case 0
 10608  0014' 1903               	skipnz
 10609  0015' 2800'              	goto	l5173
 10610  0016' 2800'              	goto	l183
 10611  0017'                    l5173:
 10612                           
 10613                           ; Switch size 1, requested type "simple"
 10614                           ; Number of cases is 2, Range of values is 0 to 1
 10615                           ; switch strategies available:
 10616                           ; Name         Instructions Cycles
 10617                           ; simple_byte            7     4 (average)
 10618                           ; direct_byte           14     8 (fixed)
 10619                           ; jumptable            260     6 (fixed)
 10620                           ;	Chosen strategy is simple_byte
 10621  0017' 0800'              	movf	ADC_ch@channel,w
 10622  0018' 3A00               	xorlw	0	; case 0
 10623  0019' 1903               	skipnz
 10624  001A' 2800'              	goto	l180
 10625  001B' 3A01               	xorlw	1	; case 1
 10626  001C' 1903               	skipnz
 10627  001D' 2800'              	goto	l182
 10628  001E' 2800'              	goto	l183
 10629  001F'                    l184:
 10630  001F' 0008               	return
 10631  0020'                    __end_of_ADC_ch:
 10632                           
 10633                           	psect	text36
 10634  0000'                    __ptext36:	
 10635 ;; *************** function _ISR *****************
 10636 ;; Defined at:
 10637 ;;		line 64 in file "main.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;		None
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;		None
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10651 ;;      Params:         0       0       0       0       0
 10652 ;;      Locals:         0       0       0       0       0
 10653 ;;      Temps:          5       0       0       0       0
 10654 ;;      Totals:         5       0       0       0       0
 10655 ;;Total ram usage:        5 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    1
 10658 ;; This function calls:
 10659 ;;		_USART_LECTURA
 10660 ;; This function is called by:
 10661 ;;		Interrupt level 1
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _ISR
 10667  0000'                    _ISR:
 10668  0000'                    i1l3853:
 10669                           
 10670                           ;main.c: 65:     if(RCIF == 1){
 10671  0000' 1E8C               	btfss	12,5	;volatile
 10672  0001' 2800'              	goto	u619_21
 10673  0002' 2800'              	goto	u619_20
 10674  0003'                    u619_21:
 10675  0003' 2800'              	goto	i1l93
 10676  0004'                    u619_20:
 10677  0004'                    i1l3855:
 10678                           
 10679                           ;main.c: 66:         RCIF = 0;
 10680  0004' 128C               	bcf	12,5	;volatile
 10681  0005'                    i1l3857:
 10682                           
 10683                           ;main.c: 67:         USART_LEER = USART_LECTURA();
 10684  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_USART_LECTURA
 10685  000A' 0800'              	movf	?_USART_LECTURA,w
 10686  000B' 0080'              	movwf	??_ISR
 10687  000C' 0800'              	movf	??_ISR,w
 10688  000D' 0081'              	movwf	_USART_LEER
 10689  000E'                    i1l3859:
 10690                           
 10691                           ;main.c: 68:         if(USART_LEER == '+'){
 10692  000E' 302B               	movlw	43
 10693  000F' 0601'              	xorwf	_USART_LEER,w
 10694  0010' 1D03               	btfss	3,2
 10695  0011' 2800'              	goto	u620_21
 10696  0012' 2800'              	goto	u620_20
 10697  0013'                    u620_21:
 10698  0013' 2800'              	goto	i1l3863
 10699  0014'                    u620_20:
 10700  0014'                    i1l3861:
 10701                           
 10702                           ;main.c: 69:             cont = cont + 1;
 10703  0014' 0802'              	movf	_cont,w
 10704  0015' 3E01               	addlw	1
 10705  0016' 0080'              	movwf	??_ISR
 10706  0017' 0800'              	movf	??_ISR,w
 10707  0018' 0082'              	movwf	_cont
 10708                           
 10709                           ;main.c: 70:         }
 10710  0019' 2800'              	goto	i1l93
 10711  001A'                    i1l3863:
 10712  001A' 302D               	movlw	45
 10713  001B' 0601'              	xorwf	_USART_LEER,w
 10714  001C' 1D03               	btfss	3,2
 10715  001D' 2800'              	goto	u621_21
 10716  001E' 2800'              	goto	u621_20
 10717  001F'                    u621_21:
 10718  001F' 2800'              	goto	i1l93
 10719  0020'                    u621_20:
 10720  0020'                    i1l3865:
 10721                           
 10722                           ;main.c: 72:             cont = cont - 1;
 10723  0020' 0802'              	movf	_cont,w
 10724  0021' 3EFF               	addlw	255
 10725  0022' 0080'              	movwf	??_ISR
 10726  0023' 0800'              	movf	??_ISR,w
 10727  0024' 0082'              	movwf	_cont
 10728  0025'                    i1l93:
 10729  0025' 0804'              	movf	??_ISR+4,w
 10730  0026' 1283               	bcf	3,5	;RP0=0, select bank0
 10731  0027' 1303               	bcf	3,6	;RP1=0, select bank0
 10732  0028' 00FF               	movwf	btemp+1
 10733  0029' 0803'              	movf	??_ISR+3,w
 10734  002A' 008A               	movwf	10
 10735  002B' 0802'              	movf	??_ISR+2,w
 10736  002C' 0084               	movwf	4
 10737  002D' 0E01'              	swapf	??_ISR+1,w
 10738  002E' 0083               	movwf	3
 10739  002F' 0EFE               	swapf	btemp,f
 10740  0030' 0E7E               	swapf	btemp,w
 10741  0031' 0009               	retfie
 10742  0032'                    __end_of_ISR:
 10743  007E                     btemp	set	126	;btemp
 10744  007E                     wtemp0	set	126
 10745                           
 10746                           	psect	intentry
 10747  0000'                    __pintentry:	
 10748                           ;incstack = 0
 10749                           ; Regs used in _ISR: [allreg]
 10750                           
 10751  0000'                    interrupt_function:
 10752  007E                     saved_w	set	btemp
 10753  0000' 00FE               	movwf	btemp
 10754  0001' 0E03               	swapf	3,w
 10755  0002' 0081'              	movwf	??_ISR+1
 10756  0003' 0804               	movf	4,w
 10757  0004' 0082'              	movwf	??_ISR+2
 10758  0005' 080A               	movf	10,w
 10759  0006' 0083'              	movwf	??_ISR+3
 10760  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 10761  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 10762  0009' 087F               	movf	btemp+1,w
 10763  000A' 0084'              	movwf	??_ISR+4
 10764  000B' 120A' 118A' 2800'  	ljmp	_ISR
 10765                           
 10766                           	psect	config
 10767                           
 10768                           ;Config register CONFIG1 @ 0x2007
 10769                           ;	Oscillator Selection bits
 10770                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10771                           ;	Watchdog Timer Enable bit
 10772                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10773                           ;	Power-up Timer Enable bit
 10774                           ;	PWRTE = OFF, PWRT disabled
 10775                           ;	RE3/MCLR pin function select bit
 10776                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10777                           ;	Code Protection bit
 10778                           ;	CP = OFF, Program memory code protection is disabled
 10779                           ;	Data Code Protection bit
 10780                           ;	CPD = OFF, Data memory code protection is disabled
 10781                           ;	Brown Out Reset Selection bits
 10782                           ;	BOREN = ON, BOR enabled
 10783                           ;	Internal External Switchover bit
 10784                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10785                           ;	Fail-Safe Clock Monitor Enabled bit
 10786                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10787                           ;	Low Voltage Programming Enable bit
 10788                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10789                           ;	In-Circuit Debugger Mode bit
 10790                           ;	DEBUG = 0x1, unprogrammed default
 10791  2007                     	org	8199
 10792  2007  23D2               	dw	9170
 10793                           
 10794                           ;Config register CONFIG2 @ 0x2008
 10795                           ;	Brown-out Reset Selection bit
 10796                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10797                           ;	Flash Program Memory Self Write Enable bits
 10798                           ;	WRT = OFF, Write protection off
 10799  2008                     	org	8200
 10800  2008  3FFF               	dw	16383
 10801                           
 10802                           	psect	text1_split_1
 10803  0000'                    u8380:
 10804  0000'                    l4921:
 10805  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10806  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10807  0002' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10808  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10809  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10810  0005' 0083'              	movwf	___fleq@ff1+3
 10811  0006' 1683               	bsf	3,5	;RP0=1, select bank1
 10812  0007' 1303               	bcf	3,6	;RP1=0, select bank1
 10813  0008' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10814  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10815  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10816  000B' 0082'              	movwf	___fleq@ff1+2
 10817  000C' 1683               	bsf	3,5	;RP0=1, select bank1
 10818  000D' 1303               	bcf	3,6	;RP1=0, select bank1
 10819  000E' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10820  000F' 1283               	bcf	3,5	;RP0=0, select bank0
 10821  0010' 1303               	bcf	3,6	;RP1=0, select bank0
 10822  0011' 0081'              	movwf	___fleq@ff1+1
 10823  0012' 1683               	bsf	3,5	;RP0=1, select bank1
 10824  0013' 1303               	bcf	3,6	;RP1=0, select bank1
 10825  0014' 0800'              	movf	sprintf@fval^(0+128),w
 10826  0015' 1283               	bcf	3,5	;RP0=0, select bank0
 10827  0016' 1303               	bcf	3,6	;RP1=0, select bank0
 10828  0017' 0080'              	movwf	___fleq@ff1
 10829  0018' 3000               	movlw	0
 10830  0019' 0087'              	movwf	___fleq@ff2+3
 10831  001A' 3000               	movlw	0
 10832  001B' 0086'              	movwf	___fleq@ff2+2
 10833  001C' 3000               	movlw	0
 10834  001D' 0085'              	movwf	___fleq@ff2+1
 10835  001E' 3000               	movlw	0
 10836  001F' 0084'              	movwf	___fleq@ff2
 10837  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
 10838  0025' 1803               	btfsc	3,0
 10839  0026' 2800'              	goto	u8391
 10840  0027' 2800'              	goto	u8390
 10841  0028'                    u8391:
 10842  0028' 2800'              	goto	l4941
 10843  0029'                    u8390:
 10844  0029'                    l4923:
 10845  0029' 1683               	bsf	3,5	;RP0=1, select bank1
 10846  002A' 1303               	bcf	3,6	;RP1=0, select bank1
 10847  002B' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10848  002C' 1283               	bcf	3,5	;RP0=0, select bank0
 10849  002D' 1303               	bcf	3,6	;RP1=0, select bank0
 10850  002E' 00C0'              	movwf	___fltol@f1+3
 10851  002F' 1683               	bsf	3,5	;RP0=1, select bank1
 10852  0030' 1303               	bcf	3,6	;RP1=0, select bank1
 10853  0031' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10854  0032' 1283               	bcf	3,5	;RP0=0, select bank0
 10855  0033' 1303               	bcf	3,6	;RP1=0, select bank0
 10856  0034' 00BF'              	movwf	___fltol@f1+2
 10857  0035' 1683               	bsf	3,5	;RP0=1, select bank1
 10858  0036' 1303               	bcf	3,6	;RP1=0, select bank1
 10859  0037' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10860  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10861  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10862  003A' 00BE'              	movwf	___fltol@f1+1
 10863  003B' 1683               	bsf	3,5	;RP0=1, select bank1
 10864  003C' 1303               	bcf	3,6	;RP1=0, select bank1
 10865  003D' 0800'              	movf	sprintf@fval^(0+128),w
 10866  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 10867  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 10868  0040' 00BD'              	movwf	___fltol@f1
 10869  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10870  0046' 1283               	bcf	3,5	;RP0=0, select bank0
 10871  0047' 1303               	bcf	3,6	;RP1=0, select bank0
 10872  0048' 0840'              	movf	?___fltol+3,w
 10873  0049' 043F'              	iorwf	?___fltol+2,w
 10874  004A' 043E'              	iorwf	?___fltol+1,w
 10875  004B' 043D'              	iorwf	?___fltol,w
 10876  004C' 1D03               	skipz
 10877  004D' 2800'              	goto	u8401
 10878  004E' 2800'              	goto	u8400
 10879  004F'                    u8401:
 10880  004F' 2800'              	goto	l4941
 10881  0050'                    u8400:
 10882  0050'                    l4925:
 10883  0050' 1683               	bsf	3,5	;RP0=1, select bank1
 10884  0051' 1303               	bcf	3,6	;RP1=0, select bank1
 10885  0052' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 10886  0053' 3A80               	xorlw	128
 10887  0054' 00FF               	movwf	btemp+1
 10888  0055' 3080               	movlw	128
 10889  0056' 027F               	subwf	btemp+1,w
 10890  0057' 1D03               	skipz
 10891  0058' 2800'              	goto	u8415
 10892  0059' 3002               	movlw	2
 10893  005A' 0200'              	subwf	sprintf@eexp^(0+128),w
 10894  005B'                    u8415:
 10895  005B' 1C03               	skipc
 10896  005C' 2800'              	goto	u8411
 10897  005D' 2800'              	goto	u8410
 10898  005E'                    u8411:
 10899  005E' 2800'              	goto	l4941
 10900  005F'                    u8410:
 10901  005F'                    l4927:
 10902                           
 10903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10904  005F' 1683               	bsf	3,5	;RP0=1, select bank1
 10905  0060' 1303               	bcf	3,6	;RP1=0, select bank1
 10906  0061' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 10907  0062' 1283               	bcf	3,5	;RP0=0, select bank0
 10908  0063' 1303               	bcf	3,6	;RP1=0, select bank0
 10909  0064' 0083'              	movwf	___flge@ff1+3
 10910  0065' 1683               	bsf	3,5	;RP0=1, select bank1
 10911  0066' 1303               	bcf	3,6	;RP1=0, select bank1
 10912  0067' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 10913  0068' 1283               	bcf	3,5	;RP0=0, select bank0
 10914  0069' 1303               	bcf	3,6	;RP1=0, select bank0
 10915  006A' 0082'              	movwf	___flge@ff1+2
 10916  006B' 1683               	bsf	3,5	;RP0=1, select bank1
 10917  006C' 1303               	bcf	3,6	;RP1=0, select bank1
 10918  006D' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 10919  006E' 1283               	bcf	3,5	;RP0=0, select bank0
 10920  006F' 1303               	bcf	3,6	;RP1=0, select bank0
 10921  0070' 0081'              	movwf	___flge@ff1+1
 10922  0071' 1683               	bsf	3,5	;RP0=1, select bank1
 10923  0072' 1303               	bcf	3,6	;RP1=0, select bank1
 10924  0073' 0800'              	movf	sprintf@tmpval^(0+128),w
 10925  0074' 1283               	bcf	3,5	;RP0=0, select bank0
 10926  0075' 1303               	bcf	3,6	;RP1=0, select bank0
 10927  0076' 0080'              	movwf	___flge@ff1
 10928  0077' 3040               	movlw	64
 10929  0078' 0087'              	movwf	___flge@ff2+3
 10930  0079' 3089               	movlw	137
 10931  007A' 0086'              	movwf	___flge@ff2+2
 10932  007B' 3070               	movlw	112
 10933  007C' 0085'              	movwf	___flge@ff2+1
 10934  007D' 305F               	movlw	95
 10935  007E' 0084'              	movwf	___flge@ff2
 10936  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
 10937  0084' 1803               	btfsc	3,0
 10938  0085' 2800'              	goto	u8421
 10939  0086' 2800'              	goto	u8420
 10940  0087'                    u8421:
 10941  0087' 2800'              	goto	l4931
 10942  0088'                    u8420:
 10943  0088'                    l4929:
 10944                           
 10945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10946  0088' 30F7               	movlw	247
 10947  0089' 1683               	bsf	3,5	;RP0=1, select bank1
 10948  008A' 1303               	bcf	3,6	;RP1=0, select bank1
 10949  008B' 0780'              	addwf	sprintf@eexp^(0+128),f
 10950  008C' 1803               	skipnc
 10951  008D' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 10952  008E' 30FF               	movlw	255
 10953  008F' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 10954                           
 10955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10956  0090' 2800'              	goto	l4933
 10957  0091'                    l4931:
 10958                           
 10959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10960  0091' 30F8               	movlw	248
 10961  0092' 1683               	bsf	3,5	;RP0=1, select bank1
 10962  0093' 1303               	bcf	3,6	;RP1=0, select bank1
 10963  0094' 0780'              	addwf	sprintf@eexp^(0+128),f
 10964  0095' 1803               	skipnc
 10965  0096' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 10966  0097' 30FF               	movlw	255
 10967  0098' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 10968  0099'                    l4933:
 10969                           
 10970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10971  0099' 0800'              	movf	sprintf@eexp^(0+128),w
 10972  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 10973  009F' 1283               	bcf	3,5	;RP0=0, select bank0
 10974  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
 10975  00A1' 082D'              	movf	?_scale+3,w
 10976  00A2' 1683               	bsf	3,5	;RP0=1, select bank1
 10977  00A3' 1303               	bcf	3,6	;RP1=0, select bank1
 10978  00A4' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 10979  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
 10980  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
 10981  00A7' 082C'              	movf	?_scale+2,w
 10982  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
 10983  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
 10984  00AA' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 10985  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
 10986  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
 10987  00AD' 082B'              	movf	?_scale+1,w
 10988  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
 10989  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
 10990  00B0' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 10991  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
 10992  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
 10993  00B3' 082A'              	movf	?_scale,w
 10994  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
 10995  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
 10996  00B6' 0080'              	movwf	sprintf@tmpval^(0+128)
 10997  00B7'                    l4935:
 10998  00B7' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10999  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
 11000  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
 11001  00BA' 0083'              	movwf	__div_to_l_@f1+3
 11002  00BB' 1683               	bsf	3,5	;RP0=1, select bank1
 11003  00BC' 1303               	bcf	3,6	;RP1=0, select bank1
 11004  00BD' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11005  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
 11006  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
 11007  00C0' 0082'              	movwf	__div_to_l_@f1+2
 11008  00C1' 1683               	bsf	3,5	;RP0=1, select bank1
 11009  00C2' 1303               	bcf	3,6	;RP1=0, select bank1
 11010  00C3' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11011  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
 11012  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
 11013  00C6' 0081'              	movwf	__div_to_l_@f1+1
 11014  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
 11015  00C8' 1303               	bcf	3,6	;RP1=0, select bank1
 11016  00C9' 0800'              	movf	sprintf@fval^(0+128),w
 11017  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11018  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11019  00CC' 0080'              	movwf	__div_to_l_@f1
 11020  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
 11021  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
 11022  00CF' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11023  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
 11024  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
 11025  00D2' 0087'              	movwf	__div_to_l_@f2+3
 11026  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
 11027  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
 11028  00D5' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11029  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
 11030  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
 11031  00D8' 0086'              	movwf	__div_to_l_@f2+2
 11032  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
 11033  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
 11034  00DB' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11035  00DC' 1283               	bcf	3,5	;RP0=0, select bank0
 11036  00DD' 1303               	bcf	3,6	;RP1=0, select bank0
 11037  00DE' 0085'              	movwf	__div_to_l_@f2+1
 11038  00DF' 1683               	bsf	3,5	;RP0=1, select bank1
 11039  00E0' 1303               	bcf	3,6	;RP1=0, select bank1
 11040  00E1' 0800'              	movf	sprintf@tmpval^(0+128),w
 11041  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
 11042  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
 11043  00E4' 0084'              	movwf	__div_to_l_@f2
 11044  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
 11045  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
 11046  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
 11047  00EC' 0803'              	movf	?__div_to_l_+3,w
 11048  00ED' 1683               	bsf	3,5	;RP0=1, select bank1
 11049  00EE' 1303               	bcf	3,6	;RP1=0, select bank1
 11050  00EF' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11051  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
 11052  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
 11053  00F2' 0802'              	movf	?__div_to_l_+2,w
 11054  00F3' 1683               	bsf	3,5	;RP0=1, select bank1
 11055  00F4' 1303               	bcf	3,6	;RP1=0, select bank1
 11056  00F5' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11057  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
 11058  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
 11059  00F8' 0801'              	movf	?__div_to_l_+1,w
 11060  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
 11061  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
 11062  00FB' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11063  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
 11064  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
 11065  00FE' 0800'              	movf	?__div_to_l_,w
 11066  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
 11067  0100' 1303               	bcf	3,6	;RP1=0, select bank1
 11068  0101' 0080'              	movwf	sprintf@val^(0+128)
 11069  0102'                    l4939:
 11070                           
 11071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 11072  0102' 3000               	movlw	0
 11073  0103' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 11074  0104' 3000               	movlw	0
 11075  0105' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 11076  0106' 3000               	movlw	0
 11077  0107' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 11078  0108' 3000               	movlw	0
 11079  0109' 0080'              	movwf	sprintf@fval^(0+128)
 11080                           
 11081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 11082  010A' 2800'              	goto	l4947
 11083  010B'                    l4941:
 11084                           
 11085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 11086  010B' 1683               	bsf	3,5	;RP0=1, select bank1
 11087  010C' 1303               	bcf	3,6	;RP1=0, select bank1
 11088  010D' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11089  010E' 1283               	bcf	3,5	;RP0=0, select bank0
 11090  010F' 1303               	bcf	3,6	;RP1=0, select bank0
 11091  0110' 00C0'              	movwf	___fltol@f1+3
 11092  0111' 1683               	bsf	3,5	;RP0=1, select bank1
 11093  0112' 1303               	bcf	3,6	;RP1=0, select bank1
 11094  0113' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11095  0114' 1283               	bcf	3,5	;RP0=0, select bank0
 11096  0115' 1303               	bcf	3,6	;RP1=0, select bank0
 11097  0116' 00BF'              	movwf	___fltol@f1+2
 11098  0117' 1683               	bsf	3,5	;RP0=1, select bank1
 11099  0118' 1303               	bcf	3,6	;RP1=0, select bank1
 11100  0119' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11101  011A' 1283               	bcf	3,5	;RP0=0, select bank0
 11102  011B' 1303               	bcf	3,6	;RP1=0, select bank0
 11103  011C' 00BE'              	movwf	___fltol@f1+1
 11104  011D' 1683               	bsf	3,5	;RP0=1, select bank1
 11105  011E' 1303               	bcf	3,6	;RP1=0, select bank1
 11106  011F' 0800'              	movf	sprintf@fval^(0+128),w
 11107  0120' 1283               	bcf	3,5	;RP0=0, select bank0
 11108  0121' 1303               	bcf	3,6	;RP1=0, select bank0
 11109  0122' 00BD'              	movwf	___fltol@f1
 11110  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11111  0128' 1283               	bcf	3,5	;RP0=0, select bank0
 11112  0129' 1303               	bcf	3,6	;RP1=0, select bank0
 11113  012A' 0840'              	movf	?___fltol+3,w
 11114  012B' 1683               	bsf	3,5	;RP0=1, select bank1
 11115  012C' 1303               	bcf	3,6	;RP1=0, select bank1
 11116  012D' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11117  012E' 1283               	bcf	3,5	;RP0=0, select bank0
 11118  012F' 1303               	bcf	3,6	;RP1=0, select bank0
 11119  0130' 083F'              	movf	?___fltol+2,w
 11120  0131' 1683               	bsf	3,5	;RP0=1, select bank1
 11121  0132' 1303               	bcf	3,6	;RP1=0, select bank1
 11122  0133' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11123  0134' 1283               	bcf	3,5	;RP0=0, select bank0
 11124  0135' 1303               	bcf	3,6	;RP1=0, select bank0
 11125  0136' 083E'              	movf	?___fltol+1,w
 11126  0137' 1683               	bsf	3,5	;RP0=1, select bank1
 11127  0138' 1303               	bcf	3,6	;RP1=0, select bank1
 11128  0139' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11129  013A' 1283               	bcf	3,5	;RP0=0, select bank0
 11130  013B' 1303               	bcf	3,6	;RP1=0, select bank0
 11131  013C' 083D'              	movf	?___fltol,w
 11132  013D' 1683               	bsf	3,5	;RP0=1, select bank1
 11133  013E' 1303               	bcf	3,6	;RP1=0, select bank1
 11134  013F' 0080'              	movwf	sprintf@val^(0+128)
 11135  0140'                    l4943:
 11136                           
 11137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 11138  0140' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11139  0141' 1283               	bcf	3,5	;RP0=0, select bank0
 11140  0142' 1303               	bcf	3,6	;RP1=0, select bank0
 11141  0143' 0083'              	movwf	___xxtofl@val+3
 11142  0144' 1683               	bsf	3,5	;RP0=1, select bank1
 11143  0145' 1303               	bcf	3,6	;RP1=0, select bank1
 11144  0146' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11145  0147' 1283               	bcf	3,5	;RP0=0, select bank0
 11146  0148' 1303               	bcf	3,6	;RP1=0, select bank0
 11147  0149' 0082'              	movwf	___xxtofl@val+2
 11148  014A' 1683               	bsf	3,5	;RP0=1, select bank1
 11149  014B' 1303               	bcf	3,6	;RP1=0, select bank1
 11150  014C' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11151  014D' 1283               	bcf	3,5	;RP0=0, select bank0
 11152  014E' 1303               	bcf	3,6	;RP1=0, select bank0
 11153  014F' 0081'              	movwf	___xxtofl@val+1
 11154  0150' 1683               	bsf	3,5	;RP0=1, select bank1
 11155  0151' 1303               	bcf	3,6	;RP1=0, select bank1
 11156  0152' 0800'              	movf	sprintf@val^(0+128),w
 11157  0153' 1283               	bcf	3,5	;RP0=0, select bank0
 11158  0154' 1303               	bcf	3,6	;RP1=0, select bank0
 11159  0155' 0080'              	movwf	___xxtofl@val
 11160  0156' 3000               	movlw	0
 11161  0157' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 11162  015C' 1283               	bcf	3,5	;RP0=0, select bank0
 11163  015D' 1303               	bcf	3,6	;RP1=0, select bank0
 11164  015E' 0803'              	movf	?___xxtofl+3,w
 11165  015F' 1683               	bsf	3,5	;RP0=1, select bank1
 11166  0160' 1303               	bcf	3,6	;RP1=0, select bank1
 11167  0161' 0080'              	movwf	(___flsub@a+3)^(0+128)
 11168  0162' 1283               	bcf	3,5	;RP0=0, select bank0
 11169  0163' 1303               	bcf	3,6	;RP1=0, select bank0
 11170  0164' 0802'              	movf	?___xxtofl+2,w
 11171  0165' 1683               	bsf	3,5	;RP0=1, select bank1
 11172  0166' 1303               	bcf	3,6	;RP1=0, select bank1
 11173  0167' 0080'              	movwf	(___flsub@a+2)^(0+128)
 11174  0168' 1283               	bcf	3,5	;RP0=0, select bank0
 11175  0169' 1303               	bcf	3,6	;RP1=0, select bank0
 11176  016A' 0801'              	movf	?___xxtofl+1,w
 11177  016B' 1683               	bsf	3,5	;RP0=1, select bank1
 11178  016C' 1303               	bcf	3,6	;RP1=0, select bank1
 11179  016D' 0080'              	movwf	(___flsub@a+1)^(0+128)
 11180  016E' 1283               	bcf	3,5	;RP0=0, select bank0
 11181  016F' 1303               	bcf	3,6	;RP1=0, select bank0
 11182  0170' 0800'              	movf	?___xxtofl,w
 11183  0171' 1683               	bsf	3,5	;RP0=1, select bank1
 11184  0172' 1303               	bcf	3,6	;RP1=0, select bank1
 11185  0173' 0080'              	movwf	___flsub@a^(0+128)
 11186  0174' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11187  0175' 0080'              	movwf	(___flsub@b+3)^(0+128)
 11188  0176' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11189  0177' 0080'              	movwf	(___flsub@b+2)^(0+128)
 11190  0178' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11191  0179' 0080'              	movwf	(___flsub@b+1)^(0+128)
 11192  017A' 0800'              	movf	sprintf@fval^(0+128),w
 11193  017B' 0080'              	movwf	___flsub@b^(0+128)
 11194  017C' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 11195  0181' 1683               	bsf	3,5	;RP0=1, select bank1
 11196  0182' 1303               	bcf	3,6	;RP1=0, select bank1
 11197  0183' 0800'              	movf	(?___flsub+3)^(0+128),w
 11198  0184' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 11199  0185' 0800'              	movf	(?___flsub+2)^(0+128),w
 11200  0186' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 11201  0187' 0800'              	movf	(?___flsub+1)^(0+128),w
 11202  0188' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 11203  0189' 0800'              	movf	?___flsub^(0+128),w
 11204  018A' 0080'              	movwf	sprintf@fval^(0+128)
 11205  018B'                    l4945:
 11206                           
 11207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 11208  018B' 0180'              	clrf	sprintf@eexp^(0+128)
 11209  018C' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
 11210  018D'                    l4947:
 11211                           
 11212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11213  018D' 0180'              	clrf	sprintf@c^(0+128)
 11214  018E' 0A80'              	incf	sprintf@c^(0+128),f
 11215  018F'                    l4953:
 11216                           
 11217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 11218  018F' 0800'              	movf	sprintf@c^(0+128),w
 11219  0190' 0080'              	movwf	??_sprintf^(0+128)
 11220  0191' 3001               	movlw	1
 11221  0192'                    u8435:
 11222  0192' 1003               	clrc
 11223  0193' 0D80'              	rlf	??_sprintf^(0+128),f
 11224  0194' 3EFF               	addlw	-1
 11225  0195' 1D03               	skipz
 11226  0196' 2800'              	goto	u8435
 11227  0197' 1003               	clrc
 11228  0198' 0D00'              	rlf	??_sprintf^(0+128),w
 11229  0199' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11230  019A' 0084               	movwf	4
 11231  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11232  01A0' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11233  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11234  01A6' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 11235  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11236  01AC' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 11237  01AD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11238  01B2' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 11239  01B3' 0800'              	movf	(??_sprintf+4)^(0+128),w
 11240  01B4' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 11241  01B5' 1D03               	skipz
 11242  01B6' 2800'              	goto	u8445
 11243  01B7' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11244  01B8' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 11245  01B9' 1D03               	skipz
 11246  01BA' 2800'              	goto	u8445
 11247  01BB' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11248  01BC' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 11249  01BD' 1D03               	skipz
 11250  01BE' 2800'              	goto	u8445
 11251  01BF' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11252  01C0' 0200'              	subwf	sprintf@val^(0+128),w
 11253  01C1'                    u8445:
 11254  01C1' 1803               	skipnc
 11255  01C2' 2800'              	goto	u8441
 11256  01C3' 2800'              	goto	u8440
 11257  01C4'                    u8441:
 11258  01C4' 2800'              	goto	l4957
 11259  01C5'                    u8440:
 11260  01C5' 2800'              	goto	l4959
 11261  01C6'                    l4957:
 11262  01C6' 3001               	movlw	1
 11263  01C7' 0080'              	movwf	??_sprintf^(0+128)
 11264  01C8' 0800'              	movf	??_sprintf^(0+128),w
 11265  01C9' 0780'              	addwf	sprintf@c^(0+128),f
 11266  01CA' 300A               	movlw	10
 11267  01CB' 0600'              	xorwf	sprintf@c^(0+128),w
 11268  01CC' 1D03               	btfss	3,2
 11269  01CD' 2800'              	goto	u8451
 11270  01CE' 2800'              	goto	u8450
 11271  01CF'                    u8451:
 11272  01CF' 2800'              	goto	l4953
 11273  01D0'                    u8450:
 11274  01D0'                    l4959:
 11275                           
 11276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 11277  01D0' 0800'              	movf	sprintf@c^(0+128),w
 11278  01D1' 0700'              	addwf	sprintf@prec^(0+128),w
 11279  01D2' 0080'              	movwf	??_sprintf^(0+128)
 11280  01D3' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11281  01D4' 1803               	skipnc
 11282  01D5' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 11283  01D6' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11284  01D7' 0800'              	movf	sprintf@eexp^(0+128),w
 11285  01D8' 0700'              	addwf	??_sprintf^(0+128),w
 11286  01D9' 0080'              	movwf	(??_sprintf+2)^(0+128)
 11287  01DA' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11288  01DB' 1803               	skipnc
 11289  01DC' 0A00'              	incf	(sprintf@eexp+1)^(0+128),w
 11290  01DD' 0700'              	addwf	(??_sprintf+1)^(0+128),w
 11291  01DE' 0080'              	movwf	(??_sprintf+3)^(0+128)
 11292  01DF' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11293  01E0' 0280'              	subwf	sprintf@width^(0+128),f
 11294  01E1' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11295  01E2' 1C03               	skipc
 11296  01E3' 0380'              	decf	(sprintf@width+1)^(0+128),f
 11297  01E4' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 11298                           
 11299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 11300  01E5' 0800'              	movf	sprintf@prec^(0+128),w
 11301  01E6' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11302  01E7' 1903               	btfsc	3,2
 11303  01E8' 2800'              	goto	u8461
 11304  01E9' 2800'              	goto	u8460
 11305  01EA'                    u8461:
 11306  01EA' 2800'              	goto	l4963
 11307  01EB'                    u8460:
 11308  01EB'                    l4961:
 11309                           
 11310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 11311  01EB' 30FF               	movlw	255
 11312  01EC' 0780'              	addwf	sprintf@width^(0+128),f
 11313  01ED' 1803               	skipnc
 11314  01EE' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 11315  01EF' 30FF               	movlw	255
 11316  01F0' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 11317  01F1'                    l4963:
 11318                           
 11319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 11320  01F1' 3003               	movlw	3
 11321  01F2' 0500'              	andwf	sprintf@flag^(0+128),w
 11322  01F3' 0080'              	movwf	??_sprintf^(0+128)
 11323  01F4' 3000               	movlw	0
 11324  01F5' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11325  01F6' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11326  01F7' 0800'              	movf	??_sprintf^(0+128),w
 11327  01F8' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11328  01F9' 1903               	btfsc	3,2
 11329  01FA' 2800'              	goto	u8471
 11330  01FB' 2800'              	goto	u8470
 11331  01FC'                    u8471:
 11332  01FC' 2800'              	goto	l4973
 11333  01FD'                    u8470:
 11334  01FD'                    l4965:
 11335                           
 11336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 11337  01FD' 30FF               	movlw	255
 11338  01FE' 0780'              	addwf	sprintf@width^(0+128),f
 11339  01FF' 1803               	skipnc
 11340  0200' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 11341  0201' 30FF               	movlw	255
 11342  0202' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 11343  0203' 2800'              	goto	l4973
 11344  0204'                    l4967:
 11345                           
 11346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 11347  0204' 3020               	movlw	32
 11348  0205' 1683               	bsf	3,5	;RP0=1, select bank1
 11349  0206' 1303               	bcf	3,6	;RP1=0, select bank1
 11350  0207' 0080'              	movwf	??_sprintf^(0+128)
 11351  0208' 0800'              	movf	sprintf@sp^(0+128),w
 11352  0209' 0084               	movwf	4
 11353  020A' 0800'              	movf	??_sprintf^(0+128),w
 11354  020B' 1383               	bcf	3,7	;select IRP bank0
 11355  020C' 0080               	movwf	0
 11356  020D'                    l4969:
 11357  020D' 3001               	movlw	1
 11358  020E' 0080'              	movwf	??_sprintf^(0+128)
 11359  020F' 0800'              	movf	??_sprintf^(0+128),w
 11360  0210' 0780'              	addwf	sprintf@sp^(0+128),f
 11361  0211' 2800'              	goto	l4965
 11362  0212'                    l4973:
 11363                           
 11364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 11365  0212' 0800'              	movf	(sprintf@width+1)^(0+128),w
 11366  0213' 3A80               	xorlw	128
 11367  0214' 00FF               	movwf	btemp+1
 11368  0215' 3080               	movlw	128
 11369  0216' 027F               	subwf	btemp+1,w
 11370  0217' 1D03               	skipz
 11371  0218' 2800'              	goto	u8485
 11372  0219' 3001               	movlw	1
 11373  021A' 0200'              	subwf	sprintf@width^(0+128),w
 11374  021B'                    u8485:
 11375  021B' 1803               	skipnc
 11376  021C' 2800'              	goto	u8481
 11377  021D' 2800'              	goto	u8480
 11378  021E'                    u8481:
 11379  021E' 2800'              	goto	l4967
 11380  021F'                    u8480:
 11381  021F'                    l4975:
 11382                           
 11383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 11384  021F' 3003               	movlw	3
 11385  0220' 1683               	bsf	3,5	;RP0=1, select bank1
 11386  0221' 1303               	bcf	3,6	;RP1=0, select bank1
 11387  0222' 0500'              	andwf	sprintf@flag^(0+128),w
 11388  0223' 0080'              	movwf	??_sprintf^(0+128)
 11389  0224' 3000               	movlw	0
 11390  0225' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11391  0226' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11392  0227' 0800'              	movf	??_sprintf^(0+128),w
 11393  0228' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11394  0229' 1903               	btfsc	3,2
 11395  022A' 2800'              	goto	u8491
 11396  022B' 2800'              	goto	u8490
 11397  022C'                    u8491:
 11398  022C' 2800'              	goto	l372
 11399  022D'                    u8490:
 11400  022D'                    l4977:
 11401                           
 11402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11403  022D' 302D               	movlw	45
 11404  022E' 0080'              	movwf	??_sprintf^(0+128)
 11405  022F' 0800'              	movf	sprintf@sp^(0+128),w
 11406  0230' 0084               	movwf	4
 11407  0231' 0800'              	movf	??_sprintf^(0+128),w
 11408  0232' 1383               	bcf	3,7	;select IRP bank0
 11409  0233' 0080               	movwf	0
 11410  0234'                    l4979:
 11411  0234' 3001               	movlw	1
 11412  0235' 0080'              	movwf	??_sprintf^(0+128)
 11413  0236' 0800'              	movf	??_sprintf^(0+128),w
 11414  0237' 0780'              	addwf	sprintf@sp^(0+128),f
 11415  0238' 2800'              	goto	l372
 11416  0239'                    l4981:
 11417                           
 11418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11419  0239' 0800'              	movf	sprintf@c^(0+128),w
 11420  023A' 0080'              	movwf	??_sprintf^(0+128)
 11421  023B' 3001               	movlw	1
 11422  023C'                    u8505:
 11423  023C' 1003               	clrc
 11424  023D' 0D80'              	rlf	??_sprintf^(0+128),f
 11425  023E' 3EFF               	addlw	-1
 11426  023F' 1D03               	skipz
 11427  0240' 2800'              	goto	u8505
 11428  0241' 1003               	clrc
 11429  0242' 0D00'              	rlf	??_sprintf^(0+128),w
 11430  0243' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11431  0244' 0084               	movwf	4
 11432  0245' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11433  024A' 1283               	bcf	3,5	;RP0=0, select bank0
 11434  024B' 1303               	bcf	3,6	;RP1=0, select bank0
 11435  024C' 0080'              	movwf	___lldiv@divisor
 11436  024D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11437  0252' 0081'              	movwf	___lldiv@divisor+1
 11438  0253' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11439  0258' 0082'              	movwf	___lldiv@divisor+2
 11440  0259' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11441  025E' 0083'              	movwf	___lldiv@divisor+3
 11442  025F' 1683               	bsf	3,5	;RP0=1, select bank1
 11443  0260' 1303               	bcf	3,6	;RP1=0, select bank1
 11444  0261' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11445  0262' 1283               	bcf	3,5	;RP0=0, select bank0
 11446  0263' 1303               	bcf	3,6	;RP1=0, select bank0
 11447  0264' 0087'              	movwf	___lldiv@dividend+3
 11448  0265' 1683               	bsf	3,5	;RP0=1, select bank1
 11449  0266' 1303               	bcf	3,6	;RP1=0, select bank1
 11450  0267' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11451  0268' 1283               	bcf	3,5	;RP0=0, select bank0
 11452  0269' 1303               	bcf	3,6	;RP1=0, select bank0
 11453  026A' 0086'              	movwf	___lldiv@dividend+2
 11454  026B' 1683               	bsf	3,5	;RP0=1, select bank1
 11455  026C' 1303               	bcf	3,6	;RP1=0, select bank1
 11456  026D' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11457  026E' 1283               	bcf	3,5	;RP0=0, select bank0
 11458  026F' 1303               	bcf	3,6	;RP1=0, select bank0
 11459  0270' 0085'              	movwf	___lldiv@dividend+1
 11460  0271' 1683               	bsf	3,5	;RP0=1, select bank1
 11461  0272' 1303               	bcf	3,6	;RP1=0, select bank1
 11462  0273' 0800'              	movf	sprintf@val^(0+128),w
 11463  0274' 1283               	bcf	3,5	;RP0=0, select bank0
 11464  0275' 1303               	bcf	3,6	;RP1=0, select bank0
 11465  0276' 0084'              	movwf	___lldiv@dividend
 11466  0277' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11467  027C' 1283               	bcf	3,5	;RP0=0, select bank0
 11468  027D' 1303               	bcf	3,6	;RP1=0, select bank0
 11469  027E' 0803'              	movf	?___lldiv+3,w
 11470  027F' 1683               	bsf	3,5	;RP0=1, select bank1
 11471  0280' 1303               	bcf	3,6	;RP1=0, select bank1
 11472  0281' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11473  0282' 1283               	bcf	3,5	;RP0=0, select bank0
 11474  0283' 1303               	bcf	3,6	;RP1=0, select bank0
 11475  0284' 0802'              	movf	?___lldiv+2,w
 11476  0285' 1683               	bsf	3,5	;RP0=1, select bank1
 11477  0286' 1303               	bcf	3,6	;RP1=0, select bank1
 11478  0287' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11479  0288' 1283               	bcf	3,5	;RP0=0, select bank0
 11480  0289' 1303               	bcf	3,6	;RP1=0, select bank0
 11481  028A' 0801'              	movf	?___lldiv+1,w
 11482  028B' 1683               	bsf	3,5	;RP0=1, select bank1
 11483  028C' 1303               	bcf	3,6	;RP1=0, select bank1
 11484  028D' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11485  028E' 1283               	bcf	3,5	;RP0=0, select bank0
 11486  028F' 1303               	bcf	3,6	;RP1=0, select bank0
 11487  0290' 0800'              	movf	?___lldiv,w
 11488  0291' 1683               	bsf	3,5	;RP0=1, select bank1
 11489  0292' 1303               	bcf	3,6	;RP1=0, select bank1
 11490  0293' 0080'              	movwf	sprintf@tmpval^(0+128)
 11491  0294'                    l4983:
 11492                           
 11493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11494  0294' 3000               	movlw	0
 11495  0295' 1283               	bcf	3,5	;RP0=0, select bank0
 11496  0296' 1303               	bcf	3,6	;RP1=0, select bank0
 11497  0297' 0083'              	movwf	___llmod@divisor+3
 11498  0298' 3000               	movlw	0
 11499  0299' 0082'              	movwf	___llmod@divisor+2
 11500  029A' 3000               	movlw	0
 11501  029B' 0081'              	movwf	___llmod@divisor+1
 11502  029C' 300A               	movlw	10
 11503  029D' 0080'              	movwf	___llmod@divisor
 11504  029E' 1683               	bsf	3,5	;RP0=1, select bank1
 11505  029F' 1303               	bcf	3,6	;RP1=0, select bank1
 11506  02A0' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11507  02A1' 1283               	bcf	3,5	;RP0=0, select bank0
 11508  02A2' 1303               	bcf	3,6	;RP1=0, select bank0
 11509  02A3' 0087'              	movwf	___llmod@dividend+3
 11510  02A4' 1683               	bsf	3,5	;RP0=1, select bank1
 11511  02A5' 1303               	bcf	3,6	;RP1=0, select bank1
 11512  02A6' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11513  02A7' 1283               	bcf	3,5	;RP0=0, select bank0
 11514  02A8' 1303               	bcf	3,6	;RP1=0, select bank0
 11515  02A9' 0086'              	movwf	___llmod@dividend+2
 11516  02AA' 1683               	bsf	3,5	;RP0=1, select bank1
 11517  02AB' 1303               	bcf	3,6	;RP1=0, select bank1
 11518  02AC' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11519  02AD' 1283               	bcf	3,5	;RP0=0, select bank0
 11520  02AE' 1303               	bcf	3,6	;RP1=0, select bank0
 11521  02AF' 0085'              	movwf	___llmod@dividend+1
 11522  02B0' 1683               	bsf	3,5	;RP0=1, select bank1
 11523  02B1' 1303               	bcf	3,6	;RP1=0, select bank1
 11524  02B2' 0800'              	movf	sprintf@tmpval^(0+128),w
 11525  02B3' 1283               	bcf	3,5	;RP0=0, select bank0
 11526  02B4' 1303               	bcf	3,6	;RP1=0, select bank0
 11527  02B5' 0084'              	movwf	___llmod@dividend
 11528  02B6' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11529  02BB' 1283               	bcf	3,5	;RP0=0, select bank0
 11530  02BC' 1303               	bcf	3,6	;RP1=0, select bank0
 11531  02BD' 0803'              	movf	?___llmod+3,w
 11532  02BE' 1683               	bsf	3,5	;RP0=1, select bank1
 11533  02BF' 1303               	bcf	3,6	;RP1=0, select bank1
 11534  02C0' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11535  02C1' 1283               	bcf	3,5	;RP0=0, select bank0
 11536  02C2' 1303               	bcf	3,6	;RP1=0, select bank0
 11537  02C3' 0802'              	movf	?___llmod+2,w
 11538  02C4' 1683               	bsf	3,5	;RP0=1, select bank1
 11539  02C5' 1303               	bcf	3,6	;RP1=0, select bank1
 11540  02C6' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11541  02C7' 1283               	bcf	3,5	;RP0=0, select bank0
 11542  02C8' 1303               	bcf	3,6	;RP1=0, select bank0
 11543  02C9' 0801'              	movf	?___llmod+1,w
 11544  02CA' 1683               	bsf	3,5	;RP0=1, select bank1
 11545  02CB' 1303               	bcf	3,6	;RP1=0, select bank1
 11546  02CC' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11547  02CD' 1283               	bcf	3,5	;RP0=0, select bank0
 11548  02CE' 1303               	bcf	3,6	;RP1=0, select bank0
 11549  02CF' 0800'              	movf	?___llmod,w
 11550  02D0' 1683               	bsf	3,5	;RP0=1, select bank1
 11551  02D1' 1303               	bcf	3,6	;RP1=0, select bank1
 11552  02D2' 0080'              	movwf	sprintf@tmpval^(0+128)
 11553  02D3'                    l4985:
 11554                           
 11555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11556  02D3' 0800'              	movf	sprintf@tmpval^(0+128),w
 11557  02D4' 3E30               	addlw	48
 11558  02D5' 0080'              	movwf	??_sprintf^(0+128)
 11559  02D6' 0800'              	movf	sprintf@sp^(0+128),w
 11560  02D7' 0084               	movwf	4
 11561  02D8' 0800'              	movf	??_sprintf^(0+128),w
 11562  02D9' 1383               	bcf	3,7	;select IRP bank0
 11563  02DA' 0080               	movwf	0
 11564  02DB' 3001               	movlw	1
 11565  02DC' 0080'              	movwf	??_sprintf^(0+128)
 11566  02DD' 0800'              	movf	??_sprintf^(0+128),w
 11567  02DE' 0780'              	addwf	sprintf@sp^(0+128),f
 11568  02DF'                    l372:	
 11569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11570                           
 11571                           
 11572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11573  02DF' 3001               	movlw	1
 11574  02E0' 0280'              	subwf	sprintf@c^(0+128),f
 11575  02E1' 0A00'              	incf	sprintf@c^(0+128),w
 11576  02E2' 1D03               	btfss	3,2
 11577  02E3' 2800'              	goto	u8511
 11578  02E4' 2800'              	goto	u8510
 11579  02E5'                    u8511:
 11580  02E5' 2800'              	goto	l4981
 11581  02E6'                    u8510:
 11582  02E6' 2800'              	goto	l4993
 11583  02E7'                    l4987:
 11584                           
 11585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11586  02E7' 3030               	movlw	48
 11587  02E8' 1683               	bsf	3,5	;RP0=1, select bank1
 11588  02E9' 1303               	bcf	3,6	;RP1=0, select bank1
 11589  02EA' 0080'              	movwf	??_sprintf^(0+128)
 11590  02EB' 0800'              	movf	sprintf@sp^(0+128),w
 11591  02EC' 0084               	movwf	4
 11592  02ED' 0800'              	movf	??_sprintf^(0+128),w
 11593  02EE' 1383               	bcf	3,7	;select IRP bank0
 11594  02EF' 0080               	movwf	0
 11595  02F0'                    l4989:
 11596  02F0' 3001               	movlw	1
 11597  02F1' 0080'              	movwf	??_sprintf^(0+128)
 11598  02F2' 0800'              	movf	??_sprintf^(0+128),w
 11599  02F3' 0780'              	addwf	sprintf@sp^(0+128),f
 11600  02F4'                    l4991:
 11601                           
 11602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11603  02F4' 30FF               	movlw	255
 11604  02F5' 0780'              	addwf	sprintf@eexp^(0+128),f
 11605  02F6' 1803               	skipnc
 11606  02F7' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 11607  02F8' 30FF               	movlw	255
 11608  02F9' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 11609  02FA'                    l4993:
 11610                           
 11611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11612  02FA' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11613  02FB' 3A80               	xorlw	128
 11614  02FC' 00FF               	movwf	btemp+1
 11615  02FD' 3080               	movlw	128
 11616  02FE' 027F               	subwf	btemp+1,w
 11617  02FF' 1D03               	skipz
 11618  0300' 2800'              	goto	u8525
 11619  0301' 3001               	movlw	1
 11620  0302' 0200'              	subwf	sprintf@eexp^(0+128),w
 11621  0303'                    u8525:
 11622  0303' 1803               	skipnc
 11623  0304' 2800'              	goto	u8521
 11624  0305' 2800'              	goto	u8520
 11625  0306'                    u8521:
 11626  0306' 2800'              	goto	l4987
 11627  0307'                    u8520:
 11628  0307'                    l4995:
 11629                           
 11630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11631  0307' 1683               	bsf	3,5	;RP0=1, select bank1
 11632  0308' 1303               	bcf	3,6	;RP1=0, select bank1
 11633  0309' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11634  030A' 3A80               	xorlw	128
 11635  030B' 00FF               	movwf	btemp+1
 11636  030C' 3080               	movlw	128
 11637  030D' 027F               	subwf	btemp+1,w
 11638  030E' 1D03               	skipz
 11639  030F' 2800'              	goto	u8535
 11640  0310' 3009               	movlw	9
 11641  0311' 0200'              	subwf	sprintf@prec^(0+128),w
 11642  0312'                    u8535:
 11643  0312' 1C03               	skipc
 11644  0313' 2800'              	goto	u8531
 11645  0314' 2800'              	goto	u8530
 11646  0315'                    u8531:
 11647  0315' 2800'              	goto	l4999
 11648  0316'                    u8530:
 11649  0316'                    l4997:
 11650                           
 11651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11652  0316' 3008               	movlw	8
 11653  0317' 1683               	bsf	3,5	;RP0=1, select bank1
 11654  0318' 1303               	bcf	3,6	;RP1=0, select bank1
 11655  0319' 0080'              	movwf	??_sprintf^(0+128)
 11656  031A' 0800'              	movf	??_sprintf^(0+128),w
 11657  031B' 0080'              	movwf	sprintf@c^(0+128)
 11658  031C' 2800'              	goto	l379
 11659  031D'                    l4999:
 11660                           
 11661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11662  031D' 1683               	bsf	3,5	;RP0=1, select bank1
 11663  031E' 1303               	bcf	3,6	;RP1=0, select bank1
 11664  031F' 0800'              	movf	sprintf@prec^(0+128),w
 11665  0320' 0080'              	movwf	??_sprintf^(0+128)
 11666  0321' 0800'              	movf	??_sprintf^(0+128),w
 11667  0322' 0080'              	movwf	sprintf@c^(0+128)
 11668  0323'                    l379:
 11669                           
 11670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11671  0323' 0800'              	movf	sprintf@c^(0+128),w
 11672  0324' 0080'              	movwf	??_sprintf^(0+128)
 11673  0325' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11674  0326' 0800'              	movf	??_sprintf^(0+128),w
 11675  0327' 0280'              	subwf	sprintf@prec^(0+128),f
 11676  0328' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11677  0329' 1C03               	skipc
 11678  032A' 0380'              	decf	(sprintf@prec+1)^(0+128),f
 11679  032B' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
 11680  032C'                    l5001:
 11681                           
 11682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11683  032C' 0800'              	movf	sprintf@c^(0+128),w
 11684  032D' 1903               	btfsc	3,2
 11685  032E' 2800'              	goto	u8541
 11686  032F' 2800'              	goto	u8540
 11687  0330'                    u8541:
 11688  0330' 2800'              	goto	l5007
 11689  0331'                    u8540:
 11690  0331'                    l5003:
 11691                           
 11692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11693  0331' 302E               	movlw	46
 11694  0332' 0080'              	movwf	??_sprintf^(0+128)
 11695  0333' 0800'              	movf	sprintf@sp^(0+128),w
 11696  0334' 0084               	movwf	4
 11697  0335' 0800'              	movf	??_sprintf^(0+128),w
 11698  0336' 1383               	bcf	3,7	;select IRP bank0
 11699  0337' 0080               	movwf	0
 11700  0338'                    l5005:
 11701  0338' 3001               	movlw	1
 11702  0339' 0080'              	movwf	??_sprintf^(0+128)
 11703  033A' 0800'              	movf	??_sprintf^(0+128),w
 11704  033B' 0780'              	addwf	sprintf@sp^(0+128),f
 11705  033C'                    l5007:
 11706                           
 11707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11708  033C' 0800'              	movf	sprintf@c^(0+128),w
 11709  033D' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11710  0342' 1283               	bcf	3,5	;RP0=0, select bank0
 11711  0343' 1303               	bcf	3,6	;RP1=0, select bank0
 11712  0344' 082D'              	movf	?_scale+3,w
 11713  0345' 1683               	bsf	3,5	;RP0=1, select bank1
 11714  0346' 1303               	bcf	3,6	;RP1=0, select bank1
 11715  0347' 0080'              	movwf	(_sprintf$1106+3)^(0+128)
 11716  0348' 1283               	bcf	3,5	;RP0=0, select bank0
 11717  0349' 1303               	bcf	3,6	;RP1=0, select bank0
 11718  034A' 082C'              	movf	?_scale+2,w
 11719  034B' 1683               	bsf	3,5	;RP0=1, select bank1
 11720  034C' 1303               	bcf	3,6	;RP1=0, select bank1
 11721  034D' 0080'              	movwf	(_sprintf$1106+2)^(0+128)
 11722  034E' 1283               	bcf	3,5	;RP0=0, select bank0
 11723  034F' 1303               	bcf	3,6	;RP1=0, select bank0
 11724  0350' 082B'              	movf	?_scale+1,w
 11725  0351' 1683               	bsf	3,5	;RP0=1, select bank1
 11726  0352' 1303               	bcf	3,6	;RP1=0, select bank1
 11727  0353' 0080'              	movwf	(_sprintf$1106+1)^(0+128)
 11728  0354' 1283               	bcf	3,5	;RP0=0, select bank0
 11729  0355' 1303               	bcf	3,6	;RP1=0, select bank0
 11730  0356' 082A'              	movf	?_scale,w
 11731  0357' 1683               	bsf	3,5	;RP0=1, select bank1
 11732  0358' 1303               	bcf	3,6	;RP1=0, select bank1
 11733  0359' 0080'              	movwf	_sprintf$1106^(0+128)
 11734  035A'                    l5009:
 11735                           
 11736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11737  035A' 0800'              	movf	(_sprintf$1106+3)^(0+128),w
 11738  035B' 1283               	bcf	3,5	;RP0=0, select bank0
 11739  035C' 1303               	bcf	3,6	;RP1=0, select bank0
 11740  035D' 0097'              	movwf	___flmul@a+3
 11741  035E' 1683               	bsf	3,5	;RP0=1, select bank1
 11742  035F' 1303               	bcf	3,6	;RP1=0, select bank1
 11743  0360' 0800'              	movf	(_sprintf$1106+2)^(0+128),w
 11744  0361' 1283               	bcf	3,5	;RP0=0, select bank0
 11745  0362' 1303               	bcf	3,6	;RP1=0, select bank0
 11746  0363' 0096'              	movwf	___flmul@a+2
 11747  0364' 1683               	bsf	3,5	;RP0=1, select bank1
 11748  0365' 1303               	bcf	3,6	;RP1=0, select bank1
 11749  0366' 0800'              	movf	(_sprintf$1106+1)^(0+128),w
 11750  0367' 1283               	bcf	3,5	;RP0=0, select bank0
 11751  0368' 1303               	bcf	3,6	;RP1=0, select bank0
 11752  0369' 0095'              	movwf	___flmul@a+1
 11753  036A' 1683               	bsf	3,5	;RP0=1, select bank1
 11754  036B' 1303               	bcf	3,6	;RP1=0, select bank1
 11755  036C' 0800'              	movf	_sprintf$1106^(0+128),w
 11756  036D' 1283               	bcf	3,5	;RP0=0, select bank0
 11757  036E' 1303               	bcf	3,6	;RP1=0, select bank0
 11758  036F' 0094'              	movwf	___flmul@a
 11759  0370' 1683               	bsf	3,5	;RP0=1, select bank1
 11760  0371' 1303               	bcf	3,6	;RP1=0, select bank1
 11761  0372' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11762  0373' 1283               	bcf	3,5	;RP0=0, select bank0
 11763  0374' 1303               	bcf	3,6	;RP1=0, select bank0
 11764  0375' 0093'              	movwf	___flmul@b+3
 11765  0376' 1683               	bsf	3,5	;RP0=1, select bank1
 11766  0377' 1303               	bcf	3,6	;RP1=0, select bank1
 11767  0378' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11768  0379' 1283               	bcf	3,5	;RP0=0, select bank0
 11769  037A' 1303               	bcf	3,6	;RP1=0, select bank0
 11770  037B' 0092'              	movwf	___flmul@b+2
 11771  037C' 1683               	bsf	3,5	;RP0=1, select bank1
 11772  037D' 1303               	bcf	3,6	;RP1=0, select bank1
 11773  037E' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11774  037F' 1283               	bcf	3,5	;RP0=0, select bank0
 11775  0380' 1303               	bcf	3,6	;RP1=0, select bank0
 11776  0381' 0091'              	movwf	___flmul@b+1
 11777  0382' 1683               	bsf	3,5	;RP0=1, select bank1
 11778  0383' 1303               	bcf	3,6	;RP1=0, select bank1
 11779  0384' 0800'              	movf	sprintf@fval^(0+128),w
 11780  0385' 1283               	bcf	3,5	;RP0=0, select bank0
 11781  0386' 1303               	bcf	3,6	;RP1=0, select bank0
 11782  0387' 0090'              	movwf	___flmul@b
 11783  0388' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11784  038D' 1283               	bcf	3,5	;RP0=0, select bank0
 11785  038E' 1303               	bcf	3,6	;RP1=0, select bank0
 11786  038F' 0813'              	movf	?___flmul+3,w
 11787  0390' 00C0'              	movwf	___fltol@f1+3
 11788  0391' 0812'              	movf	?___flmul+2,w
 11789  0392' 00BF'              	movwf	___fltol@f1+2
 11790  0393' 0811'              	movf	?___flmul+1,w
 11791  0394' 00BE'              	movwf	___fltol@f1+1
 11792  0395' 0810'              	movf	?___flmul,w
 11793  0396' 00BD'              	movwf	___fltol@f1
 11794  0397' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11795  039C' 1283               	bcf	3,5	;RP0=0, select bank0
 11796  039D' 1303               	bcf	3,6	;RP1=0, select bank0
 11797  039E' 0840'              	movf	?___fltol+3,w
 11798  039F' 1683               	bsf	3,5	;RP0=1, select bank1
 11799  03A0' 1303               	bcf	3,6	;RP1=0, select bank1
 11800  03A1' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11801  03A2' 1283               	bcf	3,5	;RP0=0, select bank0
 11802  03A3' 1303               	bcf	3,6	;RP1=0, select bank0
 11803  03A4' 083F'              	movf	?___fltol+2,w
 11804  03A5' 1683               	bsf	3,5	;RP0=1, select bank1
 11805  03A6' 1303               	bcf	3,6	;RP1=0, select bank1
 11806  03A7' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11807  03A8' 1283               	bcf	3,5	;RP0=0, select bank0
 11808  03A9' 1303               	bcf	3,6	;RP1=0, select bank0
 11809  03AA' 083E'              	movf	?___fltol+1,w
 11810  03AB' 1683               	bsf	3,5	;RP0=1, select bank1
 11811  03AC' 1303               	bcf	3,6	;RP1=0, select bank1
 11812  03AD' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11813  03AE' 1283               	bcf	3,5	;RP0=0, select bank0
 11814  03AF' 1303               	bcf	3,6	;RP1=0, select bank0
 11815  03B0' 083D'              	movf	?___fltol,w
 11816  03B1' 1683               	bsf	3,5	;RP0=1, select bank1
 11817  03B2' 1303               	bcf	3,6	;RP1=0, select bank1
 11818  03B3' 0080'              	movwf	sprintf@val^(0+128)
 11819                           
 11820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11821  03B4' 2800'              	goto	l5019
 11822  03B5'                    l5011:
 11823                           
 11824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11825  03B5' 0800'              	movf	sprintf@c^(0+128),w
 11826  03B6' 0080'              	movwf	??_sprintf^(0+128)
 11827  03B7' 3001               	movlw	1
 11828  03B8'                    u8555:
 11829  03B8' 1003               	clrc
 11830  03B9' 0D80'              	rlf	??_sprintf^(0+128),f
 11831  03BA' 3EFF               	addlw	-1
 11832  03BB' 1D03               	skipz
 11833  03BC' 2800'              	goto	u8555
 11834  03BD' 1003               	clrc
 11835  03BE' 0D00'              	rlf	??_sprintf^(0+128),w
 11836  03BF' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11837  03C0' 0084               	movwf	4
 11838  03C1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11839  03C6' 1283               	bcf	3,5	;RP0=0, select bank0
 11840  03C7' 1303               	bcf	3,6	;RP1=0, select bank0
 11841  03C8' 0080'              	movwf	___lldiv@divisor
 11842  03C9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11843  03CE' 0081'              	movwf	___lldiv@divisor+1
 11844  03CF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11845  03D4' 0082'              	movwf	___lldiv@divisor+2
 11846  03D5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11847  03DA' 0083'              	movwf	___lldiv@divisor+3
 11848  03DB' 1683               	bsf	3,5	;RP0=1, select bank1
 11849  03DC' 1303               	bcf	3,6	;RP1=0, select bank1
 11850  03DD' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11851  03DE' 1283               	bcf	3,5	;RP0=0, select bank0
 11852  03DF' 1303               	bcf	3,6	;RP1=0, select bank0
 11853  03E0' 0087'              	movwf	___lldiv@dividend+3
 11854  03E1' 1683               	bsf	3,5	;RP0=1, select bank1
 11855  03E2' 1303               	bcf	3,6	;RP1=0, select bank1
 11856  03E3' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11857  03E4' 1283               	bcf	3,5	;RP0=0, select bank0
 11858  03E5' 1303               	bcf	3,6	;RP1=0, select bank0
 11859  03E6' 0086'              	movwf	___lldiv@dividend+2
 11860  03E7' 1683               	bsf	3,5	;RP0=1, select bank1
 11861  03E8' 1303               	bcf	3,6	;RP1=0, select bank1
 11862  03E9' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11863  03EA' 1283               	bcf	3,5	;RP0=0, select bank0
 11864  03EB' 1303               	bcf	3,6	;RP1=0, select bank0
 11865  03EC' 0085'              	movwf	___lldiv@dividend+1
 11866  03ED' 1683               	bsf	3,5	;RP0=1, select bank1
 11867  03EE' 1303               	bcf	3,6	;RP1=0, select bank1
 11868  03EF' 0800'              	movf	sprintf@val^(0+128),w
 11869  03F0' 1283               	bcf	3,5	;RP0=0, select bank0
 11870  03F1' 1303               	bcf	3,6	;RP1=0, select bank0
 11871  03F2' 0084'              	movwf	___lldiv@dividend
 11872  03F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11873  03F8' 1283               	bcf	3,5	;RP0=0, select bank0
 11874  03F9' 1303               	bcf	3,6	;RP1=0, select bank0
 11875  03FA' 0803'              	movf	?___lldiv+3,w
 11876  03FB' 1683               	bsf	3,5	;RP0=1, select bank1
 11877  03FC' 1303               	bcf	3,6	;RP1=0, select bank1
 11878  03FD' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11879  03FE' 1283               	bcf	3,5	;RP0=0, select bank0
 11880  03FF' 1303               	bcf	3,6	;RP1=0, select bank0
 11881  0400' 0802'              	movf	?___lldiv+2,w
 11882  0401' 1683               	bsf	3,5	;RP0=1, select bank1
 11883  0402' 1303               	bcf	3,6	;RP1=0, select bank1
 11884  0403' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11885  0404' 1283               	bcf	3,5	;RP0=0, select bank0
 11886  0405' 1303               	bcf	3,6	;RP1=0, select bank0
 11887  0406' 0801'              	movf	?___lldiv+1,w
 11888  0407' 1683               	bsf	3,5	;RP0=1, select bank1
 11889  0408' 1303               	bcf	3,6	;RP1=0, select bank1
 11890  0409' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11891  040A' 1283               	bcf	3,5	;RP0=0, select bank0
 11892  040B' 1303               	bcf	3,6	;RP1=0, select bank0
 11893  040C' 0800'              	movf	?___lldiv,w
 11894  040D' 1683               	bsf	3,5	;RP0=1, select bank1
 11895  040E' 1303               	bcf	3,6	;RP1=0, select bank1
 11896  040F' 0080'              	movwf	sprintf@tmpval^(0+128)
 11897  0410'                    l5013:
 11898                           
 11899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11900  0410' 3000               	movlw	0
 11901  0411' 1283               	bcf	3,5	;RP0=0, select bank0
 11902  0412' 1303               	bcf	3,6	;RP1=0, select bank0
 11903  0413' 0083'              	movwf	___llmod@divisor+3
 11904  0414' 3000               	movlw	0
 11905  0415' 0082'              	movwf	___llmod@divisor+2
 11906  0416' 3000               	movlw	0
 11907  0417' 0081'              	movwf	___llmod@divisor+1
 11908  0418' 300A               	movlw	10
 11909  0419' 0080'              	movwf	___llmod@divisor
 11910  041A' 1683               	bsf	3,5	;RP0=1, select bank1
 11911  041B' 1303               	bcf	3,6	;RP1=0, select bank1
 11912  041C' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11913  041D' 1283               	bcf	3,5	;RP0=0, select bank0
 11914  041E' 1303               	bcf	3,6	;RP1=0, select bank0
 11915  041F' 0087'              	movwf	___llmod@dividend+3
 11916  0420' 1683               	bsf	3,5	;RP0=1, select bank1
 11917  0421' 1303               	bcf	3,6	;RP1=0, select bank1
 11918  0422' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11919  0423' 1283               	bcf	3,5	;RP0=0, select bank0
 11920  0424' 1303               	bcf	3,6	;RP1=0, select bank0
 11921  0425' 0086'              	movwf	___llmod@dividend+2
 11922  0426' 1683               	bsf	3,5	;RP0=1, select bank1
 11923  0427' 1303               	bcf	3,6	;RP1=0, select bank1
 11924  0428' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11925  0429' 1283               	bcf	3,5	;RP0=0, select bank0
 11926  042A' 1303               	bcf	3,6	;RP1=0, select bank0
 11927  042B' 0085'              	movwf	___llmod@dividend+1
 11928  042C' 1683               	bsf	3,5	;RP0=1, select bank1
 11929  042D' 1303               	bcf	3,6	;RP1=0, select bank1
 11930  042E' 0800'              	movf	sprintf@tmpval^(0+128),w
 11931  042F' 1283               	bcf	3,5	;RP0=0, select bank0
 11932  0430' 1303               	bcf	3,6	;RP1=0, select bank0
 11933  0431' 0084'              	movwf	___llmod@dividend
 11934  0432' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11935  0437' 1283               	bcf	3,5	;RP0=0, select bank0
 11936  0438' 1303               	bcf	3,6	;RP1=0, select bank0
 11937  0439' 0803'              	movf	?___llmod+3,w
 11938  043A' 1683               	bsf	3,5	;RP0=1, select bank1
 11939  043B' 1303               	bcf	3,6	;RP1=0, select bank1
 11940  043C' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11941  043D' 1283               	bcf	3,5	;RP0=0, select bank0
 11942  043E' 1303               	bcf	3,6	;RP1=0, select bank0
 11943  043F' 0802'              	movf	?___llmod+2,w
 11944  0440' 1683               	bsf	3,5	;RP0=1, select bank1
 11945  0441' 1303               	bcf	3,6	;RP1=0, select bank1
 11946  0442' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11947  0443' 1283               	bcf	3,5	;RP0=0, select bank0
 11948  0444' 1303               	bcf	3,6	;RP1=0, select bank0
 11949  0445' 0801'              	movf	?___llmod+1,w
 11950  0446' 1683               	bsf	3,5	;RP0=1, select bank1
 11951  0447' 1303               	bcf	3,6	;RP1=0, select bank1
 11952  0448' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11953  0449' 1283               	bcf	3,5	;RP0=0, select bank0
 11954  044A' 1303               	bcf	3,6	;RP1=0, select bank0
 11955  044B' 0800'              	movf	?___llmod,w
 11956  044C' 1683               	bsf	3,5	;RP0=1, select bank1
 11957  044D' 1303               	bcf	3,6	;RP1=0, select bank1
 11958  044E' 0080'              	movwf	sprintf@tmpval^(0+128)
 11959  044F'                    l5015:
 11960                           
 11961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11962  044F' 0800'              	movf	sprintf@tmpval^(0+128),w
 11963  0450' 3E30               	addlw	48
 11964  0451' 0080'              	movwf	??_sprintf^(0+128)
 11965  0452' 0800'              	movf	sprintf@sp^(0+128),w
 11966  0453' 0084               	movwf	4
 11967  0454' 0800'              	movf	??_sprintf^(0+128),w
 11968  0455' 1383               	bcf	3,7	;select IRP bank0
 11969  0456' 0080               	movwf	0
 11970  0457' 3001               	movlw	1
 11971  0458' 0080'              	movwf	??_sprintf^(0+128)
 11972  0459' 0800'              	movf	??_sprintf^(0+128),w
 11973  045A' 0780'              	addwf	sprintf@sp^(0+128),f
 11974  045B'                    l5017:
 11975                           
 11976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11977  045B' 0800'              	movf	sprintf@c^(0+128),w
 11978  045C' 0080'              	movwf	??_sprintf^(0+128)
 11979  045D' 3001               	movlw	1
 11980  045E'                    u8565:
 11981  045E' 1003               	clrc
 11982  045F' 0D80'              	rlf	??_sprintf^(0+128),f
 11983  0460' 3EFF               	addlw	-1
 11984  0461' 1D03               	skipz
 11985  0462' 2800'              	goto	u8565
 11986  0463' 1003               	clrc
 11987  0464' 0D00'              	rlf	??_sprintf^(0+128),w
 11988  0465' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11989  0466' 0084               	movwf	4
 11990  0467' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11991  046C' 1283               	bcf	3,5	;RP0=0, select bank0
 11992  046D' 1303               	bcf	3,6	;RP1=0, select bank0
 11993  046E' 0080'              	movwf	___llmod@divisor
 11994  046F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11995  0474' 0081'              	movwf	___llmod@divisor+1
 11996  0475' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11997  047A' 0082'              	movwf	___llmod@divisor+2
 11998  047B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11999  0480' 0083'              	movwf	___llmod@divisor+3
 12000  0481' 1683               	bsf	3,5	;RP0=1, select bank1
 12001  0482' 1303               	bcf	3,6	;RP1=0, select bank1
 12002  0483' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12003  0484' 1283               	bcf	3,5	;RP0=0, select bank0
 12004  0485' 1303               	bcf	3,6	;RP1=0, select bank0
 12005  0486' 0087'              	movwf	___llmod@dividend+3
 12006  0487' 1683               	bsf	3,5	;RP0=1, select bank1
 12007  0488' 1303               	bcf	3,6	;RP1=0, select bank1
 12008  0489' 0800'              	movf	(sprintf@val+2)^(0+128),w
 12009  048A' 1283               	bcf	3,5	;RP0=0, select bank0
 12010  048B' 1303               	bcf	3,6	;RP1=0, select bank0
 12011  048C' 0086'              	movwf	___llmod@dividend+2
 12012  048D' 1683               	bsf	3,5	;RP0=1, select bank1
 12013  048E' 1303               	bcf	3,6	;RP1=0, select bank1
 12014  048F' 0800'              	movf	(sprintf@val+1)^(0+128),w
 12015  0490' 1283               	bcf	3,5	;RP0=0, select bank0
 12016  0491' 1303               	bcf	3,6	;RP1=0, select bank0
 12017  0492' 0085'              	movwf	___llmod@dividend+1
 12018  0493' 1683               	bsf	3,5	;RP0=1, select bank1
 12019  0494' 1303               	bcf	3,6	;RP1=0, select bank1
 12020  0495' 0800'              	movf	sprintf@val^(0+128),w
 12021  0496' 1283               	bcf	3,5	;RP0=0, select bank0
 12022  0497' 1303               	bcf	3,6	;RP1=0, select bank0
 12023  0498' 0084'              	movwf	___llmod@dividend
 12024  0499' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12025  049E' 1283               	bcf	3,5	;RP0=0, select bank0
 12026  049F' 1303               	bcf	3,6	;RP1=0, select bank0
 12027  04A0' 0803'              	movf	?___llmod+3,w
 12028  04A1' 1683               	bsf	3,5	;RP0=1, select bank1
 12029  04A2' 1303               	bcf	3,6	;RP1=0, select bank1
 12030  04A3' 0080'              	movwf	(sprintf@val+3)^(0+128)
 12031  04A4' 1283               	bcf	3,5	;RP0=0, select bank0
 12032  04A5' 1303               	bcf	3,6	;RP1=0, select bank0
 12033  04A6' 0802'              	movf	?___llmod+2,w
 12034  04A7' 1683               	bsf	3,5	;RP0=1, select bank1
 12035  04A8' 1303               	bcf	3,6	;RP1=0, select bank1
 12036  04A9' 0080'              	movwf	(sprintf@val+2)^(0+128)
 12037  04AA' 1283               	bcf	3,5	;RP0=0, select bank0
 12038  04AB' 1303               	bcf	3,6	;RP1=0, select bank0
 12039  04AC' 0801'              	movf	?___llmod+1,w
 12040  04AD' 1683               	bsf	3,5	;RP0=1, select bank1
 12041  04AE' 1303               	bcf	3,6	;RP1=0, select bank1
 12042  04AF' 0080'              	movwf	(sprintf@val+1)^(0+128)
 12043  04B0' 1283               	bcf	3,5	;RP0=0, select bank0
 12044  04B1' 1303               	bcf	3,6	;RP1=0, select bank0
 12045  04B2' 0800'              	movf	?___llmod,w
 12046  04B3' 1683               	bsf	3,5	;RP0=1, select bank1
 12047  04B4' 1303               	bcf	3,6	;RP1=0, select bank1
 12048  04B5' 0080'              	movwf	sprintf@val^(0+128)
 12049  04B6'                    l5019:
 12050                           
 12051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 12052  04B6' 3001               	movlw	1
 12053  04B7' 0280'              	subwf	sprintf@c^(0+128),f
 12054  04B8' 0A00'              	incf	sprintf@c^(0+128),w
 12055  04B9' 1D03               	btfss	3,2
 12056  04BA' 2800'              	goto	u8571
 12057  04BB' 2800'              	goto	u8570
 12058  04BC'                    u8571:
 12059  04BC' 2800'              	goto	l5011
 12060  04BD'                    u8570:
 12061  04BD' 2800'              	goto	l5027
 12062  04BE'                    l5021:
 12063                           
 12064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 12065  04BE' 3030               	movlw	48
 12066  04BF' 0080'              	movwf	??_sprintf^(0+128)
 12067  04C0' 0800'              	movf	sprintf@sp^(0+128),w
 12068  04C1' 0084               	movwf	4
 12069  04C2' 0800'              	movf	??_sprintf^(0+128),w
 12070  04C3' 1383               	bcf	3,7	;select IRP bank0
 12071  04C4' 0080               	movwf	0
 12072  04C5'                    l5023:
 12073  04C5' 3001               	movlw	1
 12074  04C6' 0080'              	movwf	??_sprintf^(0+128)
 12075  04C7' 0800'              	movf	??_sprintf^(0+128),w
 12076  04C8' 0780'              	addwf	sprintf@sp^(0+128),f
 12077  04C9'                    l5025:
 12078                           
 12079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 12080  04C9' 30FF               	movlw	255
 12081  04CA' 0780'              	addwf	sprintf@prec^(0+128),f
 12082  04CB' 1803               	skipnc
 12083  04CC' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12084  04CD' 30FF               	movlw	255
 12085  04CE' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12086  04CF'                    l5027:
 12087                           
 12088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 12089  04CF' 0800'              	movf	sprintf@prec^(0+128),w
 12090  04D0' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 12091  04D1' 1D03               	btfss	3,2
 12092  04D2' 2800'              	goto	u8581
 12093  04D3' 2800'              	goto	u8580
 12094  04D4'                    u8581:
 12095  04D4' 2800'              	goto	l5021
 12096  04D5'                    u8580:
 12097  04D5' 2800'              	goto	l5075
 12098  04D6'                    l5029:
 12099                           
 12100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 12101  04D6' 0800'              	movf	sprintf@prec^(0+128),w
 12102  04D7' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 12103  04D8' 1D03               	btfss	3,2
 12104  04D9' 2800'              	goto	u8591
 12105  04DA' 2800'              	goto	u8590
 12106  04DB'                    u8591:
 12107  04DB' 2800'              	goto	l387
 12108  04DC'                    u8590:
 12109  04DC'                    l5031:
 12110  04DC' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12111  04DD' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
 12112  04DE' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
 12113  04DF' 0400'              	iorwf	sprintf@val^(0+128),w
 12114  04E0' 1D03               	skipz
 12115  04E1' 2800'              	goto	u8601
 12116  04E2' 2800'              	goto	u8600
 12117  04E3'                    u8601:
 12118  04E3' 2800'              	goto	l387
 12119  04E4'                    u8600:
 12120  04E4'                    l5033:
 12121                           
 12122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 12123  04E4' 3001               	movlw	1
 12124  04E5' 0780'              	addwf	sprintf@prec^(0+128),f
 12125  04E6' 1803               	skipnc
 12126  04E7' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12127  04E8' 3000               	movlw	0
 12128  04E9' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12129  04EA'                    l387:
 12130                           
 12131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 12132  04EA' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12133  04EB' 3A80               	xorlw	128
 12134  04EC' 3C80               	sublw	128
 12135  04ED' 1D03               	skipz
 12136  04EE' 2800'              	goto	u8615
 12137  04EF' 0800'              	movf	sprintf@prec^(0+128),w
 12138  04F0' 0200'              	subwf	sprintf@c^(0+128),w
 12139  04F1'                    u8615:
 12140  04F1' 1803               	skipnc
 12141  04F2' 2800'              	goto	u8611
 12142  04F3' 2800'              	goto	u8610
 12143  04F4'                    u8611:
 12144  04F4' 2800'              	goto	l5037
 12145  04F5'                    u8610:
 12146  04F5'                    l5035:
 12147                           
 12148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 12149  04F5' 1683               	bsf	3,5	;RP0=1, select bank1
 12150  04F6' 1303               	bcf	3,6	;RP1=0, select bank1
 12151  04F7' 0800'              	movf	sprintf@prec^(0+128),w
 12152  04F8' 0080'              	movwf	??_sprintf^(0+128)
 12153  04F9' 0800'              	movf	??_sprintf^(0+128),w
 12154  04FA' 0080'              	movwf	sprintf@c^(0+128)
 12155  04FB' 2800'              	goto	l5041
 12156  04FC'                    l5037:
 12157  04FC' 1683               	bsf	3,5	;RP0=1, select bank1
 12158  04FD' 1303               	bcf	3,6	;RP1=0, select bank1
 12159  04FE' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12160  04FF' 3A80               	xorlw	128
 12161  0500' 0080'              	movwf	??_sprintf^(0+128)
 12162  0501' 3080               	movlw	128
 12163  0502' 0200'              	subwf	??_sprintf^(0+128),w
 12164  0503' 1D03               	skipz
 12165  0504' 2800'              	goto	u8625
 12166  0505' 0800'              	movf	sprintf@c^(0+128),w
 12167  0506' 0200'              	subwf	sprintf@prec^(0+128),w
 12168  0507'                    u8625:
 12169  0507' 1803               	skipnc
 12170  0508' 2800'              	goto	u8621
 12171  0509' 2800'              	goto	u8620
 12172  050A'                    u8621:
 12173  050A' 2800'              	goto	l5041
 12174  050B'                    u8620:
 12175  050B'                    l5039:
 12176                           
 12177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 12178  050B' 1683               	bsf	3,5	;RP0=1, select bank1
 12179  050C' 1303               	bcf	3,6	;RP1=0, select bank1
 12180  050D' 0800'              	movf	sprintf@c^(0+128),w
 12181  050E' 0080'              	movwf	??_sprintf^(0+128)
 12182  050F' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12183  0510' 0800'              	movf	??_sprintf^(0+128),w
 12184  0511' 0080'              	movwf	sprintf@prec^(0+128)
 12185  0512' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12186  0513' 0080'              	movwf	(sprintf@prec+1)^(0+128)
 12187  0514'                    l5041:
 12188                           
 12189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 12190  0514' 1683               	bsf	3,5	;RP0=1, select bank1
 12191  0515' 1303               	bcf	3,6	;RP1=0, select bank1
 12192  0516' 0800'              	movf	sprintf@width^(0+128),w
 12193  0517' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 12194  0518' 1903               	btfsc	3,2
 12195  0519' 2800'              	goto	u8631
 12196  051A' 2800'              	goto	u8630
 12197  051B'                    u8631:
 12198  051B' 2800'              	goto	l5047
 12199  051C'                    u8630:
 12200  051C'                    l5043:
 12201  051C' 3003               	movlw	3
 12202  051D' 0500'              	andwf	sprintf@flag^(0+128),w
 12203  051E' 0080'              	movwf	??_sprintf^(0+128)
 12204  051F' 3000               	movlw	0
 12205  0520' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 12206  0521' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12207  0522' 0800'              	movf	??_sprintf^(0+128),w
 12208  0523' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12209  0524' 1903               	btfsc	3,2
 12210  0525' 2800'              	goto	u8641
 12211  0526' 2800'              	goto	u8640
 12212  0527'                    u8641:
 12213  0527' 2800'              	goto	l5047
 12214  0528'                    u8640:
 12215  0528'                    l5045:
 12216                           
 12217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 12218  0528' 30FF               	movlw	255
 12219  0529' 0780'              	addwf	sprintf@width^(0+128),f
 12220  052A' 1803               	skipnc
 12221  052B' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 12222  052C' 30FF               	movlw	255
 12223  052D' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 12224  052E'                    l5047:
 12225                           
 12226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 12227  052E' 1F00'              	btfss	(sprintf@flag+1)^(0+128),6
 12228  052F' 2800'              	goto	u8651
 12229  0530' 2800'              	goto	u8650
 12230  0531'                    u8651:
 12231  0531' 2800'              	goto	l5055
 12232  0532'                    u8650:
 12233  0532'                    l5049:
 12234                           
 12235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 12236  0532' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12237  0533' 3A80               	xorlw	128
 12238  0534' 0080'              	movwf	??_sprintf^(0+128)
 12239  0535' 0800'              	movf	(sprintf@width+1)^(0+128),w
 12240  0536' 3A80               	xorlw	128
 12241  0537' 0200'              	subwf	??_sprintf^(0+128),w
 12242  0538' 1D03               	skipz
 12243  0539' 2800'              	goto	u8665
 12244  053A' 0800'              	movf	sprintf@width^(0+128),w
 12245  053B' 0200'              	subwf	sprintf@prec^(0+128),w
 12246  053C'                    u8665:
 12247  053C' 1803               	skipnc
 12248  053D' 2800'              	goto	u8661
 12249  053E' 2800'              	goto	u8660
 12250  053F'                    u8661:
 12251  053F' 2800'              	goto	l5053
 12252  0540'                    u8660:
 12253  0540'                    l5051:
 12254                           
 12255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 12256  0540' 1683               	bsf	3,5	;RP0=1, select bank1
 12257  0541' 1303               	bcf	3,6	;RP1=0, select bank1
 12258  0542' 0800'              	movf	sprintf@prec^(0+128),w
 12259  0543' 0280'              	subwf	sprintf@width^(0+128),f
 12260  0544' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 12261  0545' 1C03               	skipc
 12262  0546' 0380'              	decf	(sprintf@width+1)^(0+128),f
 12263  0547' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 12264  0548' 2800'              	goto	l5055
 12265  0549'                    l5053:
 12266                           
 12267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 12268  0549' 1683               	bsf	3,5	;RP0=1, select bank1
 12269  054A' 1303               	bcf	3,6	;RP1=0, select bank1
 12270  054B' 0180'              	clrf	sprintf@width^(0+128)
 12271  054C' 0180'              	clrf	(sprintf@width+1)^(0+128)
 12272  054D'                    l5055:
 12273                           
 12274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 12275  054D' 0800'              	movf	(sprintf@width+1)^(0+128),w
 12276  054E' 3A80               	xorlw	128
 12277  054F' 3C80               	sublw	128
 12278  0550' 1D03               	skipz
 12279  0551' 2800'              	goto	u8675
 12280  0552' 0800'              	movf	sprintf@width^(0+128),w
 12281  0553' 0200'              	subwf	sprintf@c^(0+128),w
 12282  0554'                    u8675:
 12283  0554' 1803               	skipnc
 12284  0555' 2800'              	goto	u8671
 12285  0556' 2800'              	goto	u8670
 12286  0557'                    u8671:
 12287  0557' 2800'              	goto	l5059
 12288  0558'                    u8670:
 12289  0558'                    l5057:
 12290                           
 12291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 12292  0558' 1683               	bsf	3,5	;RP0=1, select bank1
 12293  0559' 1303               	bcf	3,6	;RP1=0, select bank1
 12294  055A' 0800'              	movf	sprintf@c^(0+128),w
 12295  055B' 0080'              	movwf	??_sprintf^(0+128)
 12296  055C' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12297  055D' 0800'              	movf	??_sprintf^(0+128),w
 12298  055E' 0280'              	subwf	sprintf@width^(0+128),f
 12299  055F' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12300  0560' 1C03               	skipc
 12301  0561' 0380'              	decf	(sprintf@width+1)^(0+128),f
 12302  0562' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 12303  0563' 2800'              	goto	l5061
 12304  0564'                    l5059:
 12305                           
 12306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 12307  0564' 1683               	bsf	3,5	;RP0=1, select bank1
 12308  0565' 1303               	bcf	3,6	;RP1=0, select bank1
 12309  0566' 0180'              	clrf	sprintf@width^(0+128)
 12310  0567' 0180'              	clrf	(sprintf@width+1)^(0+128)
 12311  0568'                    l5061:
 12312                           
 12313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 12314  0568' 0800'              	movf	sprintf@width^(0+128),w
 12315  0569' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 12316  056A' 1903               	btfsc	3,2
 12317  056B' 2800'              	goto	u8681
 12318  056C' 2800'              	goto	u8680
 12319  056D'                    u8681:
 12320  056D' 2800'              	goto	l5069
 12321  056E'                    u8680:
 12322  056E'                    l5063:
 12323                           
 12324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 12325  056E' 3020               	movlw	32
 12326  056F' 0080'              	movwf	??_sprintf^(0+128)
 12327  0570' 0800'              	movf	sprintf@sp^(0+128),w
 12328  0571' 0084               	movwf	4
 12329  0572' 0800'              	movf	??_sprintf^(0+128),w
 12330  0573' 1383               	bcf	3,7	;select IRP bank0
 12331  0574' 0080               	movwf	0
 12332  0575'                    l5065:
 12333  0575' 3001               	movlw	1
 12334  0576' 0080'              	movwf	??_sprintf^(0+128)
 12335  0577' 0800'              	movf	??_sprintf^(0+128),w
 12336  0578' 0780'              	addwf	sprintf@sp^(0+128),f
 12337  0579'                    l5067:
 12338  0579' 30FF               	movlw	255
 12339  057A' 0780'              	addwf	sprintf@width^(0+128),f
 12340  057B' 1803               	skipnc
 12341  057C' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 12342  057D' 30FF               	movlw	255
 12343  057E' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 12344  057F' 0800'              	movf	sprintf@width^(0+128),w
 12345  0580' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 12346  0581' 1D03               	btfss	3,2
 12347  0582' 2800'              	goto	u8691
 12348  0583' 2800'              	goto	u8690
 12349  0584'                    u8691:
 12350  0584' 2800'              	goto	l5063
 12351  0585'                    u8690:
 12352  0585'                    l5069:
 12353                           
 12354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 12355  0585' 3003               	movlw	3
 12356  0586' 0500'              	andwf	sprintf@flag^(0+128),w
 12357  0587' 0080'              	movwf	??_sprintf^(0+128)
 12358  0588' 3000               	movlw	0
 12359  0589' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 12360  058A' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12361  058B' 0800'              	movf	??_sprintf^(0+128),w
 12362  058C' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12363  058D' 1903               	btfsc	3,2
 12364  058E' 2800'              	goto	u8701
 12365  058F' 2800'              	goto	u8700
 12366  0590'                    u8701:
 12367  0590' 2800'              	goto	l5075
 12368  0591'                    u8700:
 12369  0591'                    l5071:
 12370                           
 12371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12372  0591' 302D               	movlw	45
 12373  0592' 0080'              	movwf	??_sprintf^(0+128)
 12374  0593' 0800'              	movf	sprintf@sp^(0+128),w
 12375  0594' 0084               	movwf	4
 12376  0595' 0800'              	movf	??_sprintf^(0+128),w
 12377  0596' 1383               	bcf	3,7	;select IRP bank0
 12378  0597' 0080               	movwf	0
 12379  0598' 120A' 118A' 2800'  	goto	l4831
 12380  059B'                    l5075:
 12381                           
 12382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12383  059B' 3001               	movlw	1
 12384  059C' 0780'              	addwf	sprintf@f^(0+128),f
 12385  059D' 30FF               	movlw	-1
 12386  059E' 0700'              	addwf	sprintf@f^(0+128),w
 12387  059F' 0084               	movwf	4
 12388  05A0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12389  05A5' 0080'              	movwf	??_sprintf^(0+128)
 12390  05A6' 0800'              	movf	??_sprintf^(0+128),w
 12391  05A7' 0080'              	movwf	sprintf@c^(0+128)
 12392  05A8' 0800'              	movf	sprintf@c^(0+128),w
 12393  05A9' 1D03               	btfss	3,2
 12394  05AA' 2800'              	goto	u8711
 12395  05AB' 2800'              	goto	u8710
 12396  05AC'                    u8711:
 12397  05AC' 120A' 118A' 2800'  	goto	l4827
 12398  05AF'                    u8710:
 12399  05AF'                    l5077:
 12400                           
 12401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12402  05AF' 0800'              	movf	sprintf@sp^(0+128),w
 12403  05B0' 0084               	movwf	4
 12404  05B1' 1383               	bcf	3,7	;select IRP bank0
 12405  05B2' 0180               	clrf	0
 12406  05B3'                    l402:
 12407  05B3' 0008               	return
 12408  05B4'                    __end_of_sprintf:

Data Sizes:
    Strings     26
    Constant    144
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     79      79
    BANK1            80     53      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_4(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> data(BANK1[16]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_CH1->___fldiv
    _ADC_CH0->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   60144
                                             78 BANK0      1     1      0
                            _ADC_CH0
                            _ADC_CH1
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   41593
                                             12 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9559
                                             42 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7793
                                             42 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             61 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                              4 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                             62 BANK0     16     8      8
                                              0 BANK1      4     4      0
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     552
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              4 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CH1                                              4     4      0    8615
                                             68 BANK0      4     4      0
                             _ADC_ch
                            _ADC_val
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_CH0                                              4     4      0    8615
                                             68 BANK0      4     4      0
                             _ADC_ch
                            _ADC_val
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    6053
                                             16 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             42 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_val                                              3     2      1     180
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_ch                                               2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
                      _USART_LECTURA
 ---------------------------------------------------------------------------------
 (6) _USART_LECTURA                                        2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH0
     _ADC_ch
     _ADC_val
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_CH1
     _ADC_ch
     _ADC_val
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)
   _USART_LECTURA

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     35      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 19:28:16 2021

             ___fldiv@aexp 0043               ___fldiv@bexp 0042                          pc 0002  
             ___fldiv@sign 003B               ___awdiv@sign 000D                         fsr 0004  
      ___wmul@multiplicand 0002        __Umul8_16@word_mpld 0006                        l110 0089  
                      l104 002A                        l116 008A                        l133 0005  
                      l151 0017                        l136 001B                        l312 020C  
                      l145 0025                        l402 05B3                        l139 000C  
                      l180 0001                        l148 004F                        l157 0045  
                      l341 00E3                        l182 0006                        l406 000E  
                      l183 000B                        l319 0362                        l184 001F  
                      l176 0007                        l600 008A                        l408 0026  
                      l601 00A3                        l442 0067                        l372 02DF  
                      l605 000C                        l623 00BC                        l616 0066  
                      l624 002E                        l712 0045                        l609 007B  
                      l634 00AF                        l722 003B                        l811 01C0  
                      l619 007B                        l627 007F                        l387 04EA  
                      l379 0323                        l580 0080                        l572 005A  
                      l813 01D0                        l805 014E                        l733 0085  
                      l662 0055                        l559 0068                        l592 001E  
                      l576 00BD                        l841 0354                        l593 003A  
                      l737 017D                        l577 0022                        l850 0028  
                      l594 004F                        l754 025F                        l746 033F  
                      l835 02CC                        l739 0149                        l587 00B0  
                      l764 02B5                        l829 0360                        l597 001E  
                      l758 028C                        l791 01DC                        l775 032B  
                      l767 02FF                        l848 0016                        l776 033F  
                      l873 0024                        l875 00BB                        l779 004F  
                      l789 005C                        l893 0013                        l886 0085  
                      l887 0091                        l879 0069                        _RE0 0048  
                      _RE1 0049                        _ISR 0000            __end_of_ADC_CH0 008A  
          __end_of_ADC_CH1 008B                        fsr0 0004                        indf 0000  
             ___awmod@sign 0006            __end_of_ADC_val 0008               ___flmul@aexp 001E  
             ___flmul@bexp 0023               ___flmul@sign 001D               ___flmul@temp 0028  
             ___flmul@prod 0024                       ?_ISR 0000               ___fltol@exp1 0047  
                     l4001 0039                       l4011 0056                       l4003 003F  
                     l4101 00D3                       l4021 0012                       l2501 000C  
                     l4005 0046                       l3311 000D                       l4111 00F5  
                     l4103 00DB                       l4031 0031                       l4023 0016  
                     l4015 0000                       l2511 001D                       l2503 000E  
                     l4007 004C                       l3401 011F                       l3321 0024  
                     l3313 0011                       l4121 014D                       l4113 00FB  
                     l4105 00E1                       l4041 0013                       l4025 001A  
                     l4017 0008                       l4033 0037                       l2521 0035  
                     l2513 0023                       l2505 0012                       l4009 0051  
                     l5001 032C                       l3411 0137                       l3403 0128  
                     l3331 003A                       l3323 0025                       l3315 0012  
                     l3307 0000                       l4211 02F7                       l4203 02BC  
                     l4131 016F                       l4123 015A                       l4107 00E7  
                     l4115 0103                       l4051 0032                       l4043 0019  
                     l3251 0016                       l4027 0024                       l4019 000B  
                     l2523 0046                       l2515 0026                       l2531 005A  
                     l2507 0017                       l5011 03B5                       l5003 0331  
                     l3421 0166                       l3413 014B                       l3405 012E  
                     l3341 0051                       l3333 003E                       l3317 0017  
                     l3325 0027                       l3309 0007                       l4301 01A3  
                     l4221 031D                       l4213 0306                       l4205 02C3  
                     l4141 0191                       l4125 015C                       l4133 0175  
                     l4117 0106                       l4109 00EF                       l4061 004D  
                     l4053 0034                       l4045 001C                       l4037 0000  
                     l3261 003A                       l3253 002B                       l3245 0000  
                     l4029 002A                       l2533 005F                       l2525 004C  
                     l2517 002D                       l2509 001B                       l5021 04BE  
                     l5013 0410                       l5005 0338                       l5101 0033  
                     l3431 01A4                       l3423 016A                       l3407 0132  
                     l3351 0074                       l3343 0052                       l3335 003F  
                     l3327 002F                       l3319 001C                       l4311 0250  
                     l4303 01C0                       l4231 0000                       l4223 0321  
                     l4215 030B                       l4207 02D3                       l4151 01C3  
                     l4143 01AA                       l4135 0181                       l4127 0162  
                     l4119 0123                       l4071 0068                       l4063 004E  
                     l4047 0023                       l4055 0036                       l4039 0009  
                     l3255 002C                       l3247 000D                       l2535 0064  
                     l2527 004D                       l2519 0031                       l5031 04DC  
                     l5023 04C5                       l5015 044F                       l5007 033C  
                     l5111 005F                       l5103 003E                       l3441 01CA  
                     l3433 01B3                       l3425 0183                       l3417 0153  
                     l3409 0133                       l3361 008B                       l3337 0044  
                     l3345 0054                       l3329 0034                       l4321 029C  
                     l4313 0278                       l4305 01ED                       l4241 0017  
                     l4233 0007                       l4401 000D                       l4225 0325  
                     l4217 0315                       l4209 02D7                       l4161 01F5  
                     l4153 01C9                       l4145 01AE                       l4137 0186  
                     l4129 0165                       l4081 008D                       l4073 006D  
                     l4065 0058                       l4057 0040                       l4049 0028  
                     l3257 0034                       l2529 0054                       l5041 0514  
                     l5033 04E4                       l5025 04C9                       l5017 045B  
                     l5009 035A                       l5113 007D                       l5105 004A  
                     l3443 01CC                       l3435 01B7                       l3419 0158  
                     l3427 0189                       l3371 00B7                       l3363 009D  
                     l3347 0064                       l3355 007D                       l3339 0049  
                     l4331 02B1                       l4323 029D                       l4315 0281  
                     l4307 01FD                       l4251 0033                       l4243 001C  
                     l4235 000D                       l4403 0014                       l4227 0336  
                     l4219 031C                       l4171 0268                       l4163 0233  
                     l4155 01CC                       l4147 01B4                       l4091 00B1  
                     l4083 0091                       l4075 0077                       l4067 005E  
                     l4059 0047                       l3275 005B                       l3267 0042  
                     l3259 0036                       l5051 0540                       l5043 051C  
                     l5035 04F5                       l5027 04CF                       l5019 04B6  
                     l5115 0087                       l5107 0055                       l3437 01BF  
                     l3429 0196                       l3373 00BC                       l3381 00DC  
                     l3365 00A5                       l3357 0082                       l3349 0070  
                     l4341 02D6                       l4333 02B5                       l4325 02A6  
                     l4317 028F                       l4309 022A                       l4261 0048  
                     l4253 0039                       l4245 0024                       l4237 0011  
                     l4229 033C                       l4181 0289                       l4173 026F  
                     l4165 023B                       l4157 01D6                       l4149 01C1  
                     l4093 00B9                       l4085 0099                       l4077 0079  
                     l4069 0061                       l3277 006B                       l3269 0054  
                     l4501 0070                       l2581 000A                       l4413 0118  
                     l4405 0003                       l5061 0568                       l5053 0549  
                     l5045 0528                       l5037 04FC                       l5029 04D6  
                     l5109 005A                       l3439 01C6                       l3391 0107  
                     l3383 00EE                       l3375 00CE                       l3367 00AD  
                     l4351 0314                       l4343 02E4                       l4335 02C9  
                     l4319 0298                       l4327 02AC                       l4271 0064  
                     l4263 0050                       l4255 003D                       l4247 0026  
                     l4239 0012                       l4183 0292                       l4191 029E  
                     l4167 0240                       l4159 01DD                       l4095 00BF  
                     l4087 00A1                       l4079 007B                       l3279 0070  
                     l4503 0071                       l2591 002D                       l2583 000D  
                     l4415 011E                       l4407 0009                       l2495 0000  
                     l4423 0003                       l5071 0591                       l5063 056E  
                     l5055 054D                       l5047 052E                       l5039 050B  
                     l3393 010F                       l3385 00EF                       l3377 00D2  
                     l3369 00B5                       l4361 0348                       l4353 031F  
                     l4345 02E8                       l4329 02B0                       l4281 00A7  
                     l4265 0052                       l4257 003E                       l4249 002E  
                     l4185 0295                       l4177 027A                       l4169 0251  
                     l4193 02A3                       l4097 00C7                       l4089 00A9  
                     l4601 0026                       l4521 00A4                       l4513 008B  
                     l4505 0079                       l2593 0033                       l2585 0014  
                     l2577 0000                       l2497 0003                       l4441 0189  
                     l4425 0007                       l5065 0575                       l5057 0558  
                     l5049 0532                       l4371 0000                       l3395 0111  
                     l3387 00FD                       l3379 00D3                       l4363 034C  
                     l4355 032E                       l4347 0301                       l4339 02D1  
                     l4291 0130                       l4283 00C3                       l4275 006D  
                     l4267 005A                       l4259 0043                       l4195 02A6  
                     l4187 0297                       l4179 0283                       l4099 00CD  
                     l4611 0059                       l4603 002F                       l4523 00B4  
                     l4507 0083                       l4515 009D                       l2595 0034  
                     l2587 0018                       l2579 0004                       l4419 01C9  
                     l2499 0007                       l4435 00FA                       l4427 0009  
                     l5067 0579                       l5059 0564                       l5171 00F9  
                     l5075 059B                       l5091 0008                       l5173 0017  
                     l4381 0000                       l3397 011A                       l3389 0101  
                     l4365 034D                       l4357 0338                       l4349 0307  
                     l4293 0140                       l4285 00EF                       l4277 007D  
                     l4269 005F                       l4701 004E                       l4621 0032  
                     l4197 02AA                       l4189 029C                       l4605 0041  
                     l4613 005F                       l4541 002B                       l4533 0016  
                     l2597 003B                       l2589 001C                       l4453 02A7  
                     l4437 0101                       l4429 0010                       l4445 01B6  
                     l5069 0585                       l5077 05AF                       l5093 000D  
                     l4375 0010                       l3399 011E                       l4367 0358  
                     l4359 033A                       l4295 015D                       l4287 010B  
                     l4279 008A                       l4711 007F                       l4703 0052  
                     l4391 000D                       l4623 004C                       l4631 0016  
                     l4199 02B0                       l4607 004F                       l4551 0062  
                     l4543 003C                       l4527 0000                       l2599 0041  
                     l4471 0012                       l4463 0003                       l4455 02AE  
                     l4447 01BD                       l5095 0012                       l5087 0000  
                     l4297 016D                       l4289 0127                       l4721 00B2  
                     l4713 0089                       l4705 0060                       l4801 001A  
                     l4393 0018                       l4385 0003                       l4625 004E  
                     l4617 0000                       l4641 0066                       l4633 0032  
                     l4609 0050                       l4553 0070                       l4545 003E  
                     l4529 000D                       l4481 001C                       l4465 0004  
                     l5097 001C                       l5089 0005                       l4299 018A  
                     l4723 00B3                       l4715 0093                       l4707 0070  
                     l4803 002B                       l4811 000E                       l4387 0004  
                     l4395 0003                       l4731 0005                       l4619 0016  
                     l4643 00A0                       l4635 003A                       l4651 000A  
                     l4555 0071                       l4547 0047                       l4539 0023  
                     l4491 0044                       l4475 0000                       l4467 000A  
                     l4459 0336                       l5099 0027                       l4717 00A9  
                     l4709 007B                       l4805 0084                       l4821 002C  
                     l4813 000F                       l4389 000A                       l4397 0004  
                     l4741 0020                       l4733 0015                       l4645 00A2  
                     l4637 003E                       l4629 0000                       l4653 000C  
                     l4661 000D                       l4581 0004                       l4573 00A5  
                     l4565 008C                       l4557 007A                       l4549 0050  
                     l4493 0046                       l4477 0013                       l4469 0010  
                     l4901 020F                       l4719 00AE                       l4823 0085  
                     l4815 0010                       l4807 0000                       l4399 000A  
                     l4751 0025                       l4743 0021                       l4735 0016  
                     l4727 0000                       l4639 0062                       l4671 0047  
                     l4663 001A                       l4583 0008                       l4575 00B5  
                     l4559 0084                       l4567 009E                       l4495 004F  
                     l4487 002F                       l4911 02AF                       l4903 0215  
                     l4831 0017                       l3961 0003                       l4817 0017  
                     l4809 000B                       l4761 0010                       l4753 0028  
                     l4745 0022                       l4737 001D                       l4729 0004  
                     l4649 0000                       l4593 0000                       l4665 001E  
                     l4673 004D                       l4657 0000                       l4585 0015  
                     l4497 0058                       l4489 0035                       l4921 0000  
                     l4913 02D8                       l4905 0234                       l4841 0057  
                     l4833 001C                       l4825 0003                       l3971 0024  
                     l3963 0005                       l4691 002C                       l4683 0003  
                     l4819 001B                       l4763 0020                       l4771 0008  
                     l4755 0029                       l4747 0023                       l4739 001F  
                     l4595 0012                       l4667 0030                       l4659 000A  
                     l4587 001C                       l4579 0000                       l4499 0066  
                     l4931 0091                       l4923 0029                       l4907 027F  
                     l4915 02E0                       l4851 008D                       l4843 006A  
                     l4835 0020                       l4827 000A                       l3965 000C  
                     l4685 0008                       l4765 0026                       l4757 0000  
                     l4773 000D                       l4781 0000                       l4749 0024  
                     l4677 0000                       l4597 0015                       l4669 003E  
                     l4589 0022                       l3981 0007                       l4933 0099  
                     l4925 0050                       l4941 010B                       l4917 02EF  
                     l4909 02A6                       l4861 00CE                       l4853 0091  
                     l4845 006E                       l4837 0030                       l4829 0010  
                     l3967 0010                       l4695 0035                       l4687 000C  
                     l4791 000A                       l3975 0003                       l4767 0000  
                     l4759 0006                       l4775 0014                       l4783 0005  
                     l4679 0004                       l4599 0022                       l3991 001D  
                     l3983 000C                       l4943 0140                       l4935 00B7  
                     l4927 005F                       l4919 0336                       l4871 0101  
                     l4855 0094                       l4863 00DF                       l4839 0034  
                     l4847 007E                       l3969 001F                       l4697 003A  
                     l4689 001C                       l4793 000D                       l4777 001A  
                     l4769 0003                       l4785 0021                       l3993 0020  
                     l3985 000E                       l3977 0000                       l4961 01EB  
                     l4953 018F                       l4945 018B                       l4929 0088  
                     l4881 0129                       l4873 010F                       l4865 00E1  
                     l4857 00B7                       l4849 008C                       l4699 0047  
                     l4795 000E                       l4779 001F                       l4787 0029  
                     l3995 0027                       l3987 0012                       l3979 0003  
                     l4963 01F1                       l4947 018D                       l4939 0102  
                     l4891 01B4                       l4883 0150                       l4875 0113  
                     l4859 00CA                       l4797 000F                       l4789 0000  
                     l3997 002B                       l3989 0017                       l4981 0239  
                     l4965 01FD                       l4973 0212                       l4957 01C6  
                     l4893 01BF                       l4885 0185                       l4877 0117  
                     l4869 00E5                       l4799 0016                       l3999 002F  
                     l4991 02F4                       l4983 0294                       l4975 021F  
                     l4967 0204                       l4959 01D0                       l4895 01C5  
                     l4887 0189                       l4879 0125                       l4993 02FA  
                     l4985 02D3                       l4977 022D                       l4969 020D  
                     l4897 01E8                       l4889 018D                       l4995 0307  
                     l4987 02E7                       l4979 0234                       l4899 020B  
                     l4997 0316                       l4989 02F0                       l4999 031D  
                     STR_1 00AE                       STR_2 00B2                       STR_3 00B6  
                     STR_4 00A0                       u3200 0035                       u3201 0034  
                     u3220 0046                       u3221 0045                       u3215 0036  
                     u3240 005A                       u3160 0007                       u3241 0059  
                     u3225 0042                       u3161 0006                       u3410 0041  
                     u3250 005F                       u3170 0012                       u3411 0040  
                     u3251 005E                       u3235 004E                       u3171 0011  
                     u3180 0023                       u3405 0035                       u3181 0022  
                     u5110 0053                       u3350 000A                       u5111 0052  
                     u3351 0009                       u5120 005A                       u5121 0059  
                     u5105 0043                       u3370 001C                       u3371 001B  
                     u3195 0027                       u5300 00BC                       u5220 0011  
                     u5140 006B                       u5060 000D                       u5301 00BB  
                     u5221 0010                       u5141 006A                       u5061 000C  
                     u3365 000E                       u5230 0017                       u5150 0070  
                     u5070 0024                       u3390 002D                       u5231 0016  
                     u5151 006F                       u5135 005D                       u3391 002C  
                     u5240 001C                       u5080 003A                       u5241 001B  
                     u7001 017C                       u5081 0039                       u3385 001D  
                     u5410 0132                       u5330 00D2                       u5250 003E  
                     u7002 0183                       u5090 0041                       u5411 0131  
                     u5331 00D1                       u5315 00BE                       u5251 003D  
                     u7003 018A                       u5091 0040                       u5075 001F  
                     u3395 0029                       u5500 01CA                       u5420 0137  
                     u5260 0044                       u6220 0010                       u6300 0039  
                     u5501 01C9                       u5421 0136                       u5405 0121  
                     u5325 00C7                       u5261 0043                       u6221 000F  
                     u7021 01B2                       u6301 0038                       u5430 014B  
                     u5350 00EE                       u5270 0049                       u7110 029C  
                     u7022 01B9                       u5431 014A                       u5351 00ED  
                     u5271 0048                       u7111 029B                       u7031 01DF  
                     u7023 01C0                       u7015 018C                       u5440 0152  
                     u5360 0107                       u5280 0064                       u6240 0024  
                     u7200 0314                       u7032 01E6                       u6400 0019  
                     u8000 001E                       u6320 004C                       u5441 0151  
                     u5361 0106                       u5345 00D5                       u5281 0063  
                     u6241 0023                       u7201 0313                       u7105 0291  
                     u7041 020C                       u7033 01ED                       u6401 0018  
                     u8001 001D                       u6321 004B                       u6305 0035  
                     u5450 0158                       u5370 010F                       u5290 0082  
                     u7210 032E                       u7130 02B0                       u7050 0236  
                     u7042 0213                       u6410 0023                       u8010 0030  
                     u6330 0051                       u6250 0007                       u5451 0157  
                     u5371 010E                       u5355 00EA                       u5291 0081  
                     u6235 0017                       u7211 032D                       u7131 02AF  
                     u7043 021A                       u6411 0022                       u8011 002F  
                     u6331 0050                       u6315 0040                       u6251 0006  
                     u5460 016A                       u7220 034C                       u7140 02B5  
                     u8100 006F                       u6500 012E                       u6420 0028  
                     u6340 0008                       u6260 0012                       _RCIF 0065  
                     u5461 0169                       u7221 034B                       u7205 0310  
                     u7141 02B4                       u7125 029F                       u7061 0242  
                     u8101 006E                       u6501 012C                       u6421 0027  
                     u6341 0007                       u6261 0011                       u5470 0179  
                     u5390 011E                       u7150 02C9                       u7070 025E  
                     u7062 0249                       u6510 012F                       u6430 004D  
                     u8030 004D                       u7230 0009                       u6270 001D  
                     u7310 0007                       u5391 011D                       u7215 032A  
                     u7151 02C8                       u7063 0250                       u7055 0231  
                     u6431 004C                       u8031 004C                       u8015 002C  
                     u7231 0008                       u6271 001C                       u7311 0006  
                     u5480 0196                       u7160 02D0                       u8120 007F  
                     u8040 0008                       u8200 000F                       u6600 01B4  
                     u6520 014D                       u6440 005E                       u6360 001A  
                     u7400 01BD                       u7320 0010                       u5481 0195  
                     u5385 0113                       u7161 02CF                       u7081 026A  
                     u8121 007E                       u8041 0007                       u6601 01B3  
                     u6521 014C                       u6441 005D                       u8025 003F  
                     u6361 0019                       u7305 01D4                       u7401 01BC  
                     u7321 000F                       u5490 01B3                       u7170 02D6  
                     u7082 0271                       u8130 0085                       u8050 000C  
                     u8210 0033                       u6610 01C9                       u6530 0162  
                     u6450 0068                       u6370 0024                       u6290 002F  
                     u5491 01B2                       u5475 0174                       u7171 02D5  
                     u7083 0278                       u7075 0259                       u8131 0084  
                     u8115 0074                       u8051 000B                       u6611 01C8  
                     u6531 0161                       u6451 0067                       u6371 0023  
                     u6355 000C                       u6291 002E                       u7180 02E8  
                     u8140 0089                       u8060 002C                       u8220 0045  
                     u6700 0289                       u6460 006D                       u7500 0013  
                     u8300 010F                       i1l93 0025                       u5485 0192  
                     u7181 02E7                       u8141 0088                       u8061 002B  
                     u8221 0044                       u6701 0288                       u6461 006C  
                     u7501 0012                       u7245 0026                       u6285 0021  
                     u8301 010C                       _VAL1 0004                       u7190 02F7  
                     u8150 009E                       u8230 0089                       u6710 0292  
                     u6630 01F5                       u6550 017D                       u6470 008D  
                     u7510 002D                       u6390 0037                       u7270 011E  
                     u8310 0113                       _VAL2 0000                       u5495 01AF  
                     u7095 027A                       u8231 0088                       u6711 0291  
                     u6631 01F4                       u6551 017C                       u6471 008C  
                     u7511 002C                       u6391 0036                       u6375 0020  
                     u7271 011D                       u7255 0082                       u7415 01DF  
                     u7335 0032                       u8311 0112                       u8160 00AE  
                     u8080 004D                       u8240 008A                       u6800 02F7  
                     u6720 029C                       u6560 0181                       u6480 0091  
                     u7600 00A3                       u7440 02AE                       u7360 0101  
                     u8400 0050                       u8320 0150                       u8161 00AD  
                     u8081 004C                       u8241 0089                       u6801 02F6  
                     u6721 029B                       u6641 020C                       u6633 01F1  
                     u6625 01CF                       u6561 0180                       u6545 0168  
                     u6481 0090                       u7601 00A2                       u6385 002B  
                     u7265 00D7                       u7441 02AD                       u7425 021B  
                     u7361 0100                       u7345 006E                       u8401 004F  
                     u8321 014F                       u8170 00B2                       u6810 0306  
                     u6730 02A3                       u6650 0220                       u6642 020D  
                     u6570 0186                       u6490 0123                       u7530 0066  
                     u8410 005F                       u8330 01B4                       u8250 0010  
                     u7195 02F2                       u8171 00B1                       u8155 0099  
                     u8075 003F                       u6811 0305                       u6731 02A2  
                     u6651 0221                       u6643 0212                       u6571 0185  
                     u6491 0122                       u7531 0065                       u7435 0266  
                     u7355 00B9                       u8411 005E                       u8331 01B3  
                     u8251 000F                       u6900 0043                       u8180 0008  
                     u6820 030B                       u6740 02AA                       u6660 0240  
                     u6652 0226                       u6644 0213                       u7700 008B  
                     u7620 00B4                       u8420 0088                       u8340 020F  
                     u8260 0030                       u6901 0042                       u8181 0007  
                     u6821 030A                       u6741 02A9                       u6661 023F  
                     u6653 0227                       u6645 0218                       u6581 019C  
                     u7701 008A                       u7621 00B3                       u7525 0051  
                     u7285 013B                       u8421 0087                       u8341 020E  
                     u8261 002F                       u6910 0048                       u8190 001A  
                     u6830 031C                       u6750 02B0                       u6670 0268  
                     u6646 0219                       u6590 01AE                       u6582 01A3  
                     u7630 000D                       u7550 007F                       u8510 02E6  
                     u8350 02A6                       u8270 007E                       u6911 0047  
                     u8095 0061                       u8191 0019                       u6831 031B  
                     u6751 02AF                       u6671 0267                       u6591 01AD  
                     u6583 01AA                       u6495 011F                       u7631 000C  
                     u7615 00A6                       u7551 007E                       u7535 0062  
                     u7295 0188                       u7455 02C1                       u7375 0114  
                     u8511 02E5                       u8415 005B                       u8351 02A5  
                     u8271 007D                       u6920 005F                       u6840 0321  
                     u6760 02BB                       u6680 026F                       u7800 0012  
                     u7720 009D                       u7640 0021                       u7560 0083  
                     u7480 000A                       u8600 04E4                       u8520 0307  
                     u8440 01C5                       u8360 02D8                       u8280 008C  
                     u6921 005E                       u6841 0320                       u6761 02BA  
                     u6681 026E                       u7801 0011                       u7721 009C  
                     u7641 0020                       u7561 0082                       u7545 0072  
                     u7481 0009                       u7465 02FD                       u7385 0150  
                     u8601 04E3                       u8521 0306                       u8505 023C  
                     u8441 01C4                       u8361 02D7                       u8281 008B  
                     u6930 0064                       u6850 033C                       u6770 02C3  
                     u7730 00A4                       u7570 008A                       u7490 0010  
                     u8610 04F5                       u8530 0316                       u8450 01D0  
                     u8370 02EF                       u8290 00DE                       u6931 0063  
                     u6851 033B                       u6771 02C2                       u7731 00A3  
                     u7715 008D                       u7571 0089                       u7491 000F  
                     u7475 0339                       u7395 018C                       u8611 04F4  
                     u8531 0315                       u8451 01CF                       u8435 0192  
                     u8371 02EE                       u8291 00DD                       u6860 0011  
                     u7900 0016                       u6780 02D7                       u7820 0026  
                     u7660 0062                       u8700 0591                       u8620 050B  
                     u8540 0331                       u8460 01EB                       u8380 0000  
                     u6941 00B5                       u6861 0010                       u7901 0015  
                     u6781 02D6                       u7821 0025                       u7661 0061  
                     u8701 0590                       u8621 050A                       u8541 0330  
                     u8525 0303                       u8461 01EA                       u8445 01C1  
                     u8381 0346                       u6942 00BC                       u6870 0017  
                     u7910 0032                       u6790 02E6                       u7750 00B5  
                     u7590 009C                       u8710 05AF                       u8630 051C  
                     u8470 01FD                       u8390 0029                       u6951 00D1  
                     u6943 00C3                       u6871 0016                       u7911 0031  
                     u6695 027C                       u7815 0017                       u7751 00B4  
                     u7655 0049                       u7591 009B                       u8711 05AC  
                     u8631 051B                       u8615 04F1                       u8535 0312  
                     u8471 01FC                       u8391 0028                       u8375 02EB  
                     u6952 00D8                       u6880 001C                       u7920 003E  
                     u7840 0041                       u7760 0008                       u7680 0080  
                     u8640 0528                       u8480 021F                       u6961 00FD  
                     u6953 00DF                       u6881 001B                       u7921 003D  
                     u7841 0040                       u7761 0007                       u7745 00A7  
                     u7681 007F                       u7665 005E                       u7585 008C  
                     u8641 0527                       u8625 0507                       u8481 021E  
                     u8385 0341                       u6962 0104                       u6890 003D  
                     u7690 0084                       u8650 0532                       u8570 04BD  
                     u8490 022D                       u6971 0119                       u6963 010B  
                     u6891 003C                       u7931 004D                       u6795 02E1  
                     u7835 0028                       u7691 0083                       u7675 0073  
                     u8651 0531                       u8571 04BC                       u8555 03B8  
                     u8491 022C                       u6972 0120                       u7940 0066  
                     u7932 004E                       u7860 005F                       u8660 0540  
                     u8580 04D5                       u6973 0127                       u7941 0065  
                     u7933 0053                       u7861 005E                       u7845 003D  
                     u8661 053F                       u8581 04D4                       u8565 045E  
                     u8485 021B                       u7870 0016                       u7934 0054  
                     u7790 0022                       u8670 0558                       u8590 04DC  
                     u6991 014F                       u8727 0011                       u7871 0015  
                     u7951 0075                       u7935 0059                       u7855 0051  
                     u7791 0021                       u7775 000F                       u8671 0557  
                     u8591 04DB                       u6992 0156                       u7880 0032  
                     u7960 00A0                       u7952 0076                       u7936 005A  
                     u8680 056E                       u6993 015D                       u6985 0129  
                     u8737 000C                       u7881 0031                       u7961 009F  
                     u7953 007B                       u7785 0016                       u8681 056D  
                     u8665 053C                       u7890 004C                       u7954 007C  
                     u7970 000A                       u8690 0585                       u8747 001C  
                     u7891 004B                       u7955 0081                       u7971 0009  
                     u8691 0584                       u8675 0554                       u7956 0082  
                     u7980 000A                       u8757 002C                       u7965 009C  
                     u7981 0009                       u8767 0013                       u7895 0048  
                     u8777 0014                       u8787 0013                       u7995 000F  
                     _TRMT 04C1                       _data 000A          ?_Lcd_Write_String 0003  
                     _cont 0002                       _main 0000                       btemp 007E  
                     start 0000*        ??_Lcd_Write_String 0005            ___fldiv@new_exp 003C  
             _sprintf$1106 001A            __end_of_Lcd_Cmd 001C                      ??_ISR 0000  
            ___fltol@sign1 0046            __end_of___fladd 0340                      ?_main 0000  
          __end_of___fldiv 01DD            __end_of___awdiv 0069            __end_of___flneg 000D  
          __end_of___awmod 005B            __end_of___flmul 0361            __end_of___flsub 0050  
          __end_of___fltol 007C                      _ANSEL 0188            __end_of___lldiv 0068  
          ___awdiv@divisor 0007            __end_of___llmod 0056            __end_of___lwdiv 0046  
          __end_of___lwmod 003C            ___awdiv@counter 000C                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019            __end_of_dpowers 00A0  
                    _scale 0000            __end_of_isdigit 0014                      _setup 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05B4             ADC_val@ADRES_H 0000             ADC_val@ADRES_L 0000  
          ??_USART_LECTURA 0000           __end_of_Lcd_Init 0050           __end_of_Lcd_Port 0006  
          __initialization 0000               __end_of_main 0096                  ??_ADC_CH0 0044  
                ??_ADC_CH1 0044                  ??_ADC_val 0001                     ??_main 004E  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD                     _ADCON1 009F  
         ___llmod@dividend 0004                     ?_scale 002A                     _ADRESH 001E  
                   _ADRESL 009E                     _ADC_ch 0000           ___awdiv@dividend 0009  
                   ?_setup 0000                     _ANSELH 0189                     i1l3861 0014  
                   i1l3853 0000                     i1l3863 001A                     i1l3855 0004  
                   i1l3865 0020                     i1l3857 0005                     i1l3859 000E  
                   _INTCON 000B                     u620_20 0014                     u620_21 0013  
                   u621_20 0020                     u621_21 001F                     u619_20 0004  
                   u619_21 0003                  ??_Lcd_Cmd 0001    __size_of_Lcd_Write_Char 0018  
         __end_of___xxtofl 00BC           __end_of__powers_ 0044                     ___flge 0000  
                   ___fleq 0000                  ??___fladd 0046                     ___wmul 0000  
                ??___fldiv 0032                  ??___awdiv 000B                  ??___flneg 0004  
                ??___awmod 0004                  ??___flmul 0018                  ??___flsub 004E  
                ??___fltol 0041                  ??___lldiv 0008                  ??___llmod 0008  
                ??___lwdiv 000A                  ??___lwmod 0004                     _fround 0000  
         ___awdiv@quotient 000E            ___awmod@divisor 0000            ___awmod@counter 0005  
                ??_isdigit 0000         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 0015            Lcd_Set_Cursor@a 0006            Lcd_Set_Cursor@b 0004  
               ___flge@ff1 0000                 ___flge@ff2 0004               ___xxtofl@arg 000A  
             ___xxtofl@exp 0009               ___xxtofl@val 0000                 ___fleq@ff1 0000  
               ___fleq@ff2 0004    __end_of__initialization 000E                 ___flneg@f1 0000  
        __end_of_Lcd_Clear 000D                 ___fltol@f1 003D             __pcstackCOMMON 0000  
            __end_of_scale 0363              __end_of_setup 002B             _Lcd_Set_Cursor 0000  
               __div_to_l_ 0000                  ?_Lcd_Init 0000                  ?_Lcd_Port 0000  
          __div_to_l_@exp1 000E            __div_to_l_@cntr 000D                    ??_scale 002E  
                  ?_ADC_ch 0000            __div_to_l_@quot 0009               sprintf@width 0025  
                  ??_setup 0000                 __pbssBANK1 0000              __div_to_l_@f1 0000  
            __div_to_l_@f2 0004          __end_of__Umul8_16 0029                 __pmaintext 0000  
                  ?___flge 0000                    ?___fleq 0000                    ?___wmul 0000  
               __pintentry 0000                    _ADC_CH0 0000                    _ADC_CH1 0000  
                  ?_fround 002A  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0026  
                  _ADC_val 0000                  ?___xxtofl 0000                 ??_Lcd_Init 0004  
               ??_Lcd_Port 0000            __size_of_ADC_ch 0020                 __stringtab 0000  
           _Lcd_Write_Char 0000                    _Lcd_Cmd 0000          __end_of__npowers_ 0078  
               _scale$1105 0038            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 0000                    ___fldiv 0000                    ___awdiv 0000  
                  ___flneg 0000                    ___awmod 0000                    ___flmul 0000  
                  ___flsub 0000                    ___fltol 0000                    ___lldiv 0000  
          __size_of___wmul 0027                    ___llmod 0000                    ___lwdiv 0000  
                  ___lwmod 0000                    _channel 0008            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0004                    __ptext1 0000                    __ptext2 0000  
                  __ptext3 0000                    __ptext4 0000                    __ptext5 0000  
                  __ptext6 0000                    __ptext7 0000                    __ptext8 0000  
                  __ptext9 0000               __size_of_ISR 0032                ?__div_to_l_ 0000  
                  _dpowers 0078                    _isdigit 0000                 ??___xxtofl 0004  
         ___awmod@dividend 0002                    _sprintf 0000                    clrloop0 0001  
   __end_of_Lcd_Write_Char 0018       end_of_initialization 000E            ___lldiv@divisor 0000  
          ___lldiv@counter 000D                  _RCSTAbits 0018                  _VALOR_ADC 0000  
                  psplit$0 B0031                  Lcd_Port@a 0000             __tdiv_to_l_@f1 0000  
           __tdiv_to_l_@f2 0004              ??__tdiv_to_l_ 0008                ___fladd@grs 0003  
            ___xxtofl@sign 0008                ___fldiv@grs 003E                ___fldiv@rem 0037  
          ?_Lcd_Write_Char 0000          Lcd_Write_String@a 0003          Lcd_Write_String@i 0008  
           __end_of_ADC_ch 0020                ___flmul@grs 001F                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 0000             __end_of___flge 00A4  
           __end_of___fleq 0050             __end_of___wmul 0027           _Lcd_Write_String 0000  
        pnum$text1_split_1 0031             __end_of_fround 020D        start_initialization 0000  
              __end_of_ISR 0032        __end_of__tdiv_to_l_ 00BD                   ??_ADC_ch 0002  
        __size_of_Lcd_Init 0050          __size_of_Lcd_Port 0006            ___llmod@divisor 0000  
          ___llmod@counter 0009                 ?_Lcd_Clear 0000                   ??___flge 0008  
                 ??___fleq 0008                   ??___wmul 0004                  __Umul8_16 0000  
                 ?_ADC_CH0 0000                   ?_ADC_CH1 0000            Lcd_Write_Char@a 0002  
                 ??_fround 002E                   ?_ADC_val 0000              sprintf@tmpval 0027  
                ___fladd@a 0042                  ___fladd@b 003E                 fround@prec 003D  
                ___fldiv@a 002A                  ___fldiv@b 002E                  ___flmul@a 0014  
                ___flmul@b 0010                __pbssCOMMON 0000                  ___flsub@a 0004  
                ___flsub@b 0008                  ___latbits 0002              __pcstackBANK0 0000  
            __pcstackBANK1 0000          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0000  
              sprintf@flag 0023                sprintf@eexp 002B                sprintf@fval 002D  
              sprintf@prec 0032           ___lwdiv@dividend 0008           ??_Lcd_Set_Cursor 0005  
                 ?___fladd 003E                   ?___fldiv 002A                   ?___awdiv 0007  
                 ?___flneg 0000                   ?___awmod 0000                   ?___flmul 0010  
                 ?___flsub 0004                   ?___fltol 003D                   ?___lldiv 0000  
                 ?___llmod 0000                  __npowers_ 0044                 ?__Umul8_16 0000  
                 ?___lwdiv 0006                   ?___lwmod 0000                  __pstrings 0000  
              __tdiv_to_l_ 0000               ??__div_to_l_ 0008                   ?_isdigit 0000  
                 _ADC_res1 0004                   _ADC_res2 0003           ___lwdiv@quotient 000B  
                 ?_sprintf 000C             __size_of_scale 0363             __size_of_setup 002B  
        interrupt_function 0000             ___wmul@product 0004                  clear_ram0 0000  
                 _PIE1bits 008C                   Lcd_Cmd@a 0003                   _PIR1bits 000C  
       __end_of__div_to_l_ 00BE                ??_Lcd_Clear 0004           __size_of_ADC_CH0 008A  
         __size_of_ADC_CH1 008B                 _ADCON0bits 001F                __stringbase 000F  
        ___wmul@multiplier 0000           __size_of_ADC_val 0008           ??_Lcd_Write_Char 0001  
                 _Lcd_Init 0000                   _Lcd_Port 0000   __end_of_Lcd_Write_String 0046  
         __size_of_Lcd_Cmd 001C                ??__Umul8_16 0002           __size_of___fladd 0340  
         __size_of___fldiv 01DD           __size_of___awdiv 0069           __size_of___flneg 000D  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C                _fround$1103 0039  
              _fround$1104 0035         __end_of__stringtab 0010                _isdigit$911 0000  
               sprintf@val 001F                   ___xxtofl 0000           __size_of_isdigit 0014  
          ___lwdiv@divisor 0006            ___lwdiv@counter 000D                   __ptext10 0000  
                 __ptext11 0000                   __ptext20 0000                   __ptext12 0000  
                 __ptext21 0000                   __ptext13 0000                   __ptext30 0000  
                 __ptext22 0000                   __ptext14 0000                   __ptext31 0000  
                 __ptext23 0000                   __ptext15 0000                   __ptext32 0000  
                 __ptext24 0000                   __ptext16 0000                   __ptext33 0000  
                 __ptext25 0000                   __ptext17 0000                   __ptext34 0000  
                 __ptext26 0000                   __ptext18 0000                   __ptext35 0000  
                 __ptext27 0000                   __ptext19 0000                   __ptext36 0000  
                 __ptext28 0000                   __ptext29 0000                   __powers_ 0010  
         __size_of_sprintf 0000              __size_of_main 0096                  pnum$text1 000B  
                 isdigit@c 0001                   scale@scl 003C              ADC_ch@channel 0000  
                 intlevel1 0000*                 sprintf@ap 001E           __tdiv_to_l_@exp1 0011  
         __tdiv_to_l_@cntr 0010                  sprintf@sp 0031           __tdiv_to_l_@quot 000C  
         ___lwmod@dividend 0002           ___lldiv@dividend 0004                  stringcode 000A  
            _USART_LECTURA 0000*        Lcd_Set_Cursor@temp 0007               ?__tdiv_to_l_ 0000  
   __Umul8_16@multiplicand 0000                 _OPTION_REG 0081                   sprintf@c 0034  
                 sprintf@f 000C           ___lldiv@quotient 0009            ___lwmod@divisor 0000  
          ___lwmod@counter 0005                   stringdir 000A                   stringtab 0000  
            ___fladd@signs 0000               ___fladd@aexp 0001               ___fladd@bexp 0002  
     __Umul8_16@multiplier 0008                 _USART_LEER 0001          __Umul8_16@product 0004  
           ?_USART_LECTURA 0000  
