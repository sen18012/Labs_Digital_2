

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 12:16:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397                           
   398                           	psect	strings
   399  1000                     __pstrings:
   400  1000                     stringtab:
   401  1000                     __stringtab:
   402                           
   403                           ;	String table - string pointers are 1 byte each
   404  1000  1BFF               	btfsc	btemp+1,7
   405  1001  280A               	ljmp	stringcode
   406  1002  1383               	bcf	3,7
   407  1003  187F               	btfsc	btemp+1,0
   408  1004  1783               	bsf	3,7
   409  1005  0800               	movf	0,w
   410  1006  0A84               	incf	4,f
   411  1007  1903               	skipnz
   412  1008  0AFF               	incf	btemp+1,f
   413  1009  0008               	return
   414  100A                     stringcode:
   415  100A                     stringdir:
   416  100A  3010               	movlw	high stringdir
   417  100B  008A               	movwf	10
   418  100C  0804               	movf	4,w
   419  100D  0A84               	incf	4,f
   420  100E  0782               	addwf	2,f
   421  100F                     __stringbase:
   422  100F  3400               	retlw	0
   423  1010                     __end_of__stringtab:
   424  1010                     __powers_:
   425  1010  3400               	retlw	0
   426  1011  3400               	retlw	0
   427  1012  3480               	retlw	128
   428  1013  343F               	retlw	63
   429  1014  3400               	retlw	0
   430  1015  3400               	retlw	0
   431  1016  3420               	retlw	32
   432  1017  3441               	retlw	65
   433  1018  3400               	retlw	0
   434  1019  3400               	retlw	0
   435  101A  34C8               	retlw	200
   436  101B  3442               	retlw	66
   437  101C  3400               	retlw	0
   438  101D  3400               	retlw	0
   439  101E  347A               	retlw	122
   440  101F  3444               	retlw	68
   441  1020  3400               	retlw	0
   442  1021  3440               	retlw	64
   443  1022  341C               	retlw	28
   444  1023  3446               	retlw	70
   445  1024  3400               	retlw	0
   446  1025  3450               	retlw	80
   447  1026  34C3               	retlw	195
   448  1027  3447               	retlw	71
   449  1028  3400               	retlw	0
   450  1029  3424               	retlw	36
   451  102A  3474               	retlw	116
   452  102B  3449               	retlw	73
   453  102C  3480               	retlw	128
   454  102D  3496               	retlw	150
   455  102E  3418               	retlw	24
   456  102F  344B               	retlw	75
   457  1030  3420               	retlw	32
   458  1031  34BC               	retlw	188
   459  1032  34BE               	retlw	190
   460  1033  344C               	retlw	76
   461  1034  3428               	retlw	40
   462  1035  346B               	retlw	107
   463  1036  346E               	retlw	110
   464  1037  344E               	retlw	78
   465  1038  34F9               	retlw	249
   466  1039  3402               	retlw	2
   467  103A  3415               	retlw	21
   468  103B  3450               	retlw	80
   469  103C  34EC               	retlw	236
   470  103D  3478               	retlw	120
   471  103E  34AD               	retlw	173
   472  103F  3460               	retlw	96
   473  1040  34CA               	retlw	202
   474  1041  34F2               	retlw	242
   475  1042  3449               	retlw	73
   476  1043  3471               	retlw	113
   477  1044                     __end_of__powers_:
   478  1044                     __npowers_:
   479  1044  3400               	retlw	0
   480  1045  3400               	retlw	0
   481  1046  3480               	retlw	128
   482  1047  343F               	retlw	63
   483  1048  34CD               	retlw	205
   484  1049  34CC               	retlw	204
   485  104A  34CC               	retlw	204
   486  104B  343D               	retlw	61
   487  104C  340A               	retlw	10
   488  104D  34D7               	retlw	215
   489  104E  3423               	retlw	35
   490  104F  343C               	retlw	60
   491  1050  346F               	retlw	111
   492  1051  3412               	retlw	18
   493  1052  3483               	retlw	131
   494  1053  343A               	retlw	58
   495  1054  3417               	retlw	23
   496  1055  34B7               	retlw	183
   497  1056  34D1               	retlw	209
   498  1057  3438               	retlw	56
   499  1058  34AC               	retlw	172
   500  1059  34C5               	retlw	197
   501  105A  3427               	retlw	39
   502  105B  3437               	retlw	55
   503  105C  34BD               	retlw	189
   504  105D  3437               	retlw	55
   505  105E  3486               	retlw	134
   506  105F  3435               	retlw	53
   507  1060  3495               	retlw	149
   508  1061  34BF               	retlw	191
   509  1062  34D6               	retlw	214
   510  1063  3433               	retlw	51
   511  1064  3477               	retlw	119
   512  1065  34CC               	retlw	204
   513  1066  342B               	retlw	43
   514  1067  3432               	retlw	50
   515  1068  345F               	retlw	95
   516  1069  3470               	retlw	112
   517  106A  3489               	retlw	137
   518  106B  3430               	retlw	48
   519  106C  34FF               	retlw	255
   520  106D  34E6               	retlw	230
   521  106E  34DB               	retlw	219
   522  106F  342E               	retlw	46
   523  1070  3408               	retlw	8
   524  1071  34E5               	retlw	229
   525  1072  343C               	retlw	60
   526  1073  341E               	retlw	30
   527  1074  3460               	retlw	96
   528  1075  3442               	retlw	66
   529  1076  34A2               	retlw	162
   530  1077  340D               	retlw	13
   531  1078                     __end_of__npowers_:
   532  1078                     _dpowers:
   533  1078  3401               	retlw	1
   534  1079  3400               	retlw	0
   535  107A  3400               	retlw	0
   536  107B  3400               	retlw	0
   537  107C  340A               	retlw	10
   538  107D  3400               	retlw	0
   539  107E  3400               	retlw	0
   540  107F  3400               	retlw	0
   541  1080  3464               	retlw	100
   542  1081  3400               	retlw	0
   543  1082  3400               	retlw	0
   544  1083  3400               	retlw	0
   545  1084  34E8               	retlw	232
   546  1085  3403               	retlw	3
   547  1086  3400               	retlw	0
   548  1087  3400               	retlw	0
   549  1088  3410               	retlw	16
   550  1089  3427               	retlw	39
   551  108A  3400               	retlw	0
   552  108B  3400               	retlw	0
   553  108C  34A0               	retlw	160
   554  108D  3486               	retlw	134
   555  108E  3401               	retlw	1
   556  108F  3400               	retlw	0
   557  1090  3440               	retlw	64
   558  1091  3442               	retlw	66
   559  1092  340F               	retlw	15
   560  1093  3400               	retlw	0
   561  1094  3480               	retlw	128
   562  1095  3496               	retlw	150
   563  1096  3498               	retlw	152
   564  1097  3400               	retlw	0
   565  1098  3400               	retlw	0
   566  1099  34E1               	retlw	225
   567  109A  34F5               	retlw	245
   568  109B  3405               	retlw	5
   569  109C  3400               	retlw	0
   570  109D  34CA               	retlw	202
   571  109E  349A               	retlw	154
   572  109F  343B               	retlw	59
   573  10A0                     __end_of_dpowers:
   574  001E                     _ADRESH	set	30
   575  001F                     _ADCON0bits	set	31
   576  000B                     _INTCON	set	11
   577  000C                     _PIR1bits	set	12
   578  0009                     _PORTE	set	9
   579  0008                     _PORTD	set	8
   580  0007                     _PORTC	set	7
   581  0006                     _PORTB	set	6
   582  0005                     _PORTA	set	5
   583  0049                     _RE1	set	73
   584  0048                     _RE0	set	72
   585  009E                     _ADRESL	set	158
   586  0081                     _OPTION_REG	set	129
   587  008C                     _PIE1bits	set	140
   588  009F                     _ADCON1	set	159
   589  0089                     _TRISE	set	137
   590  0087                     _TRISC	set	135
   591  0086                     _TRISB	set	134
   592  0085                     _TRISA	set	133
   593  0088                     _TRISD	set	136
   594  0189                     _ANSELH	set	393
   595  0188                     _ANSEL	set	392
   596  10A0                     STR_4:
   597  10A0  3425               	retlw	37	;'%'
   598  10A1  3431               	retlw	49	;'1'
   599  10A2  342E               	retlw	46	;'.'
   600  10A3  3432               	retlw	50	;'2'
   601  10A4  3466               	retlw	102	;'f'
   602  10A5  3456               	retlw	86	;'V'
   603  10A6  3420               	retlw	32	;' '
   604  10A7  3425               	retlw	37	;'%'
   605  10A8  3431               	retlw	49	;'1'
   606  10A9  342E               	retlw	46	;'.'
   607  10AA  3432               	retlw	50	;'2'
   608  10AB  3466               	retlw	102	;'f'
   609  10AC  3456               	retlw	86	;'V'
   610  10AD  3400               	retlw	0
   611  10AE                     STR_1:
   612  10AE  3453               	retlw	83	;'S'
   613  10AF  3431               	retlw	49	;'1'
   614  10B0  343A               	retlw	58	;':'
   615  10B1  3400               	retlw	0
   616  10B2                     STR_2:
   617  10B2  3453               	retlw	83	;'S'
   618  10B3  3432               	retlw	50	;'2'
   619  10B4  343A               	retlw	58	;':'
   620  10B5  3400               	retlw	0
   621  10B6                     STR_3:
   622  10B6  3453               	retlw	83	;'S'
   623  10B7  3433               	retlw	51	;'3'
   624  10B8  343A               	retlw	58	;':'
   625  10B9  3400               	retlw	0
   626                           
   627                           	psect	cinit
   628  07F0                     start_initialization:	
   629                           ; #config settings
   630                           
   631  07F0                     __initialization:
   632                           
   633                           ; Clear objects allocated to BANK0
   634  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   635  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   636  07F2  01EF               	clrf	__pbssBANK0& (0+127)
   637                           
   638                           ; Clear objects allocated to BANK1
   639  07F3  1383               	bcf	3,7	;select IRP bank0
   640  07F4  30C9               	movlw	low __pbssBANK1
   641  07F5  0084               	movwf	4
   642  07F6  30E5               	movlw	low (__pbssBANK1+28)
   643  07F7  120A  118A  2004  120A  118A  	fcall	clear_ram0
   644  07FC                     end_of_initialization:	
   645                           ;End of C runtime variable initialization code
   646                           
   647  07FC                     __end_of__initialization:
   648  07FC  0183               	clrf	3
   649  07FD  160A  158A  2D89   	ljmp	_main	;jump to C main() function
   650                           
   651                           	psect	bssBANK0
   652  006F                     __pbssBANK0:
   653  006F                     _ADC_res1:
   654  006F                     	ds	1
   655                           
   656                           	psect	bssBANK1
   657  00C9                     __pbssBANK1:
   658  00C9                     _VAL2:
   659  00C9                     	ds	4
   660  00CD                     _VAL1:
   661  00CD                     	ds	4
   662  00D1                     _channel:
   663  00D1                     	ds	2
   664  00D3                     _VALOR_ADC:
   665  00D3                     	ds	1
   666  00D4                     _ADC_res2:
   667  00D4                     	ds	1
   668  00D5                     _data:
   669  00D5                     	ds	16
   670                           
   671                           	psect	clrtext
   672  0004                     clear_ram0:	
   673                           ;	Called with FSR containing the base address, and
   674                           ;	W with the last address+1
   675                           
   676  0004  0064               	clrwdt	;clear the watchdog before getting into this loop
   677  0005                     clrloop0:
   678  0005  0180               	clrf	0	;clear RAM location pointed to by FSR
   679  0006  0A84               	incf	4,f	;increment pointer
   680  0007  0604               	xorwf	4,w	;XOR with final address
   681  0008  1903               	btfsc	3,2	;have we reached the end yet?
   682  0009  3400               	retlw	0	;all done for this memory range, return
   683  000A  0604               	xorwf	4,w	;XOR again to restore value
   684  000B  2805               	goto	clrloop0	;do the next byte
   685                           
   686                           	psect	cstackBANK1
   687  00A0                     __pcstackBANK1:
   688  00A0                     ?_sprintf:
   689  00A0                     sprintf@f:	
   690                           ; 2 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  00A0                     	ds	9
   695  00A9                     ??_sprintf:
   696                           
   697                           ; 1 bytes @ 0x9
   698  00A9                     	ds	5
   699  00AE                     _sprintf$971:
   700                           
   701                           ; 4 bytes @ 0xE
   702  00AE                     	ds	4
   703  00B2                     sprintf@ap:
   704                           
   705                           ; 1 bytes @ 0x12
   706  00B2                     	ds	1
   707  00B3                     sprintf@val:
   708                           
   709                           ; 4 bytes @ 0x13
   710  00B3                     	ds	4
   711  00B7                     sprintf@flag:
   712                           
   713                           ; 2 bytes @ 0x17
   714  00B7                     	ds	2
   715  00B9                     sprintf@width:
   716                           
   717                           ; 2 bytes @ 0x19
   718  00B9                     	ds	2
   719  00BB                     sprintf@tmpval:
   720                           
   721                           ; 4 bytes @ 0x1B
   722  00BB                     	ds	4
   723  00BF                     sprintf@eexp:
   724                           
   725                           ; 2 bytes @ 0x1F
   726  00BF                     	ds	2
   727  00C1                     sprintf@fval:
   728                           
   729                           ; 4 bytes @ 0x21
   730  00C1                     	ds	4
   731  00C5                     sprintf@sp:
   732                           
   733                           ; 1 bytes @ 0x25
   734  00C5                     	ds	1
   735  00C6                     sprintf@prec:
   736                           
   737                           ; 2 bytes @ 0x26
   738  00C6                     	ds	2
   739  00C8                     sprintf@c:
   740                           
   741                           ; 1 bytes @ 0x28
   742  00C8                     	ds	1
   743                           
   744                           	psect	cstackCOMMON
   745  0070                     __pcstackCOMMON:
   746  0070                     ?_isdigit:
   747  0070                     ?___fleq:	
   748                           ; 1 bit 
   749                           
   750  0070                     ?___flge:	
   751                           ; 1 bit 
   752                           
   753  0070                     ?_setup:	
   754                           ; 1 bit 
   755                           
   756  0070                     ??_setup:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_Lcd_Init:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_Lcd_Clear:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_ADC_CH0:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_ADC_CH1:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_ADC_val:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ??_isdigit:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_main:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_Lcd_Port:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ??_Lcd_Port:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_Lcd_Cmd:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_Lcd_Write_Char:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_ADC_ch:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?__Umul8_16:	
   796                           ; 2 bytes @ 0x0
   797                           
   798  0070                     ?___wmul:	
   799                           ; 2 bytes @ 0x0
   800                           
   801  0070                     ?___awmod:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0070                     ?___lwmod:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0070                     ?__tdiv_to_l_:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0070                     ?__div_to_l_:	
   811                           ; 4 bytes @ 0x0
   812                           
   813  0070                     ?___lldiv:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  0070                     ?___flneg:	
   817                           ; 4 bytes @ 0x0
   818                           
   819  0070                     ?___llmod:	
   820                           ; 4 bytes @ 0x0
   821                           
   822  0070                     ?___xxtofl:	
   823                           ; 4 bytes @ 0x0
   824                           
   825  0070                     Lcd_Port@a:	
   826                           ; 4 bytes @ 0x0
   827                           
   828  0070                     ADC_val@ADRES_L:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ADC_val@ADRES_H:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     __Umul8_16@multiplicand:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     _isdigit$790:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ADC_ch@channel:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ___wmul@multiplier:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0070                     ___awmod@divisor:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0070                     ___lwmod@divisor:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  0070                     ___lldiv@divisor:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0070                     __div_to_l_@f1:	
   856                           ; 4 bytes @ 0x0
   857                           
   858  0070                     ___fleq@ff1:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0070                     ___flge@ff1:	
   862                           ; 4 bytes @ 0x0
   863                           
   864  0070                     ___flneg@f1:	
   865                           ; 4 bytes @ 0x0
   866                           
   867  0070                     __tdiv_to_l_@f1:	
   868                           ; 4 bytes @ 0x0
   869                           
   870  0070                     ___llmod@divisor:	
   871                           ; 4 bytes @ 0x0
   872                           
   873  0070                     ___xxtofl@val:	
   874                           ; 4 bytes @ 0x0
   875                           
   876                           
   877                           ; 4 bytes @ 0x0
   878  0070                     	ds	1
   879  0071                     ??_ADC_val:
   880  0071                     ??_Lcd_Cmd:	
   881                           ; 1 bytes @ 0x1
   882                           
   883  0071                     ??_Lcd_Write_Char:	
   884                           ; 1 bytes @ 0x1
   885                           
   886  0071                     isdigit@c:	
   887                           ; 1 bytes @ 0x1
   888                           
   889                           
   890                           ; 1 bytes @ 0x1
   891  0071                     	ds	1
   892  0072                     ??_ADC_ch:
   893  0072                     ??__Umul8_16:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0072                     Lcd_Write_Char@a:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0072                     ___wmul@multiplicand:	
   900                           ; 1 bytes @ 0x2
   901                           
   902  0072                     ___awmod@dividend:	
   903                           ; 2 bytes @ 0x2
   904                           
   905  0072                     ___lwmod@dividend:	
   906                           ; 2 bytes @ 0x2
   907                           
   908                           
   909                           ; 2 bytes @ 0x2
   910  0072                     	ds	1
   911  0073                     ?_Lcd_Write_String:
   912  0073                     Lcd_Cmd@a:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0073                     Lcd_Write_String@a:	
   916                           ; 1 bytes @ 0x3
   917                           
   918                           
   919                           ; 2 bytes @ 0x3
   920  0073                     	ds	1
   921  0074                     ??_Lcd_Init:
   922  0074                     ??_Lcd_Clear:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     ?_Lcd_Set_Cursor:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     ??___wmul:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ??___awmod:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     ??___flneg:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0074                     ??___lwmod:	
   938                           ; 1 bytes @ 0x4
   939                           
   940  0074                     ??___xxtofl:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0074                     Lcd_Set_Cursor@b:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0074                     ___wmul@product:	
   947                           ; 1 bytes @ 0x4
   948                           
   949  0074                     __Umul8_16@product:	
   950                           ; 2 bytes @ 0x4
   951                           
   952  0074                     ___lldiv@dividend:	
   953                           ; 2 bytes @ 0x4
   954                           
   955  0074                     __div_to_l_@f2:	
   956                           ; 4 bytes @ 0x4
   957                           
   958  0074                     ___fleq@ff2:	
   959                           ; 4 bytes @ 0x4
   960                           
   961  0074                     ___flge@ff2:	
   962                           ; 4 bytes @ 0x4
   963                           
   964  0074                     __tdiv_to_l_@f2:	
   965                           ; 4 bytes @ 0x4
   966                           
   967  0074                     ___llmod@dividend:	
   968                           ; 4 bytes @ 0x4
   969                           
   970                           
   971                           ; 4 bytes @ 0x4
   972  0074                     	ds	1
   973  0075                     ??_Lcd_Set_Cursor:
   974  0075                     ??_Lcd_Write_String:	
   975                           ; 1 bytes @ 0x5
   976                           
   977  0075                     ___awmod@counter:	
   978                           ; 1 bytes @ 0x5
   979                           
   980  0075                     ___lwmod@counter:	
   981                           ; 1 bytes @ 0x5
   982                           
   983                           
   984                           ; 1 bytes @ 0x5
   985  0075                     	ds	1
   986  0076                     ?___lwdiv:
   987  0076                     Lcd_Set_Cursor@a:	
   988                           ; 2 bytes @ 0x6
   989                           
   990  0076                     ___awmod@sign:	
   991                           ; 1 bytes @ 0x6
   992                           
   993  0076                     ___lwdiv@divisor:	
   994                           ; 1 bytes @ 0x6
   995                           
   996  0076                     __Umul8_16@word_mpld:	
   997                           ; 2 bytes @ 0x6
   998                           
   999                           
  1000                           ; 2 bytes @ 0x6
  1001  0076                     	ds	1
  1002  0077                     ?___awdiv:
  1003  0077                     Lcd_Set_Cursor@temp:	
  1004                           ; 2 bytes @ 0x7
  1005                           
  1006  0077                     ___awdiv@divisor:	
  1007                           ; 1 bytes @ 0x7
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x7
  1011  0077                     	ds	1
  1012  0078                     ??__tdiv_to_l_:
  1013  0078                     ??__div_to_l_:	
  1014                           ; 1 bytes @ 0x8
  1015                           
  1016  0078                     ??___lldiv:	
  1017                           ; 1 bytes @ 0x8
  1018                           
  1019  0078                     ??___fleq:	
  1020                           ; 1 bytes @ 0x8
  1021                           
  1022  0078                     ??___flge:	
  1023                           ; 1 bytes @ 0x8
  1024                           
  1025  0078                     ??___llmod:	
  1026                           ; 1 bytes @ 0x8
  1027                           
  1028  0078                     __Umul8_16@multiplier:	
  1029                           ; 1 bytes @ 0x8
  1030                           
  1031  0078                     ___xxtofl@sign:	
  1032                           ; 1 bytes @ 0x8
  1033                           
  1034  0078                     Lcd_Write_String@i:	
  1035                           ; 1 bytes @ 0x8
  1036                           
  1037  0078                     ___lwdiv@dividend:	
  1038                           ; 2 bytes @ 0x8
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x8
  1042  0078                     	ds	1
  1043  0079                     ___llmod@counter:
  1044  0079                     ___xxtofl@exp:	
  1045                           ; 1 bytes @ 0x9
  1046                           
  1047  0079                     ___awdiv@dividend:	
  1048                           ; 1 bytes @ 0x9
  1049                           
  1050  0079                     ___lldiv@quotient:	
  1051                           ; 2 bytes @ 0x9
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x9
  1055  0079                     	ds	1
  1056  007A                     ??___lwdiv:
  1057  007A                     ___xxtofl@arg:	
  1058                           ; 1 bytes @ 0xA
  1059                           
  1060                           
  1061                           ; 4 bytes @ 0xA
  1062  007A                     	ds	1
  1063  007B                     ??___awdiv:
  1064  007B                     ___lwdiv@quotient:	
  1065                           ; 1 bytes @ 0xB
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0xB
  1069  007B                     	ds	2
  1070  007D                     ___lldiv@counter:
  1071  007D                     ___lwdiv@counter:	
  1072                           ; 1 bytes @ 0xD
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0xD
  1076  007D                     	ds	1
  1077  007E                     ??___flsub:
  1078                           
  1079                           	psect	cstackBANK0
  1080  0020                     __pcstackBANK0:	
  1081                           ; 1 bytes @ 0xE
  1082                           
  1083  0020                     ___awdiv@counter:
  1084  0020                     __div_to_l_@quot:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0020                     __tdiv_to_l_@quot:	
  1088                           ; 4 bytes @ 0x0
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x0
  1092  0020                     	ds	1
  1093  0021                     ___awdiv@sign:
  1094                           
  1095                           ; 1 bytes @ 0x1
  1096  0021                     	ds	1
  1097  0022                     ___awdiv@quotient:
  1098                           
  1099                           ; 2 bytes @ 0x2
  1100  0022                     	ds	2
  1101  0024                     ?___flmul:
  1102  0024                     __div_to_l_@cntr:	
  1103                           ; 4 bytes @ 0x4
  1104                           
  1105  0024                     __tdiv_to_l_@cntr:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0024                     ___flmul@b:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111                           
  1112                           ; 4 bytes @ 0x4
  1113  0024                     	ds	1
  1114  0025                     __div_to_l_@exp1:
  1115  0025                     __tdiv_to_l_@exp1:	
  1116                           ; 1 bytes @ 0x5
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x5
  1120  0025                     	ds	3
  1121  0028                     ___flmul@a:
  1122                           
  1123                           ; 4 bytes @ 0x8
  1124  0028                     	ds	4
  1125  002C                     ??___flmul:
  1126                           
  1127                           ; 1 bytes @ 0xC
  1128  002C                     	ds	5
  1129  0031                     ___flmul@sign:
  1130                           
  1131                           ; 1 bytes @ 0x11
  1132  0031                     	ds	1
  1133  0032                     ___flmul@grs:
  1134                           
  1135                           ; 4 bytes @ 0x12
  1136  0032                     	ds	4
  1137  0036                     ___flmul@aexp:
  1138                           
  1139                           ; 1 bytes @ 0x16
  1140  0036                     	ds	1
  1141  0037                     ___flmul@bexp:
  1142                           
  1143                           ; 1 bytes @ 0x17
  1144  0037                     	ds	1
  1145  0038                     ___flmul@prod:
  1146                           
  1147                           ; 4 bytes @ 0x18
  1148  0038                     	ds	4
  1149  003C                     ___flmul@temp:
  1150                           
  1151                           ; 2 bytes @ 0x1C
  1152  003C                     	ds	2
  1153  003E                     ?_fround:
  1154  003E                     ?_scale:	
  1155                           ; 4 bytes @ 0x1E
  1156                           
  1157  003E                     ?___fldiv:	
  1158                           ; 4 bytes @ 0x1E
  1159                           
  1160  003E                     ___fldiv@a:	
  1161                           ; 4 bytes @ 0x1E
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x1E
  1165  003E                     	ds	4
  1166  0042                     ??_fround:
  1167  0042                     ??_scale:	
  1168                           ; 1 bytes @ 0x22
  1169                           
  1170  0042                     ___fldiv@b:	
  1171                           ; 1 bytes @ 0x22
  1172                           
  1173                           
  1174                           ; 4 bytes @ 0x22
  1175  0042                     	ds	4
  1176  0046                     ??___fldiv:
  1177                           
  1178                           ; 1 bytes @ 0x26
  1179  0046                     	ds	3
  1180  0049                     _fround$969:
  1181                           
  1182                           ; 4 bytes @ 0x29
  1183  0049                     	ds	2
  1184  004B                     ___fldiv@rem:
  1185                           
  1186                           ; 4 bytes @ 0x2B
  1187  004B                     	ds	1
  1188  004C                     _scale$970:
  1189                           
  1190                           ; 4 bytes @ 0x2C
  1191  004C                     	ds	1
  1192  004D                     _fround$968:
  1193                           
  1194                           ; 4 bytes @ 0x2D
  1195  004D                     	ds	2
  1196  004F                     ___fldiv@sign:
  1197                           
  1198                           ; 1 bytes @ 0x2F
  1199  004F                     	ds	1
  1200  0050                     scale@scl:
  1201  0050                     ___fldiv@new_exp:	
  1202                           ; 1 bytes @ 0x30
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x30
  1206  0050                     	ds	1
  1207  0051                     ?___fltol:
  1208  0051                     fround@prec:	
  1209                           ; 4 bytes @ 0x31
  1210                           
  1211  0051                     ___fltol@f1:	
  1212                           ; 1 bytes @ 0x31
  1213                           
  1214                           
  1215                           ; 4 bytes @ 0x31
  1216  0051                     	ds	1
  1217  0052                     ?___fladd:
  1218  0052                     ___fladd@b:	
  1219                           ; 4 bytes @ 0x32
  1220                           
  1221  0052                     ___fldiv@grs:	
  1222                           ; 4 bytes @ 0x32
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x32
  1226  0052                     	ds	3
  1227  0055                     ??___fltol:
  1228                           
  1229                           ; 1 bytes @ 0x35
  1230  0055                     	ds	1
  1231  0056                     ___fldiv@bexp:
  1232  0056                     ___fladd@a:	
  1233                           ; 1 bytes @ 0x36
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x36
  1237  0056                     	ds	1
  1238  0057                     ___fldiv@aexp:
  1239                           
  1240                           ; 1 bytes @ 0x37
  1241  0057                     	ds	1
  1242  0058                     ??_ADC_CH0:
  1243  0058                     ??_ADC_CH1:	
  1244                           ; 1 bytes @ 0x38
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0x38
  1248  0058                     	ds	2
  1249  005A                     ??___fladd:
  1250  005A                     ___fltol@sign1:	
  1251                           ; 1 bytes @ 0x3A
  1252                           
  1253                           
  1254                           ; 1 bytes @ 0x3A
  1255  005A                     	ds	1
  1256  005B                     ___fltol@exp1:
  1257                           
  1258                           ; 1 bytes @ 0x3B
  1259  005B                     	ds	7
  1260  0062                     ___fladd@signs:
  1261                           
  1262                           ; 1 bytes @ 0x42
  1263  0062                     	ds	1
  1264  0063                     ___fladd@aexp:
  1265                           
  1266                           ; 1 bytes @ 0x43
  1267  0063                     	ds	1
  1268  0064                     ___fladd@bexp:
  1269                           
  1270                           ; 1 bytes @ 0x44
  1271  0064                     	ds	1
  1272  0065                     ___fladd@grs:
  1273                           
  1274                           ; 1 bytes @ 0x45
  1275  0065                     	ds	1
  1276  0066                     ?___flsub:
  1277  0066                     ___flsub@a:	
  1278                           ; 4 bytes @ 0x46
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0x46
  1282  0066                     	ds	4
  1283  006A                     ___flsub@b:
  1284                           
  1285                           ; 4 bytes @ 0x4A
  1286  006A                     	ds	4
  1287  006E                     ??_main:
  1288                           
  1289                           ; 1 bytes @ 0x4E
  1290  006E                     	ds	1
  1291                           
  1292                           	psect	maintext
  1293  1D89                     __pmaintext:	
  1294 ;;
  1295 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1296 ;;
  1297 ;; *************** function _main *****************
  1298 ;; Defined at:
  1299 ;;		line 93 in file "main.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : B00/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0
  1315 ;;      Temps:          0       1       0       0       0
  1316 ;;      Totals:         0       1       0       0       0
  1317 ;;Total ram usage:        1 bytes
  1318 ;; Hardware stack levels required when called:    4
  1319 ;; This function calls:
  1320 ;;		_ADC_CH0
  1321 ;;		_ADC_CH1
  1322 ;;		_Lcd_Clear
  1323 ;;		_Lcd_Init
  1324 ;;		_Lcd_Set_Cursor
  1325 ;;		_Lcd_Write_String
  1326 ;;		_setup
  1327 ;;		_sprintf
  1328 ;; This function is called by:
  1329 ;;		Startup code after reset
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _main
  1335  1D89                     _main:
  1336  1D89                     l3726:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1339                           
  1340                           
  1341                           ;main.c: 94:   setup ();
  1342  1D89  160A  158A  21BD  160A  158A  	fcall	_setup
  1343  1D8E                     l3728:
  1344                           
  1345                           ;main.c: 96:   TRISD = 0x00;
  1346  1D8E  1683               	bsf	3,5	;RP0=1, select bank1
  1347  1D8F  1303               	bcf	3,6	;RP1=0, select bank1
  1348  1D90  0188               	clrf	8	;volatile
  1349  1D91                     l3730:
  1350                           
  1351                           ;main.c: 97:   Lcd_Init();
  1352  1D91  160A  158A  2355  160A  158A  	fcall	_Lcd_Init
  1353  1D96                     l3732:
  1354                           
  1355                           ;main.c: 99:      Lcd_Clear();
  1356  1D96  160A  158A  2184  160A  158A  	fcall	_Lcd_Clear
  1357  1D9B                     l3734:
  1358                           
  1359                           ;main.c: 100:     Lcd_Set_Cursor(1,1);
  1360  1D9B  01F4               	clrf	Lcd_Set_Cursor@b
  1361  1D9C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1362  1D9D  3001               	movlw	1
  1363  1D9E  160A  158A  2201  160A  158A  	fcall	_Lcd_Set_Cursor
  1364  1DA3                     l3736:
  1365                           
  1366                           ;main.c: 101:     Lcd_Write_String("S1:");
  1367  1DA3  309F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1368  1DA4  00F3               	movwf	Lcd_Write_String@a
  1369  1DA5  3080               	movlw	128
  1370  1DA6  00F4               	movwf	Lcd_Write_String@a+1
  1371  1DA7  160A  158A  22CF  160A  158A  	fcall	_Lcd_Write_String
  1372  1DAC                     l3738:
  1373                           
  1374                           ;main.c: 102:     Lcd_Set_Cursor(1,7);
  1375  1DAC  3007               	movlw	7
  1376  1DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1377  1DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1378  1DAF  00EE               	movwf	??_main
  1379  1DB0  086E               	movf	??_main,w
  1380  1DB1  00F4               	movwf	Lcd_Set_Cursor@b
  1381  1DB2  3001               	movlw	1
  1382  1DB3  160A  158A  2201  160A  158A  	fcall	_Lcd_Set_Cursor
  1383  1DB8                     l3740:
  1384                           
  1385                           ;main.c: 103:     Lcd_Write_String("S2:");
  1386  1DB8  30A3               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1387  1DB9  00F3               	movwf	Lcd_Write_String@a
  1388  1DBA  3080               	movlw	128
  1389  1DBB  00F4               	movwf	Lcd_Write_String@a+1
  1390  1DBC  160A  158A  22CF  160A  158A  	fcall	_Lcd_Write_String
  1391  1DC1                     l3742:
  1392                           
  1393                           ;main.c: 104:     Lcd_Set_Cursor(1,14);
  1394  1DC1  300E               	movlw	14
  1395  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
  1396  1DC3  1303               	bcf	3,6	;RP1=0, select bank0
  1397  1DC4  00EE               	movwf	??_main
  1398  1DC5  086E               	movf	??_main,w
  1399  1DC6  00F4               	movwf	Lcd_Set_Cursor@b
  1400  1DC7  3001               	movlw	1
  1401  1DC8  160A  158A  2201  160A  158A  	fcall	_Lcd_Set_Cursor
  1402  1DCD                     l3744:
  1403                           
  1404                           ;main.c: 105:     Lcd_Write_String("S3:");
  1405  1DCD  30A7               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1406  1DCE  00F3               	movwf	Lcd_Write_String@a
  1407  1DCF  3080               	movlw	128
  1408  1DD0  00F4               	movwf	Lcd_Write_String@a+1
  1409  1DD1  160A  158A  22CF  160A  158A  	fcall	_Lcd_Write_String
  1410  1DD6                     l3746:
  1411                           
  1412                           ;main.c: 111:   {;main.c: 112:     ADC_CH0();
  1413  1DD6  160A  158A  2501  160A  158A  	fcall	_ADC_CH0
  1414  1DDB                     l3748:
  1415                           
  1416                           ;main.c: 113:     ADC_CH1();
  1417  1DDB  160A  158A  2613  160A  158A  	fcall	_ADC_CH1
  1418  1DE0                     l3750:
  1419                           
  1420                           ;main.c: 115:     sprintf(data, "%1.2fV " "%1.2fV", VAL1, VAL2);
  1421  1DE0  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1422  1DE1  1283               	bcf	3,5	;RP0=0, select bank0
  1423  1DE2  1303               	bcf	3,6	;RP1=0, select bank0
  1424  1DE3  00EE               	movwf	??_main
  1425  1DE4  086E               	movf	??_main,w
  1426  1DE5  1683               	bsf	3,5	;RP0=1, select bank1
  1427  1DE6  1303               	bcf	3,6	;RP1=0, select bank1
  1428  1DE7  00A0               	movwf	sprintf@f^(0+128)
  1429  1DE8  0850               	movf	(_VAL1+3)^(0+128),w
  1430  1DE9  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1431  1DEA  084F               	movf	(_VAL1+2)^(0+128),w
  1432  1DEB  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1433  1DEC  084E               	movf	(_VAL1+1)^(0+128),w
  1434  1DED  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1435  1DEE  084D               	movf	_VAL1^(0+128),w
  1436  1DEF  00A1               	movwf	(?_sprintf^(0+128)+1)
  1437  1DF0  084C               	movf	(_VAL2+3)^(0+128),w
  1438  1DF1  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1439  1DF2  084B               	movf	(_VAL2+2)^(0+128),w
  1440  1DF3  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1441  1DF4  084A               	movf	(_VAL2+1)^(0+128),w
  1442  1DF5  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1443  1DF6  0849               	movf	_VAL2^(0+128),w
  1444  1DF7  00A5               	movwf	(?_sprintf^(0+128)+5)
  1445  1DF8  30D5               	movlw	(low (_data| 0))& (0+255)
  1446  1DF9  120A  118A  2075  160A  158A  	fcall	_sprintf
  1447  1DFE                     l3752:
  1448                           
  1449                           ;main.c: 116:     Lcd_Set_Cursor(2, 1);
  1450  1DFE  01F4               	clrf	Lcd_Set_Cursor@b
  1451  1DFF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1452  1E00  3002               	movlw	2
  1453  1E01  160A  158A  2201  160A  158A  	fcall	_Lcd_Set_Cursor
  1454  1E06                     l3754:
  1455                           
  1456                           ;main.c: 117:     Lcd_Write_String(data);
  1457  1E06  30D5               	movlw	(low (_data| 0))& (0+255)
  1458  1E07  00F3               	movwf	Lcd_Write_String@a
  1459  1E08  3000               	movlw	0
  1460  1E09  00F4               	movwf	Lcd_Write_String@a+1
  1461  1E0A  160A  158A  22CF  160A  158A  	fcall	_Lcd_Write_String
  1462  1E0F  2DD6               	goto	l3746
  1463  1E10  120A  118A  2800   	ljmp	start
  1464  1E13                     __end_of_main:
  1465                           
  1466                           	psect	text1
  1467  0075                     __ptext1:	
  1468 ;; *************** function _sprintf *****************
  1469 ;; Defined at:
  1470 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  sp              1    wreg     PTR unsigned char 
  1473 ;;		 -> data(16), 
  1474 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1475 ;;		 -> STR_4(14), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  1478 ;;		 -> data(16), 
  1479 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1480 ;;  tmpval          4   27[BANK1 ] struct .
  1481 ;;  val             4   19[BANK1 ] unsigned long 
  1482 ;;  prec            2   38[BANK1 ] int 
  1483 ;;  eexp            2   31[BANK1 ] int 
  1484 ;;  width           2   25[BANK1 ] int 
  1485 ;;  flag            2   23[BANK1 ] unsigned short 
  1486 ;;  cp              2    0        PTR const unsigned char 
  1487 ;;  len             2    0        unsigned int 
  1488 ;;  c               1   40[BANK1 ] unsigned char 
  1489 ;;  ap              1   18[BANK1 ] PTR void [1]
  1490 ;;		 -> ?_sprintf(2), 
  1491 ;;  d               1    0        unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2    0[BANK1 ] int 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       9       0       0
  1502 ;;      Locals:         0       0      27       0       0
  1503 ;;      Temps:          0       0       5       0       0
  1504 ;;      Totals:         0       0      41       0       0
  1505 ;;Total ram usage:       41 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    3
  1508 ;; This function calls:
  1509 ;;		___awdiv
  1510 ;;		___fladd
  1511 ;;		___fleq
  1512 ;;		___flge
  1513 ;;		___flmul
  1514 ;;		___flneg
  1515 ;;		___flsub
  1516 ;;		___fltol
  1517 ;;		___lldiv
  1518 ;;		___llmod
  1519 ;;		___wmul
  1520 ;;		___xxtofl
  1521 ;;		__div_to_l_
  1522 ;;		__tdiv_to_l_
  1523 ;;		_fround
  1524 ;;		_isdigit
  1525 ;;		_scale
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _sprintf
  1533  0075                     _sprintf:
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1537                           ;sprintf@sp stored from wreg
  1538  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1539  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0077  00C5               	movwf	sprintf@sp^(0+128)
  1541  0078                     l3464:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1544  0078  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1545  0079  00A9               	movwf	??_sprintf^(0+128)
  1546  007A  0829               	movf	??_sprintf^(0+128),w
  1547  007B  00B2               	movwf	sprintf@ap^(0+128)
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1550  007C  2FD9               	goto	l3714
  1551  007D                     l3466:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1554  007D  3025               	movlw	37
  1555  007E  0648               	xorwf	sprintf@c^(0+128),w
  1556  007F  1903               	btfsc	3,2
  1557  0080  2882               	goto	u5661
  1558  0081  2883               	goto	u5660
  1559  0082                     u5661:
  1560  0082  288F               	goto	l3472
  1561  0083                     u5660:
  1562  0083                     l3468:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1565  0083  0848               	movf	sprintf@c^(0+128),w
  1566  0084  00A9               	movwf	??_sprintf^(0+128)
  1567  0085  0845               	movf	sprintf@sp^(0+128),w
  1568  0086  0084               	movwf	4
  1569  0087  0829               	movf	??_sprintf^(0+128),w
  1570  0088  1383               	bcf	3,7	;select IRP bank0
  1571  0089  0080               	movwf	0
  1572  008A                     l3470:
  1573  008A  3001               	movlw	1
  1574  008B  00A9               	movwf	??_sprintf^(0+128)
  1575  008C  0829               	movf	??_sprintf^(0+128),w
  1576  008D  07C5               	addwf	sprintf@sp^(0+128),f
  1577                           
  1578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1579  008E  2FD9               	goto	l3714
  1580  008F                     l3472:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1583  008F  01B9               	clrf	sprintf@width^(0+128)
  1584  0090  01BA               	clrf	(sprintf@width+1)^(0+128)
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1587  0091  01B7               	clrf	sprintf@flag^(0+128)
  1588  0092  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1589  0093                     l3474:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1592  0093  0820               	movf	sprintf@f^(0+128),w
  1593  0094  0084               	movwf	4
  1594  0095  160A  118A  200A  120A  118A  	fcall	stringdir
  1595  009A  160A  158A  2191  120A  118A  	fcall	_isdigit
  1596  009F  1C03               	btfss	3,0
  1597  00A0  28A2               	goto	u5671
  1598  00A1  28A3               	goto	u5670
  1599  00A2                     u5671:
  1600  00A2  28E3               	goto	l3486
  1601  00A3                     u5670:
  1602  00A3                     l3476:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1605  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1606  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1607  00A5  01B9               	clrf	sprintf@width^(0+128)
  1608  00A6  01BA               	clrf	(sprintf@width+1)^(0+128)
  1609  00A7                     l3478:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1612  00A7  300A               	movlw	10
  1613  00A8  00F0               	movwf	___wmul@multiplier
  1614  00A9  3000               	movlw	0
  1615  00AA  00F1               	movwf	___wmul@multiplier+1
  1616  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1617  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  1618  00AD  083A               	movf	(sprintf@width+1)^(0+128),w
  1619  00AE  00F3               	movwf	___wmul@multiplicand+1
  1620  00AF  0839               	movf	sprintf@width^(0+128),w
  1621  00B0  00F2               	movwf	___wmul@multiplicand
  1622  00B1  160A  158A  2249  120A  118A  	fcall	___wmul
  1623  00B6  0871               	movf	?___wmul+1,w
  1624  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1625  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  1626  00B9  00BA               	movwf	(sprintf@width+1)^(0+128)
  1627  00BA  0870               	movf	?___wmul,w
  1628  00BB  00B9               	movwf	sprintf@width^(0+128)
  1629  00BC                     l3480:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1632  00BC  0820               	movf	sprintf@f^(0+128),w
  1633  00BD  0084               	movwf	4
  1634  00BE  160A  118A  200A  120A  118A  	fcall	stringdir
  1635  00C3  3ED0               	addlw	208
  1636  00C4  00A9               	movwf	??_sprintf^(0+128)
  1637  00C5  30FF               	movlw	255
  1638  00C6  1803               	skipnc
  1639  00C7  3000               	movlw	0
  1640  00C8  00AA               	movwf	(??_sprintf^(0+128)+1)
  1641  00C9  0829               	movf	??_sprintf^(0+128),w
  1642  00CA  07B9               	addwf	sprintf@width^(0+128),f
  1643  00CB  1803               	skipnc
  1644  00CC  0ABA               	incf	(sprintf@width+1)^(0+128),f
  1645  00CD  082A               	movf	(??_sprintf+1)^(0+128),w
  1646  00CE  07BA               	addwf	(sprintf@width+1)^(0+128),f
  1647  00CF                     l3482:
  1648  00CF  3001               	movlw	1
  1649  00D0  00A9               	movwf	??_sprintf^(0+128)
  1650  00D1  0829               	movf	??_sprintf^(0+128),w
  1651  00D2  07A0               	addwf	sprintf@f^(0+128),f
  1652  00D3                     l3484:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1655  00D3  0820               	movf	sprintf@f^(0+128),w
  1656  00D4  0084               	movwf	4
  1657  00D5  160A  118A  200A  120A  118A  	fcall	stringdir
  1658  00DA  160A  158A  2191  120A  118A  	fcall	_isdigit
  1659  00DF  1803               	btfsc	3,0
  1660  00E0  28E2               	goto	u5681
  1661  00E1  28E3               	goto	u5680
  1662  00E2                     u5681:
  1663  00E2  28A7               	goto	l3478
  1664  00E3                     u5680:
  1665  00E3                     l3486:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1668  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  1669  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  1670  00E5  0820               	movf	sprintf@f^(0+128),w
  1671  00E6  0084               	movwf	4
  1672  00E7  160A  118A  200A  120A  118A  	fcall	stringdir
  1673  00EC  3A2E               	xorlw	46
  1674  00ED  1D03               	skipz
  1675  00EE  28F0               	goto	u5691
  1676  00EF  28F1               	goto	u5690
  1677  00F0                     u5691:
  1678  00F0  2936               	goto	l3502
  1679  00F1                     u5690:
  1680  00F1                     l3488:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1683  00F1  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1684  00F2                     l3490:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1687  00F2  3001               	movlw	1
  1688  00F3  00A9               	movwf	??_sprintf^(0+128)
  1689  00F4  0829               	movf	??_sprintf^(0+128),w
  1690  00F5  07A0               	addwf	sprintf@f^(0+128),f
  1691  00F6                     l3492:
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1694  00F6  01C6               	clrf	sprintf@prec^(0+128)
  1695  00F7  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1698  00F8  2925               	goto	l3500
  1699  00F9                     l3494:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1702  00F9  300A               	movlw	10
  1703  00FA  00F0               	movwf	___wmul@multiplier
  1704  00FB  3000               	movlw	0
  1705  00FC  00F1               	movwf	___wmul@multiplier+1
  1706  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1707  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1708  00FF  0847               	movf	(sprintf@prec+1)^(0+128),w
  1709  0100  00F3               	movwf	___wmul@multiplicand+1
  1710  0101  0846               	movf	sprintf@prec^(0+128),w
  1711  0102  00F2               	movwf	___wmul@multiplicand
  1712  0103  160A  158A  2249  120A  118A  	fcall	___wmul
  1713  0108  0871               	movf	?___wmul+1,w
  1714  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1715  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1716  010B  00C7               	movwf	(sprintf@prec+1)^(0+128)
  1717  010C  0870               	movf	?___wmul,w
  1718  010D  00C6               	movwf	sprintf@prec^(0+128)
  1719  010E                     l3496:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1722  010E  0820               	movf	sprintf@f^(0+128),w
  1723  010F  0084               	movwf	4
  1724  0110  160A  118A  200A  120A  118A  	fcall	stringdir
  1725  0115  3ED0               	addlw	208
  1726  0116  00A9               	movwf	??_sprintf^(0+128)
  1727  0117  30FF               	movlw	255
  1728  0118  1803               	skipnc
  1729  0119  3000               	movlw	0
  1730  011A  00AA               	movwf	(??_sprintf^(0+128)+1)
  1731  011B  0829               	movf	??_sprintf^(0+128),w
  1732  011C  07C6               	addwf	sprintf@prec^(0+128),f
  1733  011D  1803               	skipnc
  1734  011E  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  1735  011F  082A               	movf	(??_sprintf+1)^(0+128),w
  1736  0120  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  1737  0121                     l3498:
  1738  0121  3001               	movlw	1
  1739  0122  00A9               	movwf	??_sprintf^(0+128)
  1740  0123  0829               	movf	??_sprintf^(0+128),w
  1741  0124  07A0               	addwf	sprintf@f^(0+128),f
  1742  0125                     l3500:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1745  0125  0820               	movf	sprintf@f^(0+128),w
  1746  0126  0084               	movwf	4
  1747  0127  160A  118A  200A  120A  118A  	fcall	stringdir
  1748  012C  160A  158A  2191  120A  118A  	fcall	_isdigit
  1749  0131  1803               	btfsc	3,0
  1750  0132  2934               	goto	u5701
  1751  0133  2935               	goto	u5700
  1752  0134                     u5701:
  1753  0134  28F9               	goto	l3494
  1754  0135                     u5700:
  1755  0135  293C               	goto	l3508
  1756  0136                     l3502:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1759  0136  01C6               	clrf	sprintf@prec^(0+128)
  1760  0137  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1761  0138                     l3504:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1764  0138  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1765  0139  293C               	goto	l3508
  1766  013A                     l288:	
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1768                           
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1771  013A  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1774  013B  2958               	goto	l3510
  1775  013C                     l3508:
  1776  013C  3001               	movlw	1
  1777  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1778  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1779  013F  07A0               	addwf	sprintf@f^(0+128),f
  1780  0140  30FF               	movlw	-1
  1781  0141  0720               	addwf	sprintf@f^(0+128),w
  1782  0142  0084               	movwf	4
  1783  0143  160A  118A  200A  120A  118A  	fcall	stringdir
  1784  0148  00C8               	movwf	sprintf@c^(0+128)
  1785  0149  00A9               	movwf	??_sprintf^(0+128)
  1786  014A  01AA               	clrf	(??_sprintf^(0+128)+1)
  1787                           
  1788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1789                           ; Switch size 1, requested type "simple"
  1790                           ; Number of cases is 1, Range of values is 0 to 0
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte            4     3 (average)
  1794                           ; direct_byte           11     8 (fixed)
  1795                           ; jumptable            260     6 (fixed)
  1796                           ;	Chosen strategy is simple_byte
  1797  014B  082A               	movf	(??_sprintf+1)^(0+128),w
  1798  014C  3A00               	xorlw	0	; case 0
  1799  014D  1903               	skipnz
  1800  014E  2950               	goto	l3810
  1801  014F  2FD9               	goto	l3714
  1802  0150                     l3810:
  1803                           
  1804                           ; Switch size 1, requested type "simple"
  1805                           ; Number of cases is 2, Range of values is 0 to 102
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte            7     4 (average)
  1809                           ; jumptable            260     6 (fixed)
  1810                           ;	Chosen strategy is simple_byte
  1811  0150  0829               	movf	??_sprintf^(0+128),w
  1812  0151  3A00               	xorlw	0	; case 0
  1813  0152  1903               	skipnz
  1814  0153  2FEB               	goto	l3716
  1815  0154  3A66               	xorlw	102	; case 102
  1816  0155  1903               	skipnz
  1817  0156  293A               	goto	l288
  1818  0157  2FD9               	goto	l3714
  1819  0158                     l3510:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1822  0158  3000               	movlw	0
  1823  0159  0537               	andwf	sprintf@flag^(0+128),w
  1824  015A  00A9               	movwf	??_sprintf^(0+128)
  1825  015B  3007               	movlw	7
  1826  015C  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1827  015D  00AA               	movwf	(??_sprintf+1)^(0+128)
  1828  015E  0829               	movf	??_sprintf^(0+128),w
  1829  015F  042A               	iorwf	(??_sprintf^(0+128)+1),w
  1830  0160  1903               	btfsc	3,2
  1831  0161  2963               	goto	u5711
  1832  0162  2964               	goto	u5710
  1833  0163                     u5711:
  1834  0163  2F16               	goto	l3668
  1835  0164                     u5710:
  1836  0164                     l3512:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1839  0164  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  1840  0165  2967               	goto	u5721
  1841  0166  2968               	goto	u5720
  1842  0167                     u5721:
  1843  0167  296C               	goto	l3516
  1844  0168                     u5720:
  1845  0168                     l3514:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1848  0168  3006               	movlw	6
  1849  0169  00C6               	movwf	sprintf@prec^(0+128)
  1850  016A  3000               	movlw	0
  1851  016B  00C7               	movwf	(sprintf@prec^(0+128)+1)
  1852  016C                     l3516:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1855  016C  0832               	movf	sprintf@ap^(0+128),w
  1856  016D  0084               	movwf	4
  1857  016E  1383               	bcf	3,7	;select IRP bank0
  1858  016F  0800               	movf	0,w
  1859  0170  00C1               	movwf	sprintf@fval^(0+128)
  1860  0171  0A84               	incf	4,f
  1861  0172  0800               	movf	0,w
  1862  0173  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1863  0174  0A84               	incf	4,f
  1864  0175  0800               	movf	0,w
  1865  0176  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1866  0177  0A84               	incf	4,f
  1867  0178  0800               	movf	0,w
  1868  0179  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1869  017A                     l3518:
  1870  017A  3004               	movlw	4
  1871  017B  00A9               	movwf	??_sprintf^(0+128)
  1872  017C  0829               	movf	??_sprintf^(0+128),w
  1873  017D  07B2               	addwf	sprintf@ap^(0+128),f
  1874  017E                     l3520:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1877  017E  0844               	movf	(sprintf@fval+3)^(0+128),w
  1878  017F  00F3               	movwf	___flge@ff1+3
  1879  0180  0843               	movf	(sprintf@fval+2)^(0+128),w
  1880  0181  00F2               	movwf	___flge@ff1+2
  1881  0182  0842               	movf	(sprintf@fval+1)^(0+128),w
  1882  0183  00F1               	movwf	___flge@ff1+1
  1883  0184  0841               	movf	sprintf@fval^(0+128),w
  1884  0185  00F0               	movwf	___flge@ff1
  1885  0186  3000               	movlw	0
  1886  0187  00F7               	movwf	___flge@ff2+3
  1887  0188  3000               	movlw	0
  1888  0189  00F6               	movwf	___flge@ff2+2
  1889  018A  3000               	movlw	0
  1890  018B  00F5               	movwf	___flge@ff2+1
  1891  018C  3000               	movlw	0
  1892  018D  00F4               	movwf	___flge@ff2
  1893  018E  160A  158A  26A4  120A  118A  	fcall	___flge
  1894  0193  1803               	btfsc	3,0
  1895  0194  2996               	goto	u5731
  1896  0195  2997               	goto	u5730
  1897  0196                     u5731:
  1898  0196  29B4               	goto	l3526
  1899  0197                     u5730:
  1900  0197                     l3522:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1903  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0199  0844               	movf	(sprintf@fval+3)^(0+128),w
  1906  019A  00F3               	movwf	___flneg@f1+3
  1907  019B  0843               	movf	(sprintf@fval+2)^(0+128),w
  1908  019C  00F2               	movwf	___flneg@f1+2
  1909  019D  0842               	movf	(sprintf@fval+1)^(0+128),w
  1910  019E  00F1               	movwf	___flneg@f1+1
  1911  019F  0841               	movf	sprintf@fval^(0+128),w
  1912  01A0  00F0               	movwf	___flneg@f1
  1913  01A1  160A  158A  2179  120A  118A  	fcall	___flneg
  1914  01A6  0873               	movf	?___flneg+3,w
  1915  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  1916  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  1917  01A9  00C4               	movwf	(sprintf@fval+3)^(0+128)
  1918  01AA  0872               	movf	?___flneg+2,w
  1919  01AB  00C3               	movwf	(sprintf@fval+2)^(0+128)
  1920  01AC  0871               	movf	?___flneg+1,w
  1921  01AD  00C2               	movwf	(sprintf@fval+1)^(0+128)
  1922  01AE  0870               	movf	?___flneg,w
  1923  01AF  00C1               	movwf	sprintf@fval^(0+128)
  1924  01B0                     l3524:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1927  01B0  3003               	movlw	3
  1928  01B1  04B7               	iorwf	sprintf@flag^(0+128),f
  1929  01B2  3000               	movlw	0
  1930  01B3  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1931  01B4                     l3526:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1934  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1935  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1936  01B6  01BF               	clrf	sprintf@eexp^(0+128)
  1937  01B7  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  1938  01B8                     l3528:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1941  01B8  0844               	movf	(sprintf@fval+3)^(0+128),w
  1942  01B9  00F3               	movwf	___fleq@ff1+3
  1943  01BA  0843               	movf	(sprintf@fval+2)^(0+128),w
  1944  01BB  00F2               	movwf	___fleq@ff1+2
  1945  01BC  0842               	movf	(sprintf@fval+1)^(0+128),w
  1946  01BD  00F1               	movwf	___fleq@ff1+1
  1947  01BE  0841               	movf	sprintf@fval^(0+128),w
  1948  01BF  00F0               	movwf	___fleq@ff1
  1949  01C0  3000               	movlw	0
  1950  01C1  00F7               	movwf	___fleq@ff2+3
  1951  01C2  3000               	movlw	0
  1952  01C3  00F6               	movwf	___fleq@ff2+2
  1953  01C4  3000               	movlw	0
  1954  01C5  00F5               	movwf	___fleq@ff2+1
  1955  01C6  3000               	movlw	0
  1956  01C7  00F4               	movwf	___fleq@ff2
  1957  01C8  160A  158A  23A0  120A  118A  	fcall	___fleq
  1958  01CD  1803               	btfsc	3,0
  1959  01CE  29D0               	goto	u5741
  1960  01CF  29D1               	goto	u5740
  1961  01D0                     u5741:
  1962  01D0  2AC1               	goto	l3554
  1963  01D1                     u5740:
  1964  01D1                     l3530:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1967  01D1  1003               	clrc
  1968  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1969  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1970  01D4  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  1971  01D5  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  1972  01D6  3E82               	addlw	130
  1973  01D7  00BF               	movwf	sprintf@eexp^(0+128)
  1974  01D8  30FF               	movlw	255
  1975  01D9  1803               	skipnc
  1976  01DA  3000               	movlw	0
  1977  01DB  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  1978  01DC                     l3532:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1981  01DC  30FF               	movlw	255
  1982  01DD  07BF               	addwf	sprintf@eexp^(0+128),f
  1983  01DE  1803               	skipnc
  1984  01DF  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  1985  01E0  30FF               	movlw	255
  1986  01E1  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  1987  01E2                     l3534:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1990  01E2  3003               	movlw	3
  1991  01E3  00F0               	movwf	___wmul@multiplier
  1992  01E4  3000               	movlw	0
  1993  01E5  00F1               	movwf	___wmul@multiplier+1
  1994  01E6  0840               	movf	(sprintf@eexp+1)^(0+128),w
  1995  01E7  00F3               	movwf	___wmul@multiplicand+1
  1996  01E8  083F               	movf	sprintf@eexp^(0+128),w
  1997  01E9  00F2               	movwf	___wmul@multiplicand
  1998  01EA  160A  158A  2249  120A  118A  	fcall	___wmul
  1999  01EF  0871               	movf	?___wmul+1,w
  2000  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2001  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2002  01F2  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2003  01F3  0870               	movf	?___wmul,w
  2004  01F4  00BF               	movwf	sprintf@eexp^(0+128)
  2005  01F5                     l3536:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2008  01F5  300A               	movlw	10
  2009  01F6  00F7               	movwf	___awdiv@divisor
  2010  01F7  3000               	movlw	0
  2011  01F8  00F8               	movwf	___awdiv@divisor+1
  2012  01F9  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2013  01FA  00FA               	movwf	___awdiv@dividend+1
  2014  01FB  083F               	movf	sprintf@eexp^(0+128),w
  2015  01FC  00F9               	movwf	___awdiv@dividend
  2016  01FD  120A  118A  200C  120A  118A  	fcall	___awdiv
  2017  0202  0878               	movf	?___awdiv+1,w
  2018  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0205  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2021  0206  0877               	movf	?___awdiv,w
  2022  0207  00BF               	movwf	sprintf@eexp^(0+128)
  2023  0208                     l3538:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2026  0208  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2027  0209  2A0B               	goto	u5751
  2028  020A  2A0C               	goto	u5750
  2029  020B                     u5751:
  2030  020B  2A12               	goto	l3542
  2031  020C                     u5750:
  2032  020C                     l3540:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2035  020C  30FF               	movlw	255
  2036  020D  07BF               	addwf	sprintf@eexp^(0+128),f
  2037  020E  1803               	skipnc
  2038  020F  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2039  0210  30FF               	movlw	255
  2040  0211  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2041  0212                     l3542:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2044  0212  033F               	decf	sprintf@eexp^(0+128),w
  2045  0213  3AFF               	xorlw	255
  2046  0214  120A  158A  2140  120A  118A  	fcall	_scale
  2047  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2048  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2049  021B  0841               	movf	?_scale+3,w
  2050  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2051  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2052  021E  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2053  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0221  0840               	movf	?_scale+2,w
  2056  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2058  0224  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2059  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0227  083F               	movf	?_scale+1,w
  2062  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2064  022A  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2065  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2066  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2067  022D  083E               	movf	?_scale,w
  2068  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2069  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2070  0230  00BB               	movwf	sprintf@tmpval^(0+128)
  2071  0231                     l3544:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2074  0231  0844               	movf	(sprintf@fval+3)^(0+128),w
  2075  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0234  00A7               	movwf	___flmul@b+3
  2078  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0237  0843               	movf	(sprintf@fval+2)^(0+128),w
  2081  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2083  023A  00A6               	movwf	___flmul@b+2
  2084  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2085  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2086  023D  0842               	movf	(sprintf@fval+1)^(0+128),w
  2087  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2088  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0240  00A5               	movwf	___flmul@b+1
  2090  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0243  0841               	movf	sprintf@fval^(0+128),w
  2093  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0246  00A4               	movwf	___flmul@b
  2096  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0249  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2099  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2100  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2101  024C  00AB               	movwf	___flmul@a+3
  2102  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2103  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2104  024F  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2105  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2106  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2107  0252  00AA               	movwf	___flmul@a+2
  2108  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0254  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0255  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2111  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0258  00A9               	movwf	___flmul@a+1
  2114  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2115  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2116  025B  083B               	movf	sprintf@tmpval^(0+128),w
  2117  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2118  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2119  025E  00A8               	movwf	___flmul@a
  2120  025F  120A  158A  249F  120A  118A  	fcall	___flmul
  2121  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0266  0827               	movf	?___flmul+3,w
  2124  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0269  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2127  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2128  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2129  026C  0826               	movf	?___flmul+2,w
  2130  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2131  026E  1303               	bcf	3,6	;RP1=0, select bank1
  2132  026F  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2133  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0272  0825               	movf	?___flmul+1,w
  2136  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0275  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2139  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0278  0824               	movf	?___flmul,w
  2142  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2143  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2144  027B  00BB               	movwf	sprintf@tmpval^(0+128)
  2145  027C                     l3546:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2148  027C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2149  027D  00F3               	movwf	___flge@ff1+3
  2150  027E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2151  027F  00F2               	movwf	___flge@ff1+2
  2152  0280  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2153  0281  00F1               	movwf	___flge@ff1+1
  2154  0282  083B               	movf	sprintf@tmpval^(0+128),w
  2155  0283  00F0               	movwf	___flge@ff1
  2156  0284  303F               	movlw	63
  2157  0285  00F7               	movwf	___flge@ff2+3
  2158  0286  3080               	movlw	128
  2159  0287  00F6               	movwf	___flge@ff2+2
  2160  0288  3000               	movlw	0
  2161  0289  00F5               	movwf	___flge@ff2+1
  2162  028A  3000               	movlw	0
  2163  028B  00F4               	movwf	___flge@ff2
  2164  028C  160A  158A  26A4  120A  118A  	fcall	___flge
  2165  0291  1803               	btfsc	3,0
  2166  0292  2A94               	goto	u5761
  2167  0293  2A95               	goto	u5760
  2168  0294                     u5761:
  2169  0294  2A9E               	goto	l3550
  2170  0295                     u5760:
  2171  0295                     l3548:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2174  0295  30FF               	movlw	255
  2175  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0298  07BF               	addwf	sprintf@eexp^(0+128),f
  2178  0299  1803               	skipnc
  2179  029A  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2180  029B  30FF               	movlw	255
  2181  029C  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2182  029D  2AC1               	goto	l3554
  2183  029E                     l3550:
  2184  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2185  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2186  02A0  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2187  02A1  00F3               	movwf	___flge@ff1+3
  2188  02A2  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2189  02A3  00F2               	movwf	___flge@ff1+2
  2190  02A4  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2191  02A5  00F1               	movwf	___flge@ff1+1
  2192  02A6  083B               	movf	sprintf@tmpval^(0+128),w
  2193  02A7  00F0               	movwf	___flge@ff1
  2194  02A8  3041               	movlw	65
  2195  02A9  00F7               	movwf	___flge@ff2+3
  2196  02AA  3020               	movlw	32
  2197  02AB  00F6               	movwf	___flge@ff2+2
  2198  02AC  3000               	movlw	0
  2199  02AD  00F5               	movwf	___flge@ff2+1
  2200  02AE  3000               	movlw	0
  2201  02AF  00F4               	movwf	___flge@ff2
  2202  02B0  160A  158A  26A4  120A  118A  	fcall	___flge
  2203  02B5  1C03               	btfss	3,0
  2204  02B6  2AB8               	goto	u5771
  2205  02B7  2AB9               	goto	u5770
  2206  02B8                     u5771:
  2207  02B8  2AC1               	goto	l3554
  2208  02B9                     u5770:
  2209  02B9                     l3552:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2212  02B9  3001               	movlw	1
  2213  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2214  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2215  02BC  07BF               	addwf	sprintf@eexp^(0+128),f
  2216  02BD  1803               	skipnc
  2217  02BE  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2218  02BF  3000               	movlw	0
  2219  02C0  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2220  02C1                     l3554:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2223  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2224  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2225  02C3  0847               	movf	(sprintf@prec+1)^(0+128),w
  2226  02C4  3A80               	xorlw	128
  2227  02C5  00FF               	movwf	btemp+1
  2228  02C6  3080               	movlw	128
  2229  02C7  027F               	subwf	btemp+1,w
  2230  02C8  1D03               	skipz
  2231  02C9  2ACC               	goto	u5785
  2232  02CA  300D               	movlw	13
  2233  02CB  0246               	subwf	sprintf@prec^(0+128),w
  2234  02CC                     u5785:
  2235  02CC  1803               	skipnc
  2236  02CD  2ACF               	goto	u5781
  2237  02CE  2AD0               	goto	u5780
  2238  02CF                     u5781:
  2239  02CF  2B17               	goto	l3558
  2240  02D0                     u5780:
  2241  02D0                     l3556:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2244  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2245  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2246  02D2  0846               	movf	sprintf@prec^(0+128),w
  2247  02D3  160A  118A  236D  120A  118A  	fcall	_fround
  2248  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2249  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2250  02DA  0841               	movf	?_fround+3,w
  2251  02DB  00D5               	movwf	___fladd@b+3
  2252  02DC  0840               	movf	?_fround+2,w
  2253  02DD  00D4               	movwf	___fladd@b+2
  2254  02DE  083F               	movf	?_fround+1,w
  2255  02DF  00D3               	movwf	___fladd@b+1
  2256  02E0  083E               	movf	?_fround,w
  2257  02E1  00D2               	movwf	___fladd@b
  2258  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2259  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2260  02E4  0844               	movf	(sprintf@fval+3)^(0+128),w
  2261  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2262  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2263  02E7  00D9               	movwf	___fladd@a+3
  2264  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2265  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2266  02EA  0843               	movf	(sprintf@fval+2)^(0+128),w
  2267  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2268  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2269  02ED  00D8               	movwf	___fladd@a+2
  2270  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2271  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2272  02F0  0842               	movf	(sprintf@fval+1)^(0+128),w
  2273  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2274  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2275  02F3  00D7               	movwf	___fladd@a+1
  2276  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2277  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2278  02F6  0841               	movf	sprintf@fval^(0+128),w
  2279  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2280  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2281  02F9  00D6               	movwf	___fladd@a
  2282  02FA  160A  118A  2578  120A  118A  	fcall	___fladd
  2283  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0301  0855               	movf	?___fladd+3,w
  2286  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2287  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2288  0304  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2289  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0307  0854               	movf	?___fladd+2,w
  2292  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2293  0309  1303               	bcf	3,6	;RP1=0, select bank1
  2294  030A  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2295  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2296  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2297  030D  0853               	movf	?___fladd+1,w
  2298  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2299  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2300  0310  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2301  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0313  0852               	movf	?___fladd,w
  2304  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0316  00C1               	movwf	sprintf@fval^(0+128)
  2307  0317                     l3558:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2310  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2312  0319  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2313  031A  3A80               	xorlw	128
  2314  031B  00FF               	movwf	btemp+1
  2315  031C  3080               	movlw	128
  2316  031D  027F               	subwf	btemp+1,w
  2317  031E  1D03               	skipz
  2318  031F  2B22               	goto	u5795
  2319  0320  300A               	movlw	10
  2320  0321  023F               	subwf	sprintf@eexp^(0+128),w
  2321  0322                     u5795:
  2322  0322  1803               	skipnc
  2323  0323  2B25               	goto	u5791
  2324  0324  2B26               	goto	u5790
  2325  0325                     u5791:
  2326  0325  2B77               	goto	l3566
  2327  0326                     u5790:
  2328  0326                     l3560:
  2329  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2330  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2331  0328  0844               	movf	(sprintf@fval+3)^(0+128),w
  2332  0329  00F3               	movwf	___fleq@ff1+3
  2333  032A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2334  032B  00F2               	movwf	___fleq@ff1+2
  2335  032C  0842               	movf	(sprintf@fval+1)^(0+128),w
  2336  032D  00F1               	movwf	___fleq@ff1+1
  2337  032E  0841               	movf	sprintf@fval^(0+128),w
  2338  032F  00F0               	movwf	___fleq@ff1
  2339  0330  3000               	movlw	0
  2340  0331  00F7               	movwf	___fleq@ff2+3
  2341  0332  3000               	movlw	0
  2342  0333  00F6               	movwf	___fleq@ff2+2
  2343  0334  3000               	movlw	0
  2344  0335  00F5               	movwf	___fleq@ff2+1
  2345  0336  3000               	movlw	0
  2346  0337  00F4               	movwf	___fleq@ff2
  2347  0338  160A  158A  23A0  120A  118A  	fcall	___fleq
  2348  033D  1803               	btfsc	3,0
  2349  033E  2B40               	goto	u5801
  2350  033F  2B41               	goto	u5800
  2351  0340                     u5801:
  2352  0340  2BE9               	goto	l3580
  2353  0341                     u5800:
  2354  0341                     l3562:
  2355  0341  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0342  1303               	bcf	3,6	;RP1=0, select bank1
  2357  0343  0844               	movf	(sprintf@fval+3)^(0+128),w
  2358  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0346  00D4               	movwf	___fltol@f1+3
  2361  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2362  0348  1303               	bcf	3,6	;RP1=0, select bank1
  2363  0349  0843               	movf	(sprintf@fval+2)^(0+128),w
  2364  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2365  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2366  034C  00D3               	movwf	___fltol@f1+2
  2367  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2368  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2369  034F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2370  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0352  00D2               	movwf	___fltol@f1+1
  2373  0353  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0354  1303               	bcf	3,6	;RP1=0, select bank1
  2375  0355  0841               	movf	sprintf@fval^(0+128),w
  2376  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0358  00D1               	movwf	___fltol@f1
  2379  0359  120A  158A  2006  120A  118A  	fcall	___fltol
  2380  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2381  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0360  0854               	movf	?___fltol+3,w
  2383  0361  0453               	iorwf	?___fltol+2,w
  2384  0362  0452               	iorwf	?___fltol+1,w
  2385  0363  0451               	iorwf	?___fltol,w
  2386  0364  1D03               	skipz
  2387  0365  2B67               	goto	u5811
  2388  0366  2B68               	goto	u5810
  2389  0367                     u5811:
  2390  0367  2BE9               	goto	l3580
  2391  0368                     u5810:
  2392  0368                     l3564:
  2393  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2395  036A  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2396  036B  3A80               	xorlw	128
  2397  036C  00FF               	movwf	btemp+1
  2398  036D  3080               	movlw	128
  2399  036E  027F               	subwf	btemp+1,w
  2400  036F  1D03               	skipz
  2401  0370  2B73               	goto	u5825
  2402  0371  3002               	movlw	2
  2403  0372  023F               	subwf	sprintf@eexp^(0+128),w
  2404  0373                     u5825:
  2405  0373  1C03               	skipc
  2406  0374  2B76               	goto	u5821
  2407  0375  2B77               	goto	u5820
  2408  0376                     u5821:
  2409  0376  2BE9               	goto	l3580
  2410  0377                     u5820:
  2411  0377                     l3566:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2414  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0379  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2417  037A  00F3               	movwf	___flge@ff1+3
  2418  037B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2419  037C  00F2               	movwf	___flge@ff1+2
  2420  037D  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2421  037E  00F1               	movwf	___flge@ff1+1
  2422  037F  083B               	movf	sprintf@tmpval^(0+128),w
  2423  0380  00F0               	movwf	___flge@ff1
  2424  0381  3040               	movlw	64
  2425  0382  00F7               	movwf	___flge@ff2+3
  2426  0383  3089               	movlw	137
  2427  0384  00F6               	movwf	___flge@ff2+2
  2428  0385  3070               	movlw	112
  2429  0386  00F5               	movwf	___flge@ff2+1
  2430  0387  305F               	movlw	95
  2431  0388  00F4               	movwf	___flge@ff2
  2432  0389  160A  158A  26A4  120A  118A  	fcall	___flge
  2433  038E  1803               	btfsc	3,0
  2434  038F  2B91               	goto	u5831
  2435  0390  2B92               	goto	u5830
  2436  0391                     u5831:
  2437  0391  2B9B               	goto	l3570
  2438  0392                     u5830:
  2439  0392                     l3568:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2442  0392  30F7               	movlw	247
  2443  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2445  0395  07BF               	addwf	sprintf@eexp^(0+128),f
  2446  0396  1803               	skipnc
  2447  0397  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2448  0398  30FF               	movlw	255
  2449  0399  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2452  039A  2BA3               	goto	l3572
  2453  039B                     l3570:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2456  039B  30F8               	movlw	248
  2457  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2458  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2459  039E  07BF               	addwf	sprintf@eexp^(0+128),f
  2460  039F  1803               	skipnc
  2461  03A0  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2462  03A1  30FF               	movlw	255
  2463  03A2  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2464  03A3                     l3572:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2467  03A3  083F               	movf	sprintf@eexp^(0+128),w
  2468  03A4  120A  158A  2140  120A  118A  	fcall	_scale
  2469  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2470  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2471  03AB  0841               	movf	?_scale+3,w
  2472  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2473  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2474  03AE  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2475  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2476  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2477  03B1  0840               	movf	?_scale+2,w
  2478  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2479  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2480  03B4  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2481  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2482  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2483  03B7  083F               	movf	?_scale+1,w
  2484  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2485  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2486  03BA  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2487  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2488  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2489  03BD  083E               	movf	?_scale,w
  2490  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2491  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2492  03C0  00BB               	movwf	sprintf@tmpval^(0+128)
  2493  03C1                     l3574:
  2494  03C1  0844               	movf	(sprintf@fval+3)^(0+128),w
  2495  03C2  00F3               	movwf	__div_to_l_@f1+3
  2496  03C3  0843               	movf	(sprintf@fval+2)^(0+128),w
  2497  03C4  00F2               	movwf	__div_to_l_@f1+2
  2498  03C5  0842               	movf	(sprintf@fval+1)^(0+128),w
  2499  03C6  00F1               	movwf	__div_to_l_@f1+1
  2500  03C7  0841               	movf	sprintf@fval^(0+128),w
  2501  03C8  00F0               	movwf	__div_to_l_@f1
  2502  03C9  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2503  03CA  00F7               	movwf	__div_to_l_@f2+3
  2504  03CB  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2505  03CC  00F6               	movwf	__div_to_l_@f2+2
  2506  03CD  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2507  03CE  00F5               	movwf	__div_to_l_@f2+1
  2508  03CF  083B               	movf	sprintf@tmpval^(0+128),w
  2509  03D0  00F4               	movwf	__div_to_l_@f2
  2510  03D1  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2511  03D6  0873               	movf	?__div_to_l_+3,w
  2512  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2513  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2514  03D9  00B6               	movwf	(sprintf@val+3)^(0+128)
  2515  03DA  0872               	movf	?__div_to_l_+2,w
  2516  03DB  00B5               	movwf	(sprintf@val+2)^(0+128)
  2517  03DC  0871               	movf	?__div_to_l_+1,w
  2518  03DD  00B4               	movwf	(sprintf@val+1)^(0+128)
  2519  03DE  0870               	movf	?__div_to_l_,w
  2520  03DF  00B3               	movwf	sprintf@val^(0+128)
  2521  03E0                     l3578:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2524  03E0  3000               	movlw	0
  2525  03E1  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2526  03E2  3000               	movlw	0
  2527  03E3  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2528  03E4  3000               	movlw	0
  2529  03E5  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2530  03E6  3000               	movlw	0
  2531  03E7  00C1               	movwf	sprintf@fval^(0+128)
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2534  03E8  2C6D               	goto	l3586
  2535  03E9                     l3580:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2538  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2539  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2540  03EB  0844               	movf	(sprintf@fval+3)^(0+128),w
  2541  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2542  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2543  03EE  00D4               	movwf	___fltol@f1+3
  2544  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2545  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2546  03F1  0843               	movf	(sprintf@fval+2)^(0+128),w
  2547  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2548  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2549  03F4  00D3               	movwf	___fltol@f1+2
  2550  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2551  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2552  03F7  0842               	movf	(sprintf@fval+1)^(0+128),w
  2553  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2554  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2555  03FA  00D2               	movwf	___fltol@f1+1
  2556  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2557  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2558  03FD  0841               	movf	sprintf@fval^(0+128),w
  2559  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2560  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0400  00D1               	movwf	___fltol@f1
  2562  0401  120A  158A  2006  120A  118A  	fcall	___fltol
  2563  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2564  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2565  0408  0854               	movf	?___fltol+3,w
  2566  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2567  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2568  040B  00B6               	movwf	(sprintf@val+3)^(0+128)
  2569  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2570  040D  1303               	bcf	3,6	;RP1=0, select bank0
  2571  040E  0853               	movf	?___fltol+2,w
  2572  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2573  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2574  0411  00B5               	movwf	(sprintf@val+2)^(0+128)
  2575  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0414  0852               	movf	?___fltol+1,w
  2578  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0417  00B4               	movwf	(sprintf@val+1)^(0+128)
  2581  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2583  041A  0851               	movf	?___fltol,w
  2584  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2585  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2586  041D  00B3               	movwf	sprintf@val^(0+128)
  2587  041E                     l3582:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2590  041E  0836               	movf	(sprintf@val+3)^(0+128),w
  2591  041F  00F3               	movwf	___xxtofl@val+3
  2592  0420  0835               	movf	(sprintf@val+2)^(0+128),w
  2593  0421  00F2               	movwf	___xxtofl@val+2
  2594  0422  0834               	movf	(sprintf@val+1)^(0+128),w
  2595  0423  00F1               	movwf	___xxtofl@val+1
  2596  0424  0833               	movf	sprintf@val^(0+128),w
  2597  0425  00F0               	movwf	___xxtofl@val
  2598  0426  3000               	movlw	0
  2599  0427  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2600  042C  0873               	movf	?___xxtofl+3,w
  2601  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2602  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2603  042F  00E9               	movwf	___flsub@a+3
  2604  0430  0872               	movf	?___xxtofl+2,w
  2605  0431  00E8               	movwf	___flsub@a+2
  2606  0432  0871               	movf	?___xxtofl+1,w
  2607  0433  00E7               	movwf	___flsub@a+1
  2608  0434  0870               	movf	?___xxtofl,w
  2609  0435  00E6               	movwf	___flsub@a
  2610  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2611  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2612  0438  0844               	movf	(sprintf@fval+3)^(0+128),w
  2613  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2614  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2615  043B  00ED               	movwf	___flsub@b+3
  2616  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2617  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2618  043E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2619  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0441  00EC               	movwf	___flsub@b+2
  2622  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0444  0842               	movf	(sprintf@fval+1)^(0+128),w
  2625  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0447  00EB               	movwf	___flsub@b+1
  2628  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2630  044A  0841               	movf	sprintf@fval^(0+128),w
  2631  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2632  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2633  044D  00EA               	movwf	___flsub@b
  2634  044E  160A  158A  2225  120A  118A  	fcall	___flsub
  2635  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0455  0869               	movf	?___flsub+3,w
  2638  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2639  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2640  0458  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2641  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2642  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2643  045B  0868               	movf	?___flsub+2,w
  2644  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2645  045D  1303               	bcf	3,6	;RP1=0, select bank1
  2646  045E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2647  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0461  0867               	movf	?___flsub+1,w
  2650  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0464  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2653  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0467  0866               	movf	?___flsub,w
  2656  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2658  046A  00C1               	movwf	sprintf@fval^(0+128)
  2659  046B                     l3584:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2662  046B  01BF               	clrf	sprintf@eexp^(0+128)
  2663  046C  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2664  046D                     l3586:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2667  046D  01C8               	clrf	sprintf@c^(0+128)
  2668  046E  0AC8               	incf	sprintf@c^(0+128),f
  2669  046F                     l3592:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2672  046F  0848               	movf	sprintf@c^(0+128),w
  2673  0470  00A9               	movwf	??_sprintf^(0+128)
  2674  0471  3001               	movlw	1
  2675  0472                     u5845:
  2676  0472  1003               	clrc
  2677  0473  0DA9               	rlf	??_sprintf^(0+128),f
  2678  0474  3EFF               	addlw	-1
  2679  0475  1D03               	skipz
  2680  0476  2C72               	goto	u5845
  2681  0477  1003               	clrc
  2682  0478  0D29               	rlf	??_sprintf^(0+128),w
  2683  0479  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2684  047A  0084               	movwf	4
  2685  047B  160A  118A  200A  120A  118A  	fcall	stringdir
  2686  0480  00AA               	movwf	(??_sprintf+1)^(0+128)
  2687  0481  160A  118A  200A  120A  118A  	fcall	stringdir
  2688  0486  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
  2689  0487  160A  118A  200A  120A  118A  	fcall	stringdir
  2690  048C  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
  2691  048D  160A  118A  200A  120A  118A  	fcall	stringdir
  2692  0492  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
  2693  0493  082D               	movf	(??_sprintf+4)^(0+128),w
  2694  0494  0236               	subwf	(sprintf@val+3)^(0+128),w
  2695  0495  1D03               	skipz
  2696  0496  2CA1               	goto	u5855
  2697  0497  082C               	movf	(??_sprintf+3)^(0+128),w
  2698  0498  0235               	subwf	(sprintf@val+2)^(0+128),w
  2699  0499  1D03               	skipz
  2700  049A  2CA1               	goto	u5855
  2701  049B  082B               	movf	(??_sprintf+2)^(0+128),w
  2702  049C  0234               	subwf	(sprintf@val+1)^(0+128),w
  2703  049D  1D03               	skipz
  2704  049E  2CA1               	goto	u5855
  2705  049F  082A               	movf	(??_sprintf+1)^(0+128),w
  2706  04A0  0233               	subwf	sprintf@val^(0+128),w
  2707  04A1                     u5855:
  2708  04A1  1803               	skipnc
  2709  04A2  2CA4               	goto	u5851
  2710  04A3  2CA5               	goto	u5850
  2711  04A4                     u5851:
  2712  04A4  2CA6               	goto	l3596
  2713  04A5                     u5850:
  2714  04A5  2CB0               	goto	l3598
  2715  04A6                     l3596:
  2716  04A6  3001               	movlw	1
  2717  04A7  00A9               	movwf	??_sprintf^(0+128)
  2718  04A8  0829               	movf	??_sprintf^(0+128),w
  2719  04A9  07C8               	addwf	sprintf@c^(0+128),f
  2720  04AA  300A               	movlw	10
  2721  04AB  0648               	xorwf	sprintf@c^(0+128),w
  2722  04AC  1D03               	btfss	3,2
  2723  04AD  2CAF               	goto	u5861
  2724  04AE  2CB0               	goto	u5860
  2725  04AF                     u5861:
  2726  04AF  2C6F               	goto	l3592
  2727  04B0                     u5860:
  2728  04B0                     l3598:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2731  04B0  0848               	movf	sprintf@c^(0+128),w
  2732  04B1  0746               	addwf	sprintf@prec^(0+128),w
  2733  04B2  00A9               	movwf	??_sprintf^(0+128)
  2734  04B3  0847               	movf	(sprintf@prec+1)^(0+128),w
  2735  04B4  1803               	skipnc
  2736  04B5  0A47               	incf	(sprintf@prec+1)^(0+128),w
  2737  04B6  00AA               	movwf	(??_sprintf^(0+128)+1)
  2738  04B7  083F               	movf	sprintf@eexp^(0+128),w
  2739  04B8  0729               	addwf	??_sprintf^(0+128),w
  2740  04B9  00AB               	movwf	(??_sprintf+2)^(0+128)
  2741  04BA  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2742  04BB  1803               	skipnc
  2743  04BC  0A40               	incf	(sprintf@eexp+1)^(0+128),w
  2744  04BD  072A               	addwf	(??_sprintf+1)^(0+128),w
  2745  04BE  00AC               	movwf	(??_sprintf+3)^(0+128)
  2746  04BF  082B               	movf	(??_sprintf+2)^(0+128),w
  2747  04C0  02B9               	subwf	sprintf@width^(0+128),f
  2748  04C1  082C               	movf	(??_sprintf+3)^(0+128),w
  2749  04C2  1C03               	skipc
  2750  04C3  03BA               	decf	(sprintf@width+1)^(0+128),f
  2751  04C4  02BA               	subwf	(sprintf@width+1)^(0+128),f
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  2754  04C5  0846               	movf	sprintf@prec^(0+128),w
  2755  04C6  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  2756  04C7  1903               	btfsc	3,2
  2757  04C8  2CCA               	goto	u5871
  2758  04C9  2CCB               	goto	u5870
  2759  04CA                     u5871:
  2760  04CA  2CD1               	goto	l3602
  2761  04CB                     u5870:
  2762  04CB                     l3600:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2765  04CB  30FF               	movlw	255
  2766  04CC  07B9               	addwf	sprintf@width^(0+128),f
  2767  04CD  1803               	skipnc
  2768  04CE  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2769  04CF  30FF               	movlw	255
  2770  04D0  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2771  04D1                     l3602:
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2774  04D1  3003               	movlw	3
  2775  04D2  0537               	andwf	sprintf@flag^(0+128),w
  2776  04D3  00A9               	movwf	??_sprintf^(0+128)
  2777  04D4  3000               	movlw	0
  2778  04D5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2779  04D6  00AA               	movwf	(??_sprintf+1)^(0+128)
  2780  04D7  0829               	movf	??_sprintf^(0+128),w
  2781  04D8  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2782  04D9  1903               	btfsc	3,2
  2783  04DA  2CDC               	goto	u5881
  2784  04DB  2CDD               	goto	u5880
  2785  04DC                     u5881:
  2786  04DC  2CF2               	goto	l3612
  2787  04DD                     u5880:
  2788  04DD                     l3604:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2791  04DD  30FF               	movlw	255
  2792  04DE  07B9               	addwf	sprintf@width^(0+128),f
  2793  04DF  1803               	skipnc
  2794  04E0  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2795  04E1  30FF               	movlw	255
  2796  04E2  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2797  04E3  2CF2               	goto	l3612
  2798  04E4                     l3606:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2801  04E4  3020               	movlw	32
  2802  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2803  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2804  04E7  00A9               	movwf	??_sprintf^(0+128)
  2805  04E8  0845               	movf	sprintf@sp^(0+128),w
  2806  04E9  0084               	movwf	4
  2807  04EA  0829               	movf	??_sprintf^(0+128),w
  2808  04EB  1383               	bcf	3,7	;select IRP bank0
  2809  04EC  0080               	movwf	0
  2810  04ED                     l3608:
  2811  04ED  3001               	movlw	1
  2812  04EE  00A9               	movwf	??_sprintf^(0+128)
  2813  04EF  0829               	movf	??_sprintf^(0+128),w
  2814  04F0  07C5               	addwf	sprintf@sp^(0+128),f
  2815  04F1  2CDD               	goto	l3604
  2816  04F2                     l3612:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2819  04F2  083A               	movf	(sprintf@width+1)^(0+128),w
  2820  04F3  3A80               	xorlw	128
  2821  04F4  00FF               	movwf	btemp+1
  2822  04F5  3080               	movlw	128
  2823  04F6  027F               	subwf	btemp+1,w
  2824  04F7  1D03               	skipz
  2825  04F8  2CFB               	goto	u5895
  2826  04F9  3001               	movlw	1
  2827  04FA  0239               	subwf	sprintf@width^(0+128),w
  2828  04FB                     u5895:
  2829  04FB  1803               	skipnc
  2830  04FC  2CFE               	goto	u5891
  2831  04FD  2CFF               	goto	u5890
  2832  04FE                     u5891:
  2833  04FE  2CE4               	goto	l3606
  2834  04FF                     u5890:
  2835  04FF                     l3614:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  2838  04FF  3003               	movlw	3
  2839  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2840  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2841  0502  0537               	andwf	sprintf@flag^(0+128),w
  2842  0503  00A9               	movwf	??_sprintf^(0+128)
  2843  0504  3000               	movlw	0
  2844  0505  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2845  0506  00AA               	movwf	(??_sprintf+1)^(0+128)
  2846  0507  0829               	movf	??_sprintf^(0+128),w
  2847  0508  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2848  0509  1903               	btfsc	3,2
  2849  050A  2D0C               	goto	u5901
  2850  050B  2D0D               	goto	u5900
  2851  050C                     u5901:
  2852  050C  2D7F               	goto	l319
  2853  050D                     u5900:
  2854  050D                     l3616:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2857  050D  302D               	movlw	45
  2858  050E  00A9               	movwf	??_sprintf^(0+128)
  2859  050F  0845               	movf	sprintf@sp^(0+128),w
  2860  0510  0084               	movwf	4
  2861  0511  0829               	movf	??_sprintf^(0+128),w
  2862  0512  1383               	bcf	3,7	;select IRP bank0
  2863  0513  0080               	movwf	0
  2864  0514                     l3618:
  2865  0514  3001               	movlw	1
  2866  0515  00A9               	movwf	??_sprintf^(0+128)
  2867  0516  0829               	movf	??_sprintf^(0+128),w
  2868  0517  07C5               	addwf	sprintf@sp^(0+128),f
  2869  0518  2D7F               	goto	l319
  2870  0519                     l3620:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2873  0519  0848               	movf	sprintf@c^(0+128),w
  2874  051A  00A9               	movwf	??_sprintf^(0+128)
  2875  051B  3001               	movlw	1
  2876  051C                     u5915:
  2877  051C  1003               	clrc
  2878  051D  0DA9               	rlf	??_sprintf^(0+128),f
  2879  051E  3EFF               	addlw	-1
  2880  051F  1D03               	skipz
  2881  0520  2D1C               	goto	u5915
  2882  0521  1003               	clrc
  2883  0522  0D29               	rlf	??_sprintf^(0+128),w
  2884  0523  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2885  0524  0084               	movwf	4
  2886  0525  160A  118A  200A  120A  118A  	fcall	stringdir
  2887  052A  00F0               	movwf	___lldiv@divisor
  2888  052B  160A  118A  200A  120A  118A  	fcall	stringdir
  2889  0530  00F1               	movwf	___lldiv@divisor+1
  2890  0531  160A  118A  200A  120A  118A  	fcall	stringdir
  2891  0536  00F2               	movwf	___lldiv@divisor+2
  2892  0537  160A  118A  200A  120A  118A  	fcall	stringdir
  2893  053C  00F3               	movwf	___lldiv@divisor+3
  2894  053D  0836               	movf	(sprintf@val+3)^(0+128),w
  2895  053E  00F7               	movwf	___lldiv@dividend+3
  2896  053F  0835               	movf	(sprintf@val+2)^(0+128),w
  2897  0540  00F6               	movwf	___lldiv@dividend+2
  2898  0541  0834               	movf	(sprintf@val+1)^(0+128),w
  2899  0542  00F5               	movwf	___lldiv@dividend+1
  2900  0543  0833               	movf	sprintf@val^(0+128),w
  2901  0544  00F4               	movwf	___lldiv@dividend
  2902  0545  160A  158A  249B  120A  118A  	fcall	___lldiv
  2903  054A  0873               	movf	?___lldiv+3,w
  2904  054B  1683               	bsf	3,5	;RP0=1, select bank1
  2905  054C  1303               	bcf	3,6	;RP1=0, select bank1
  2906  054D  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2907  054E  0872               	movf	?___lldiv+2,w
  2908  054F  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2909  0550  0871               	movf	?___lldiv+1,w
  2910  0551  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2911  0552  0870               	movf	?___lldiv,w
  2912  0553  00BB               	movwf	sprintf@tmpval^(0+128)
  2913  0554                     l3622:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2916  0554  3000               	movlw	0
  2917  0555  00F3               	movwf	___llmod@divisor+3
  2918  0556  3000               	movlw	0
  2919  0557  00F2               	movwf	___llmod@divisor+2
  2920  0558  3000               	movlw	0
  2921  0559  00F1               	movwf	___llmod@divisor+1
  2922  055A  300A               	movlw	10
  2923  055B  00F0               	movwf	___llmod@divisor
  2924  055C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2925  055D  00F7               	movwf	___llmod@dividend+3
  2926  055E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2927  055F  00F6               	movwf	___llmod@dividend+2
  2928  0560  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2929  0561  00F5               	movwf	___llmod@dividend+1
  2930  0562  083B               	movf	sprintf@tmpval^(0+128),w
  2931  0563  00F4               	movwf	___llmod@dividend
  2932  0564  160A  158A  23EE  120A  118A  	fcall	___llmod
  2933  0569  0873               	movf	?___llmod+3,w
  2934  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2935  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2936  056C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2937  056D  0872               	movf	?___llmod+2,w
  2938  056E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2939  056F  0871               	movf	?___llmod+1,w
  2940  0570  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2941  0571  0870               	movf	?___llmod,w
  2942  0572  00BB               	movwf	sprintf@tmpval^(0+128)
  2943  0573                     l3624:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2946  0573  083B               	movf	sprintf@tmpval^(0+128),w
  2947  0574  3E30               	addlw	48
  2948  0575  00A9               	movwf	??_sprintf^(0+128)
  2949  0576  0845               	movf	sprintf@sp^(0+128),w
  2950  0577  0084               	movwf	4
  2951  0578  0829               	movf	??_sprintf^(0+128),w
  2952  0579  1383               	bcf	3,7	;select IRP bank0
  2953  057A  0080               	movwf	0
  2954  057B  3001               	movlw	1
  2955  057C  00A9               	movwf	??_sprintf^(0+128)
  2956  057D  0829               	movf	??_sprintf^(0+128),w
  2957  057E  07C5               	addwf	sprintf@sp^(0+128),f
  2958  057F                     l319:	
  2959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  2960                           
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2963  057F  3001               	movlw	1
  2964  0580  02C8               	subwf	sprintf@c^(0+128),f
  2965  0581  0A48               	incf	sprintf@c^(0+128),w
  2966  0582  1D03               	btfss	3,2
  2967  0583  2D85               	goto	u5921
  2968  0584  2D86               	goto	u5920
  2969  0585                     u5921:
  2970  0585  2D19               	goto	l3620
  2971  0586                     u5920:
  2972  0586  2D9A               	goto	l3632
  2973  0587                     l3626:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2976  0587  3030               	movlw	48
  2977  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2978  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2979  058A  00A9               	movwf	??_sprintf^(0+128)
  2980  058B  0845               	movf	sprintf@sp^(0+128),w
  2981  058C  0084               	movwf	4
  2982  058D  0829               	movf	??_sprintf^(0+128),w
  2983  058E  1383               	bcf	3,7	;select IRP bank0
  2984  058F  0080               	movwf	0
  2985  0590                     l3628:
  2986  0590  3001               	movlw	1
  2987  0591  00A9               	movwf	??_sprintf^(0+128)
  2988  0592  0829               	movf	??_sprintf^(0+128),w
  2989  0593  07C5               	addwf	sprintf@sp^(0+128),f
  2990  0594                     l3630:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2993  0594  30FF               	movlw	255
  2994  0595  07BF               	addwf	sprintf@eexp^(0+128),f
  2995  0596  1803               	skipnc
  2996  0597  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2997  0598  30FF               	movlw	255
  2998  0599  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2999  059A                     l3632:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3002  059A  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3003  059B  3A80               	xorlw	128
  3004  059C  00FF               	movwf	btemp+1
  3005  059D  3080               	movlw	128
  3006  059E  027F               	subwf	btemp+1,w
  3007  059F  1D03               	skipz
  3008  05A0  2DA3               	goto	u5935
  3009  05A1  3001               	movlw	1
  3010  05A2  023F               	subwf	sprintf@eexp^(0+128),w
  3011  05A3                     u5935:
  3012  05A3  1803               	skipnc
  3013  05A4  2DA6               	goto	u5931
  3014  05A5  2DA7               	goto	u5930
  3015  05A6                     u5931:
  3016  05A6  2D87               	goto	l3626
  3017  05A7                     u5930:
  3018  05A7                     l3634:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3021  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3022  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3023  05A9  0847               	movf	(sprintf@prec+1)^(0+128),w
  3024  05AA  3A80               	xorlw	128
  3025  05AB  00FF               	movwf	btemp+1
  3026  05AC  3080               	movlw	128
  3027  05AD  027F               	subwf	btemp+1,w
  3028  05AE  1D03               	skipz
  3029  05AF  2DB2               	goto	u5945
  3030  05B0  3009               	movlw	9
  3031  05B1  0246               	subwf	sprintf@prec^(0+128),w
  3032  05B2                     u5945:
  3033  05B2  1C03               	skipc
  3034  05B3  2DB5               	goto	u5941
  3035  05B4  2DB6               	goto	u5940
  3036  05B5                     u5941:
  3037  05B5  2DBD               	goto	l3638
  3038  05B6                     u5940:
  3039  05B6                     l3636:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3042  05B6  3008               	movlw	8
  3043  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3044  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3045  05B9  00A9               	movwf	??_sprintf^(0+128)
  3046  05BA  0829               	movf	??_sprintf^(0+128),w
  3047  05BB  00C8               	movwf	sprintf@c^(0+128)
  3048  05BC  2DC3               	goto	l326
  3049  05BD                     l3638:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3052  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3053  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3054  05BF  0846               	movf	sprintf@prec^(0+128),w
  3055  05C0  00A9               	movwf	??_sprintf^(0+128)
  3056  05C1  0829               	movf	??_sprintf^(0+128),w
  3057  05C2  00C8               	movwf	sprintf@c^(0+128)
  3058  05C3                     l326:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3061  05C3  0848               	movf	sprintf@c^(0+128),w
  3062  05C4  00A9               	movwf	??_sprintf^(0+128)
  3063  05C5  01AA               	clrf	(??_sprintf^(0+128)+1)
  3064  05C6  0829               	movf	??_sprintf^(0+128),w
  3065  05C7  02C6               	subwf	sprintf@prec^(0+128),f
  3066  05C8  082A               	movf	(??_sprintf+1)^(0+128),w
  3067  05C9  1C03               	skipc
  3068  05CA  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3069  05CB  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3070  05CC                     l3640:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3073  05CC  0848               	movf	sprintf@c^(0+128),w
  3074  05CD  1903               	btfsc	3,2
  3075  05CE  2DD0               	goto	u5951
  3076  05CF  2DD1               	goto	u5950
  3077  05D0                     u5951:
  3078  05D0  2DDC               	goto	l3646
  3079  05D1                     u5950:
  3080  05D1                     l3642:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3083  05D1  302E               	movlw	46
  3084  05D2  00A9               	movwf	??_sprintf^(0+128)
  3085  05D3  0845               	movf	sprintf@sp^(0+128),w
  3086  05D4  0084               	movwf	4
  3087  05D5  0829               	movf	??_sprintf^(0+128),w
  3088  05D6  1383               	bcf	3,7	;select IRP bank0
  3089  05D7  0080               	movwf	0
  3090  05D8                     l3644:
  3091  05D8  3001               	movlw	1
  3092  05D9  00A9               	movwf	??_sprintf^(0+128)
  3093  05DA  0829               	movf	??_sprintf^(0+128),w
  3094  05DB  07C5               	addwf	sprintf@sp^(0+128),f
  3095  05DC                     l3646:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3098  05DC  0848               	movf	sprintf@c^(0+128),w
  3099  05DD  120A  158A  2140  120A  118A  	fcall	_scale
  3100  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3101  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3102  05E4  0841               	movf	?_scale+3,w
  3103  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  3104  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  3105  05E7  00B1               	movwf	(_sprintf$971+3)^(0+128)
  3106  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3107  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3108  05EA  0840               	movf	?_scale+2,w
  3109  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3110  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3111  05ED  00B0               	movwf	(_sprintf$971+2)^(0+128)
  3112  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3113  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3114  05F0  083F               	movf	?_scale+1,w
  3115  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3116  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3117  05F3  00AF               	movwf	(_sprintf$971+1)^(0+128)
  3118  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3119  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3120  05F6  083E               	movf	?_scale,w
  3121  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3122  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3123  05F9  00AE               	movwf	_sprintf$971^(0+128)
  3124  05FA                     l3648:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3127  05FA  0831               	movf	(_sprintf$971+3)^(0+128),w
  3128  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3129  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3130  05FD  00AB               	movwf	___flmul@a+3
  3131  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3132  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0600  0830               	movf	(_sprintf$971+2)^(0+128),w
  3134  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0603  00AA               	movwf	___flmul@a+2
  3137  0604  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0605  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0606  082F               	movf	(_sprintf$971+1)^(0+128),w
  3140  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0609  00A9               	movwf	___flmul@a+1
  3143  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3144  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3145  060C  082E               	movf	_sprintf$971^(0+128),w
  3146  060D  1283               	bcf	3,5	;RP0=0, select bank0
  3147  060E  1303               	bcf	3,6	;RP1=0, select bank0
  3148  060F  00A8               	movwf	___flmul@a
  3149  0610  1683               	bsf	3,5	;RP0=1, select bank1
  3150  0611  1303               	bcf	3,6	;RP1=0, select bank1
  3151  0612  0844               	movf	(sprintf@fval+3)^(0+128),w
  3152  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0614  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0615  00A7               	movwf	___flmul@b+3
  3155  0616  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0617  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0618  0843               	movf	(sprintf@fval+2)^(0+128),w
  3158  0619  1283               	bcf	3,5	;RP0=0, select bank0
  3159  061A  1303               	bcf	3,6	;RP1=0, select bank0
  3160  061B  00A6               	movwf	___flmul@b+2
  3161  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3162  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3163  061E  0842               	movf	(sprintf@fval+1)^(0+128),w
  3164  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0621  00A5               	movwf	___flmul@b+1
  3167  0622  1683               	bsf	3,5	;RP0=1, select bank1
  3168  0623  1303               	bcf	3,6	;RP1=0, select bank1
  3169  0624  0841               	movf	sprintf@fval^(0+128),w
  3170  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3172  0627  00A4               	movwf	___flmul@b
  3173  0628  120A  158A  249F  120A  118A  	fcall	___flmul
  3174  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3175  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3176  062F  0827               	movf	?___flmul+3,w
  3177  0630  00D4               	movwf	___fltol@f1+3
  3178  0631  0826               	movf	?___flmul+2,w
  3179  0632  00D3               	movwf	___fltol@f1+2
  3180  0633  0825               	movf	?___flmul+1,w
  3181  0634  00D2               	movwf	___fltol@f1+1
  3182  0635  0824               	movf	?___flmul,w
  3183  0636  00D1               	movwf	___fltol@f1
  3184  0637  120A  158A  2006  120A  118A  	fcall	___fltol
  3185  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3186  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3187  063E  0854               	movf	?___fltol+3,w
  3188  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3190  0641  00B6               	movwf	(sprintf@val+3)^(0+128)
  3191  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0644  0853               	movf	?___fltol+2,w
  3194  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3196  0647  00B5               	movwf	(sprintf@val+2)^(0+128)
  3197  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3199  064A  0852               	movf	?___fltol+1,w
  3200  064B  1683               	bsf	3,5	;RP0=1, select bank1
  3201  064C  1303               	bcf	3,6	;RP1=0, select bank1
  3202  064D  00B4               	movwf	(sprintf@val+1)^(0+128)
  3203  064E  1283               	bcf	3,5	;RP0=0, select bank0
  3204  064F  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0650  0851               	movf	?___fltol,w
  3206  0651  1683               	bsf	3,5	;RP0=1, select bank1
  3207  0652  1303               	bcf	3,6	;RP1=0, select bank1
  3208  0653  00B3               	movwf	sprintf@val^(0+128)
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3211  0654  2EF6               	goto	l3658
  3212  0655                     l3650:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3215  0655  0848               	movf	sprintf@c^(0+128),w
  3216  0656  00A9               	movwf	??_sprintf^(0+128)
  3217  0657  3001               	movlw	1
  3218  0658                     u5965:
  3219  0658  1003               	clrc
  3220  0659  0DA9               	rlf	??_sprintf^(0+128),f
  3221  065A  3EFF               	addlw	-1
  3222  065B  1D03               	skipz
  3223  065C  2E58               	goto	u5965
  3224  065D  1003               	clrc
  3225  065E  0D29               	rlf	??_sprintf^(0+128),w
  3226  065F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3227  0660  0084               	movwf	4
  3228  0661  160A  118A  200A  120A  118A  	fcall	stringdir
  3229  0666  00F0               	movwf	___lldiv@divisor
  3230  0667  160A  118A  200A  120A  118A  	fcall	stringdir
  3231  066C  00F1               	movwf	___lldiv@divisor+1
  3232  066D  160A  118A  200A  120A  118A  	fcall	stringdir
  3233  0672  00F2               	movwf	___lldiv@divisor+2
  3234  0673  160A  118A  200A  120A  118A  	fcall	stringdir
  3235  0678  00F3               	movwf	___lldiv@divisor+3
  3236  0679  0836               	movf	(sprintf@val+3)^(0+128),w
  3237  067A  00F7               	movwf	___lldiv@dividend+3
  3238  067B  0835               	movf	(sprintf@val+2)^(0+128),w
  3239  067C  00F6               	movwf	___lldiv@dividend+2
  3240  067D  0834               	movf	(sprintf@val+1)^(0+128),w
  3241  067E  00F5               	movwf	___lldiv@dividend+1
  3242  067F  0833               	movf	sprintf@val^(0+128),w
  3243  0680  00F4               	movwf	___lldiv@dividend
  3244  0681  160A  158A  249B  120A  118A  	fcall	___lldiv
  3245  0686  0873               	movf	?___lldiv+3,w
  3246  0687  1683               	bsf	3,5	;RP0=1, select bank1
  3247  0688  1303               	bcf	3,6	;RP1=0, select bank1
  3248  0689  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3249  068A  0872               	movf	?___lldiv+2,w
  3250  068B  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3251  068C  0871               	movf	?___lldiv+1,w
  3252  068D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3253  068E  0870               	movf	?___lldiv,w
  3254  068F  00BB               	movwf	sprintf@tmpval^(0+128)
  3255  0690                     l3652:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3258  0690  3000               	movlw	0
  3259  0691  00F3               	movwf	___llmod@divisor+3
  3260  0692  3000               	movlw	0
  3261  0693  00F2               	movwf	___llmod@divisor+2
  3262  0694  3000               	movlw	0
  3263  0695  00F1               	movwf	___llmod@divisor+1
  3264  0696  300A               	movlw	10
  3265  0697  00F0               	movwf	___llmod@divisor
  3266  0698  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3267  0699  00F7               	movwf	___llmod@dividend+3
  3268  069A  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3269  069B  00F6               	movwf	___llmod@dividend+2
  3270  069C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3271  069D  00F5               	movwf	___llmod@dividend+1
  3272  069E  083B               	movf	sprintf@tmpval^(0+128),w
  3273  069F  00F4               	movwf	___llmod@dividend
  3274  06A0  160A  158A  23EE  120A  118A  	fcall	___llmod
  3275  06A5  0873               	movf	?___llmod+3,w
  3276  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  3277  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  3278  06A8  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3279  06A9  0872               	movf	?___llmod+2,w
  3280  06AA  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3281  06AB  0871               	movf	?___llmod+1,w
  3282  06AC  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3283  06AD  0870               	movf	?___llmod,w
  3284  06AE  00BB               	movwf	sprintf@tmpval^(0+128)
  3285  06AF                     l3654:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3288  06AF  083B               	movf	sprintf@tmpval^(0+128),w
  3289  06B0  3E30               	addlw	48
  3290  06B1  00A9               	movwf	??_sprintf^(0+128)
  3291  06B2  0845               	movf	sprintf@sp^(0+128),w
  3292  06B3  0084               	movwf	4
  3293  06B4  0829               	movf	??_sprintf^(0+128),w
  3294  06B5  1383               	bcf	3,7	;select IRP bank0
  3295  06B6  0080               	movwf	0
  3296  06B7  3001               	movlw	1
  3297  06B8  00A9               	movwf	??_sprintf^(0+128)
  3298  06B9  0829               	movf	??_sprintf^(0+128),w
  3299  06BA  07C5               	addwf	sprintf@sp^(0+128),f
  3300  06BB                     l3656:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3303  06BB  0848               	movf	sprintf@c^(0+128),w
  3304  06BC  00A9               	movwf	??_sprintf^(0+128)
  3305  06BD  3001               	movlw	1
  3306  06BE                     u5975:
  3307  06BE  1003               	clrc
  3308  06BF  0DA9               	rlf	??_sprintf^(0+128),f
  3309  06C0  3EFF               	addlw	-1
  3310  06C1  1D03               	skipz
  3311  06C2  2EBE               	goto	u5975
  3312  06C3  1003               	clrc
  3313  06C4  0D29               	rlf	??_sprintf^(0+128),w
  3314  06C5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3315  06C6  0084               	movwf	4
  3316  06C7  160A  118A  200A  120A  118A  	fcall	stringdir
  3317  06CC  00F0               	movwf	___llmod@divisor
  3318  06CD  160A  118A  200A  120A  118A  	fcall	stringdir
  3319  06D2  00F1               	movwf	___llmod@divisor+1
  3320  06D3  160A  118A  200A  120A  118A  	fcall	stringdir
  3321  06D8  00F2               	movwf	___llmod@divisor+2
  3322  06D9  160A  118A  200A  120A  118A  	fcall	stringdir
  3323  06DE  00F3               	movwf	___llmod@divisor+3
  3324  06DF  0836               	movf	(sprintf@val+3)^(0+128),w
  3325  06E0  00F7               	movwf	___llmod@dividend+3
  3326  06E1  0835               	movf	(sprintf@val+2)^(0+128),w
  3327  06E2  00F6               	movwf	___llmod@dividend+2
  3328  06E3  0834               	movf	(sprintf@val+1)^(0+128),w
  3329  06E4  00F5               	movwf	___llmod@dividend+1
  3330  06E5  0833               	movf	sprintf@val^(0+128),w
  3331  06E6  00F4               	movwf	___llmod@dividend
  3332  06E7  160A  158A  23EE  120A  118A  	fcall	___llmod
  3333  06EC  0873               	movf	?___llmod+3,w
  3334  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  3335  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  3336  06EF  00B6               	movwf	(sprintf@val+3)^(0+128)
  3337  06F0  0872               	movf	?___llmod+2,w
  3338  06F1  00B5               	movwf	(sprintf@val+2)^(0+128)
  3339  06F2  0871               	movf	?___llmod+1,w
  3340  06F3  00B4               	movwf	(sprintf@val+1)^(0+128)
  3341  06F4  0870               	movf	?___llmod,w
  3342  06F5  00B3               	movwf	sprintf@val^(0+128)
  3343  06F6                     l3658:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3346  06F6  3001               	movlw	1
  3347  06F7  02C8               	subwf	sprintf@c^(0+128),f
  3348  06F8  0A48               	incf	sprintf@c^(0+128),w
  3349  06F9  1D03               	btfss	3,2
  3350  06FA  2EFC               	goto	u5981
  3351  06FB  2EFD               	goto	u5980
  3352  06FC                     u5981:
  3353  06FC  2E55               	goto	l3650
  3354  06FD                     u5980:
  3355  06FD  2F0F               	goto	l3666
  3356  06FE                     l3660:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3359  06FE  3030               	movlw	48
  3360  06FF  00A9               	movwf	??_sprintf^(0+128)
  3361  0700  0845               	movf	sprintf@sp^(0+128),w
  3362  0701  0084               	movwf	4
  3363  0702  0829               	movf	??_sprintf^(0+128),w
  3364  0703  1383               	bcf	3,7	;select IRP bank0
  3365  0704  0080               	movwf	0
  3366  0705                     l3662:
  3367  0705  3001               	movlw	1
  3368  0706  00A9               	movwf	??_sprintf^(0+128)
  3369  0707  0829               	movf	??_sprintf^(0+128),w
  3370  0708  07C5               	addwf	sprintf@sp^(0+128),f
  3371  0709                     l3664:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3374  0709  30FF               	movlw	255
  3375  070A  07C6               	addwf	sprintf@prec^(0+128),f
  3376  070B  1803               	skipnc
  3377  070C  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3378  070D  30FF               	movlw	255
  3379  070E  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3380  070F                     l3666:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3383  070F  0846               	movf	sprintf@prec^(0+128),w
  3384  0710  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3385  0711  1D03               	btfss	3,2
  3386  0712  2F14               	goto	u5991
  3387  0713  2F15               	goto	u5990
  3388  0714                     u5991:
  3389  0714  2EFE               	goto	l3660
  3390  0715                     u5990:
  3391  0715  2FD9               	goto	l3714
  3392  0716                     l3668:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3395  0716  0846               	movf	sprintf@prec^(0+128),w
  3396  0717  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3397  0718  1D03               	btfss	3,2
  3398  0719  2F1B               	goto	u6001
  3399  071A  2F1C               	goto	u6000
  3400  071B                     u6001:
  3401  071B  2F2A               	goto	l334
  3402  071C                     u6000:
  3403  071C                     l3670:
  3404  071C  0836               	movf	(sprintf@val+3)^(0+128),w
  3405  071D  0435               	iorwf	(sprintf@val+2)^(0+128),w
  3406  071E  0434               	iorwf	(sprintf@val+1)^(0+128),w
  3407  071F  0433               	iorwf	sprintf@val^(0+128),w
  3408  0720  1D03               	skipz
  3409  0721  2F23               	goto	u6011
  3410  0722  2F24               	goto	u6010
  3411  0723                     u6011:
  3412  0723  2F2A               	goto	l334
  3413  0724                     u6010:
  3414  0724                     l3672:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3417  0724  3001               	movlw	1
  3418  0725  07C6               	addwf	sprintf@prec^(0+128),f
  3419  0726  1803               	skipnc
  3420  0727  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3421  0728  3000               	movlw	0
  3422  0729  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3423  072A                     l334:
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3426  072A  0847               	movf	(sprintf@prec+1)^(0+128),w
  3427  072B  3A80               	xorlw	128
  3428  072C  3C80               	sublw	128
  3429  072D  1D03               	skipz
  3430  072E  2F31               	goto	u6025
  3431  072F  0846               	movf	sprintf@prec^(0+128),w
  3432  0730  0248               	subwf	sprintf@c^(0+128),w
  3433  0731                     u6025:
  3434  0731  1803               	skipnc
  3435  0732  2F34               	goto	u6021
  3436  0733  2F35               	goto	u6020
  3437  0734                     u6021:
  3438  0734  2F3C               	goto	l3676
  3439  0735                     u6020:
  3440  0735                     l3674:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3443  0735  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0736  1303               	bcf	3,6	;RP1=0, select bank1
  3445  0737  0846               	movf	sprintf@prec^(0+128),w
  3446  0738  00A9               	movwf	??_sprintf^(0+128)
  3447  0739  0829               	movf	??_sprintf^(0+128),w
  3448  073A  00C8               	movwf	sprintf@c^(0+128)
  3449  073B  2F54               	goto	l3680
  3450  073C                     l3676:
  3451  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3452  073D  1303               	bcf	3,6	;RP1=0, select bank1
  3453  073E  0847               	movf	(sprintf@prec+1)^(0+128),w
  3454  073F  3A80               	xorlw	128
  3455  0740  00A9               	movwf	??_sprintf^(0+128)
  3456  0741  3080               	movlw	128
  3457  0742  0229               	subwf	??_sprintf^(0+128),w
  3458  0743  1D03               	skipz
  3459  0744  2F47               	goto	u6035
  3460  0745  0848               	movf	sprintf@c^(0+128),w
  3461  0746  0246               	subwf	sprintf@prec^(0+128),w
  3462  0747                     u6035:
  3463  0747  1803               	skipnc
  3464  0748  2F4A               	goto	u6031
  3465  0749  2F4B               	goto	u6030
  3466  074A                     u6031:
  3467  074A  2F54               	goto	l3680
  3468  074B                     u6030:
  3469  074B                     l3678:
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3472  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3473  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3474  074D  0848               	movf	sprintf@c^(0+128),w
  3475  074E  00A9               	movwf	??_sprintf^(0+128)
  3476  074F  01AA               	clrf	(??_sprintf^(0+128)+1)
  3477  0750  0829               	movf	??_sprintf^(0+128),w
  3478  0751  00C6               	movwf	sprintf@prec^(0+128)
  3479  0752  082A               	movf	(??_sprintf+1)^(0+128),w
  3480  0753  00C7               	movwf	(sprintf@prec+1)^(0+128)
  3481  0754                     l3680:
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3484  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0755  1303               	bcf	3,6	;RP1=0, select bank1
  3486  0756  0839               	movf	sprintf@width^(0+128),w
  3487  0757  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3488  0758  1903               	btfsc	3,2
  3489  0759  2F5B               	goto	u6041
  3490  075A  2F5C               	goto	u6040
  3491  075B                     u6041:
  3492  075B  2F6E               	goto	l3686
  3493  075C                     u6040:
  3494  075C                     l3682:
  3495  075C  3003               	movlw	3
  3496  075D  0537               	andwf	sprintf@flag^(0+128),w
  3497  075E  00A9               	movwf	??_sprintf^(0+128)
  3498  075F  3000               	movlw	0
  3499  0760  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3500  0761  00AA               	movwf	(??_sprintf+1)^(0+128)
  3501  0762  0829               	movf	??_sprintf^(0+128),w
  3502  0763  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3503  0764  1903               	btfsc	3,2
  3504  0765  2F67               	goto	u6051
  3505  0766  2F68               	goto	u6050
  3506  0767                     u6051:
  3507  0767  2F6E               	goto	l3686
  3508  0768                     u6050:
  3509  0768                     l3684:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3512  0768  30FF               	movlw	255
  3513  0769  07B9               	addwf	sprintf@width^(0+128),f
  3514  076A  1803               	skipnc
  3515  076B  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3516  076C  30FF               	movlw	255
  3517  076D  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3518  076E                     l3686:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3521  076E  1F38               	btfss	(sprintf@flag+1)^(0+128),6
  3522  076F  2F71               	goto	u6061
  3523  0770  2F72               	goto	u6060
  3524  0771                     u6061:
  3525  0771  2F8D               	goto	l3694
  3526  0772                     u6060:
  3527  0772                     l3688:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3530  0772  0847               	movf	(sprintf@prec+1)^(0+128),w
  3531  0773  3A80               	xorlw	128
  3532  0774  00A9               	movwf	??_sprintf^(0+128)
  3533  0775  083A               	movf	(sprintf@width+1)^(0+128),w
  3534  0776  3A80               	xorlw	128
  3535  0777  0229               	subwf	??_sprintf^(0+128),w
  3536  0778  1D03               	skipz
  3537  0779  2F7C               	goto	u6075
  3538  077A  0839               	movf	sprintf@width^(0+128),w
  3539  077B  0246               	subwf	sprintf@prec^(0+128),w
  3540  077C                     u6075:
  3541  077C  1803               	skipnc
  3542  077D  2F7F               	goto	u6071
  3543  077E  2F80               	goto	u6070
  3544  077F                     u6071:
  3545  077F  2F89               	goto	l3692
  3546  0780                     u6070:
  3547  0780                     l3690:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3550  0780  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0781  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0782  0846               	movf	sprintf@prec^(0+128),w
  3553  0783  02B9               	subwf	sprintf@width^(0+128),f
  3554  0784  0847               	movf	(sprintf@prec+1)^(0+128),w
  3555  0785  1C03               	skipc
  3556  0786  03BA               	decf	(sprintf@width+1)^(0+128),f
  3557  0787  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3558  0788  2F8D               	goto	l3694
  3559  0789                     l3692:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3562  0789  1683               	bsf	3,5	;RP0=1, select bank1
  3563  078A  1303               	bcf	3,6	;RP1=0, select bank1
  3564  078B  01B9               	clrf	sprintf@width^(0+128)
  3565  078C  01BA               	clrf	(sprintf@width+1)^(0+128)
  3566  078D                     l3694:
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3569  078D  083A               	movf	(sprintf@width+1)^(0+128),w
  3570  078E  3A80               	xorlw	128
  3571  078F  3C80               	sublw	128
  3572  0790  1D03               	skipz
  3573  0791  2F94               	goto	u6085
  3574  0792  0839               	movf	sprintf@width^(0+128),w
  3575  0793  0248               	subwf	sprintf@c^(0+128),w
  3576  0794                     u6085:
  3577  0794  1803               	skipnc
  3578  0795  2F97               	goto	u6081
  3579  0796  2F98               	goto	u6080
  3580  0797                     u6081:
  3581  0797  2FA4               	goto	l3698
  3582  0798                     u6080:
  3583  0798                     l3696:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3586  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3587  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3588  079A  0848               	movf	sprintf@c^(0+128),w
  3589  079B  00A9               	movwf	??_sprintf^(0+128)
  3590  079C  01AA               	clrf	(??_sprintf^(0+128)+1)
  3591  079D  0829               	movf	??_sprintf^(0+128),w
  3592  079E  02B9               	subwf	sprintf@width^(0+128),f
  3593  079F  082A               	movf	(??_sprintf+1)^(0+128),w
  3594  07A0  1C03               	skipc
  3595  07A1  03BA               	decf	(sprintf@width+1)^(0+128),f
  3596  07A2  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3597  07A3  2FA8               	goto	l3700
  3598  07A4                     l3698:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3601  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  3602  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  3603  07A6  01B9               	clrf	sprintf@width^(0+128)
  3604  07A7  01BA               	clrf	(sprintf@width+1)^(0+128)
  3605  07A8                     l3700:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3608  07A8  0839               	movf	sprintf@width^(0+128),w
  3609  07A9  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3610  07AA  1903               	btfsc	3,2
  3611  07AB  2FAD               	goto	u6091
  3612  07AC  2FAE               	goto	u6090
  3613  07AD                     u6091:
  3614  07AD  2FC5               	goto	l3708
  3615  07AE                     u6090:
  3616  07AE                     l3702:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3619  07AE  3020               	movlw	32
  3620  07AF  00A9               	movwf	??_sprintf^(0+128)
  3621  07B0  0845               	movf	sprintf@sp^(0+128),w
  3622  07B1  0084               	movwf	4
  3623  07B2  0829               	movf	??_sprintf^(0+128),w
  3624  07B3  1383               	bcf	3,7	;select IRP bank0
  3625  07B4  0080               	movwf	0
  3626  07B5                     l3704:
  3627  07B5  3001               	movlw	1
  3628  07B6  00A9               	movwf	??_sprintf^(0+128)
  3629  07B7  0829               	movf	??_sprintf^(0+128),w
  3630  07B8  07C5               	addwf	sprintf@sp^(0+128),f
  3631  07B9                     l3706:
  3632  07B9  30FF               	movlw	255
  3633  07BA  07B9               	addwf	sprintf@width^(0+128),f
  3634  07BB  1803               	skipnc
  3635  07BC  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3636  07BD  30FF               	movlw	255
  3637  07BE  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3638  07BF  0839               	movf	sprintf@width^(0+128),w
  3639  07C0  043A               	iorwf	(sprintf@width+1)^(0+128),w
  3640  07C1  1D03               	btfss	3,2
  3641  07C2  2FC4               	goto	u6101
  3642  07C3  2FC5               	goto	u6100
  3643  07C4                     u6101:
  3644  07C4  2FAE               	goto	l3702
  3645  07C5                     u6100:
  3646  07C5                     l3708:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3649  07C5  3003               	movlw	3
  3650  07C6  0537               	andwf	sprintf@flag^(0+128),w
  3651  07C7  00A9               	movwf	??_sprintf^(0+128)
  3652  07C8  3000               	movlw	0
  3653  07C9  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3654  07CA  00AA               	movwf	(??_sprintf+1)^(0+128)
  3655  07CB  0829               	movf	??_sprintf^(0+128),w
  3656  07CC  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3657  07CD  1903               	btfsc	3,2
  3658  07CE  2FD0               	goto	u6111
  3659  07CF  2FD1               	goto	u6110
  3660  07D0                     u6111:
  3661  07D0  2FD9               	goto	l3714
  3662  07D1                     u6110:
  3663  07D1                     l3710:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3666  07D1  302D               	movlw	45
  3667  07D2  00A9               	movwf	??_sprintf^(0+128)
  3668  07D3  0845               	movf	sprintf@sp^(0+128),w
  3669  07D4  0084               	movwf	4
  3670  07D5  0829               	movf	??_sprintf^(0+128),w
  3671  07D6  1383               	bcf	3,7	;select IRP bank0
  3672  07D7  0080               	movwf	0
  3673  07D8  288A               	goto	l3470
  3674  07D9                     l3714:
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3677  07D9  3001               	movlw	1
  3678  07DA  07A0               	addwf	sprintf@f^(0+128),f
  3679  07DB  30FF               	movlw	-1
  3680  07DC  0720               	addwf	sprintf@f^(0+128),w
  3681  07DD  0084               	movwf	4
  3682  07DE  160A  118A  200A  120A  118A  	fcall	stringdir
  3683  07E3  00A9               	movwf	??_sprintf^(0+128)
  3684  07E4  0829               	movf	??_sprintf^(0+128),w
  3685  07E5  00C8               	movwf	sprintf@c^(0+128)
  3686  07E6  0848               	movf	sprintf@c^(0+128),w
  3687  07E7  1D03               	btfss	3,2
  3688  07E8  2FEA               	goto	u6121
  3689  07E9  2FEB               	goto	u6120
  3690  07EA                     u6121:
  3691  07EA  287D               	goto	l3466
  3692  07EB                     u6120:
  3693  07EB                     l3716:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3696  07EB  0845               	movf	sprintf@sp^(0+128),w
  3697  07EC  0084               	movwf	4
  3698  07ED  1383               	bcf	3,7	;select IRP bank0
  3699  07EE  0180               	clrf	0
  3700  07EF                     l349:
  3701  07EF  0008               	return
  3702  07F0                     __end_of_sprintf:
  3703                           
  3704                           	psect	text2
  3705  0940                     __ptext2:	
  3706 ;; *************** function _scale *****************
  3707 ;; Defined at:
  3708 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  scl             1    wreg     char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  scl             1   48[BANK0 ] char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  4   30[BANK0 ] char 
  3715 ;; Registers used:
  3716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       4       0       0       0
  3723 ;;      Locals:         0       5       0       0       0
  3724 ;;      Temps:          0      10       0       0       0
  3725 ;;      Totals:         0      19       0       0       0
  3726 ;;Total ram usage:       19 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    2
  3729 ;; This function calls:
  3730 ;;		___awdiv
  3731 ;;		___awmod
  3732 ;;		___flmul
  3733 ;; This function is called by:
  3734 ;;		_sprintf
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _scale
  3740  0940                     _scale:
  3741                           
  3742                           ;incstack = 0
  3743                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3744                           ;scale@scl stored from wreg
  3745  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0942  00D0               	movwf	scale@scl
  3748  0943                     l2904:
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3751  0943  1FD0               	btfss	scale@scl,7
  3752  0944  2946               	goto	u4331
  3753  0945  2947               	goto	u4330
  3754  0946                     u4331:
  3755  0946  2AF4               	goto	l2926
  3756  0947                     u4330:
  3757  0947                     l2906:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3760  0947  09D0               	comf	scale@scl,f
  3761  0948  0AD0               	incf	scale@scl,f
  3762  0949                     l2908:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3765  0949  0850               	movf	scale@scl,w
  3766  094A  3A80               	xorlw	128
  3767  094B  3E12               	addlw	-238
  3768  094C  1C03               	skipc
  3769  094D  294F               	goto	u4341
  3770  094E  2950               	goto	u4340
  3771  094F                     u4341:
  3772  094F  2A38               	goto	l2916
  3773  0950                     u4340:
  3774  0950                     l2910:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3777  0950  300A               	movlw	10
  3778  0951  00F7               	movwf	___awdiv@divisor
  3779  0952  3000               	movlw	0
  3780  0953  00F8               	movwf	___awdiv@divisor+1
  3781  0954  0850               	movf	scale@scl,w
  3782  0955  00F2               	movwf	___awmod@dividend
  3783  0956  01F3               	clrf	___awmod@dividend+1
  3784  0957  1BF2               	btfsc	___awmod@dividend,7
  3785  0958  03F3               	decf	___awmod@dividend+1,f
  3786  0959  3064               	movlw	100
  3787  095A  00F0               	movwf	___awmod@divisor
  3788  095B  3000               	movlw	0
  3789  095C  00F1               	movwf	___awmod@divisor+1
  3790  095D  160A  158A  2442  120A  158A  	fcall	___awmod
  3791  0962  0871               	movf	?___awmod+1,w
  3792  0963  00FA               	movwf	___awdiv@dividend+1
  3793  0964  0870               	movf	?___awmod,w
  3794  0965  00F9               	movwf	___awdiv@dividend
  3795  0966  120A  118A  200C  120A  158A  	fcall	___awdiv
  3796  096B  0877               	movf	?___awdiv,w
  3797  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3798  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3799  096E  00C2               	movwf	??_scale
  3800  096F  3001               	movlw	1
  3801  0970                     u4355:
  3802  0970  1003               	clrc
  3803  0971  0DC2               	rlf	??_scale,f
  3804  0972  3EFF               	addlw	-1
  3805  0973  1D03               	skipz
  3806  0974  2970               	goto	u4355
  3807  0975  1003               	clrc
  3808  0976  0D42               	rlf	??_scale,w
  3809  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3810  0978  0084               	movwf	4
  3811  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  3812  097E  00C3               	movwf	??_scale+1
  3813  097F  160A  118A  200A  120A  158A  	fcall	stringdir
  3814  0984  00C4               	movwf	??_scale+2
  3815  0985  160A  118A  200A  120A  158A  	fcall	stringdir
  3816  098A  00C5               	movwf	??_scale+3
  3817  098B  160A  118A  200A  120A  158A  	fcall	stringdir
  3818  0990  00C6               	movwf	??_scale+4
  3819  0991  0846               	movf	??_scale+4,w
  3820  0992  00A7               	movwf	___flmul@b+3
  3821  0993  0845               	movf	??_scale+3,w
  3822  0994  00A6               	movwf	___flmul@b+2
  3823  0995  0844               	movf	??_scale+2,w
  3824  0996  00A5               	movwf	___flmul@b+1
  3825  0997  0843               	movf	??_scale+1,w
  3826  0998  00A4               	movwf	___flmul@b
  3827  0999  3064               	movlw	100
  3828  099A  00F7               	movwf	___awdiv@divisor
  3829  099B  3000               	movlw	0
  3830  099C  00F8               	movwf	___awdiv@divisor+1
  3831  099D  0850               	movf	scale@scl,w
  3832  099E  00F9               	movwf	___awdiv@dividend
  3833  099F  01FA               	clrf	___awdiv@dividend+1
  3834  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3835  09A1  03FA               	decf	___awdiv@dividend+1,f
  3836  09A2  120A  118A  200C  120A  158A  	fcall	___awdiv
  3837  09A7  0877               	movf	?___awdiv,w
  3838  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3839  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3840  09AA  00C7               	movwf	??_scale+5
  3841  09AB  3001               	movlw	1
  3842  09AC                     u4365:
  3843  09AC  1003               	clrc
  3844  09AD  0DC7               	rlf	??_scale+5,f
  3845  09AE  3EFF               	addlw	-1
  3846  09AF  1D03               	skipz
  3847  09B0  29AC               	goto	u4365
  3848  09B1  1003               	clrc
  3849  09B2  0D47               	rlf	??_scale+5,w
  3850  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3851  09B4  0084               	movwf	4
  3852  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  3853  09BA  00C8               	movwf	??_scale+6
  3854  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  3855  09C0  00C9               	movwf	??_scale+7
  3856  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  3857  09C6  00CA               	movwf	??_scale+8
  3858  09C7  160A  118A  200A  120A  158A  	fcall	stringdir
  3859  09CC  00CB               	movwf	??_scale+9
  3860  09CD  084B               	movf	??_scale+9,w
  3861  09CE  00AB               	movwf	___flmul@a+3
  3862  09CF  084A               	movf	??_scale+8,w
  3863  09D0  00AA               	movwf	___flmul@a+2
  3864  09D1  0849               	movf	??_scale+7,w
  3865  09D2  00A9               	movwf	___flmul@a+1
  3866  09D3  0848               	movf	??_scale+6,w
  3867  09D4  00A8               	movwf	___flmul@a
  3868  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3869  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3870  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3871  09DC  0827               	movf	?___flmul+3,w
  3872  09DD  00CF               	movwf	_scale$970+3
  3873  09DE  0826               	movf	?___flmul+2,w
  3874  09DF  00CE               	movwf	_scale$970+2
  3875  09E0  0825               	movf	?___flmul+1,w
  3876  09E1  00CD               	movwf	_scale$970+1
  3877  09E2  0824               	movf	?___flmul,w
  3878  09E3  00CC               	movwf	_scale$970
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3881  09E4  300A               	movlw	10
  3882  09E5  00F0               	movwf	___awmod@divisor
  3883  09E6  3000               	movlw	0
  3884  09E7  00F1               	movwf	___awmod@divisor+1
  3885  09E8  0850               	movf	scale@scl,w
  3886  09E9  00F2               	movwf	___awmod@dividend
  3887  09EA  01F3               	clrf	___awmod@dividend+1
  3888  09EB  1BF2               	btfsc	___awmod@dividend,7
  3889  09EC  03F3               	decf	___awmod@dividend+1,f
  3890  09ED  160A  158A  2442  120A  158A  	fcall	___awmod
  3891  09F2  0870               	movf	?___awmod,w
  3892  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3893  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3894  09F5  00C2               	movwf	??_scale
  3895  09F6  3001               	movlw	1
  3896  09F7                     u4375:
  3897  09F7  1003               	clrc
  3898  09F8  0DC2               	rlf	??_scale,f
  3899  09F9  3EFF               	addlw	-1
  3900  09FA  1D03               	skipz
  3901  09FB  29F7               	goto	u4375
  3902  09FC  1003               	clrc
  3903  09FD  0D42               	rlf	??_scale,w
  3904  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3905  09FF  0084               	movwf	4
  3906  0A00  160A  118A  200A  120A  158A  	fcall	stringdir
  3907  0A05  00C3               	movwf	??_scale+1
  3908  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  3909  0A0B  00C4               	movwf	??_scale+2
  3910  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3911  0A11  00C5               	movwf	??_scale+3
  3912  0A12  160A  118A  200A  120A  158A  	fcall	stringdir
  3913  0A17  00C6               	movwf	??_scale+4
  3914  0A18  0846               	movf	??_scale+4,w
  3915  0A19  00A7               	movwf	___flmul@b+3
  3916  0A1A  0845               	movf	??_scale+3,w
  3917  0A1B  00A6               	movwf	___flmul@b+2
  3918  0A1C  0844               	movf	??_scale+2,w
  3919  0A1D  00A5               	movwf	___flmul@b+1
  3920  0A1E  0843               	movf	??_scale+1,w
  3921  0A1F  00A4               	movwf	___flmul@b
  3922  0A20  084F               	movf	_scale$970+3,w
  3923  0A21  00AB               	movwf	___flmul@a+3
  3924  0A22  084E               	movf	_scale$970+2,w
  3925  0A23  00AA               	movwf	___flmul@a+2
  3926  0A24  084D               	movf	_scale$970+1,w
  3927  0A25  00A9               	movwf	___flmul@a+1
  3928  0A26  084C               	movf	_scale$970,w
  3929  0A27  00A8               	movwf	___flmul@a
  3930  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3931  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0A2F  0827               	movf	?___flmul+3,w
  3934  0A30  00C1               	movwf	?_scale+3
  3935  0A31  0826               	movf	?___flmul+2,w
  3936  0A32  00C0               	movwf	?_scale+2
  3937  0A33  0825               	movf	?___flmul+1,w
  3938  0A34  00BF               	movwf	?_scale+1
  3939  0A35  0824               	movf	?___flmul,w
  3940  0A36  00BE               	movwf	?_scale
  3941  0A37  2C9E               	goto	l266
  3942  0A38                     l2916:
  3943  0A38  0850               	movf	scale@scl,w
  3944  0A39  3A80               	xorlw	128
  3945  0A3A  3E75               	addlw	-139
  3946  0A3B  1C03               	skipc
  3947  0A3C  2A3E               	goto	u4381
  3948  0A3D  2A3F               	goto	u4380
  3949  0A3E                     u4381:
  3950  0A3E  2AC7               	goto	l2922
  3951  0A3F                     u4380:
  3952  0A3F                     l2918:
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3955  0A3F  300A               	movlw	10
  3956  0A40  00F0               	movwf	___awmod@divisor
  3957  0A41  3000               	movlw	0
  3958  0A42  00F1               	movwf	___awmod@divisor+1
  3959  0A43  0850               	movf	scale@scl,w
  3960  0A44  00F2               	movwf	___awmod@dividend
  3961  0A45  01F3               	clrf	___awmod@dividend+1
  3962  0A46  1BF2               	btfsc	___awmod@dividend,7
  3963  0A47  03F3               	decf	___awmod@dividend+1,f
  3964  0A48  160A  158A  2442  120A  158A  	fcall	___awmod
  3965  0A4D  0870               	movf	?___awmod,w
  3966  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3967  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3968  0A50  00C2               	movwf	??_scale
  3969  0A51  3001               	movlw	1
  3970  0A52                     u4395:
  3971  0A52  1003               	clrc
  3972  0A53  0DC2               	rlf	??_scale,f
  3973  0A54  3EFF               	addlw	-1
  3974  0A55  1D03               	skipz
  3975  0A56  2A52               	goto	u4395
  3976  0A57  1003               	clrc
  3977  0A58  0D42               	rlf	??_scale,w
  3978  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3979  0A5A  0084               	movwf	4
  3980  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  3981  0A60  00C3               	movwf	??_scale+1
  3982  0A61  160A  118A  200A  120A  158A  	fcall	stringdir
  3983  0A66  00C4               	movwf	??_scale+2
  3984  0A67  160A  118A  200A  120A  158A  	fcall	stringdir
  3985  0A6C  00C5               	movwf	??_scale+3
  3986  0A6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3987  0A72  00C6               	movwf	??_scale+4
  3988  0A73  0846               	movf	??_scale+4,w
  3989  0A74  00A7               	movwf	___flmul@b+3
  3990  0A75  0845               	movf	??_scale+3,w
  3991  0A76  00A6               	movwf	___flmul@b+2
  3992  0A77  0844               	movf	??_scale+2,w
  3993  0A78  00A5               	movwf	___flmul@b+1
  3994  0A79  0843               	movf	??_scale+1,w
  3995  0A7A  00A4               	movwf	___flmul@b
  3996  0A7B  300A               	movlw	10
  3997  0A7C  00F7               	movwf	___awdiv@divisor
  3998  0A7D  3000               	movlw	0
  3999  0A7E  00F8               	movwf	___awdiv@divisor+1
  4000  0A7F  0850               	movf	scale@scl,w
  4001  0A80  00F9               	movwf	___awdiv@dividend
  4002  0A81  01FA               	clrf	___awdiv@dividend+1
  4003  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4004  0A83  03FA               	decf	___awdiv@dividend+1,f
  4005  0A84  120A  118A  200C  120A  158A  	fcall	___awdiv
  4006  0A89  0877               	movf	?___awdiv,w
  4007  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0A8C  00C7               	movwf	??_scale+5
  4010  0A8D  3001               	movlw	1
  4011  0A8E                     u4405:
  4012  0A8E  1003               	clrc
  4013  0A8F  0DC7               	rlf	??_scale+5,f
  4014  0A90  3EFF               	addlw	-1
  4015  0A91  1D03               	skipz
  4016  0A92  2A8E               	goto	u4405
  4017  0A93  1003               	clrc
  4018  0A94  0D47               	rlf	??_scale+5,w
  4019  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4020  0A96  0084               	movwf	4
  4021  0A97  160A  118A  200A  120A  158A  	fcall	stringdir
  4022  0A9C  00C8               	movwf	??_scale+6
  4023  0A9D  160A  118A  200A  120A  158A  	fcall	stringdir
  4024  0AA2  00C9               	movwf	??_scale+7
  4025  0AA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4026  0AA8  00CA               	movwf	??_scale+8
  4027  0AA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4028  0AAE  00CB               	movwf	??_scale+9
  4029  0AAF  084B               	movf	??_scale+9,w
  4030  0AB0  00AB               	movwf	___flmul@a+3
  4031  0AB1  084A               	movf	??_scale+8,w
  4032  0AB2  00AA               	movwf	___flmul@a+2
  4033  0AB3  0849               	movf	??_scale+7,w
  4034  0AB4  00A9               	movwf	___flmul@a+1
  4035  0AB5  0848               	movf	??_scale+6,w
  4036  0AB6  00A8               	movwf	___flmul@a
  4037  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4038  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0ABE  0827               	movf	?___flmul+3,w
  4041  0ABF  00C1               	movwf	?_scale+3
  4042  0AC0  0826               	movf	?___flmul+2,w
  4043  0AC1  00C0               	movwf	?_scale+2
  4044  0AC2  0825               	movf	?___flmul+1,w
  4045  0AC3  00BF               	movwf	?_scale+1
  4046  0AC4  0824               	movf	?___flmul,w
  4047  0AC5  00BE               	movwf	?_scale
  4048  0AC6  2C9E               	goto	l266
  4049  0AC7                     l2922:
  4050                           
  4051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4052  0AC7  0850               	movf	scale@scl,w
  4053  0AC8  00C2               	movwf	??_scale
  4054  0AC9  3001               	movlw	1
  4055  0ACA                     u4415:
  4056  0ACA  1003               	clrc
  4057  0ACB  0DC2               	rlf	??_scale,f
  4058  0ACC  3EFF               	addlw	-1
  4059  0ACD  1D03               	skipz
  4060  0ACE  2ACA               	goto	u4415
  4061  0ACF  1003               	clrc
  4062  0AD0  0D42               	rlf	??_scale,w
  4063  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4064  0AD2  0084               	movwf	4
  4065  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  4066  0AD8  00C3               	movwf	??_scale+1
  4067  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  4068  0ADE  00C4               	movwf	??_scale+2
  4069  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  4070  0AE4  00C5               	movwf	??_scale+3
  4071  0AE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4072  0AEA  00C6               	movwf	??_scale+4
  4073  0AEB  0846               	movf	??_scale+4,w
  4074  0AEC  00C1               	movwf	?_scale+3
  4075  0AED  0845               	movf	??_scale+3,w
  4076  0AEE  00C0               	movwf	?_scale+2
  4077  0AEF  0844               	movf	??_scale+2,w
  4078  0AF0  00BF               	movwf	?_scale+1
  4079  0AF1  0843               	movf	??_scale+1,w
  4080  0AF2  00BE               	movwf	?_scale
  4081  0AF3  2C9E               	goto	l266
  4082  0AF4                     l2926:
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4085  0AF4  0850               	movf	scale@scl,w
  4086  0AF5  3A80               	xorlw	128
  4087  0AF6  3E12               	addlw	-238
  4088  0AF7  1C03               	skipc
  4089  0AF8  2AFA               	goto	u4421
  4090  0AF9  2AFB               	goto	u4420
  4091  0AFA                     u4421:
  4092  0AFA  2BE3               	goto	l2934
  4093  0AFB                     u4420:
  4094  0AFB                     l2928:
  4095                           
  4096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4097  0AFB  300A               	movlw	10
  4098  0AFC  00F7               	movwf	___awdiv@divisor
  4099  0AFD  3000               	movlw	0
  4100  0AFE  00F8               	movwf	___awdiv@divisor+1
  4101  0AFF  0850               	movf	scale@scl,w
  4102  0B00  00F2               	movwf	___awmod@dividend
  4103  0B01  01F3               	clrf	___awmod@dividend+1
  4104  0B02  1BF2               	btfsc	___awmod@dividend,7
  4105  0B03  03F3               	decf	___awmod@dividend+1,f
  4106  0B04  3064               	movlw	100
  4107  0B05  00F0               	movwf	___awmod@divisor
  4108  0B06  3000               	movlw	0
  4109  0B07  00F1               	movwf	___awmod@divisor+1
  4110  0B08  160A  158A  2442  120A  158A  	fcall	___awmod
  4111  0B0D  0871               	movf	?___awmod+1,w
  4112  0B0E  00FA               	movwf	___awdiv@dividend+1
  4113  0B0F  0870               	movf	?___awmod,w
  4114  0B10  00F9               	movwf	___awdiv@dividend
  4115  0B11  120A  118A  200C  120A  158A  	fcall	___awdiv
  4116  0B16  0877               	movf	?___awdiv,w
  4117  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0B19  00C2               	movwf	??_scale
  4120  0B1A  3001               	movlw	1
  4121  0B1B                     u4435:
  4122  0B1B  1003               	clrc
  4123  0B1C  0DC2               	rlf	??_scale,f
  4124  0B1D  3EFF               	addlw	-1
  4125  0B1E  1D03               	skipz
  4126  0B1F  2B1B               	goto	u4435
  4127  0B20  1003               	clrc
  4128  0B21  0D42               	rlf	??_scale,w
  4129  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4130  0B23  0084               	movwf	4
  4131  0B24  160A  118A  200A  120A  158A  	fcall	stringdir
  4132  0B29  00C3               	movwf	??_scale+1
  4133  0B2A  160A  118A  200A  120A  158A  	fcall	stringdir
  4134  0B2F  00C4               	movwf	??_scale+2
  4135  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  4136  0B35  00C5               	movwf	??_scale+3
  4137  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  4138  0B3B  00C6               	movwf	??_scale+4
  4139  0B3C  0846               	movf	??_scale+4,w
  4140  0B3D  00A7               	movwf	___flmul@b+3
  4141  0B3E  0845               	movf	??_scale+3,w
  4142  0B3F  00A6               	movwf	___flmul@b+2
  4143  0B40  0844               	movf	??_scale+2,w
  4144  0B41  00A5               	movwf	___flmul@b+1
  4145  0B42  0843               	movf	??_scale+1,w
  4146  0B43  00A4               	movwf	___flmul@b
  4147  0B44  3064               	movlw	100
  4148  0B45  00F7               	movwf	___awdiv@divisor
  4149  0B46  3000               	movlw	0
  4150  0B47  00F8               	movwf	___awdiv@divisor+1
  4151  0B48  0850               	movf	scale@scl,w
  4152  0B49  00F9               	movwf	___awdiv@dividend
  4153  0B4A  01FA               	clrf	___awdiv@dividend+1
  4154  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4155  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4156  0B4D  120A  118A  200C  120A  158A  	fcall	___awdiv
  4157  0B52  0877               	movf	?___awdiv,w
  4158  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0B55  00C7               	movwf	??_scale+5
  4161  0B56  3001               	movlw	1
  4162  0B57                     u4445:
  4163  0B57  1003               	clrc
  4164  0B58  0DC7               	rlf	??_scale+5,f
  4165  0B59  3EFF               	addlw	-1
  4166  0B5A  1D03               	skipz
  4167  0B5B  2B57               	goto	u4445
  4168  0B5C  1003               	clrc
  4169  0B5D  0D47               	rlf	??_scale+5,w
  4170  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4171  0B5F  0084               	movwf	4
  4172  0B60  160A  118A  200A  120A  158A  	fcall	stringdir
  4173  0B65  00C8               	movwf	??_scale+6
  4174  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  4175  0B6B  00C9               	movwf	??_scale+7
  4176  0B6C  160A  118A  200A  120A  158A  	fcall	stringdir
  4177  0B71  00CA               	movwf	??_scale+8
  4178  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  4179  0B77  00CB               	movwf	??_scale+9
  4180  0B78  084B               	movf	??_scale+9,w
  4181  0B79  00AB               	movwf	___flmul@a+3
  4182  0B7A  084A               	movf	??_scale+8,w
  4183  0B7B  00AA               	movwf	___flmul@a+2
  4184  0B7C  0849               	movf	??_scale+7,w
  4185  0B7D  00A9               	movwf	___flmul@a+1
  4186  0B7E  0848               	movf	??_scale+6,w
  4187  0B7F  00A8               	movwf	___flmul@a
  4188  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4189  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0B87  0827               	movf	?___flmul+3,w
  4192  0B88  00CF               	movwf	_scale$970+3
  4193  0B89  0826               	movf	?___flmul+2,w
  4194  0B8A  00CE               	movwf	_scale$970+2
  4195  0B8B  0825               	movf	?___flmul+1,w
  4196  0B8C  00CD               	movwf	_scale$970+1
  4197  0B8D  0824               	movf	?___flmul,w
  4198  0B8E  00CC               	movwf	_scale$970
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4201  0B8F  300A               	movlw	10
  4202  0B90  00F0               	movwf	___awmod@divisor
  4203  0B91  3000               	movlw	0
  4204  0B92  00F1               	movwf	___awmod@divisor+1
  4205  0B93  0850               	movf	scale@scl,w
  4206  0B94  00F2               	movwf	___awmod@dividend
  4207  0B95  01F3               	clrf	___awmod@dividend+1
  4208  0B96  1BF2               	btfsc	___awmod@dividend,7
  4209  0B97  03F3               	decf	___awmod@dividend+1,f
  4210  0B98  160A  158A  2442  120A  158A  	fcall	___awmod
  4211  0B9D  0870               	movf	?___awmod,w
  4212  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0BA0  00C2               	movwf	??_scale
  4215  0BA1  3001               	movlw	1
  4216  0BA2                     u4455:
  4217  0BA2  1003               	clrc
  4218  0BA3  0DC2               	rlf	??_scale,f
  4219  0BA4  3EFF               	addlw	-1
  4220  0BA5  1D03               	skipz
  4221  0BA6  2BA2               	goto	u4455
  4222  0BA7  1003               	clrc
  4223  0BA8  0D42               	rlf	??_scale,w
  4224  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4225  0BAA  0084               	movwf	4
  4226  0BAB  160A  118A  200A  120A  158A  	fcall	stringdir
  4227  0BB0  00C3               	movwf	??_scale+1
  4228  0BB1  160A  118A  200A  120A  158A  	fcall	stringdir
  4229  0BB6  00C4               	movwf	??_scale+2
  4230  0BB7  160A  118A  200A  120A  158A  	fcall	stringdir
  4231  0BBC  00C5               	movwf	??_scale+3
  4232  0BBD  160A  118A  200A  120A  158A  	fcall	stringdir
  4233  0BC2  00C6               	movwf	??_scale+4
  4234  0BC3  0846               	movf	??_scale+4,w
  4235  0BC4  00A7               	movwf	___flmul@b+3
  4236  0BC5  0845               	movf	??_scale+3,w
  4237  0BC6  00A6               	movwf	___flmul@b+2
  4238  0BC7  0844               	movf	??_scale+2,w
  4239  0BC8  00A5               	movwf	___flmul@b+1
  4240  0BC9  0843               	movf	??_scale+1,w
  4241  0BCA  00A4               	movwf	___flmul@b
  4242  0BCB  084F               	movf	_scale$970+3,w
  4243  0BCC  00AB               	movwf	___flmul@a+3
  4244  0BCD  084E               	movf	_scale$970+2,w
  4245  0BCE  00AA               	movwf	___flmul@a+2
  4246  0BCF  084D               	movf	_scale$970+1,w
  4247  0BD0  00A9               	movwf	___flmul@a+1
  4248  0BD1  084C               	movf	_scale$970,w
  4249  0BD2  00A8               	movwf	___flmul@a
  4250  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4251  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0BDA  0827               	movf	?___flmul+3,w
  4254  0BDB  00C1               	movwf	?_scale+3
  4255  0BDC  0826               	movf	?___flmul+2,w
  4256  0BDD  00C0               	movwf	?_scale+2
  4257  0BDE  0825               	movf	?___flmul+1,w
  4258  0BDF  00BF               	movwf	?_scale+1
  4259  0BE0  0824               	movf	?___flmul,w
  4260  0BE1  00BE               	movwf	?_scale
  4261  0BE2  2C9E               	goto	l266
  4262  0BE3                     l2934:
  4263  0BE3  0850               	movf	scale@scl,w
  4264  0BE4  3A80               	xorlw	128
  4265  0BE5  3E75               	addlw	-139
  4266  0BE6  1C03               	skipc
  4267  0BE7  2BE9               	goto	u4461
  4268  0BE8  2BEA               	goto	u4460
  4269  0BE9                     u4461:
  4270  0BE9  2C72               	goto	l2940
  4271  0BEA                     u4460:
  4272  0BEA                     l2936:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4275  0BEA  300A               	movlw	10
  4276  0BEB  00F0               	movwf	___awmod@divisor
  4277  0BEC  3000               	movlw	0
  4278  0BED  00F1               	movwf	___awmod@divisor+1
  4279  0BEE  0850               	movf	scale@scl,w
  4280  0BEF  00F2               	movwf	___awmod@dividend
  4281  0BF0  01F3               	clrf	___awmod@dividend+1
  4282  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4283  0BF2  03F3               	decf	___awmod@dividend+1,f
  4284  0BF3  160A  158A  2442  120A  158A  	fcall	___awmod
  4285  0BF8  0870               	movf	?___awmod,w
  4286  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4288  0BFB  00C2               	movwf	??_scale
  4289  0BFC  3001               	movlw	1
  4290  0BFD                     u4475:
  4291  0BFD  1003               	clrc
  4292  0BFE  0DC2               	rlf	??_scale,f
  4293  0BFF  3EFF               	addlw	-1
  4294  0C00  1D03               	skipz
  4295  0C01  2BFD               	goto	u4475
  4296  0C02  1003               	clrc
  4297  0C03  0D42               	rlf	??_scale,w
  4298  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4299  0C05  0084               	movwf	4
  4300  0C06  160A  118A  200A  120A  158A  	fcall	stringdir
  4301  0C0B  00C3               	movwf	??_scale+1
  4302  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4303  0C11  00C4               	movwf	??_scale+2
  4304  0C12  160A  118A  200A  120A  158A  	fcall	stringdir
  4305  0C17  00C5               	movwf	??_scale+3
  4306  0C18  160A  118A  200A  120A  158A  	fcall	stringdir
  4307  0C1D  00C6               	movwf	??_scale+4
  4308  0C1E  0846               	movf	??_scale+4,w
  4309  0C1F  00A7               	movwf	___flmul@b+3
  4310  0C20  0845               	movf	??_scale+3,w
  4311  0C21  00A6               	movwf	___flmul@b+2
  4312  0C22  0844               	movf	??_scale+2,w
  4313  0C23  00A5               	movwf	___flmul@b+1
  4314  0C24  0843               	movf	??_scale+1,w
  4315  0C25  00A4               	movwf	___flmul@b
  4316  0C26  300A               	movlw	10
  4317  0C27  00F7               	movwf	___awdiv@divisor
  4318  0C28  3000               	movlw	0
  4319  0C29  00F8               	movwf	___awdiv@divisor+1
  4320  0C2A  0850               	movf	scale@scl,w
  4321  0C2B  00F9               	movwf	___awdiv@dividend
  4322  0C2C  01FA               	clrf	___awdiv@dividend+1
  4323  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4324  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4325  0C2F  120A  118A  200C  120A  158A  	fcall	___awdiv
  4326  0C34  0877               	movf	?___awdiv,w
  4327  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0C37  00C7               	movwf	??_scale+5
  4330  0C38  3001               	movlw	1
  4331  0C39                     u4485:
  4332  0C39  1003               	clrc
  4333  0C3A  0DC7               	rlf	??_scale+5,f
  4334  0C3B  3EFF               	addlw	-1
  4335  0C3C  1D03               	skipz
  4336  0C3D  2C39               	goto	u4485
  4337  0C3E  1003               	clrc
  4338  0C3F  0D47               	rlf	??_scale+5,w
  4339  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4340  0C41  0084               	movwf	4
  4341  0C42  160A  118A  200A  120A  158A  	fcall	stringdir
  4342  0C47  00C8               	movwf	??_scale+6
  4343  0C48  160A  118A  200A  120A  158A  	fcall	stringdir
  4344  0C4D  00C9               	movwf	??_scale+7
  4345  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  4346  0C53  00CA               	movwf	??_scale+8
  4347  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  4348  0C59  00CB               	movwf	??_scale+9
  4349  0C5A  084B               	movf	??_scale+9,w
  4350  0C5B  00AB               	movwf	___flmul@a+3
  4351  0C5C  084A               	movf	??_scale+8,w
  4352  0C5D  00AA               	movwf	___flmul@a+2
  4353  0C5E  0849               	movf	??_scale+7,w
  4354  0C5F  00A9               	movwf	___flmul@a+1
  4355  0C60  0848               	movf	??_scale+6,w
  4356  0C61  00A8               	movwf	___flmul@a
  4357  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4358  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0C69  0827               	movf	?___flmul+3,w
  4361  0C6A  00C1               	movwf	?_scale+3
  4362  0C6B  0826               	movf	?___flmul+2,w
  4363  0C6C  00C0               	movwf	?_scale+2
  4364  0C6D  0825               	movf	?___flmul+1,w
  4365  0C6E  00BF               	movwf	?_scale+1
  4366  0C6F  0824               	movf	?___flmul,w
  4367  0C70  00BE               	movwf	?_scale
  4368  0C71  2C9E               	goto	l266
  4369  0C72                     l2940:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4372  0C72  0850               	movf	scale@scl,w
  4373  0C73  00C2               	movwf	??_scale
  4374  0C74  3001               	movlw	1
  4375  0C75                     u4495:
  4376  0C75  1003               	clrc
  4377  0C76  0DC2               	rlf	??_scale,f
  4378  0C77  3EFF               	addlw	-1
  4379  0C78  1D03               	skipz
  4380  0C79  2C75               	goto	u4495
  4381  0C7A  1003               	clrc
  4382  0C7B  0D42               	rlf	??_scale,w
  4383  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4384  0C7D  0084               	movwf	4
  4385  0C7E  160A  118A  200A  120A  158A  	fcall	stringdir
  4386  0C83  00C3               	movwf	??_scale+1
  4387  0C84  160A  118A  200A  120A  158A  	fcall	stringdir
  4388  0C89  00C4               	movwf	??_scale+2
  4389  0C8A  160A  118A  200A  120A  158A  	fcall	stringdir
  4390  0C8F  00C5               	movwf	??_scale+3
  4391  0C90  160A  118A  200A  120A  158A  	fcall	stringdir
  4392  0C95  00C6               	movwf	??_scale+4
  4393  0C96  0846               	movf	??_scale+4,w
  4394  0C97  00C1               	movwf	?_scale+3
  4395  0C98  0845               	movf	??_scale+3,w
  4396  0C99  00C0               	movwf	?_scale+2
  4397  0C9A  0844               	movf	??_scale+2,w
  4398  0C9B  00BF               	movwf	?_scale+1
  4399  0C9C  0843               	movf	??_scale+1,w
  4400  0C9D  00BE               	movwf	?_scale
  4401  0C9E                     l266:
  4402  0C9E  0008               	return
  4403  0C9F                     __end_of_scale:
  4404                           
  4405                           	psect	text3
  4406  1C42                     __ptext3:	
  4407 ;; *************** function ___awmod *****************
  4408 ;; Defined at:
  4409 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  divisor         2    0[COMMON] int 
  4412 ;;  dividend        2    2[COMMON] int 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  sign            1    6[COMMON] unsigned char 
  4415 ;;  counter         1    5[COMMON] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  2    0[COMMON] int 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         4       0       0       0       0
  4426 ;;      Locals:         2       0       0       0       0
  4427 ;;      Temps:          1       0       0       0       0
  4428 ;;      Totals:         7       0       0       0       0
  4429 ;;Total ram usage:        7 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_scale
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function ___awmod
  4440  1C42                     ___awmod:
  4441  1C42                     l2432:	
  4442                           ;incstack = 0
  4443                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4444                           
  4445  1C42  01F6               	clrf	___awmod@sign
  4446  1C43                     l2434:
  4447  1C43  1FF3               	btfss	___awmod@dividend+1,7
  4448  1C44  2C46               	goto	u3201
  4449  1C45  2C47               	goto	u3200
  4450  1C46                     u3201:
  4451  1C46  2C4E               	goto	l2440
  4452  1C47                     u3200:
  4453  1C47                     l2436:
  4454  1C47  09F2               	comf	___awmod@dividend,f
  4455  1C48  09F3               	comf	___awmod@dividend+1,f
  4456  1C49  0AF2               	incf	___awmod@dividend,f
  4457  1C4A  1903               	skipnz
  4458  1C4B  0AF3               	incf	___awmod@dividend+1,f
  4459  1C4C                     l2438:
  4460  1C4C  01F6               	clrf	___awmod@sign
  4461  1C4D  0AF6               	incf	___awmod@sign,f
  4462  1C4E                     l2440:
  4463  1C4E  1FF1               	btfss	___awmod@divisor+1,7
  4464  1C4F  2C51               	goto	u3211
  4465  1C50  2C52               	goto	u3210
  4466  1C51                     u3211:
  4467  1C51  2C57               	goto	l2444
  4468  1C52                     u3210:
  4469  1C52                     l2442:
  4470  1C52  09F0               	comf	___awmod@divisor,f
  4471  1C53  09F1               	comf	___awmod@divisor+1,f
  4472  1C54  0AF0               	incf	___awmod@divisor,f
  4473  1C55  1903               	skipnz
  4474  1C56  0AF1               	incf	___awmod@divisor+1,f
  4475  1C57                     l2444:
  4476  1C57  0870               	movf	___awmod@divisor,w
  4477  1C58  0471               	iorwf	___awmod@divisor+1,w
  4478  1C59  1903               	btfsc	3,2
  4479  1C5A  2C5C               	goto	u3221
  4480  1C5B  2C5D               	goto	u3220
  4481  1C5C                     u3221:
  4482  1C5C  2C8C               	goto	l2462
  4483  1C5D                     u3220:
  4484  1C5D                     l2446:
  4485  1C5D  01F5               	clrf	___awmod@counter
  4486  1C5E  0AF5               	incf	___awmod@counter,f
  4487  1C5F  2C6B               	goto	l2452
  4488  1C60                     l2448:
  4489  1C60  3001               	movlw	1
  4490  1C61                     u3235:
  4491  1C61  1003               	clrc
  4492  1C62  0DF0               	rlf	___awmod@divisor,f
  4493  1C63  0DF1               	rlf	___awmod@divisor+1,f
  4494  1C64  3EFF               	addlw	-1
  4495  1C65  1D03               	skipz
  4496  1C66  2C61               	goto	u3235
  4497  1C67                     l2450:
  4498  1C67  3001               	movlw	1
  4499  1C68  00F4               	movwf	??___awmod
  4500  1C69  0874               	movf	??___awmod,w
  4501  1C6A  07F5               	addwf	___awmod@counter,f
  4502  1C6B                     l2452:
  4503  1C6B  1FF1               	btfss	___awmod@divisor+1,7
  4504  1C6C  2C6E               	goto	u3241
  4505  1C6D  2C6F               	goto	u3240
  4506  1C6E                     u3241:
  4507  1C6E  2C60               	goto	l2448
  4508  1C6F                     u3240:
  4509  1C6F                     l2454:
  4510  1C6F  0871               	movf	___awmod@divisor+1,w
  4511  1C70  0273               	subwf	___awmod@dividend+1,w
  4512  1C71  1D03               	skipz
  4513  1C72  2C75               	goto	u3255
  4514  1C73  0870               	movf	___awmod@divisor,w
  4515  1C74  0272               	subwf	___awmod@dividend,w
  4516  1C75                     u3255:
  4517  1C75  1C03               	skipc
  4518  1C76  2C78               	goto	u3251
  4519  1C77  2C79               	goto	u3250
  4520  1C78                     u3251:
  4521  1C78  2C7F               	goto	l2458
  4522  1C79                     u3250:
  4523  1C79                     l2456:
  4524  1C79  0870               	movf	___awmod@divisor,w
  4525  1C7A  02F2               	subwf	___awmod@dividend,f
  4526  1C7B  0871               	movf	___awmod@divisor+1,w
  4527  1C7C  1C03               	skipc
  4528  1C7D  03F3               	decf	___awmod@dividend+1,f
  4529  1C7E  02F3               	subwf	___awmod@dividend+1,f
  4530  1C7F                     l2458:
  4531  1C7F  3001               	movlw	1
  4532  1C80                     u3265:
  4533  1C80  1003               	clrc
  4534  1C81  0CF1               	rrf	___awmod@divisor+1,f
  4535  1C82  0CF0               	rrf	___awmod@divisor,f
  4536  1C83  3EFF               	addlw	-1
  4537  1C84  1D03               	skipz
  4538  1C85  2C80               	goto	u3265
  4539  1C86                     l2460:
  4540  1C86  3001               	movlw	1
  4541  1C87  02F5               	subwf	___awmod@counter,f
  4542  1C88  1D03               	btfss	3,2
  4543  1C89  2C8B               	goto	u3271
  4544  1C8A  2C8C               	goto	u3270
  4545  1C8B                     u3271:
  4546  1C8B  2C6F               	goto	l2454
  4547  1C8C                     u3270:
  4548  1C8C                     l2462:
  4549  1C8C  0876               	movf	___awmod@sign,w
  4550  1C8D  1903               	btfsc	3,2
  4551  1C8E  2C90               	goto	u3281
  4552  1C8F  2C91               	goto	u3280
  4553  1C90                     u3281:
  4554  1C90  2C96               	goto	l2466
  4555  1C91                     u3280:
  4556  1C91                     l2464:
  4557  1C91  09F2               	comf	___awmod@dividend,f
  4558  1C92  09F3               	comf	___awmod@dividend+1,f
  4559  1C93  0AF2               	incf	___awmod@dividend,f
  4560  1C94  1903               	skipnz
  4561  1C95  0AF3               	incf	___awmod@dividend+1,f
  4562  1C96                     l2466:
  4563  1C96  0873               	movf	___awmod@dividend+1,w
  4564  1C97  00F1               	movwf	?___awmod+1
  4565  1C98  0872               	movf	___awmod@dividend,w
  4566  1C99  00F0               	movwf	?___awmod
  4567  1C9A                     l519:
  4568  1C9A  0008               	return
  4569  1C9B                     __end_of___awmod:
  4570                           
  4571                           	psect	text4
  4572  000C                     __ptext4:	
  4573 ;; *************** function ___awdiv *****************
  4574 ;; Defined at:
  4575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  divisor         2    7[COMMON] int 
  4578 ;;  dividend        2    9[COMMON] int 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  quotient        2    2[BANK0 ] int 
  4581 ;;  sign            1    1[BANK0 ] unsigned char 
  4582 ;;  counter         1    0[BANK0 ] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  2    7[COMMON] int 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4592 ;;      Params:         4       0       0       0       0
  4593 ;;      Locals:         0       4       0       0       0
  4594 ;;      Temps:          1       0       0       0       0
  4595 ;;      Totals:         5       4       0       0       0
  4596 ;;Total ram usage:        9 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_scale
  4602 ;;		_sprintf
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           
  4607                           ;psect for function ___awdiv
  4608  000C                     ___awdiv:
  4609  000C                     l2388:	
  4610                           ;incstack = 0
  4611                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4612                           
  4613  000C  1283               	bcf	3,5	;RP0=0, select bank0
  4614  000D  1303               	bcf	3,6	;RP1=0, select bank0
  4615  000E  01A1               	clrf	___awdiv@sign
  4616  000F                     l2390:
  4617  000F  1FF8               	btfss	___awdiv@divisor+1,7
  4618  0010  2812               	goto	u3101
  4619  0011  2813               	goto	u3100
  4620  0012                     u3101:
  4621  0012  281A               	goto	l2396
  4622  0013                     u3100:
  4623  0013                     l2392:
  4624  0013  09F7               	comf	___awdiv@divisor,f
  4625  0014  09F8               	comf	___awdiv@divisor+1,f
  4626  0015  0AF7               	incf	___awdiv@divisor,f
  4627  0016  1903               	skipnz
  4628  0017  0AF8               	incf	___awdiv@divisor+1,f
  4629  0018                     l2394:
  4630  0018  01A1               	clrf	___awdiv@sign
  4631  0019  0AA1               	incf	___awdiv@sign,f
  4632  001A                     l2396:
  4633  001A  1FFA               	btfss	___awdiv@dividend+1,7
  4634  001B  281D               	goto	u3111
  4635  001C  281E               	goto	u3110
  4636  001D                     u3111:
  4637  001D  2827               	goto	l2402
  4638  001E                     u3110:
  4639  001E                     l2398:
  4640  001E  09F9               	comf	___awdiv@dividend,f
  4641  001F  09FA               	comf	___awdiv@dividend+1,f
  4642  0020  0AF9               	incf	___awdiv@dividend,f
  4643  0021  1903               	skipnz
  4644  0022  0AFA               	incf	___awdiv@dividend+1,f
  4645  0023                     l2400:
  4646  0023  3001               	movlw	1
  4647  0024  00FB               	movwf	??___awdiv
  4648  0025  087B               	movf	??___awdiv,w
  4649  0026  06A1               	xorwf	___awdiv@sign,f
  4650  0027                     l2402:
  4651  0027  01A2               	clrf	___awdiv@quotient
  4652  0028  01A3               	clrf	___awdiv@quotient+1
  4653  0029                     l2404:
  4654  0029  0877               	movf	___awdiv@divisor,w
  4655  002A  0478               	iorwf	___awdiv@divisor+1,w
  4656  002B  1903               	btfsc	3,2
  4657  002C  282E               	goto	u3121
  4658  002D  282F               	goto	u3120
  4659  002E                     u3121:
  4660  002E  2866               	goto	l2424
  4661  002F                     u3120:
  4662  002F                     l2406:
  4663  002F  01A0               	clrf	___awdiv@counter
  4664  0030  0AA0               	incf	___awdiv@counter,f
  4665  0031  283D               	goto	l2412
  4666  0032                     l2408:
  4667  0032  3001               	movlw	1
  4668  0033                     u3135:
  4669  0033  1003               	clrc
  4670  0034  0DF7               	rlf	___awdiv@divisor,f
  4671  0035  0DF8               	rlf	___awdiv@divisor+1,f
  4672  0036  3EFF               	addlw	-1
  4673  0037  1D03               	skipz
  4674  0038  2833               	goto	u3135
  4675  0039                     l2410:
  4676  0039  3001               	movlw	1
  4677  003A  00FB               	movwf	??___awdiv
  4678  003B  087B               	movf	??___awdiv,w
  4679  003C  07A0               	addwf	___awdiv@counter,f
  4680  003D                     l2412:
  4681  003D  1FF8               	btfss	___awdiv@divisor+1,7
  4682  003E  2840               	goto	u3141
  4683  003F  2841               	goto	u3140
  4684  0040                     u3141:
  4685  0040  2832               	goto	l2408
  4686  0041                     u3140:
  4687  0041                     l2414:
  4688  0041  3001               	movlw	1
  4689  0042                     u3155:
  4690  0042  1003               	clrc
  4691  0043  0DA2               	rlf	___awdiv@quotient,f
  4692  0044  0DA3               	rlf	___awdiv@quotient+1,f
  4693  0045  3EFF               	addlw	-1
  4694  0046  1D03               	skipz
  4695  0047  2842               	goto	u3155
  4696  0048  0878               	movf	___awdiv@divisor+1,w
  4697  0049  027A               	subwf	___awdiv@dividend+1,w
  4698  004A  1D03               	skipz
  4699  004B  284E               	goto	u3165
  4700  004C  0877               	movf	___awdiv@divisor,w
  4701  004D  0279               	subwf	___awdiv@dividend,w
  4702  004E                     u3165:
  4703  004E  1C03               	skipc
  4704  004F  2851               	goto	u3161
  4705  0050  2852               	goto	u3160
  4706  0051                     u3161:
  4707  0051  2859               	goto	l2420
  4708  0052                     u3160:
  4709  0052                     l2416:
  4710  0052  0877               	movf	___awdiv@divisor,w
  4711  0053  02F9               	subwf	___awdiv@dividend,f
  4712  0054  0878               	movf	___awdiv@divisor+1,w
  4713  0055  1C03               	skipc
  4714  0056  03FA               	decf	___awdiv@dividend+1,f
  4715  0057  02FA               	subwf	___awdiv@dividend+1,f
  4716  0058                     l2418:
  4717  0058  1422               	bsf	___awdiv@quotient,0
  4718  0059                     l2420:
  4719  0059  3001               	movlw	1
  4720  005A                     u3175:
  4721  005A  1003               	clrc
  4722  005B  0CF8               	rrf	___awdiv@divisor+1,f
  4723  005C  0CF7               	rrf	___awdiv@divisor,f
  4724  005D  3EFF               	addlw	-1
  4725  005E  1D03               	skipz
  4726  005F  285A               	goto	u3175
  4727  0060                     l2422:
  4728  0060  3001               	movlw	1
  4729  0061  02A0               	subwf	___awdiv@counter,f
  4730  0062  1D03               	btfss	3,2
  4731  0063  2865               	goto	u3181
  4732  0064  2866               	goto	u3180
  4733  0065                     u3181:
  4734  0065  2841               	goto	l2414
  4735  0066                     u3180:
  4736  0066                     l2424:
  4737  0066  0821               	movf	___awdiv@sign,w
  4738  0067  1903               	btfsc	3,2
  4739  0068  286A               	goto	u3191
  4740  0069  286B               	goto	u3190
  4741  006A                     u3191:
  4742  006A  2870               	goto	l2428
  4743  006B                     u3190:
  4744  006B                     l2426:
  4745  006B  09A2               	comf	___awdiv@quotient,f
  4746  006C  09A3               	comf	___awdiv@quotient+1,f
  4747  006D  0AA2               	incf	___awdiv@quotient,f
  4748  006E  1903               	skipnz
  4749  006F  0AA3               	incf	___awdiv@quotient+1,f
  4750  0070                     l2428:
  4751  0070  0823               	movf	___awdiv@quotient+1,w
  4752  0071  00F8               	movwf	?___awdiv+1
  4753  0072  0822               	movf	___awdiv@quotient,w
  4754  0073  00F7               	movwf	?___awdiv
  4755  0074                     l506:
  4756  0074  0008               	return
  4757  0075                     __end_of___awdiv:
  4758                           
  4759                           	psect	text5
  4760  1991                     __ptext5:	
  4761 ;; *************** function _isdigit *****************
  4762 ;; Defined at:
  4763 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  c               1    wreg     unsigned char 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  c               1    1[COMMON] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;		None               void
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4777 ;;      Params:         0       0       0       0       0
  4778 ;;      Locals:         2       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0
  4780 ;;      Totals:         2       0       0       0       0
  4781 ;;Total ram usage:        2 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_sprintf
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _isdigit
  4792  1991                     _isdigit:
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4796                           ;isdigit@c stored from wreg
  4797  1991  00F1               	movwf	isdigit@c
  4798  1992                     l2944:
  4799  1992  01F0               	clrf	_isdigit$790
  4800  1993                     l2946:
  4801  1993  303A               	movlw	58
  4802  1994  0271               	subwf	isdigit@c,w
  4803  1995  1803               	skipnc
  4804  1996  2998               	goto	u4501
  4805  1997  2999               	goto	u4500
  4806  1998                     u4501:
  4807  1998  29A1               	goto	l2952
  4808  1999                     u4500:
  4809  1999                     l2948:
  4810  1999  3030               	movlw	48
  4811  199A  0271               	subwf	isdigit@c,w
  4812  199B  1C03               	skipc
  4813  199C  299E               	goto	u4511
  4814  199D  299F               	goto	u4510
  4815  199E                     u4511:
  4816  199E  29A1               	goto	l2952
  4817  199F                     u4510:
  4818  199F                     l2950:
  4819  199F  01F0               	clrf	_isdigit$790
  4820  19A0  0AF0               	incf	_isdigit$790,f
  4821  19A1                     l2952:
  4822  19A1  0C70               	rrf	_isdigit$790,w
  4823  19A2                     l840:
  4824  19A2  0008               	return
  4825  19A3                     __end_of_isdigit:
  4826                           
  4827                           	psect	text6
  4828  136D                     __ptext6:	
  4829 ;; *************** function _fround *****************
  4830 ;; Defined at:
  4831 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  prec            1    wreg     unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  prec            1   49[BANK0 ] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  4   30[BANK0 ] unsigned char 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4845 ;;      Params:         0       4       0       0       0
  4846 ;;      Locals:         0       9       0       0       0
  4847 ;;      Temps:          0       7       0       0       0
  4848 ;;      Totals:         0      20       0       0       0
  4849 ;;Total ram usage:       20 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    2
  4852 ;; This function calls:
  4853 ;;		___flmul
  4854 ;;		___lwdiv
  4855 ;;		___lwmod
  4856 ;; This function is called by:
  4857 ;;		_sprintf
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _fround
  4863  136D                     _fround:
  4864                           
  4865                           ;incstack = 0
  4866                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4867                           ;fround@prec stored from wreg
  4868  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4869  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4870  136F  00D1               	movwf	fround@prec
  4871  1370                     l2886:
  4872                           
  4873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4874  1370  306E               	movlw	110
  4875  1371  0251               	subwf	fround@prec,w
  4876  1372  1C03               	skipc
  4877  1373  2B75               	goto	u4251
  4878  1374  2B76               	goto	u4250
  4879  1375                     u4251:
  4880  1375  2C83               	goto	l2894
  4881  1376                     u4250:
  4882  1376                     l2888:
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4885  1376  303F               	movlw	63
  4886  1377  00A7               	movwf	___flmul@b+3
  4887  1378  3000               	movlw	0
  4888  1379  00A6               	movwf	___flmul@b+2
  4889  137A  3000               	movlw	0
  4890  137B  00A5               	movwf	___flmul@b+1
  4891  137C  3000               	movlw	0
  4892  137D  00A4               	movwf	___flmul@b
  4893  137E  3064               	movlw	100
  4894  137F  00F6               	movwf	___lwdiv@divisor
  4895  1380  3000               	movlw	0
  4896  1381  00F7               	movwf	___lwdiv@divisor+1
  4897  1382  0851               	movf	fround@prec,w
  4898  1383  00C2               	movwf	??_fround
  4899  1384  01C3               	clrf	??_fround+1
  4900  1385  0842               	movf	??_fround,w
  4901  1386  00F8               	movwf	___lwdiv@dividend
  4902  1387  0843               	movf	??_fround+1,w
  4903  1388  00F9               	movwf	___lwdiv@dividend+1
  4904  1389  160A  158A  2311  160A  118A  	fcall	___lwdiv
  4905  138E  0876               	movf	?___lwdiv,w
  4906  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4907  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4908  1391  00C4               	movwf	??_fround+2
  4909  1392  3001               	movlw	1
  4910  1393                     u4265:
  4911  1393  1003               	clrc
  4912  1394  0DC4               	rlf	??_fround+2,f
  4913  1395  3EFF               	addlw	-1
  4914  1396  1D03               	skipz
  4915  1397  2B93               	goto	u4265
  4916  1398  1003               	clrc
  4917  1399  0D44               	rlf	??_fround+2,w
  4918  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4919  139B  0084               	movwf	4
  4920  139C  160A  118A  200A  160A  118A  	fcall	stringdir
  4921  13A1  00C5               	movwf	??_fround+3
  4922  13A2  160A  118A  200A  160A  118A  	fcall	stringdir
  4923  13A7  00C6               	movwf	??_fround+4
  4924  13A8  160A  118A  200A  160A  118A  	fcall	stringdir
  4925  13AD  00C7               	movwf	??_fround+5
  4926  13AE  160A  118A  200A  160A  118A  	fcall	stringdir
  4927  13B3  00C8               	movwf	??_fround+6
  4928  13B4  0848               	movf	??_fround+6,w
  4929  13B5  00AB               	movwf	___flmul@a+3
  4930  13B6  0847               	movf	??_fround+5,w
  4931  13B7  00AA               	movwf	___flmul@a+2
  4932  13B8  0846               	movf	??_fround+4,w
  4933  13B9  00A9               	movwf	___flmul@a+1
  4934  13BA  0845               	movf	??_fround+3,w
  4935  13BB  00A8               	movwf	___flmul@a
  4936  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4937  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4938  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4939  13C3  0827               	movf	?___flmul+3,w
  4940  13C4  00D0               	movwf	_fround$968+3
  4941  13C5  0826               	movf	?___flmul+2,w
  4942  13C6  00CF               	movwf	_fround$968+2
  4943  13C7  0825               	movf	?___flmul+1,w
  4944  13C8  00CE               	movwf	_fround$968+1
  4945  13C9  0824               	movf	?___flmul,w
  4946  13CA  00CD               	movwf	_fround$968
  4947                           
  4948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4949  13CB  300A               	movlw	10
  4950  13CC  00F6               	movwf	___lwdiv@divisor
  4951  13CD  3000               	movlw	0
  4952  13CE  00F7               	movwf	___lwdiv@divisor+1
  4953  13CF  0851               	movf	fround@prec,w
  4954  13D0  00C2               	movwf	??_fround
  4955  13D1  01C3               	clrf	??_fround+1
  4956  13D2  0842               	movf	??_fround,w
  4957  13D3  00F2               	movwf	___lwmod@dividend
  4958  13D4  0843               	movf	??_fround+1,w
  4959  13D5  00F3               	movwf	___lwmod@dividend+1
  4960  13D6  3064               	movlw	100
  4961  13D7  00F0               	movwf	___lwmod@divisor
  4962  13D8  3000               	movlw	0
  4963  13D9  00F1               	movwf	___lwmod@divisor+1
  4964  13DA  160A  158A  2295  160A  118A  	fcall	___lwmod
  4965  13DF  0871               	movf	?___lwmod+1,w
  4966  13E0  00F9               	movwf	___lwdiv@dividend+1
  4967  13E1  0870               	movf	?___lwmod,w
  4968  13E2  00F8               	movwf	___lwdiv@dividend
  4969  13E3  160A  158A  2311  160A  118A  	fcall	___lwdiv
  4970  13E8  0876               	movf	?___lwdiv,w
  4971  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4972  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4973  13EB  00C4               	movwf	??_fround+2
  4974  13EC  3001               	movlw	1
  4975  13ED                     u4275:
  4976  13ED  1003               	clrc
  4977  13EE  0DC4               	rlf	??_fround+2,f
  4978  13EF  3EFF               	addlw	-1
  4979  13F0  1D03               	skipz
  4980  13F1  2BED               	goto	u4275
  4981  13F2  1003               	clrc
  4982  13F3  0D44               	rlf	??_fround+2,w
  4983  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4984  13F5  0084               	movwf	4
  4985  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4986  13FB  00C5               	movwf	??_fround+3
  4987  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4988  1401  00C6               	movwf	??_fround+4
  4989  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  4990  1407  00C7               	movwf	??_fround+5
  4991  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  4992  140D  00C8               	movwf	??_fround+6
  4993  140E  0848               	movf	??_fround+6,w
  4994  140F  00A7               	movwf	___flmul@b+3
  4995  1410  0847               	movf	??_fround+5,w
  4996  1411  00A6               	movwf	___flmul@b+2
  4997  1412  0846               	movf	??_fround+4,w
  4998  1413  00A5               	movwf	___flmul@b+1
  4999  1414  0845               	movf	??_fround+3,w
  5000  1415  00A4               	movwf	___flmul@b
  5001  1416  0850               	movf	_fround$968+3,w
  5002  1417  00AB               	movwf	___flmul@a+3
  5003  1418  084F               	movf	_fround$968+2,w
  5004  1419  00AA               	movwf	___flmul@a+2
  5005  141A  084E               	movf	_fround$968+1,w
  5006  141B  00A9               	movwf	___flmul@a+1
  5007  141C  084D               	movf	_fround$968,w
  5008  141D  00A8               	movwf	___flmul@a
  5009  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5010  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5011  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5012  1425  0827               	movf	?___flmul+3,w
  5013  1426  00CC               	movwf	_fround$969+3
  5014  1427  0826               	movf	?___flmul+2,w
  5015  1428  00CB               	movwf	_fround$969+2
  5016  1429  0825               	movf	?___flmul+1,w
  5017  142A  00CA               	movwf	_fround$969+1
  5018  142B  0824               	movf	?___flmul,w
  5019  142C  00C9               	movwf	_fround$969
  5020                           
  5021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5022  142D  300A               	movlw	10
  5023  142E  00F0               	movwf	___lwmod@divisor
  5024  142F  3000               	movlw	0
  5025  1430  00F1               	movwf	___lwmod@divisor+1
  5026  1431  0851               	movf	fround@prec,w
  5027  1432  00C2               	movwf	??_fround
  5028  1433  01C3               	clrf	??_fround+1
  5029  1434  0842               	movf	??_fround,w
  5030  1435  00F2               	movwf	___lwmod@dividend
  5031  1436  0843               	movf	??_fround+1,w
  5032  1437  00F3               	movwf	___lwmod@dividend+1
  5033  1438  160A  158A  2295  160A  118A  	fcall	___lwmod
  5034  143D  0870               	movf	?___lwmod,w
  5035  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5036  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5037  1440  00C4               	movwf	??_fround+2
  5038  1441  3001               	movlw	1
  5039  1442                     u4285:
  5040  1442  1003               	clrc
  5041  1443  0DC4               	rlf	??_fround+2,f
  5042  1444  3EFF               	addlw	-1
  5043  1445  1D03               	skipz
  5044  1446  2C42               	goto	u4285
  5045  1447  1003               	clrc
  5046  1448  0D44               	rlf	??_fround+2,w
  5047  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5048  144A  0084               	movwf	4
  5049  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5050  1450  00C5               	movwf	??_fround+3
  5051  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5052  1456  00C6               	movwf	??_fround+4
  5053  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5054  145C  00C7               	movwf	??_fround+5
  5055  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5056  1462  00C8               	movwf	??_fround+6
  5057  1463  0848               	movf	??_fround+6,w
  5058  1464  00A7               	movwf	___flmul@b+3
  5059  1465  0847               	movf	??_fround+5,w
  5060  1466  00A6               	movwf	___flmul@b+2
  5061  1467  0846               	movf	??_fround+4,w
  5062  1468  00A5               	movwf	___flmul@b+1
  5063  1469  0845               	movf	??_fround+3,w
  5064  146A  00A4               	movwf	___flmul@b
  5065  146B  084C               	movf	_fround$969+3,w
  5066  146C  00AB               	movwf	___flmul@a+3
  5067  146D  084B               	movf	_fround$969+2,w
  5068  146E  00AA               	movwf	___flmul@a+2
  5069  146F  084A               	movf	_fround$969+1,w
  5070  1470  00A9               	movwf	___flmul@a+1
  5071  1471  0849               	movf	_fround$969,w
  5072  1472  00A8               	movwf	___flmul@a
  5073  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5074  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5075  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5076  147A  0827               	movf	?___flmul+3,w
  5077  147B  00C1               	movwf	?_fround+3
  5078  147C  0826               	movf	?___flmul+2,w
  5079  147D  00C0               	movwf	?_fround+2
  5080  147E  0825               	movf	?___flmul+1,w
  5081  147F  00BF               	movwf	?_fround+1
  5082  1480  0824               	movf	?___flmul,w
  5083  1481  00BE               	movwf	?_fround
  5084  1482  2D77               	goto	l259
  5085  1483                     l2894:
  5086  1483  300B               	movlw	11
  5087  1484  0251               	subwf	fround@prec,w
  5088  1485  1C03               	skipc
  5089  1486  2C88               	goto	u4291
  5090  1487  2C89               	goto	u4290
  5091  1488                     u4291:
  5092  1488  2D34               	goto	l2900
  5093  1489                     u4290:
  5094  1489                     l2896:
  5095                           
  5096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5097  1489  303F               	movlw	63
  5098  148A  00A7               	movwf	___flmul@b+3
  5099  148B  3000               	movlw	0
  5100  148C  00A6               	movwf	___flmul@b+2
  5101  148D  3000               	movlw	0
  5102  148E  00A5               	movwf	___flmul@b+1
  5103  148F  3000               	movlw	0
  5104  1490  00A4               	movwf	___flmul@b
  5105  1491  300A               	movlw	10
  5106  1492  00F6               	movwf	___lwdiv@divisor
  5107  1493  3000               	movlw	0
  5108  1494  00F7               	movwf	___lwdiv@divisor+1
  5109  1495  0851               	movf	fround@prec,w
  5110  1496  00C2               	movwf	??_fround
  5111  1497  01C3               	clrf	??_fround+1
  5112  1498  0842               	movf	??_fround,w
  5113  1499  00F8               	movwf	___lwdiv@dividend
  5114  149A  0843               	movf	??_fround+1,w
  5115  149B  00F9               	movwf	___lwdiv@dividend+1
  5116  149C  160A  158A  2311  160A  118A  	fcall	___lwdiv
  5117  14A1  0876               	movf	?___lwdiv,w
  5118  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5119  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5120  14A4  00C4               	movwf	??_fround+2
  5121  14A5  3001               	movlw	1
  5122  14A6                     u4305:
  5123  14A6  1003               	clrc
  5124  14A7  0DC4               	rlf	??_fround+2,f
  5125  14A8  3EFF               	addlw	-1
  5126  14A9  1D03               	skipz
  5127  14AA  2CA6               	goto	u4305
  5128  14AB  1003               	clrc
  5129  14AC  0D44               	rlf	??_fround+2,w
  5130  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5131  14AE  0084               	movwf	4
  5132  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5133  14B4  00C5               	movwf	??_fround+3
  5134  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5135  14BA  00C6               	movwf	??_fround+4
  5136  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5137  14C0  00C7               	movwf	??_fround+5
  5138  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5139  14C6  00C8               	movwf	??_fround+6
  5140  14C7  0848               	movf	??_fround+6,w
  5141  14C8  00AB               	movwf	___flmul@a+3
  5142  14C9  0847               	movf	??_fround+5,w
  5143  14CA  00AA               	movwf	___flmul@a+2
  5144  14CB  0846               	movf	??_fround+4,w
  5145  14CC  00A9               	movwf	___flmul@a+1
  5146  14CD  0845               	movf	??_fround+3,w
  5147  14CE  00A8               	movwf	___flmul@a
  5148  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5149  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5150  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5151  14D6  0827               	movf	?___flmul+3,w
  5152  14D7  00D0               	movwf	_fround$968+3
  5153  14D8  0826               	movf	?___flmul+2,w
  5154  14D9  00CF               	movwf	_fround$968+2
  5155  14DA  0825               	movf	?___flmul+1,w
  5156  14DB  00CE               	movwf	_fround$968+1
  5157  14DC  0824               	movf	?___flmul,w
  5158  14DD  00CD               	movwf	_fround$968
  5159                           
  5160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5161  14DE  300A               	movlw	10
  5162  14DF  00F0               	movwf	___lwmod@divisor
  5163  14E0  3000               	movlw	0
  5164  14E1  00F1               	movwf	___lwmod@divisor+1
  5165  14E2  0851               	movf	fround@prec,w
  5166  14E3  00C2               	movwf	??_fround
  5167  14E4  01C3               	clrf	??_fround+1
  5168  14E5  0842               	movf	??_fround,w
  5169  14E6  00F2               	movwf	___lwmod@dividend
  5170  14E7  0843               	movf	??_fround+1,w
  5171  14E8  00F3               	movwf	___lwmod@dividend+1
  5172  14E9  160A  158A  2295  160A  118A  	fcall	___lwmod
  5173  14EE  0870               	movf	?___lwmod,w
  5174  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5175  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5176  14F1  00C4               	movwf	??_fround+2
  5177  14F2  3001               	movlw	1
  5178  14F3                     u4315:
  5179  14F3  1003               	clrc
  5180  14F4  0DC4               	rlf	??_fround+2,f
  5181  14F5  3EFF               	addlw	-1
  5182  14F6  1D03               	skipz
  5183  14F7  2CF3               	goto	u4315
  5184  14F8  1003               	clrc
  5185  14F9  0D44               	rlf	??_fround+2,w
  5186  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5187  14FB  0084               	movwf	4
  5188  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5189  1501  00C5               	movwf	??_fround+3
  5190  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5191  1507  00C6               	movwf	??_fround+4
  5192  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5193  150D  00C7               	movwf	??_fround+5
  5194  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5195  1513  00C8               	movwf	??_fround+6
  5196  1514  0848               	movf	??_fround+6,w
  5197  1515  00A7               	movwf	___flmul@b+3
  5198  1516  0847               	movf	??_fround+5,w
  5199  1517  00A6               	movwf	___flmul@b+2
  5200  1518  0846               	movf	??_fround+4,w
  5201  1519  00A5               	movwf	___flmul@b+1
  5202  151A  0845               	movf	??_fround+3,w
  5203  151B  00A4               	movwf	___flmul@b
  5204  151C  0850               	movf	_fround$968+3,w
  5205  151D  00AB               	movwf	___flmul@a+3
  5206  151E  084F               	movf	_fround$968+2,w
  5207  151F  00AA               	movwf	___flmul@a+2
  5208  1520  084E               	movf	_fround$968+1,w
  5209  1521  00A9               	movwf	___flmul@a+1
  5210  1522  084D               	movf	_fround$968,w
  5211  1523  00A8               	movwf	___flmul@a
  5212  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5213  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5214  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5215  152B  0827               	movf	?___flmul+3,w
  5216  152C  00C1               	movwf	?_fround+3
  5217  152D  0826               	movf	?___flmul+2,w
  5218  152E  00C0               	movwf	?_fround+2
  5219  152F  0825               	movf	?___flmul+1,w
  5220  1530  00BF               	movwf	?_fround+1
  5221  1531  0824               	movf	?___flmul,w
  5222  1532  00BE               	movwf	?_fround
  5223  1533  2D77               	goto	l259
  5224  1534                     l2900:
  5225                           
  5226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5227  1534  303F               	movlw	63
  5228  1535  00A7               	movwf	___flmul@b+3
  5229  1536  3000               	movlw	0
  5230  1537  00A6               	movwf	___flmul@b+2
  5231  1538  3000               	movlw	0
  5232  1539  00A5               	movwf	___flmul@b+1
  5233  153A  3000               	movlw	0
  5234  153B  00A4               	movwf	___flmul@b
  5235  153C  0851               	movf	fround@prec,w
  5236  153D  00C2               	movwf	??_fround
  5237  153E  3001               	movlw	1
  5238  153F                     u4325:
  5239  153F  1003               	clrc
  5240  1540  0DC2               	rlf	??_fround,f
  5241  1541  3EFF               	addlw	-1
  5242  1542  1D03               	skipz
  5243  1543  2D3F               	goto	u4325
  5244  1544  1003               	clrc
  5245  1545  0D42               	rlf	??_fround,w
  5246  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5247  1547  0084               	movwf	4
  5248  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5249  154D  00C3               	movwf	??_fround+1
  5250  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5251  1553  00C4               	movwf	??_fround+2
  5252  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5253  1559  00C5               	movwf	??_fround+3
  5254  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5255  155F  00C6               	movwf	??_fround+4
  5256  1560  0846               	movf	??_fround+4,w
  5257  1561  00AB               	movwf	___flmul@a+3
  5258  1562  0845               	movf	??_fround+3,w
  5259  1563  00AA               	movwf	___flmul@a+2
  5260  1564  0844               	movf	??_fround+2,w
  5261  1565  00A9               	movwf	___flmul@a+1
  5262  1566  0843               	movf	??_fround+1,w
  5263  1567  00A8               	movwf	___flmul@a
  5264  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5265  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5266  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5267  156F  0827               	movf	?___flmul+3,w
  5268  1570  00C1               	movwf	?_fround+3
  5269  1571  0826               	movf	?___flmul+2,w
  5270  1572  00C0               	movwf	?_fround+2
  5271  1573  0825               	movf	?___flmul+1,w
  5272  1574  00BF               	movwf	?_fround+1
  5273  1575  0824               	movf	?___flmul,w
  5274  1576  00BE               	movwf	?_fround
  5275  1577                     l259:
  5276  1577  0008               	return
  5277  1578                     __end_of_fround:
  5278                           
  5279                           	psect	text7
  5280  1A95                     __ptext7:	
  5281 ;; *************** function ___lwmod *****************
  5282 ;; Defined at:
  5283 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  divisor         2    0[COMMON] unsigned int 
  5286 ;;  dividend        2    2[COMMON] unsigned int 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  counter         1    5[COMMON] unsigned char 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  2    0[COMMON] unsigned int 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5298 ;;      Params:         4       0       0       0       0
  5299 ;;      Locals:         1       0       0       0       0
  5300 ;;      Temps:          1       0       0       0       0
  5301 ;;      Totals:         6       0       0       0       0
  5302 ;;Total ram usage:        6 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_fround
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           
  5312                           ;psect for function ___lwmod
  5313  1A95                     ___lwmod:
  5314  1A95                     l2496:	
  5315                           ;incstack = 0
  5316                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5317                           
  5318  1A95  0870               	movf	___lwmod@divisor,w
  5319  1A96  0471               	iorwf	___lwmod@divisor+1,w
  5320  1A97  1903               	btfsc	3,2
  5321  1A98  2A9A               	goto	u3361
  5322  1A99  2A9B               	goto	u3360
  5323  1A9A                     u3361:
  5324  1A9A  2ACA               	goto	l2514
  5325  1A9B                     u3360:
  5326  1A9B                     l2498:
  5327  1A9B  01F5               	clrf	___lwmod@counter
  5328  1A9C  0AF5               	incf	___lwmod@counter,f
  5329  1A9D  2AA9               	goto	l2504
  5330  1A9E                     l2500:
  5331  1A9E  3001               	movlw	1
  5332  1A9F                     u3375:
  5333  1A9F  1003               	clrc
  5334  1AA0  0DF0               	rlf	___lwmod@divisor,f
  5335  1AA1  0DF1               	rlf	___lwmod@divisor+1,f
  5336  1AA2  3EFF               	addlw	-1
  5337  1AA3  1D03               	skipz
  5338  1AA4  2A9F               	goto	u3375
  5339  1AA5                     l2502:
  5340  1AA5  3001               	movlw	1
  5341  1AA6  00F4               	movwf	??___lwmod
  5342  1AA7  0874               	movf	??___lwmod,w
  5343  1AA8  07F5               	addwf	___lwmod@counter,f
  5344  1AA9                     l2504:
  5345  1AA9  1FF1               	btfss	___lwmod@divisor+1,7
  5346  1AAA  2AAC               	goto	u3381
  5347  1AAB  2AAD               	goto	u3380
  5348  1AAC                     u3381:
  5349  1AAC  2A9E               	goto	l2500
  5350  1AAD                     u3380:
  5351  1AAD                     l2506:
  5352  1AAD  0871               	movf	___lwmod@divisor+1,w
  5353  1AAE  0273               	subwf	___lwmod@dividend+1,w
  5354  1AAF  1D03               	skipz
  5355  1AB0  2AB3               	goto	u3395
  5356  1AB1  0870               	movf	___lwmod@divisor,w
  5357  1AB2  0272               	subwf	___lwmod@dividend,w
  5358  1AB3                     u3395:
  5359  1AB3  1C03               	skipc
  5360  1AB4  2AB6               	goto	u3391
  5361  1AB5  2AB7               	goto	u3390
  5362  1AB6                     u3391:
  5363  1AB6  2ABD               	goto	l2510
  5364  1AB7                     u3390:
  5365  1AB7                     l2508:
  5366  1AB7  0870               	movf	___lwmod@divisor,w
  5367  1AB8  02F2               	subwf	___lwmod@dividend,f
  5368  1AB9  0871               	movf	___lwmod@divisor+1,w
  5369  1ABA  1C03               	skipc
  5370  1ABB  03F3               	decf	___lwmod@dividend+1,f
  5371  1ABC  02F3               	subwf	___lwmod@dividend+1,f
  5372  1ABD                     l2510:
  5373  1ABD  3001               	movlw	1
  5374  1ABE                     u3405:
  5375  1ABE  1003               	clrc
  5376  1ABF  0CF1               	rrf	___lwmod@divisor+1,f
  5377  1AC0  0CF0               	rrf	___lwmod@divisor,f
  5378  1AC1  3EFF               	addlw	-1
  5379  1AC2  1D03               	skipz
  5380  1AC3  2ABE               	goto	u3405
  5381  1AC4                     l2512:
  5382  1AC4  3001               	movlw	1
  5383  1AC5  02F5               	subwf	___lwmod@counter,f
  5384  1AC6  1D03               	btfss	3,2
  5385  1AC7  2AC9               	goto	u3411
  5386  1AC8  2ACA               	goto	u3410
  5387  1AC9                     u3411:
  5388  1AC9  2AAD               	goto	l2506
  5389  1ACA                     u3410:
  5390  1ACA                     l2514:
  5391  1ACA  0873               	movf	___lwmod@dividend+1,w
  5392  1ACB  00F1               	movwf	?___lwmod+1
  5393  1ACC  0872               	movf	___lwmod@dividend,w
  5394  1ACD  00F0               	movwf	?___lwmod
  5395  1ACE                     l669:
  5396  1ACE  0008               	return
  5397  1ACF                     __end_of___lwmod:
  5398                           
  5399                           	psect	text8
  5400  1B11                     __ptext8:	
  5401 ;; *************** function ___lwdiv *****************
  5402 ;; Defined at:
  5403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  divisor         2    6[COMMON] unsigned int 
  5406 ;;  dividend        2    8[COMMON] unsigned int 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  quotient        2   11[COMMON] unsigned int 
  5409 ;;  counter         1   13[COMMON] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  2    6[COMMON] unsigned int 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5419 ;;      Params:         4       0       0       0       0
  5420 ;;      Locals:         3       0       0       0       0
  5421 ;;      Temps:          1       0       0       0       0
  5422 ;;      Totals:         8       0       0       0       0
  5423 ;;Total ram usage:        8 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_fround
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           
  5433                           ;psect for function ___lwdiv
  5434  1B11                     ___lwdiv:
  5435  1B11                     l2470:	
  5436                           ;incstack = 0
  5437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5438                           
  5439  1B11  01FB               	clrf	___lwdiv@quotient
  5440  1B12  01FC               	clrf	___lwdiv@quotient+1
  5441  1B13                     l2472:
  5442  1B13  0876               	movf	___lwdiv@divisor,w
  5443  1B14  0477               	iorwf	___lwdiv@divisor+1,w
  5444  1B15  1903               	btfsc	3,2
  5445  1B16  2B18               	goto	u3291
  5446  1B17  2B19               	goto	u3290
  5447  1B18                     u3291:
  5448  1B18  2B50               	goto	l2492
  5449  1B19                     u3290:
  5450  1B19                     l2474:
  5451  1B19  01FD               	clrf	___lwdiv@counter
  5452  1B1A  0AFD               	incf	___lwdiv@counter,f
  5453  1B1B  2B27               	goto	l2480
  5454  1B1C                     l2476:
  5455  1B1C  3001               	movlw	1
  5456  1B1D                     u3305:
  5457  1B1D  1003               	clrc
  5458  1B1E  0DF6               	rlf	___lwdiv@divisor,f
  5459  1B1F  0DF7               	rlf	___lwdiv@divisor+1,f
  5460  1B20  3EFF               	addlw	-1
  5461  1B21  1D03               	skipz
  5462  1B22  2B1D               	goto	u3305
  5463  1B23                     l2478:
  5464  1B23  3001               	movlw	1
  5465  1B24  00FA               	movwf	??___lwdiv
  5466  1B25  087A               	movf	??___lwdiv,w
  5467  1B26  07FD               	addwf	___lwdiv@counter,f
  5468  1B27                     l2480:
  5469  1B27  1FF7               	btfss	___lwdiv@divisor+1,7
  5470  1B28  2B2A               	goto	u3311
  5471  1B29  2B2B               	goto	u3310
  5472  1B2A                     u3311:
  5473  1B2A  2B1C               	goto	l2476
  5474  1B2B                     u3310:
  5475  1B2B                     l2482:
  5476  1B2B  3001               	movlw	1
  5477  1B2C                     u3325:
  5478  1B2C  1003               	clrc
  5479  1B2D  0DFB               	rlf	___lwdiv@quotient,f
  5480  1B2E  0DFC               	rlf	___lwdiv@quotient+1,f
  5481  1B2F  3EFF               	addlw	-1
  5482  1B30  1D03               	skipz
  5483  1B31  2B2C               	goto	u3325
  5484  1B32  0877               	movf	___lwdiv@divisor+1,w
  5485  1B33  0279               	subwf	___lwdiv@dividend+1,w
  5486  1B34  1D03               	skipz
  5487  1B35  2B38               	goto	u3335
  5488  1B36  0876               	movf	___lwdiv@divisor,w
  5489  1B37  0278               	subwf	___lwdiv@dividend,w
  5490  1B38                     u3335:
  5491  1B38  1C03               	skipc
  5492  1B39  2B3B               	goto	u3331
  5493  1B3A  2B3C               	goto	u3330
  5494  1B3B                     u3331:
  5495  1B3B  2B43               	goto	l2488
  5496  1B3C                     u3330:
  5497  1B3C                     l2484:
  5498  1B3C  0876               	movf	___lwdiv@divisor,w
  5499  1B3D  02F8               	subwf	___lwdiv@dividend,f
  5500  1B3E  0877               	movf	___lwdiv@divisor+1,w
  5501  1B3F  1C03               	skipc
  5502  1B40  03F9               	decf	___lwdiv@dividend+1,f
  5503  1B41  02F9               	subwf	___lwdiv@dividend+1,f
  5504  1B42                     l2486:
  5505  1B42  147B               	bsf	___lwdiv@quotient,0
  5506  1B43                     l2488:
  5507  1B43  3001               	movlw	1
  5508  1B44                     u3345:
  5509  1B44  1003               	clrc
  5510  1B45  0CF7               	rrf	___lwdiv@divisor+1,f
  5511  1B46  0CF6               	rrf	___lwdiv@divisor,f
  5512  1B47  3EFF               	addlw	-1
  5513  1B48  1D03               	skipz
  5514  1B49  2B44               	goto	u3345
  5515  1B4A                     l2490:
  5516  1B4A  3001               	movlw	1
  5517  1B4B  02FD               	subwf	___lwdiv@counter,f
  5518  1B4C  1D03               	btfss	3,2
  5519  1B4D  2B4F               	goto	u3351
  5520  1B4E  2B50               	goto	u3350
  5521  1B4F                     u3351:
  5522  1B4F  2B2B               	goto	l2482
  5523  1B50                     u3350:
  5524  1B50                     l2492:
  5525  1B50  087C               	movf	___lwdiv@quotient+1,w
  5526  1B51  00F7               	movwf	?___lwdiv+1
  5527  1B52  087B               	movf	___lwdiv@quotient,w
  5528  1B53  00F6               	movwf	?___lwdiv
  5529  1B54                     l659:
  5530  1B54  0008               	return
  5531  1B55                     __end_of___lwdiv:
  5532                           
  5533                           	psect	text9
  5534  10D3                     __ptext9:	
  5535 ;; *************** function __tdiv_to_l_ *****************
  5536 ;; Defined at:
  5537 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  f1              4    0[COMMON] float 
  5540 ;;  f2              4    4[COMMON] float 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  quot            4    0[BANK0 ] unsigned long 
  5543 ;;  exp1            1    5[BANK0 ] unsigned char 
  5544 ;;  cntr            1    4[BANK0 ] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  4    0[COMMON] unsigned long 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5554 ;;      Params:         8       0       0       0       0
  5555 ;;      Locals:         0       6       0       0       0
  5556 ;;      Temps:          4       0       0       0       0
  5557 ;;      Totals:        12       6       0       0       0
  5558 ;;Total ram usage:       18 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_sprintf
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function __tdiv_to_l_
  5569  10D3                     __tdiv_to_l_:
  5570  10D3                     l2956:	
  5571                           ;incstack = 0
  5572                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5573                           
  5574  10D3  0870               	movf	__tdiv_to_l_@f1,w
  5575  10D4  00F8               	movwf	??__tdiv_to_l_
  5576  10D5  0871               	movf	__tdiv_to_l_@f1+1,w
  5577  10D6  00F9               	movwf	??__tdiv_to_l_+1
  5578  10D7  0872               	movf	__tdiv_to_l_@f1+2,w
  5579  10D8  00FA               	movwf	??__tdiv_to_l_+2
  5580  10D9  1003               	clrc
  5581  10DA  0D79               	rlf	??__tdiv_to_l_+1,w
  5582  10DB  0D7A               	rlf	??__tdiv_to_l_+2,w
  5583  10DC  00FB               	movwf	??__tdiv_to_l_+3
  5584  10DD  087B               	movf	??__tdiv_to_l_+3,w
  5585  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  5586  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  5587  10E0  00A5               	movwf	__tdiv_to_l_@exp1
  5588  10E1  0825               	movf	__tdiv_to_l_@exp1,w
  5589  10E2  1D03               	btfss	3,2
  5590  10E3  28E5               	goto	u4521
  5591  10E4  28E6               	goto	u4520
  5592  10E5                     u4521:
  5593  10E5  28EF               	goto	l2962
  5594  10E6                     u4520:
  5595  10E6                     l2958:
  5596  10E6  3000               	movlw	0
  5597  10E7  00F3               	movwf	?__tdiv_to_l_+3
  5598  10E8  3000               	movlw	0
  5599  10E9  00F2               	movwf	?__tdiv_to_l_+2
  5600  10EA  3000               	movlw	0
  5601  10EB  00F1               	movwf	?__tdiv_to_l_+1
  5602  10EC  3000               	movlw	0
  5603  10ED  00F0               	movwf	?__tdiv_to_l_
  5604  10EE  298F               	goto	l570
  5605  10EF                     l2962:
  5606  10EF  0874               	movf	__tdiv_to_l_@f2,w
  5607  10F0  00F8               	movwf	??__tdiv_to_l_
  5608  10F1  0875               	movf	__tdiv_to_l_@f2+1,w
  5609  10F2  00F9               	movwf	??__tdiv_to_l_+1
  5610  10F3  0876               	movf	__tdiv_to_l_@f2+2,w
  5611  10F4  00FA               	movwf	??__tdiv_to_l_+2
  5612  10F5  1003               	clrc
  5613  10F6  0D79               	rlf	??__tdiv_to_l_+1,w
  5614  10F7  0D7A               	rlf	??__tdiv_to_l_+2,w
  5615  10F8  00FB               	movwf	??__tdiv_to_l_+3
  5616  10F9  087B               	movf	??__tdiv_to_l_+3,w
  5617  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  5618  10FB  0824               	movf	__tdiv_to_l_@cntr,w
  5619  10FC  1D03               	btfss	3,2
  5620  10FD  28FF               	goto	u4531
  5621  10FE  2900               	goto	u4530
  5622  10FF                     u4531:
  5623  10FF  2901               	goto	l571
  5624  1100                     u4530:
  5625  1100  28E6               	goto	l2958
  5626  1101                     l571:
  5627  1101  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5628  1102                     l2968:
  5629  1102  30FF               	movlw	255
  5630  1103  05F0               	andwf	__tdiv_to_l_@f1,f
  5631  1104  30FF               	movlw	255
  5632  1105  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5633  1106  3000               	movlw	0
  5634  1107  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5635  1108                     l2970:
  5636  1108  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5637  1109  30FF               	movlw	255
  5638  110A  05F4               	andwf	__tdiv_to_l_@f2,f
  5639  110B  30FF               	movlw	255
  5640  110C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5641  110D  3000               	movlw	0
  5642  110E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5643  110F  3000               	movlw	0
  5644  1110  00A3               	movwf	__tdiv_to_l_@quot+3
  5645  1111  3000               	movlw	0
  5646  1112  00A2               	movwf	__tdiv_to_l_@quot+2
  5647  1113  3000               	movlw	0
  5648  1114  00A1               	movwf	__tdiv_to_l_@quot+1
  5649  1115  3000               	movlw	0
  5650  1116  00A0               	movwf	__tdiv_to_l_@quot
  5651  1117                     l2972:
  5652  1117  307F               	movlw	127
  5653  1118  02A5               	subwf	__tdiv_to_l_@exp1,f
  5654  1119                     l2974:
  5655  1119  3098               	movlw	152
  5656  111A  0724               	addwf	__tdiv_to_l_@cntr,w
  5657  111B  00F8               	movwf	??__tdiv_to_l_
  5658  111C  0878               	movf	??__tdiv_to_l_,w
  5659  111D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5660  111E  3018               	movlw	24
  5661  111F  00F8               	movwf	??__tdiv_to_l_
  5662  1120  0878               	movf	??__tdiv_to_l_,w
  5663  1121  00A4               	movwf	__tdiv_to_l_@cntr
  5664  1122                     l2976:
  5665  1122  3001               	movlw	1
  5666  1123  00F8               	movwf	??__tdiv_to_l_
  5667  1124                     u4545:
  5668  1124  1003               	clrc
  5669  1125  0DA0               	rlf	__tdiv_to_l_@quot,f
  5670  1126  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5671  1127  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5672  1128  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5673  1129  0BF8               	decfsz	??__tdiv_to_l_,f
  5674  112A  2924               	goto	u4545
  5675  112B                     l2978:
  5676  112B  0876               	movf	__tdiv_to_l_@f2+2,w
  5677  112C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5678  112D  1D03               	skipz
  5679  112E  2935               	goto	u4555
  5680  112F  0875               	movf	__tdiv_to_l_@f2+1,w
  5681  1130  0271               	subwf	__tdiv_to_l_@f1+1,w
  5682  1131  1D03               	skipz
  5683  1132  2935               	goto	u4555
  5684  1133  0874               	movf	__tdiv_to_l_@f2,w
  5685  1134  0270               	subwf	__tdiv_to_l_@f1,w
  5686  1135                     u4555:
  5687  1135  1C03               	skipc
  5688  1136  2938               	goto	u4551
  5689  1137  2939               	goto	u4550
  5690  1138                     u4551:
  5691  1138  2944               	goto	l2984
  5692  1139                     u4550:
  5693  1139                     l2980:
  5694  1139  0874               	movf	__tdiv_to_l_@f2,w
  5695  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  5696  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  5697  113C  1C03               	skipc
  5698  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5699  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5700  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  5701  1140  1C03               	skipc
  5702  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  5703  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5704  1143                     l2982:
  5705  1143  1420               	bsf	__tdiv_to_l_@quot,0
  5706  1144                     l2984:
  5707  1144  3001               	movlw	1
  5708  1145                     u4565:
  5709  1145  1003               	clrc
  5710  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  5711  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5712  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5713  1149  3EFF               	addlw	-1
  5714  114A  1D03               	skipz
  5715  114B  2945               	goto	u4565
  5716  114C                     l2986:
  5717  114C  3001               	movlw	1
  5718  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  5719  114E  1D03               	btfss	3,2
  5720  114F  2951               	goto	u4571
  5721  1150  2952               	goto	u4570
  5722  1151                     u4571:
  5723  1151  2922               	goto	l2976
  5724  1152                     u4570:
  5725  1152                     l574:
  5726  1152  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5727  1153  2955               	goto	u4581
  5728  1154  2956               	goto	u4580
  5729  1155                     u4581:
  5730  1155  2970               	goto	l2996
  5731  1156                     u4580:
  5732  1156                     l2988:
  5733  1156  0825               	movf	__tdiv_to_l_@exp1,w
  5734  1157  3A80               	xorlw	128
  5735  1158  3E97               	addlw	151
  5736  1159  1803               	skipnc
  5737  115A  295C               	goto	u4591
  5738  115B  295D               	goto	u4590
  5739  115C                     u4591:
  5740  115C  295E               	goto	l2994
  5741  115D                     u4590:
  5742  115D  28E6               	goto	l2958
  5743  115E                     l2994:
  5744  115E  3001               	movlw	1
  5745  115F                     u4605:
  5746  115F  1003               	clrc
  5747  1160  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5748  1161  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5749  1162  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5750  1163  0CA0               	rrf	__tdiv_to_l_@quot,f
  5751  1164  3EFF               	addlw	-1
  5752  1165  1D03               	skipz
  5753  1166  295F               	goto	u4605
  5754  1167  3001               	movlw	1
  5755  1168  00F8               	movwf	??__tdiv_to_l_
  5756  1169  0878               	movf	??__tdiv_to_l_,w
  5757  116A  07A5               	addwf	__tdiv_to_l_@exp1,f
  5758  116B  1D03               	btfss	3,2
  5759  116C  296E               	goto	u4611
  5760  116D  296F               	goto	u4610
  5761  116E                     u4611:
  5762  116E  295E               	goto	l2994
  5763  116F                     u4610:
  5764  116F  2987               	goto	l3004
  5765  1170                     l2996:
  5766  1170  3018               	movlw	24
  5767  1171  0225               	subwf	__tdiv_to_l_@exp1,w
  5768  1172  1C03               	skipc
  5769  1173  2975               	goto	u4621
  5770  1174  2976               	goto	u4620
  5771  1175                     u4621:
  5772  1175  2982               	goto	l581
  5773  1176                     u4620:
  5774  1176  28E6               	goto	l2958
  5775  1177                     l3002:
  5776  1177  3001               	movlw	1
  5777  1178  00F8               	movwf	??__tdiv_to_l_
  5778  1179                     u4635:
  5779  1179  1003               	clrc
  5780  117A  0DA0               	rlf	__tdiv_to_l_@quot,f
  5781  117B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5782  117C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5783  117D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5784  117E  0BF8               	decfsz	??__tdiv_to_l_,f
  5785  117F  2979               	goto	u4635
  5786  1180  3001               	movlw	1
  5787  1181  02A5               	subwf	__tdiv_to_l_@exp1,f
  5788  1182                     l581:
  5789  1182  0825               	movf	__tdiv_to_l_@exp1,w
  5790  1183  1D03               	btfss	3,2
  5791  1184  2986               	goto	u4641
  5792  1185  2987               	goto	u4640
  5793  1186                     u4641:
  5794  1186  2977               	goto	l3002
  5795  1187                     u4640:
  5796  1187                     l3004:
  5797  1187  0823               	movf	__tdiv_to_l_@quot+3,w
  5798  1188  00F3               	movwf	?__tdiv_to_l_+3
  5799  1189  0822               	movf	__tdiv_to_l_@quot+2,w
  5800  118A  00F2               	movwf	?__tdiv_to_l_+2
  5801  118B  0821               	movf	__tdiv_to_l_@quot+1,w
  5802  118C  00F1               	movwf	?__tdiv_to_l_+1
  5803  118D  0820               	movf	__tdiv_to_l_@quot,w
  5804  118E  00F0               	movwf	?__tdiv_to_l_
  5805  118F                     l570:
  5806  118F  0008               	return
  5807  1190                     __end_of__tdiv_to_l_:
  5808                           
  5809                           	psect	text10
  5810  0882                     __ptext10:	
  5811 ;; *************** function __div_to_l_ *****************
  5812 ;; Defined at:
  5813 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  f1              4    0[COMMON] unsigned long 
  5816 ;;  f2              4    4[COMMON] unsigned long 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  quot            4    0[BANK0 ] unsigned long 
  5819 ;;  exp1            1    5[BANK0 ] unsigned char 
  5820 ;;  cntr            1    4[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  4    0[COMMON] unsigned long 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5830 ;;      Params:         8       0       0       0       0
  5831 ;;      Locals:         0       6       0       0       0
  5832 ;;      Temps:          1       0       0       0       0
  5833 ;;      Totals:         9       6       0       0       0
  5834 ;;Total ram usage:       15 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_sprintf
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function __div_to_l_
  5845  0882                     __div_to_l_:
  5846  0882                     l3008:	
  5847                           ;incstack = 0
  5848                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5849                           
  5850  0882  1003               	clrc
  5851  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5852  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5853  0885  00F8               	movwf	??__div_to_l_
  5854  0886  0878               	movf	??__div_to_l_,w
  5855  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0889  00A5               	movwf	__div_to_l_@exp1
  5858  088A  0825               	movf	__div_to_l_@exp1,w
  5859  088B  1D03               	btfss	3,2
  5860  088C  288E               	goto	u4651
  5861  088D  288F               	goto	u4650
  5862  088E                     u4651:
  5863  088E  2898               	goto	l3014
  5864  088F                     u4650:
  5865  088F                     l3010:
  5866  088F  3000               	movlw	0
  5867  0890  00F3               	movwf	?__div_to_l_+3
  5868  0891  3000               	movlw	0
  5869  0892  00F2               	movwf	?__div_to_l_+2
  5870  0893  3000               	movlw	0
  5871  0894  00F1               	movwf	?__div_to_l_+1
  5872  0895  3000               	movlw	0
  5873  0896  00F0               	movwf	?__div_to_l_
  5874  0897  293F               	goto	l523
  5875  0898                     l3014:
  5876  0898  1003               	clrc
  5877  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5878  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5879  089B  00F8               	movwf	??__div_to_l_
  5880  089C  0878               	movf	??__div_to_l_,w
  5881  089D  00A4               	movwf	__div_to_l_@cntr
  5882  089E  0824               	movf	__div_to_l_@cntr,w
  5883  089F  1D03               	btfss	3,2
  5884  08A0  28A2               	goto	u4661
  5885  08A1  28A3               	goto	u4660
  5886  08A2                     u4661:
  5887  08A2  28A4               	goto	l524
  5888  08A3                     u4660:
  5889  08A3  288F               	goto	l3010
  5890  08A4                     l524:
  5891  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  5892  08A5                     l3020:
  5893  08A5  30FF               	movlw	255
  5894  08A6  05F0               	andwf	__div_to_l_@f1,f
  5895  08A7  30FF               	movlw	255
  5896  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  5897  08A9  30FF               	movlw	255
  5898  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  5899  08AB  3000               	movlw	0
  5900  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  5901  08AD                     l3022:
  5902  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  5903  08AE  30FF               	movlw	255
  5904  08AF  05F4               	andwf	__div_to_l_@f2,f
  5905  08B0  30FF               	movlw	255
  5906  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  5907  08B2  30FF               	movlw	255
  5908  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  5909  08B4  3000               	movlw	0
  5910  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  5911  08B6  3000               	movlw	0
  5912  08B7  00A3               	movwf	__div_to_l_@quot+3
  5913  08B8  3000               	movlw	0
  5914  08B9  00A2               	movwf	__div_to_l_@quot+2
  5915  08BA  3000               	movlw	0
  5916  08BB  00A1               	movwf	__div_to_l_@quot+1
  5917  08BC  3000               	movlw	0
  5918  08BD  00A0               	movwf	__div_to_l_@quot
  5919  08BE                     l3024:
  5920  08BE  307F               	movlw	127
  5921  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5922  08C0                     l3026:
  5923  08C0  30A0               	movlw	160
  5924  08C1  0724               	addwf	__div_to_l_@cntr,w
  5925  08C2  00F8               	movwf	??__div_to_l_
  5926  08C3  0878               	movf	??__div_to_l_,w
  5927  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5928  08C5  3020               	movlw	32
  5929  08C6  00F8               	movwf	??__div_to_l_
  5930  08C7  0878               	movf	??__div_to_l_,w
  5931  08C8  00A4               	movwf	__div_to_l_@cntr
  5932  08C9                     l3028:
  5933  08C9  3001               	movlw	1
  5934  08CA  00F8               	movwf	??__div_to_l_
  5935  08CB                     u4675:
  5936  08CB  1003               	clrc
  5937  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5938  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5939  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5940  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5941  08D0  0BF8               	decfsz	??__div_to_l_,f
  5942  08D1  28CB               	goto	u4675
  5943  08D2                     l3030:
  5944  08D2  0877               	movf	__div_to_l_@f2+3,w
  5945  08D3  0273               	subwf	__div_to_l_@f1+3,w
  5946  08D4  1D03               	skipz
  5947  08D5  28E0               	goto	u4685
  5948  08D6  0876               	movf	__div_to_l_@f2+2,w
  5949  08D7  0272               	subwf	__div_to_l_@f1+2,w
  5950  08D8  1D03               	skipz
  5951  08D9  28E0               	goto	u4685
  5952  08DA  0875               	movf	__div_to_l_@f2+1,w
  5953  08DB  0271               	subwf	__div_to_l_@f1+1,w
  5954  08DC  1D03               	skipz
  5955  08DD  28E0               	goto	u4685
  5956  08DE  0874               	movf	__div_to_l_@f2,w
  5957  08DF  0270               	subwf	__div_to_l_@f1,w
  5958  08E0                     u4685:
  5959  08E0  1C03               	skipc
  5960  08E1  28E3               	goto	u4681
  5961  08E2  28E4               	goto	u4680
  5962  08E3                     u4681:
  5963  08E3  28F3               	goto	l3036
  5964  08E4                     u4680:
  5965  08E4                     l3032:
  5966  08E4  0874               	movf	__div_to_l_@f2,w
  5967  08E5  02F0               	subwf	__div_to_l_@f1,f
  5968  08E6  0875               	movf	__div_to_l_@f2+1,w
  5969  08E7  1C03               	skipc
  5970  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  5971  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  5972  08EA  0876               	movf	__div_to_l_@f2+2,w
  5973  08EB  1C03               	skipc
  5974  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  5975  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  5976  08EE  0877               	movf	__div_to_l_@f2+3,w
  5977  08EF  1C03               	skipc
  5978  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  5979  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  5980  08F2                     l3034:
  5981  08F2  1420               	bsf	__div_to_l_@quot,0
  5982  08F3                     l3036:
  5983  08F3  3001               	movlw	1
  5984  08F4  00F8               	movwf	??__div_to_l_
  5985  08F5                     u4695:
  5986  08F5  1003               	clrc
  5987  08F6  0DF0               	rlf	__div_to_l_@f1,f
  5988  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  5989  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  5990  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  5991  08FA  0BF8               	decfsz	??__div_to_l_,f
  5992  08FB  28F5               	goto	u4695
  5993  08FC                     l3038:
  5994  08FC  3001               	movlw	1
  5995  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5996  08FE  1D03               	btfss	3,2
  5997  08FF  2901               	goto	u4701
  5998  0900  2902               	goto	u4700
  5999  0901                     u4701:
  6000  0901  28C9               	goto	l3028
  6001  0902                     u4700:
  6002  0902                     l527:
  6003  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6004  0903  2905               	goto	u4711
  6005  0904  2906               	goto	u4710
  6006  0905                     u4711:
  6007  0905  2920               	goto	l3048
  6008  0906                     u4710:
  6009  0906                     l3040:
  6010  0906  0825               	movf	__div_to_l_@exp1,w
  6011  0907  3A80               	xorlw	128
  6012  0908  3E9F               	addlw	159
  6013  0909  1803               	skipnc
  6014  090A  290C               	goto	u4721
  6015  090B  290D               	goto	u4720
  6016  090C                     u4721:
  6017  090C  290E               	goto	l3046
  6018  090D                     u4720:
  6019  090D  288F               	goto	l3010
  6020  090E                     l3046:
  6021  090E  3001               	movlw	1
  6022  090F                     u4735:
  6023  090F  1003               	clrc
  6024  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  6025  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  6026  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  6027  0913  0CA0               	rrf	__div_to_l_@quot,f
  6028  0914  3EFF               	addlw	-1
  6029  0915  1D03               	skipz
  6030  0916  290F               	goto	u4735
  6031  0917  3001               	movlw	1
  6032  0918  00F8               	movwf	??__div_to_l_
  6033  0919  0878               	movf	??__div_to_l_,w
  6034  091A  07A5               	addwf	__div_to_l_@exp1,f
  6035  091B  1D03               	btfss	3,2
  6036  091C  291E               	goto	u4741
  6037  091D  291F               	goto	u4740
  6038  091E                     u4741:
  6039  091E  290E               	goto	l3046
  6040  091F                     u4740:
  6041  091F  2937               	goto	l3056
  6042  0920                     l3048:
  6043  0920  3020               	movlw	32
  6044  0921  0225               	subwf	__div_to_l_@exp1,w
  6045  0922  1C03               	skipc
  6046  0923  2925               	goto	u4751
  6047  0924  2926               	goto	u4750
  6048  0925                     u4751:
  6049  0925  2932               	goto	l534
  6050  0926                     u4750:
  6051  0926  288F               	goto	l3010
  6052  0927                     l3054:
  6053  0927  3001               	movlw	1
  6054  0928  00F8               	movwf	??__div_to_l_
  6055  0929                     u4765:
  6056  0929  1003               	clrc
  6057  092A  0DA0               	rlf	__div_to_l_@quot,f
  6058  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6059  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6060  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6061  092E  0BF8               	decfsz	??__div_to_l_,f
  6062  092F  2929               	goto	u4765
  6063  0930  3001               	movlw	1
  6064  0931  02A5               	subwf	__div_to_l_@exp1,f
  6065  0932                     l534:
  6066  0932  0825               	movf	__div_to_l_@exp1,w
  6067  0933  1D03               	btfss	3,2
  6068  0934  2936               	goto	u4771
  6069  0935  2937               	goto	u4770
  6070  0936                     u4771:
  6071  0936  2927               	goto	l3054
  6072  0937                     u4770:
  6073  0937                     l3056:
  6074  0937  0823               	movf	__div_to_l_@quot+3,w
  6075  0938  00F3               	movwf	?__div_to_l_+3
  6076  0939  0822               	movf	__div_to_l_@quot+2,w
  6077  093A  00F2               	movwf	?__div_to_l_+2
  6078  093B  0821               	movf	__div_to_l_@quot+1,w
  6079  093C  00F1               	movwf	?__div_to_l_+1
  6080  093D  0820               	movf	__div_to_l_@quot,w
  6081  093E  00F0               	movwf	?__div_to_l_
  6082  093F                     l523:
  6083  093F  0008               	return
  6084  0940                     __end_of__div_to_l_:
  6085                           
  6086                           	psect	text11
  6087  1A49                     __ptext11:	
  6088 ;; *************** function ___wmul *****************
  6089 ;; Defined at:
  6090 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  multiplier      2    0[COMMON] unsigned int 
  6093 ;;  multiplicand    2    2[COMMON] unsigned int 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  product         2    4[COMMON] unsigned int 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  2    0[COMMON] unsigned int 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6105 ;;      Params:         4       0       0       0       0
  6106 ;;      Locals:         2       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0
  6108 ;;      Totals:         6       0       0       0       0
  6109 ;;Total ram usage:        6 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_sprintf
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function ___wmul
  6120  1A49                     ___wmul:
  6121  1A49                     l3060:	
  6122                           ;incstack = 0
  6123                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6124                           
  6125  1A49  01F4               	clrf	___wmul@product
  6126  1A4A  01F5               	clrf	___wmul@product+1
  6127  1A4B                     l3062:
  6128  1A4B  1C70               	btfss	___wmul@multiplier,0
  6129  1A4C  2A4E               	goto	u4781
  6130  1A4D  2A4F               	goto	u4780
  6131  1A4E                     u4781:
  6132  1A4E  2A55               	goto	l353
  6133  1A4F                     u4780:
  6134  1A4F                     l3064:
  6135  1A4F  0872               	movf	___wmul@multiplicand,w
  6136  1A50  07F4               	addwf	___wmul@product,f
  6137  1A51  1803               	skipnc
  6138  1A52  0AF5               	incf	___wmul@product+1,f
  6139  1A53  0873               	movf	___wmul@multiplicand+1,w
  6140  1A54  07F5               	addwf	___wmul@product+1,f
  6141  1A55                     l353:
  6142  1A55  3001               	movlw	1
  6143  1A56                     u4795:
  6144  1A56  1003               	clrc
  6145  1A57  0DF2               	rlf	___wmul@multiplicand,f
  6146  1A58  0DF3               	rlf	___wmul@multiplicand+1,f
  6147  1A59  3EFF               	addlw	-1
  6148  1A5A  1D03               	skipz
  6149  1A5B  2A56               	goto	u4795
  6150  1A5C                     l3066:
  6151  1A5C  3001               	movlw	1
  6152  1A5D                     u4805:
  6153  1A5D  1003               	clrc
  6154  1A5E  0CF1               	rrf	___wmul@multiplier+1,f
  6155  1A5F  0CF0               	rrf	___wmul@multiplier,f
  6156  1A60  3EFF               	addlw	-1
  6157  1A61  1D03               	skipz
  6158  1A62  2A5D               	goto	u4805
  6159  1A63                     l3068:
  6160  1A63  0870               	movf	___wmul@multiplier,w
  6161  1A64  0471               	iorwf	___wmul@multiplier+1,w
  6162  1A65  1D03               	btfss	3,2
  6163  1A66  2A68               	goto	u4811
  6164  1A67  2A69               	goto	u4810
  6165  1A68                     u4811:
  6166  1A68  2A4B               	goto	l3062
  6167  1A69                     u4810:
  6168  1A69                     l3070:
  6169  1A69  0875               	movf	___wmul@product+1,w
  6170  1A6A  00F1               	movwf	?___wmul+1
  6171  1A6B  0874               	movf	___wmul@product,w
  6172  1A6C  00F0               	movwf	?___wmul
  6173  1A6D                     l355:
  6174  1A6D  0008               	return
  6175  1A6E                     __end_of___wmul:
  6176                           
  6177                           	psect	text12
  6178  1BEE                     __ptext12:	
  6179 ;; *************** function ___llmod *****************
  6180 ;; Defined at:
  6181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  divisor         4    0[COMMON] unsigned long 
  6184 ;;  dividend        4    4[COMMON] unsigned long 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  counter         1    9[COMMON] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  4    0[COMMON] unsigned long 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6196 ;;      Params:         8       0       0       0       0
  6197 ;;      Locals:         1       0       0       0       0
  6198 ;;      Temps:          1       0       0       0       0
  6199 ;;      Totals:        10       0       0       0       0
  6200 ;;Total ram usage:       10 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_sprintf
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function ___llmod
  6211  1BEE                     ___llmod:
  6212  1BEE                     l3174:	
  6213                           ;incstack = 0
  6214                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6215                           
  6216  1BEE  0873               	movf	___llmod@divisor+3,w
  6217  1BEF  0472               	iorwf	___llmod@divisor+2,w
  6218  1BF0  0471               	iorwf	___llmod@divisor+1,w
  6219  1BF1  0470               	iorwf	___llmod@divisor,w
  6220  1BF2  1903               	skipnz
  6221  1BF3  2BF5               	goto	u5101
  6222  1BF4  2BF6               	goto	u5100
  6223  1BF5                     u5101:
  6224  1BF5  2C39               	goto	l3190
  6225  1BF6                     u5100:
  6226  1BF6                     l3176:
  6227  1BF6  01F9               	clrf	___llmod@counter
  6228  1BF7  0AF9               	incf	___llmod@counter,f
  6229  1BF8  2C06               	goto	l3180
  6230  1BF9                     l3178:
  6231  1BF9  3001               	movlw	1
  6232  1BFA  00F8               	movwf	??___llmod
  6233  1BFB                     u5115:
  6234  1BFB  1003               	clrc
  6235  1BFC  0DF0               	rlf	___llmod@divisor,f
  6236  1BFD  0DF1               	rlf	___llmod@divisor+1,f
  6237  1BFE  0DF2               	rlf	___llmod@divisor+2,f
  6238  1BFF  0DF3               	rlf	___llmod@divisor+3,f
  6239  1C00  0BF8               	decfsz	??___llmod,f
  6240  1C01  2BFB               	goto	u5115
  6241  1C02  3001               	movlw	1
  6242  1C03  00F8               	movwf	??___llmod
  6243  1C04  0878               	movf	??___llmod,w
  6244  1C05  07F9               	addwf	___llmod@counter,f
  6245  1C06                     l3180:
  6246  1C06  1FF3               	btfss	___llmod@divisor+3,7
  6247  1C07  2C09               	goto	u5121
  6248  1C08  2C0A               	goto	u5120
  6249  1C09                     u5121:
  6250  1C09  2BF9               	goto	l3178
  6251  1C0A                     u5120:
  6252  1C0A                     l3182:
  6253  1C0A  0873               	movf	___llmod@divisor+3,w
  6254  1C0B  0277               	subwf	___llmod@dividend+3,w
  6255  1C0C  1D03               	skipz
  6256  1C0D  2C18               	goto	u5135
  6257  1C0E  0872               	movf	___llmod@divisor+2,w
  6258  1C0F  0276               	subwf	___llmod@dividend+2,w
  6259  1C10  1D03               	skipz
  6260  1C11  2C18               	goto	u5135
  6261  1C12  0871               	movf	___llmod@divisor+1,w
  6262  1C13  0275               	subwf	___llmod@dividend+1,w
  6263  1C14  1D03               	skipz
  6264  1C15  2C18               	goto	u5135
  6265  1C16  0870               	movf	___llmod@divisor,w
  6266  1C17  0274               	subwf	___llmod@dividend,w
  6267  1C18                     u5135:
  6268  1C18  1C03               	skipc
  6269  1C19  2C1B               	goto	u5131
  6270  1C1A  2C1C               	goto	u5130
  6271  1C1B                     u5131:
  6272  1C1B  2C2A               	goto	l3186
  6273  1C1C                     u5130:
  6274  1C1C                     l3184:
  6275  1C1C  0870               	movf	___llmod@divisor,w
  6276  1C1D  02F4               	subwf	___llmod@dividend,f
  6277  1C1E  0871               	movf	___llmod@divisor+1,w
  6278  1C1F  1C03               	skipc
  6279  1C20  0F71               	incfsz	___llmod@divisor+1,w
  6280  1C21  02F5               	subwf	___llmod@dividend+1,f
  6281  1C22  0872               	movf	___llmod@divisor+2,w
  6282  1C23  1C03               	skipc
  6283  1C24  0F72               	incfsz	___llmod@divisor+2,w
  6284  1C25  02F6               	subwf	___llmod@dividend+2,f
  6285  1C26  0873               	movf	___llmod@divisor+3,w
  6286  1C27  1C03               	skipc
  6287  1C28  0F73               	incfsz	___llmod@divisor+3,w
  6288  1C29  02F7               	subwf	___llmod@dividend+3,f
  6289  1C2A                     l3186:
  6290  1C2A  3001               	movlw	1
  6291  1C2B                     u5145:
  6292  1C2B  1003               	clrc
  6293  1C2C  0CF3               	rrf	___llmod@divisor+3,f
  6294  1C2D  0CF2               	rrf	___llmod@divisor+2,f
  6295  1C2E  0CF1               	rrf	___llmod@divisor+1,f
  6296  1C2F  0CF0               	rrf	___llmod@divisor,f
  6297  1C30  3EFF               	addlw	-1
  6298  1C31  1D03               	skipz
  6299  1C32  2C2B               	goto	u5145
  6300  1C33                     l3188:
  6301  1C33  3001               	movlw	1
  6302  1C34  02F9               	subwf	___llmod@counter,f
  6303  1C35  1D03               	btfss	3,2
  6304  1C36  2C38               	goto	u5151
  6305  1C37  2C39               	goto	u5150
  6306  1C38                     u5151:
  6307  1C38  2C0A               	goto	l3182
  6308  1C39                     u5150:
  6309  1C39                     l3190:
  6310  1C39  0877               	movf	___llmod@dividend+3,w
  6311  1C3A  00F3               	movwf	?___llmod+3
  6312  1C3B  0876               	movf	___llmod@dividend+2,w
  6313  1C3C  00F2               	movwf	?___llmod+2
  6314  1C3D  0875               	movf	___llmod@dividend+1,w
  6315  1C3E  00F1               	movwf	?___llmod+1
  6316  1C3F  0874               	movf	___llmod@dividend,w
  6317  1C40  00F0               	movwf	?___llmod
  6318  1C41                     l609:
  6319  1C41  0008               	return
  6320  1C42                     __end_of___llmod:
  6321                           
  6322                           	psect	text13
  6323  1C9B                     __ptext13:	
  6324 ;; *************** function ___lldiv *****************
  6325 ;; Defined at:
  6326 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  divisor         4    0[COMMON] unsigned long 
  6329 ;;  dividend        4    4[COMMON] unsigned long 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  quotient        4    9[COMMON] unsigned long 
  6332 ;;  counter         1   13[COMMON] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  4    0[COMMON] unsigned long 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6342 ;;      Params:         8       0       0       0       0
  6343 ;;      Locals:         5       0       0       0       0
  6344 ;;      Temps:          1       0       0       0       0
  6345 ;;      Totals:        14       0       0       0       0
  6346 ;;Total ram usage:       14 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_sprintf
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function ___lldiv
  6357  1C9B                     ___lldiv:
  6358  1C9B                     l3074:	
  6359                           ;incstack = 0
  6360                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6361                           
  6362  1C9B  3000               	movlw	0
  6363  1C9C  00FC               	movwf	___lldiv@quotient+3
  6364  1C9D  3000               	movlw	0
  6365  1C9E  00FB               	movwf	___lldiv@quotient+2
  6366  1C9F  3000               	movlw	0
  6367  1CA0  00FA               	movwf	___lldiv@quotient+1
  6368  1CA1  3000               	movlw	0
  6369  1CA2  00F9               	movwf	___lldiv@quotient
  6370  1CA3  0873               	movf	___lldiv@divisor+3,w
  6371  1CA4  0472               	iorwf	___lldiv@divisor+2,w
  6372  1CA5  0471               	iorwf	___lldiv@divisor+1,w
  6373  1CA6  0470               	iorwf	___lldiv@divisor,w
  6374  1CA7  1903               	skipnz
  6375  1CA8  2CAA               	goto	u4821
  6376  1CA9  2CAB               	goto	u4820
  6377  1CAA                     u4821:
  6378  1CAA  2CF8               	goto	l3094
  6379  1CAB                     u4820:
  6380  1CAB                     l3076:
  6381  1CAB  01FD               	clrf	___lldiv@counter
  6382  1CAC  0AFD               	incf	___lldiv@counter,f
  6383  1CAD  2CBB               	goto	l3080
  6384  1CAE                     l3078:
  6385  1CAE  3001               	movlw	1
  6386  1CAF  00F8               	movwf	??___lldiv
  6387  1CB0                     u4835:
  6388  1CB0  1003               	clrc
  6389  1CB1  0DF0               	rlf	___lldiv@divisor,f
  6390  1CB2  0DF1               	rlf	___lldiv@divisor+1,f
  6391  1CB3  0DF2               	rlf	___lldiv@divisor+2,f
  6392  1CB4  0DF3               	rlf	___lldiv@divisor+3,f
  6393  1CB5  0BF8               	decfsz	??___lldiv,f
  6394  1CB6  2CB0               	goto	u4835
  6395  1CB7  3001               	movlw	1
  6396  1CB8  00F8               	movwf	??___lldiv
  6397  1CB9  0878               	movf	??___lldiv,w
  6398  1CBA  07FD               	addwf	___lldiv@counter,f
  6399  1CBB                     l3080:
  6400  1CBB  1FF3               	btfss	___lldiv@divisor+3,7
  6401  1CBC  2CBE               	goto	u4841
  6402  1CBD  2CBF               	goto	u4840
  6403  1CBE                     u4841:
  6404  1CBE  2CAE               	goto	l3078
  6405  1CBF                     u4840:
  6406  1CBF                     l3082:
  6407  1CBF  3001               	movlw	1
  6408  1CC0  00F8               	movwf	??___lldiv
  6409  1CC1                     u4855:
  6410  1CC1  1003               	clrc
  6411  1CC2  0DF9               	rlf	___lldiv@quotient,f
  6412  1CC3  0DFA               	rlf	___lldiv@quotient+1,f
  6413  1CC4  0DFB               	rlf	___lldiv@quotient+2,f
  6414  1CC5  0DFC               	rlf	___lldiv@quotient+3,f
  6415  1CC6  0BF8               	decfsz	??___lldiv,f
  6416  1CC7  2CC1               	goto	u4855
  6417  1CC8                     l3084:
  6418  1CC8  0873               	movf	___lldiv@divisor+3,w
  6419  1CC9  0277               	subwf	___lldiv@dividend+3,w
  6420  1CCA  1D03               	skipz
  6421  1CCB  2CD6               	goto	u4865
  6422  1CCC  0872               	movf	___lldiv@divisor+2,w
  6423  1CCD  0276               	subwf	___lldiv@dividend+2,w
  6424  1CCE  1D03               	skipz
  6425  1CCF  2CD6               	goto	u4865
  6426  1CD0  0871               	movf	___lldiv@divisor+1,w
  6427  1CD1  0275               	subwf	___lldiv@dividend+1,w
  6428  1CD2  1D03               	skipz
  6429  1CD3  2CD6               	goto	u4865
  6430  1CD4  0870               	movf	___lldiv@divisor,w
  6431  1CD5  0274               	subwf	___lldiv@dividend,w
  6432  1CD6                     u4865:
  6433  1CD6  1C03               	skipc
  6434  1CD7  2CD9               	goto	u4861
  6435  1CD8  2CDA               	goto	u4860
  6436  1CD9                     u4861:
  6437  1CD9  2CE9               	goto	l3090
  6438  1CDA                     u4860:
  6439  1CDA                     l3086:
  6440  1CDA  0870               	movf	___lldiv@divisor,w
  6441  1CDB  02F4               	subwf	___lldiv@dividend,f
  6442  1CDC  0871               	movf	___lldiv@divisor+1,w
  6443  1CDD  1C03               	skipc
  6444  1CDE  0F71               	incfsz	___lldiv@divisor+1,w
  6445  1CDF  02F5               	subwf	___lldiv@dividend+1,f
  6446  1CE0  0872               	movf	___lldiv@divisor+2,w
  6447  1CE1  1C03               	skipc
  6448  1CE2  0F72               	incfsz	___lldiv@divisor+2,w
  6449  1CE3  02F6               	subwf	___lldiv@dividend+2,f
  6450  1CE4  0873               	movf	___lldiv@divisor+3,w
  6451  1CE5  1C03               	skipc
  6452  1CE6  0F73               	incfsz	___lldiv@divisor+3,w
  6453  1CE7  02F7               	subwf	___lldiv@dividend+3,f
  6454  1CE8                     l3088:
  6455  1CE8  1479               	bsf	___lldiv@quotient,0
  6456  1CE9                     l3090:
  6457  1CE9  3001               	movlw	1
  6458  1CEA                     u4875:
  6459  1CEA  1003               	clrc
  6460  1CEB  0CF3               	rrf	___lldiv@divisor+3,f
  6461  1CEC  0CF2               	rrf	___lldiv@divisor+2,f
  6462  1CED  0CF1               	rrf	___lldiv@divisor+1,f
  6463  1CEE  0CF0               	rrf	___lldiv@divisor,f
  6464  1CEF  3EFF               	addlw	-1
  6465  1CF0  1D03               	skipz
  6466  1CF1  2CEA               	goto	u4875
  6467  1CF2                     l3092:
  6468  1CF2  3001               	movlw	1
  6469  1CF3  02FD               	subwf	___lldiv@counter,f
  6470  1CF4  1D03               	btfss	3,2
  6471  1CF5  2CF7               	goto	u4881
  6472  1CF6  2CF8               	goto	u4880
  6473  1CF7                     u4881:
  6474  1CF7  2CBF               	goto	l3082
  6475  1CF8                     u4880:
  6476  1CF8                     l3094:
  6477  1CF8  087C               	movf	___lldiv@quotient+3,w
  6478  1CF9  00F3               	movwf	?___lldiv+3
  6479  1CFA  087B               	movf	___lldiv@quotient+2,w
  6480  1CFB  00F2               	movwf	?___lldiv+2
  6481  1CFC  087A               	movf	___lldiv@quotient+1,w
  6482  1CFD  00F1               	movwf	?___lldiv+1
  6483  1CFE  0879               	movf	___lldiv@quotient,w
  6484  1CFF  00F0               	movwf	?___lldiv
  6485  1D00                     l389:
  6486  1D00  0008               	return
  6487  1D01                     __end_of___lldiv:
  6488                           
  6489                           	psect	text14
  6490  0806                     __ptext14:	
  6491 ;; *************** function ___fltol *****************
  6492 ;; Defined at:
  6493 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  f1              4   49[BANK0 ] unsigned long 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  exp1            1   59[BANK0 ] unsigned char 
  6498 ;;  sign1           1   58[BANK0 ] unsigned char 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  4   49[BANK0 ] long 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6508 ;;      Params:         0       4       0       0       0
  6509 ;;      Locals:         0       2       0       0       0
  6510 ;;      Temps:          0       5       0       0       0
  6511 ;;      Totals:         0      11       0       0       0
  6512 ;;Total ram usage:       11 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_sprintf
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function ___fltol
  6523  0806                     ___fltol:
  6524  0806                     l3138:	
  6525                           ;incstack = 0
  6526                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6527                           
  6528  0806  1003               	clrc
  6529  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0809  0D53               	rlf	___fltol@f1+2,w
  6532  080A  0D54               	rlf	___fltol@f1+3,w
  6533  080B  00D5               	movwf	??___fltol
  6534  080C  0855               	movf	??___fltol,w
  6535  080D  00DB               	movwf	___fltol@exp1
  6536  080E  085B               	movf	___fltol@exp1,w
  6537  080F  1D03               	btfss	3,2
  6538  0810  2812               	goto	u5001
  6539  0811  2813               	goto	u5000
  6540  0812                     u5001:
  6541  0812  281C               	goto	l3144
  6542  0813                     u5000:
  6543  0813                     l3140:
  6544  0813  3000               	movlw	0
  6545  0814  00D4               	movwf	?___fltol+3
  6546  0815  3000               	movlw	0
  6547  0816  00D3               	movwf	?___fltol+2
  6548  0817  3000               	movlw	0
  6549  0818  00D2               	movwf	?___fltol+1
  6550  0819  3000               	movlw	0
  6551  081A  00D1               	movwf	?___fltol
  6552  081B  2881               	goto	l556
  6553  081C                     l3144:
  6554  081C  0851               	movf	___fltol@f1,w
  6555  081D  00D5               	movwf	??___fltol
  6556  081E  0852               	movf	___fltol@f1+1,w
  6557  081F  00D6               	movwf	??___fltol+1
  6558  0820  0853               	movf	___fltol@f1+2,w
  6559  0821  00D7               	movwf	??___fltol+2
  6560  0822  0854               	movf	___fltol@f1+3,w
  6561  0823  00D8               	movwf	??___fltol+3
  6562  0824  301F               	movlw	31
  6563  0825                     u5015:
  6564  0825  1003               	clrc
  6565  0826  0CD8               	rrf	??___fltol+3,f
  6566  0827  0CD7               	rrf	??___fltol+2,f
  6567  0828  0CD6               	rrf	??___fltol+1,f
  6568  0829  0CD5               	rrf	??___fltol,f
  6569  082A                     u5010:
  6570  082A  3EFF               	addlw	-1
  6571  082B  1D03               	skipz
  6572  082C  2825               	goto	u5015
  6573  082D  0855               	movf	??___fltol,w
  6574  082E  00D9               	movwf	??___fltol+4
  6575  082F  0859               	movf	??___fltol+4,w
  6576  0830  00DA               	movwf	___fltol@sign1
  6577  0831                     l3146:
  6578  0831  17D3               	bsf	___fltol@f1+2,7
  6579  0832                     l3148:
  6580  0832  30FF               	movlw	255
  6581  0833  05D1               	andwf	___fltol@f1,f
  6582  0834  30FF               	movlw	255
  6583  0835  05D2               	andwf	___fltol@f1+1,f
  6584  0836  30FF               	movlw	255
  6585  0837  05D3               	andwf	___fltol@f1+2,f
  6586  0838  3000               	movlw	0
  6587  0839  05D4               	andwf	___fltol@f1+3,f
  6588  083A                     l3150:
  6589  083A  3096               	movlw	150
  6590  083B  02DB               	subwf	___fltol@exp1,f
  6591  083C                     l3152:
  6592  083C  1FDB               	btfss	___fltol@exp1,7
  6593  083D  283F               	goto	u5021
  6594  083E  2840               	goto	u5020
  6595  083F                     u5021:
  6596  083F  285A               	goto	l3162
  6597  0840                     u5020:
  6598  0840                     l3154:
  6599  0840  085B               	movf	___fltol@exp1,w
  6600  0841  3A80               	xorlw	128
  6601  0842  3E97               	addlw	151
  6602  0843  1803               	skipnc
  6603  0844  2846               	goto	u5031
  6604  0845  2847               	goto	u5030
  6605  0846                     u5031:
  6606  0846  2848               	goto	l3160
  6607  0847                     u5030:
  6608  0847  2813               	goto	l3140
  6609  0848                     l3160:
  6610  0848  3001               	movlw	1
  6611  0849                     u5045:
  6612  0849  1003               	clrc
  6613  084A  0CD4               	rrf	___fltol@f1+3,f
  6614  084B  0CD3               	rrf	___fltol@f1+2,f
  6615  084C  0CD2               	rrf	___fltol@f1+1,f
  6616  084D  0CD1               	rrf	___fltol@f1,f
  6617  084E  3EFF               	addlw	-1
  6618  084F  1D03               	skipz
  6619  0850  2849               	goto	u5045
  6620  0851  3001               	movlw	1
  6621  0852  00D5               	movwf	??___fltol
  6622  0853  0855               	movf	??___fltol,w
  6623  0854  07DB               	addwf	___fltol@exp1,f
  6624  0855  1D03               	btfss	3,2
  6625  0856  2858               	goto	u5051
  6626  0857  2859               	goto	u5050
  6627  0858                     u5051:
  6628  0858  2848               	goto	l3160
  6629  0859                     u5050:
  6630  0859  2871               	goto	l3170
  6631  085A                     l3162:
  6632  085A  3020               	movlw	32
  6633  085B  025B               	subwf	___fltol@exp1,w
  6634  085C  1C03               	skipc
  6635  085D  285F               	goto	u5061
  6636  085E  2860               	goto	u5060
  6637  085F                     u5061:
  6638  085F  286C               	goto	l563
  6639  0860                     u5060:
  6640  0860  2813               	goto	l3140
  6641  0861                     l3168:
  6642  0861  3001               	movlw	1
  6643  0862  00D5               	movwf	??___fltol
  6644  0863                     u5075:
  6645  0863  1003               	clrc
  6646  0864  0DD1               	rlf	___fltol@f1,f
  6647  0865  0DD2               	rlf	___fltol@f1+1,f
  6648  0866  0DD3               	rlf	___fltol@f1+2,f
  6649  0867  0DD4               	rlf	___fltol@f1+3,f
  6650  0868  0BD5               	decfsz	??___fltol,f
  6651  0869  2863               	goto	u5075
  6652  086A  3001               	movlw	1
  6653  086B  02DB               	subwf	___fltol@exp1,f
  6654  086C                     l563:
  6655  086C  085B               	movf	___fltol@exp1,w
  6656  086D  1D03               	btfss	3,2
  6657  086E  2870               	goto	u5081
  6658  086F  2871               	goto	u5080
  6659  0870                     u5081:
  6660  0870  2861               	goto	l3168
  6661  0871                     u5080:
  6662  0871                     l3170:
  6663  0871  085A               	movf	___fltol@sign1,w
  6664  0872  1903               	btfsc	3,2
  6665  0873  2875               	goto	u5091
  6666  0874  2876               	goto	u5090
  6667  0875                     u5091:
  6668  0875  2881               	goto	l566
  6669  0876                     u5090:
  6670  0876                     l3172:
  6671  0876  09D1               	comf	___fltol@f1,f
  6672  0877  09D2               	comf	___fltol@f1+1,f
  6673  0878  09D3               	comf	___fltol@f1+2,f
  6674  0879  09D4               	comf	___fltol@f1+3,f
  6675  087A  0AD1               	incf	___fltol@f1,f
  6676  087B  1903               	skipnz
  6677  087C  0AD2               	incf	___fltol@f1+1,f
  6678  087D  1903               	skipnz
  6679  087E  0AD3               	incf	___fltol@f1+2,f
  6680  087F  1903               	skipnz
  6681  0880  0AD4               	incf	___fltol@f1+3,f
  6682  0881                     l566:
  6683  0881                     l556:
  6684  0881  0008               	return
  6685  0882                     __end_of___fltol:
  6686                           
  6687                           	psect	text15
  6688  1A25                     __ptext15:	
  6689 ;; *************** function ___flsub *****************
  6690 ;; Defined at:
  6691 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  a               4   70[BANK0 ] long 
  6694 ;;  b               4   74[BANK0 ] long 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  4   70[BANK0 ] long 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6706 ;;      Params:         0       8       0       0       0
  6707 ;;      Locals:         0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0
  6709 ;;      Totals:         0       8       0       0       0
  6710 ;;Total ram usage:        8 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    1
  6713 ;; This function calls:
  6714 ;;		___fladd
  6715 ;; This function is called by:
  6716 ;;		_sprintf
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           
  6721                           ;psect for function ___flsub
  6722  1A25                     ___flsub:
  6723  1A25                     l3194:	
  6724                           ;incstack = 0
  6725                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6726                           
  6727  1A25  3080               	movlw	128
  6728  1A26  1283               	bcf	3,5	;RP0=0, select bank0
  6729  1A27  1303               	bcf	3,6	;RP1=0, select bank0
  6730  1A28  06E9               	xorwf	___flsub@a+3,f
  6731  1A29                     l3196:
  6732  1A29  086D               	movf	___flsub@b+3,w
  6733  1A2A  00D5               	movwf	___fladd@b+3
  6734  1A2B  086C               	movf	___flsub@b+2,w
  6735  1A2C  00D4               	movwf	___fladd@b+2
  6736  1A2D  086B               	movf	___flsub@b+1,w
  6737  1A2E  00D3               	movwf	___fladd@b+1
  6738  1A2F  086A               	movf	___flsub@b,w
  6739  1A30  00D2               	movwf	___fladd@b
  6740  1A31  0869               	movf	___flsub@a+3,w
  6741  1A32  00D9               	movwf	___fladd@a+3
  6742  1A33  0868               	movf	___flsub@a+2,w
  6743  1A34  00D8               	movwf	___fladd@a+2
  6744  1A35  0867               	movf	___flsub@a+1,w
  6745  1A36  00D7               	movwf	___fladd@a+1
  6746  1A37  0866               	movf	___flsub@a,w
  6747  1A38  00D6               	movwf	___fladd@a
  6748  1A39  160A  118A  2578  160A  158A  	fcall	___fladd
  6749  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
  6750  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
  6751  1A40  0855               	movf	?___fladd+3,w
  6752  1A41  00E9               	movwf	?___flsub+3
  6753  1A42  0854               	movf	?___fladd+2,w
  6754  1A43  00E8               	movwf	?___flsub+2
  6755  1A44  0853               	movf	?___fladd+1,w
  6756  1A45  00E7               	movwf	?___flsub+1
  6757  1A46  0852               	movf	?___fladd,w
  6758  1A47  00E6               	movwf	?___flsub
  6759  1A48                     l726:
  6760  1A48  0008               	return
  6761  1A49                     __end_of___flsub:
  6762                           
  6763                           	psect	text16
  6764  1578                     __ptext16:	
  6765 ;; *************** function ___fladd *****************
  6766 ;; Defined at:
  6767 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  b               4   50[BANK0 ] long 
  6770 ;;  a               4   54[BANK0 ] long 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  grs             1   69[BANK0 ] unsigned char 
  6773 ;;  bexp            1   68[BANK0 ] unsigned char 
  6774 ;;  aexp            1   67[BANK0 ] unsigned char 
  6775 ;;  signs           1   66[BANK0 ] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  4   50[BANK0 ] unsigned char 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0, btemp+1
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6785 ;;      Params:         0       8       0       0       0
  6786 ;;      Locals:         0       4       0       0       0
  6787 ;;      Temps:          0       8       0       0       0
  6788 ;;      Totals:         0      20       0       0       0
  6789 ;;Total ram usage:       20 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_sprintf
  6795 ;;		___flsub
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           
  6800                           ;psect for function ___fladd
  6801  1578                     ___fladd:
  6802  1578                     l2518:	
  6803                           ;incstack = 0
  6804                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6805                           
  6806  1578  1283               	bcf	3,5	;RP0=0, select bank0
  6807  1579  1303               	bcf	3,6	;RP1=0, select bank0
  6808  157A  0855               	movf	___fladd@b+3,w
  6809  157B  3980               	andlw	128
  6810  157C  00DA               	movwf	??___fladd
  6811  157D  085A               	movf	??___fladd,w
  6812  157E  00E2               	movwf	___fladd@signs
  6813  157F                     l2520:
  6814  157F  0855               	movf	___fladd@b+3,w
  6815  1580  00DA               	movwf	??___fladd
  6816  1581  075A               	addwf	??___fladd,w
  6817  1582  00DB               	movwf	??___fladd+1
  6818  1583  085B               	movf	??___fladd+1,w
  6819  1584  00E4               	movwf	___fladd@bexp
  6820  1585                     l2522:
  6821  1585  1FD4               	btfss	___fladd@b+2,7
  6822  1586  2D88               	goto	u3421
  6823  1587  2D89               	goto	u3420
  6824  1588                     u3421:
  6825  1588  2D8A               	goto	l2526
  6826  1589                     u3420:
  6827  1589                     l2524:
  6828  1589  1464               	bsf	___fladd@bexp,0
  6829  158A                     l2526:
  6830  158A  0864               	movf	___fladd@bexp,w
  6831  158B  1903               	btfsc	3,2
  6832  158C  2D8E               	goto	u3431
  6833  158D  2D8F               	goto	u3430
  6834  158E                     u3431:
  6835  158E  2D9F               	goto	l2536
  6836  158F                     u3430:
  6837  158F                     l2528:
  6838  158F  0A64               	incf	___fladd@bexp,w
  6839  1590  1D03               	btfss	3,2
  6840  1591  2D93               	goto	u3441
  6841  1592  2D94               	goto	u3440
  6842  1593                     u3441:
  6843  1593  2D9C               	goto	l2532
  6844  1594                     u3440:
  6845  1594                     l2530:
  6846  1594  3000               	movlw	0
  6847  1595  00D5               	movwf	___fladd@b+3
  6848  1596  3000               	movlw	0
  6849  1597  00D4               	movwf	___fladd@b+2
  6850  1598  3000               	movlw	0
  6851  1599  00D3               	movwf	___fladd@b+1
  6852  159A  3000               	movlw	0
  6853  159B  00D2               	movwf	___fladd@b
  6854  159C                     l2532:
  6855  159C  17D4               	bsf	___fladd@b+2,7
  6856  159D                     l2534:
  6857  159D  01D5               	clrf	___fladd@b+3
  6858  159E  2DA7               	goto	l2538
  6859  159F                     l2536:
  6860  159F  3000               	movlw	0
  6861  15A0  00D5               	movwf	___fladd@b+3
  6862  15A1  3000               	movlw	0
  6863  15A2  00D4               	movwf	___fladd@b+2
  6864  15A3  3000               	movlw	0
  6865  15A4  00D3               	movwf	___fladd@b+1
  6866  15A5  3000               	movlw	0
  6867  15A6  00D2               	movwf	___fladd@b
  6868  15A7                     l2538:
  6869  15A7  0859               	movf	___fladd@a+3,w
  6870  15A8  3980               	andlw	128
  6871  15A9  00DA               	movwf	??___fladd
  6872  15AA  085A               	movf	??___fladd,w
  6873  15AB  00E3               	movwf	___fladd@aexp
  6874  15AC                     l2540:
  6875  15AC  0863               	movf	___fladd@aexp,w
  6876  15AD  0662               	xorwf	___fladd@signs,w
  6877  15AE  1903               	skipnz
  6878  15AF  2DB1               	goto	u3451
  6879  15B0  2DB2               	goto	u3450
  6880  15B1                     u3451:
  6881  15B1  2DB3               	goto	l2544
  6882  15B2                     u3450:
  6883  15B2                     l2542:
  6884  15B2  1762               	bsf	___fladd@signs,6
  6885  15B3                     l2544:
  6886  15B3  0859               	movf	___fladd@a+3,w
  6887  15B4  00DA               	movwf	??___fladd
  6888  15B5  075A               	addwf	??___fladd,w
  6889  15B6  00DB               	movwf	??___fladd+1
  6890  15B7  085B               	movf	??___fladd+1,w
  6891  15B8  00E3               	movwf	___fladd@aexp
  6892  15B9                     l2546:
  6893  15B9  1FD8               	btfss	___fladd@a+2,7
  6894  15BA  2DBC               	goto	u3461
  6895  15BB  2DBD               	goto	u3460
  6896  15BC                     u3461:
  6897  15BC  2DBE               	goto	l2550
  6898  15BD                     u3460:
  6899  15BD                     l2548:
  6900  15BD  1463               	bsf	___fladd@aexp,0
  6901  15BE                     l2550:
  6902  15BE  0863               	movf	___fladd@aexp,w
  6903  15BF  1903               	btfsc	3,2
  6904  15C0  2DC2               	goto	u3471
  6905  15C1  2DC3               	goto	u3470
  6906  15C2                     u3471:
  6907  15C2  2DD3               	goto	l2560
  6908  15C3                     u3470:
  6909  15C3                     l2552:
  6910  15C3  0A63               	incf	___fladd@aexp,w
  6911  15C4  1D03               	btfss	3,2
  6912  15C5  2DC7               	goto	u3481
  6913  15C6  2DC8               	goto	u3480
  6914  15C7                     u3481:
  6915  15C7  2DD0               	goto	l2556
  6916  15C8                     u3480:
  6917  15C8                     l2554:
  6918  15C8  3000               	movlw	0
  6919  15C9  00D9               	movwf	___fladd@a+3
  6920  15CA  3000               	movlw	0
  6921  15CB  00D8               	movwf	___fladd@a+2
  6922  15CC  3000               	movlw	0
  6923  15CD  00D7               	movwf	___fladd@a+1
  6924  15CE  3000               	movlw	0
  6925  15CF  00D6               	movwf	___fladd@a
  6926  15D0                     l2556:
  6927  15D0  17D8               	bsf	___fladd@a+2,7
  6928  15D1                     l2558:
  6929  15D1  01D9               	clrf	___fladd@a+3
  6930  15D2  2DDB               	goto	l680
  6931  15D3                     l2560:
  6932  15D3  3000               	movlw	0
  6933  15D4  00D9               	movwf	___fladd@a+3
  6934  15D5  3000               	movlw	0
  6935  15D6  00D8               	movwf	___fladd@a+2
  6936  15D7  3000               	movlw	0
  6937  15D8  00D7               	movwf	___fladd@a+1
  6938  15D9  3000               	movlw	0
  6939  15DA  00D6               	movwf	___fladd@a
  6940  15DB                     l680:
  6941  15DB  0864               	movf	___fladd@bexp,w
  6942  15DC  0263               	subwf	___fladd@aexp,w
  6943  15DD  1803               	skipnc
  6944  15DE  2DE0               	goto	u3491
  6945  15DF  2DE1               	goto	u3490
  6946  15E0                     u3491:
  6947  15E0  2E25               	goto	l2596
  6948  15E1                     u3490:
  6949  15E1                     l2562:
  6950  15E1  1F62               	btfss	___fladd@signs,6
  6951  15E2  2DE4               	goto	u3501
  6952  15E3  2DE5               	goto	u3500
  6953  15E4                     u3501:
  6954  15E4  2DE9               	goto	l2566
  6955  15E5                     u3500:
  6956  15E5                     l2564:
  6957  15E5  3080               	movlw	128
  6958  15E6  00DA               	movwf	??___fladd
  6959  15E7  085A               	movf	??___fladd,w
  6960  15E8  06E2               	xorwf	___fladd@signs,f
  6961  15E9                     l2566:
  6962  15E9  0864               	movf	___fladd@bexp,w
  6963  15EA  00DA               	movwf	??___fladd
  6964  15EB  085A               	movf	??___fladd,w
  6965  15EC  00E5               	movwf	___fladd@grs
  6966  15ED                     l2568:
  6967  15ED  0863               	movf	___fladd@aexp,w
  6968  15EE  00DA               	movwf	??___fladd
  6969  15EF  085A               	movf	??___fladd,w
  6970  15F0  00E4               	movwf	___fladd@bexp
  6971  15F1                     l2570:
  6972  15F1  0865               	movf	___fladd@grs,w
  6973  15F2  00DA               	movwf	??___fladd
  6974  15F3  085A               	movf	??___fladd,w
  6975  15F4  00E3               	movwf	___fladd@aexp
  6976  15F5                     l2572:
  6977  15F5  0852               	movf	___fladd@b,w
  6978  15F6  00DA               	movwf	??___fladd
  6979  15F7  085A               	movf	??___fladd,w
  6980  15F8  00E5               	movwf	___fladd@grs
  6981  15F9                     l2574:
  6982  15F9  0856               	movf	___fladd@a,w
  6983  15FA  00DA               	movwf	??___fladd
  6984  15FB  085A               	movf	??___fladd,w
  6985  15FC  00D2               	movwf	___fladd@b
  6986  15FD                     l2576:
  6987  15FD  0865               	movf	___fladd@grs,w
  6988  15FE  00DA               	movwf	??___fladd
  6989  15FF  085A               	movf	??___fladd,w
  6990  1600  00D6               	movwf	___fladd@a
  6991  1601                     l2578:
  6992  1601  0853               	movf	___fladd@b+1,w
  6993  1602  00DA               	movwf	??___fladd
  6994  1603  085A               	movf	??___fladd,w
  6995  1604  00E5               	movwf	___fladd@grs
  6996  1605                     l2580:
  6997  1605  0857               	movf	___fladd@a+1,w
  6998  1606  00DA               	movwf	??___fladd
  6999  1607  085A               	movf	??___fladd,w
  7000  1608  00D3               	movwf	___fladd@b+1
  7001  1609                     l2582:
  7002  1609  0865               	movf	___fladd@grs,w
  7003  160A  00DA               	movwf	??___fladd
  7004  160B  085A               	movf	??___fladd,w
  7005  160C  00D7               	movwf	___fladd@a+1
  7006  160D                     l2584:
  7007  160D  0854               	movf	___fladd@b+2,w
  7008  160E  00DA               	movwf	??___fladd
  7009  160F  085A               	movf	??___fladd,w
  7010  1610  00E5               	movwf	___fladd@grs
  7011  1611                     l2586:
  7012  1611  0858               	movf	___fladd@a+2,w
  7013  1612  00DA               	movwf	??___fladd
  7014  1613  085A               	movf	??___fladd,w
  7015  1614  00D4               	movwf	___fladd@b+2
  7016  1615                     l2588:
  7017  1615  0865               	movf	___fladd@grs,w
  7018  1616  00DA               	movwf	??___fladd
  7019  1617  085A               	movf	??___fladd,w
  7020  1618  00D8               	movwf	___fladd@a+2
  7021  1619                     l2590:
  7022  1619  0855               	movf	___fladd@b+3,w
  7023  161A  00DA               	movwf	??___fladd
  7024  161B  085A               	movf	??___fladd,w
  7025  161C  00E5               	movwf	___fladd@grs
  7026  161D                     l2592:
  7027  161D  0859               	movf	___fladd@a+3,w
  7028  161E  00DA               	movwf	??___fladd
  7029  161F  085A               	movf	??___fladd,w
  7030  1620  00D5               	movwf	___fladd@b+3
  7031  1621                     l2594:
  7032  1621  0865               	movf	___fladd@grs,w
  7033  1622  00DA               	movwf	??___fladd
  7034  1623  085A               	movf	??___fladd,w
  7035  1624  00D9               	movwf	___fladd@a+3
  7036  1625                     l2596:
  7037  1625  01E5               	clrf	___fladd@grs
  7038  1626                     l2598:
  7039  1626  0863               	movf	___fladd@aexp,w
  7040  1627  00DA               	movwf	??___fladd
  7041  1628  01DB               	clrf	??___fladd+1
  7042  1629  085B               	movf	??___fladd+1,w
  7043  162A  00DD               	movwf	??___fladd+3
  7044  162B  0864               	movf	___fladd@bexp,w
  7045  162C  025A               	subwf	??___fladd,w
  7046  162D  00DC               	movwf	??___fladd+2
  7047  162E  1C03               	skipc
  7048  162F  03DD               	decf	??___fladd+3,f
  7049  1630  085D               	movf	??___fladd+3,w
  7050  1631  3A80               	xorlw	128
  7051  1632  00FF               	movwf	btemp+1
  7052  1633  3080               	movlw	128
  7053  1634  027F               	subwf	btemp+1,w
  7054  1635  1D03               	skipz
  7055  1636  2E39               	goto	u3515
  7056  1637  301A               	movlw	26
  7057  1638  025C               	subwf	??___fladd+2,w
  7058  1639                     u3515:
  7059  1639  1C03               	skipc
  7060  163A  2E3C               	goto	u3511
  7061  163B  2E3D               	goto	u3510
  7062  163C                     u3511:
  7063  163C  2E7A               	goto	l2614
  7064  163D                     u3510:
  7065  163D                     l2600:
  7066  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7067  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7068  163F  0855               	movf	___fladd@b+3,w
  7069  1640  0454               	iorwf	___fladd@b+2,w
  7070  1641  0453               	iorwf	___fladd@b+1,w
  7071  1642  0452               	iorwf	___fladd@b,w
  7072  1643  1D03               	skipz
  7073  1644  2E46               	goto	u3521
  7074  1645  2E48               	goto	u3520
  7075  1646                     u3521:
  7076  1646  3001               	movlw	1
  7077  1647  2E49               	goto	u3530
  7078  1648                     u3520:
  7079  1648  3000               	movlw	0
  7080  1649                     u3530:
  7081  1649  00DA               	movwf	??___fladd
  7082  164A  085A               	movf	??___fladd,w
  7083  164B  00E5               	movwf	___fladd@grs
  7084  164C  3000               	movlw	0
  7085  164D  00D5               	movwf	___fladd@b+3
  7086  164E  3000               	movlw	0
  7087  164F  00D4               	movwf	___fladd@b+2
  7088  1650  3000               	movlw	0
  7089  1651  00D3               	movwf	___fladd@b+1
  7090  1652  3000               	movlw	0
  7091  1653  00D2               	movwf	___fladd@b
  7092  1654  0863               	movf	___fladd@aexp,w
  7093  1655  00DA               	movwf	??___fladd
  7094  1656  085A               	movf	??___fladd,w
  7095  1657  00E4               	movwf	___fladd@bexp
  7096  1658  2E82               	goto	l684
  7097  1659                     l686:
  7098  1659  1C65               	btfss	___fladd@grs,0
  7099  165A  2E5C               	goto	u3541
  7100  165B  2E5D               	goto	u3540
  7101  165C                     u3541:
  7102  165C  2E66               	goto	l2604
  7103  165D                     u3540:
  7104  165D                     l2602:
  7105  165D  0865               	movf	___fladd@grs,w
  7106  165E  00DA               	movwf	??___fladd
  7107  165F  1003               	clrc
  7108  1660  0C5A               	rrf	??___fladd,w
  7109  1661  3801               	iorlw	1
  7110  1662  00DB               	movwf	??___fladd+1
  7111  1663  085B               	movf	??___fladd+1,w
  7112  1664  00E5               	movwf	___fladd@grs
  7113  1665  2E68               	goto	l2606
  7114  1666                     l2604:
  7115  1666  1003               	clrc
  7116  1667  0CE5               	rrf	___fladd@grs,f
  7117  1668                     l2606:
  7118  1668  1C52               	btfss	___fladd@b,0
  7119  1669  2E6B               	goto	u3551
  7120  166A  2E6C               	goto	u3550
  7121  166B                     u3551:
  7122  166B  2E6D               	goto	l2610
  7123  166C                     u3550:
  7124  166C                     l2608:
  7125  166C  17E5               	bsf	___fladd@grs,7
  7126  166D                     l2610:
  7127  166D  3001               	movlw	1
  7128  166E  00DA               	movwf	??___fladd
  7129  166F                     u3565:
  7130  166F  0D55               	rlf	___fladd@b+3,w
  7131  1670  0CD5               	rrf	___fladd@b+3,f
  7132  1671  0CD4               	rrf	___fladd@b+2,f
  7133  1672  0CD3               	rrf	___fladd@b+1,f
  7134  1673  0CD2               	rrf	___fladd@b,f
  7135  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7136  1675  2E6F               	goto	u3565
  7137  1676                     l2612:
  7138  1676  3001               	movlw	1
  7139  1677  00DA               	movwf	??___fladd
  7140  1678  085A               	movf	??___fladd,w
  7141  1679  07E4               	addwf	___fladd@bexp,f
  7142  167A                     l2614:
  7143  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7144  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7145  167C  0863               	movf	___fladd@aexp,w
  7146  167D  0264               	subwf	___fladd@bexp,w
  7147  167E  1C03               	skipc
  7148  167F  2E81               	goto	u3571
  7149  1680  2E82               	goto	u3570
  7150  1681                     u3571:
  7151  1681  2E59               	goto	l686
  7152  1682                     u3570:
  7153  1682                     l684:
  7154  1682  1B62               	btfsc	___fladd@signs,6
  7155  1683  2E85               	goto	u3581
  7156  1684  2E86               	goto	u3580
  7157  1685                     u3581:
  7158  1685  2ED1               	goto	l2640
  7159  1686                     u3580:
  7160  1686                     l2616:
  7161  1686  0864               	movf	___fladd@bexp,w
  7162  1687  1D03               	btfss	3,2
  7163  1688  2E8A               	goto	u3591
  7164  1689  2E8B               	goto	u3590
  7165  168A                     u3591:
  7166  168A  2E94               	goto	l2622
  7167  168B                     u3590:
  7168  168B                     l2618:
  7169  168B  3000               	movlw	0
  7170  168C  00D5               	movwf	?___fladd+3
  7171  168D  3000               	movlw	0
  7172  168E  00D4               	movwf	?___fladd+2
  7173  168F  3000               	movlw	0
  7174  1690  00D3               	movwf	?___fladd+1
  7175  1691  3000               	movlw	0
  7176  1692  00D2               	movwf	?___fladd
  7177  1693  2FFF               	goto	l693
  7178  1694                     l2622:
  7179  1694  0856               	movf	___fladd@a,w
  7180  1695  07D2               	addwf	___fladd@b,f
  7181  1696  0857               	movf	___fladd@a+1,w
  7182  1697  1103               	clrz
  7183  1698  1803               	skipnc
  7184  1699  3E01               	addlw	1
  7185  169A  1903               	skipnz
  7186  169B  2E9D               	goto	u3601
  7187  169C  07D3               	addwf	___fladd@b+1,f
  7188  169D                     u3601:
  7189  169D  0858               	movf	___fladd@a+2,w
  7190  169E  1103               	clrz
  7191  169F  1803               	skipnc
  7192  16A0  3E01               	addlw	1
  7193  16A1  1903               	skipnz
  7194  16A2  2EA4               	goto	u3602
  7195  16A3  07D4               	addwf	___fladd@b+2,f
  7196  16A4                     u3602:
  7197  16A4  0859               	movf	___fladd@a+3,w
  7198  16A5  1103               	clrz
  7199  16A6  1803               	skipnc
  7200  16A7  3E01               	addlw	1
  7201  16A8  1903               	skipnz
  7202  16A9  2EAB               	goto	u3603
  7203  16AA  07D5               	addwf	___fladd@b+3,f
  7204  16AB                     u3603:
  7205  16AB                     l2624:
  7206  16AB  1C55               	btfss	___fladd@b+3,0
  7207  16AC  2EAE               	goto	u3611
  7208  16AD  2EAF               	goto	u3610
  7209  16AE                     u3611:
  7210  16AE  2F85               	goto	l2674
  7211  16AF                     u3610:
  7212  16AF                     l2626:
  7213  16AF  1C65               	btfss	___fladd@grs,0
  7214  16B0  2EB2               	goto	u3621
  7215  16B1  2EB3               	goto	u3620
  7216  16B2                     u3621:
  7217  16B2  2EBC               	goto	l2630
  7218  16B3                     u3620:
  7219  16B3                     l2628:
  7220  16B3  0865               	movf	___fladd@grs,w
  7221  16B4  00DA               	movwf	??___fladd
  7222  16B5  1003               	clrc
  7223  16B6  0C5A               	rrf	??___fladd,w
  7224  16B7  3801               	iorlw	1
  7225  16B8  00DB               	movwf	??___fladd+1
  7226  16B9  085B               	movf	??___fladd+1,w
  7227  16BA  00E5               	movwf	___fladd@grs
  7228  16BB  2EBE               	goto	l2632
  7229  16BC                     l2630:
  7230  16BC  1003               	clrc
  7231  16BD  0CE5               	rrf	___fladd@grs,f
  7232  16BE                     l2632:
  7233  16BE  1C52               	btfss	___fladd@b,0
  7234  16BF  2EC1               	goto	u3631
  7235  16C0  2EC2               	goto	u3630
  7236  16C1                     u3631:
  7237  16C1  2EC3               	goto	l2636
  7238  16C2                     u3630:
  7239  16C2                     l2634:
  7240  16C2  17E5               	bsf	___fladd@grs,7
  7241  16C3                     l2636:
  7242  16C3  3001               	movlw	1
  7243  16C4  00DA               	movwf	??___fladd
  7244  16C5                     u3645:
  7245  16C5  0D55               	rlf	___fladd@b+3,w
  7246  16C6  0CD5               	rrf	___fladd@b+3,f
  7247  16C7  0CD4               	rrf	___fladd@b+2,f
  7248  16C8  0CD3               	rrf	___fladd@b+1,f
  7249  16C9  0CD2               	rrf	___fladd@b,f
  7250  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  7251  16CB  2EC5               	goto	u3645
  7252  16CC                     l2638:
  7253  16CC  3001               	movlw	1
  7254  16CD  00DA               	movwf	??___fladd
  7255  16CE  085A               	movf	??___fladd,w
  7256  16CF  07E4               	addwf	___fladd@bexp,f
  7257  16D0  2F85               	goto	l2674
  7258  16D1                     l2640:
  7259  16D1  0855               	movf	___fladd@b+3,w
  7260  16D2  3A80               	xorlw	128
  7261  16D3  00FF               	movwf	btemp+1
  7262  16D4  0859               	movf	___fladd@a+3,w
  7263  16D5  3A80               	xorlw	128
  7264  16D6  027F               	subwf	btemp+1,w
  7265  16D7  1D03               	skipz
  7266  16D8  2EE3               	goto	u3653
  7267  16D9  0858               	movf	___fladd@a+2,w
  7268  16DA  0254               	subwf	___fladd@b+2,w
  7269  16DB  1D03               	skipz
  7270  16DC  2EE3               	goto	u3653
  7271  16DD  0857               	movf	___fladd@a+1,w
  7272  16DE  0253               	subwf	___fladd@b+1,w
  7273  16DF  1D03               	skipz
  7274  16E0  2EE3               	goto	u3653
  7275  16E1  0856               	movf	___fladd@a,w
  7276  16E2  0252               	subwf	___fladd@b,w
  7277  16E3                     u3653:
  7278  16E3  1803               	skipnc
  7279  16E4  2EE6               	goto	u3651
  7280  16E5  2EE7               	goto	u3650
  7281  16E6                     u3651:
  7282  16E6  2F3F               	goto	l2650
  7283  16E7                     u3650:
  7284  16E7                     l2642:
  7285  16E7  30FF               	movlw	255
  7286  16E8  00DA               	movwf	??___fladd
  7287  16E9  30FF               	movlw	255
  7288  16EA  00DB               	movwf	??___fladd+1
  7289  16EB  30FF               	movlw	255
  7290  16EC  00DC               	movwf	??___fladd+2
  7291  16ED  30FF               	movlw	255
  7292  16EE  00DD               	movwf	??___fladd+3
  7293  16EF  0856               	movf	___fladd@a,w
  7294  16F0  00DE               	movwf	??___fladd+4
  7295  16F1  0857               	movf	___fladd@a+1,w
  7296  16F2  00DF               	movwf	??___fladd+5
  7297  16F3  0858               	movf	___fladd@a+2,w
  7298  16F4  00E0               	movwf	??___fladd+6
  7299  16F5  0859               	movf	___fladd@a+3,w
  7300  16F6  00E1               	movwf	??___fladd+7
  7301  16F7  0852               	movf	___fladd@b,w
  7302  16F8  02DE               	subwf	??___fladd+4,f
  7303  16F9  0853               	movf	___fladd@b+1,w
  7304  16FA  1C03               	skipc
  7305  16FB  0F53               	incfsz	___fladd@b+1,w
  7306  16FC  2EFE               	goto	u3661
  7307  16FD  2EFF               	goto	u3662
  7308  16FE                     u3661:
  7309  16FE  02DF               	subwf	??___fladd+5,f
  7310  16FF                     u3662:
  7311  16FF  0854               	movf	___fladd@b+2,w
  7312  1700  1C03               	skipc
  7313  1701  0F54               	incfsz	___fladd@b+2,w
  7314  1702  2F04               	goto	u3663
  7315  1703  2F05               	goto	u3664
  7316  1704                     u3663:
  7317  1704  02E0               	subwf	??___fladd+6,f
  7318  1705                     u3664:
  7319  1705  0855               	movf	___fladd@b+3,w
  7320  1706  1C03               	skipc
  7321  1707  0F55               	incfsz	___fladd@b+3,w
  7322  1708  2F0A               	goto	u3665
  7323  1709  2F0B               	goto	u3666
  7324  170A                     u3665:
  7325  170A  02E1               	subwf	??___fladd+7,f
  7326  170B                     u3666:
  7327  170B  085E               	movf	??___fladd+4,w
  7328  170C  07DA               	addwf	??___fladd,f
  7329  170D  085F               	movf	??___fladd+5,w
  7330  170E  1803               	skipnc
  7331  170F  0F5F               	incfsz	??___fladd+5,w
  7332  1710  2F12               	goto	u3670
  7333  1711  2F13               	goto	u3671
  7334  1712                     u3670:
  7335  1712  07DB               	addwf	??___fladd+1,f
  7336  1713                     u3671:
  7337  1713  0860               	movf	??___fladd+6,w
  7338  1714  1803               	skipnc
  7339  1715  0F60               	incfsz	??___fladd+6,w
  7340  1716  2F18               	goto	u3672
  7341  1717  2F19               	goto	u3673
  7342  1718                     u3672:
  7343  1718  07DC               	addwf	??___fladd+2,f
  7344  1719                     u3673:
  7345  1719  0861               	movf	??___fladd+7,w
  7346  171A  1803               	skipnc
  7347  171B  0A61               	incf	??___fladd+7,w
  7348  171C  07DD               	addwf	??___fladd+3,f
  7349  171D  085D               	movf	??___fladd+3,w
  7350  171E  00D5               	movwf	___fladd@b+3
  7351  171F  085C               	movf	??___fladd+2,w
  7352  1720  00D4               	movwf	___fladd@b+2
  7353  1721  085B               	movf	??___fladd+1,w
  7354  1722  00D3               	movwf	___fladd@b+1
  7355  1723  085A               	movf	??___fladd,w
  7356  1724  00D2               	movwf	___fladd@b
  7357  1725                     l2644:
  7358  1725  3080               	movlw	128
  7359  1726  00DA               	movwf	??___fladd
  7360  1727  085A               	movf	??___fladd,w
  7361  1728  06E2               	xorwf	___fladd@signs,f
  7362  1729  09E5               	comf	___fladd@grs,f
  7363  172A  0AE5               	incf	___fladd@grs,f
  7364  172B                     l2646:
  7365  172B  0865               	movf	___fladd@grs,w
  7366  172C  1D03               	btfss	3,2
  7367  172D  2F2F               	goto	u3681
  7368  172E  2F30               	goto	u3680
  7369  172F                     u3681:
  7370  172F  2F4D               	goto	l701
  7371  1730                     u3680:
  7372  1730                     l2648:
  7373  1730  3001               	movlw	1
  7374  1731  07D2               	addwf	___fladd@b,f
  7375  1732  3000               	movlw	0
  7376  1733  1803               	skipnc
  7377  1734  3001               	movlw	1
  7378  1735  07D3               	addwf	___fladd@b+1,f
  7379  1736  3000               	movlw	0
  7380  1737  1803               	skipnc
  7381  1738  3001               	movlw	1
  7382  1739  07D4               	addwf	___fladd@b+2,f
  7383  173A  3000               	movlw	0
  7384  173B  1803               	skipnc
  7385  173C  3001               	movlw	1
  7386  173D  07D5               	addwf	___fladd@b+3,f
  7387  173E  2F4D               	goto	l701
  7388  173F                     l2650:
  7389  173F  0856               	movf	___fladd@a,w
  7390  1740  02D2               	subwf	___fladd@b,f
  7391  1741  0857               	movf	___fladd@a+1,w
  7392  1742  1C03               	skipc
  7393  1743  0F57               	incfsz	___fladd@a+1,w
  7394  1744  02D3               	subwf	___fladd@b+1,f
  7395  1745  0858               	movf	___fladd@a+2,w
  7396  1746  1C03               	skipc
  7397  1747  0F58               	incfsz	___fladd@a+2,w
  7398  1748  02D4               	subwf	___fladd@b+2,f
  7399  1749  0859               	movf	___fladd@a+3,w
  7400  174A  1C03               	skipc
  7401  174B  0F59               	incfsz	___fladd@a+3,w
  7402  174C  02D5               	subwf	___fladd@b+3,f
  7403  174D                     l701:
  7404  174D  0855               	movf	___fladd@b+3,w
  7405  174E  0454               	iorwf	___fladd@b+2,w
  7406  174F  0453               	iorwf	___fladd@b+1,w
  7407  1750  0452               	iorwf	___fladd@b,w
  7408  1751  1D03               	skipz
  7409  1752  2F54               	goto	u3691
  7410  1753  2F55               	goto	u3690
  7411  1754                     u3691:
  7412  1754  2F81               	goto	l2672
  7413  1755                     u3690:
  7414  1755                     l2652:
  7415  1755  0865               	movf	___fladd@grs,w
  7416  1756  1D03               	btfss	3,2
  7417  1757  2F59               	goto	u3701
  7418  1758  2F5A               	goto	u3700
  7419  1759                     u3701:
  7420  1759  2F81               	goto	l2672
  7421  175A                     u3700:
  7422  175A                     l2654:
  7423  175A  3000               	movlw	0
  7424  175B  00D5               	movwf	?___fladd+3
  7425  175C  3000               	movlw	0
  7426  175D  00D4               	movwf	?___fladd+2
  7427  175E  3000               	movlw	0
  7428  175F  00D3               	movwf	?___fladd+1
  7429  1760  3000               	movlw	0
  7430  1761  00D2               	movwf	?___fladd
  7431  1762  2FFF               	goto	l693
  7432  1763                     l2658:
  7433  1763  3001               	movlw	1
  7434  1764  00DA               	movwf	??___fladd
  7435  1765                     u3715:
  7436  1765  1003               	clrc
  7437  1766  0DD2               	rlf	___fladd@b,f
  7438  1767  0DD3               	rlf	___fladd@b+1,f
  7439  1768  0DD4               	rlf	___fladd@b+2,f
  7440  1769  0DD5               	rlf	___fladd@b+3,f
  7441  176A  0BDA               	decfsz	??___fladd,f
  7442  176B  2F65               	goto	u3715
  7443  176C                     l2660:
  7444  176C  1FE5               	btfss	___fladd@grs,7
  7445  176D  2F6F               	goto	u3721
  7446  176E  2F70               	goto	u3720
  7447  176F                     u3721:
  7448  176F  2F71               	goto	l705
  7449  1770                     u3720:
  7450  1770                     l2662:
  7451  1770  1452               	bsf	___fladd@b,0
  7452  1771                     l705:
  7453  1771  1C65               	btfss	___fladd@grs,0
  7454  1772  2F74               	goto	u3731
  7455  1773  2F75               	goto	u3730
  7456  1774                     u3731:
  7457  1774  2F78               	goto	l2666
  7458  1775                     u3730:
  7459  1775                     l2664:
  7460  1775  1403               	setc
  7461  1776  0DE5               	rlf	___fladd@grs,f
  7462  1777  2F7A               	goto	l2668
  7463  1778                     l2666:
  7464  1778  1003               	clrc
  7465  1779  0DE5               	rlf	___fladd@grs,f
  7466  177A                     l2668:
  7467  177A  0864               	movf	___fladd@bexp,w
  7468  177B  1903               	btfsc	3,2
  7469  177C  2F7E               	goto	u3741
  7470  177D  2F7F               	goto	u3740
  7471  177E                     u3741:
  7472  177E  2F81               	goto	l2672
  7473  177F                     u3740:
  7474  177F                     l2670:
  7475  177F  3001               	movlw	1
  7476  1780  02E4               	subwf	___fladd@bexp,f
  7477  1781                     l2672:
  7478  1781  1FD4               	btfss	___fladd@b+2,7
  7479  1782  2F84               	goto	u3751
  7480  1783  2F85               	goto	u3750
  7481  1784                     u3751:
  7482  1784  2F63               	goto	l2658
  7483  1785                     u3750:
  7484  1785                     l2674:
  7485  1785  01E3               	clrf	___fladd@aexp
  7486  1786                     l2676:
  7487  1786  1FE5               	btfss	___fladd@grs,7
  7488  1787  2F89               	goto	u3761
  7489  1788  2F8A               	goto	u3760
  7490  1789                     u3761:
  7491  1789  2F98               	goto	l2684
  7492  178A                     u3760:
  7493  178A                     l2678:
  7494  178A  0865               	movf	___fladd@grs,w
  7495  178B  397F               	andlw	127
  7496  178C  1903               	btfsc	3,2
  7497  178D  2F8F               	goto	u3771
  7498  178E  2F90               	goto	u3770
  7499  178F                     u3771:
  7500  178F  2F93               	goto	l711
  7501  1790                     u3770:
  7502  1790                     l2680:
  7503  1790  01E3               	clrf	___fladd@aexp
  7504  1791  0AE3               	incf	___fladd@aexp,f
  7505  1792  2F98               	goto	l2684
  7506  1793                     l711:
  7507  1793  1C52               	btfss	___fladd@b,0
  7508  1794  2F96               	goto	u3781
  7509  1795  2F97               	goto	u3780
  7510  1796                     u3781:
  7511  1796  2F98               	goto	l2684
  7512  1797                     u3780:
  7513  1797  2F90               	goto	l2680
  7514  1798                     l2684:
  7515  1798  0863               	movf	___fladd@aexp,w
  7516  1799  1903               	btfsc	3,2
  7517  179A  2F9C               	goto	u3791
  7518  179B  2F9D               	goto	u3790
  7519  179C                     u3791:
  7520  179C  2FD1               	goto	l714
  7521  179D                     u3790:
  7522  179D                     l2686:
  7523  179D  3001               	movlw	1
  7524  179E  07D2               	addwf	___fladd@b,f
  7525  179F  3000               	movlw	0
  7526  17A0  1803               	skipnc
  7527  17A1  3001               	movlw	1
  7528  17A2  07D3               	addwf	___fladd@b+1,f
  7529  17A3  3000               	movlw	0
  7530  17A4  1803               	skipnc
  7531  17A5  3001               	movlw	1
  7532  17A6  07D4               	addwf	___fladd@b+2,f
  7533  17A7  3000               	movlw	0
  7534  17A8  1803               	skipnc
  7535  17A9  3001               	movlw	1
  7536  17AA  07D5               	addwf	___fladd@b+3,f
  7537  17AB                     l2688:
  7538  17AB  1C55               	btfss	___fladd@b+3,0
  7539  17AC  2FAE               	goto	u3801
  7540  17AD  2FAF               	goto	u3800
  7541  17AE                     u3801:
  7542  17AE  2FD1               	goto	l714
  7543  17AF                     u3800:
  7544  17AF                     l2690:
  7545  17AF  0852               	movf	___fladd@b,w
  7546  17B0  00DA               	movwf	??___fladd
  7547  17B1  0853               	movf	___fladd@b+1,w
  7548  17B2  00DB               	movwf	??___fladd+1
  7549  17B3  0854               	movf	___fladd@b+2,w
  7550  17B4  00DC               	movwf	??___fladd+2
  7551  17B5  0855               	movf	___fladd@b+3,w
  7552  17B6  00DD               	movwf	??___fladd+3
  7553  17B7  3001               	movlw	1
  7554  17B8  00DE               	movwf	??___fladd+4
  7555  17B9                     u3815:
  7556  17B9  0D5D               	rlf	??___fladd+3,w
  7557  17BA  0CDD               	rrf	??___fladd+3,f
  7558  17BB  0CDC               	rrf	??___fladd+2,f
  7559  17BC  0CDB               	rrf	??___fladd+1,f
  7560  17BD  0CDA               	rrf	??___fladd,f
  7561  17BE                     u3810:
  7562  17BE  0BDE               	decfsz	??___fladd+4,f
  7563  17BF  2FB9               	goto	u3815
  7564  17C0  085D               	movf	??___fladd+3,w
  7565  17C1  00D5               	movwf	___fladd@b+3
  7566  17C2  085C               	movf	??___fladd+2,w
  7567  17C3  00D4               	movwf	___fladd@b+2
  7568  17C4  085B               	movf	??___fladd+1,w
  7569  17C5  00D3               	movwf	___fladd@b+1
  7570  17C6  085A               	movf	??___fladd,w
  7571  17C7  00D2               	movwf	___fladd@b
  7572  17C8  0A64               	incf	___fladd@bexp,w
  7573  17C9  1903               	btfsc	3,2
  7574  17CA  2FCC               	goto	u3821
  7575  17CB  2FCD               	goto	u3820
  7576  17CC                     u3821:
  7577  17CC  2FD1               	goto	l714
  7578  17CD                     u3820:
  7579  17CD                     l2692:
  7580  17CD  3001               	movlw	1
  7581  17CE  00DA               	movwf	??___fladd
  7582  17CF  085A               	movf	??___fladd,w
  7583  17D0  07E4               	addwf	___fladd@bexp,f
  7584  17D1                     l714:
  7585  17D1  0A64               	incf	___fladd@bexp,w
  7586  17D2  1903               	btfsc	3,2
  7587  17D3  2FD5               	goto	u3831
  7588  17D4  2FD6               	goto	u3830
  7589  17D5                     u3831:
  7590  17D5  2FDB               	goto	l2696
  7591  17D6                     u3830:
  7592  17D6                     l2694:
  7593  17D6  0864               	movf	___fladd@bexp,w
  7594  17D7  1D03               	btfss	3,2
  7595  17D8  2FDA               	goto	u3841
  7596  17D9  2FDB               	goto	u3840
  7597  17DA                     u3841:
  7598  17DA  2FE9               	goto	l2702
  7599  17DB                     u3840:
  7600  17DB                     l2696:
  7601  17DB  3000               	movlw	0
  7602  17DC  00D5               	movwf	___fladd@b+3
  7603  17DD  3000               	movlw	0
  7604  17DE  00D4               	movwf	___fladd@b+2
  7605  17DF  3000               	movlw	0
  7606  17E0  00D3               	movwf	___fladd@b+1
  7607  17E1  3000               	movlw	0
  7608  17E2  00D2               	movwf	___fladd@b
  7609  17E3                     l2698:
  7610  17E3  0864               	movf	___fladd@bexp,w
  7611  17E4  1D03               	btfss	3,2
  7612  17E5  2FE7               	goto	u3851
  7613  17E6  2FE8               	goto	u3850
  7614  17E7                     u3851:
  7615  17E7  2FE9               	goto	l2702
  7616  17E8                     u3850:
  7617  17E8                     l2700:
  7618  17E8  01E2               	clrf	___fladd@signs
  7619  17E9                     l2702:
  7620  17E9  1C64               	btfss	___fladd@bexp,0
  7621  17EA  2FEC               	goto	u3861
  7622  17EB  2FED               	goto	u3860
  7623  17EC                     u3861:
  7624  17EC  2FEF               	goto	l2706
  7625  17ED                     u3860:
  7626  17ED                     l2704:
  7627  17ED  17D4               	bsf	___fladd@b+2,7
  7628  17EE  2FF3               	goto	l722
  7629  17EF                     l2706:
  7630  17EF  307F               	movlw	127
  7631  17F0  00DA               	movwf	??___fladd
  7632  17F1  085A               	movf	??___fladd,w
  7633  17F2  05D4               	andwf	___fladd@b+2,f
  7634  17F3                     l722:
  7635  17F3  0864               	movf	___fladd@bexp,w
  7636  17F4  00DA               	movwf	??___fladd
  7637  17F5  1003               	clrc
  7638  17F6  0C5A               	rrf	??___fladd,w
  7639  17F7  00DB               	movwf	??___fladd+1
  7640  17F8  085B               	movf	??___fladd+1,w
  7641  17F9  00D5               	movwf	___fladd@b+3
  7642  17FA                     l2708:
  7643  17FA  1FE2               	btfss	___fladd@signs,7
  7644  17FB  2FFD               	goto	u3871
  7645  17FC  2FFE               	goto	u3870
  7646  17FD                     u3871:
  7647  17FD  2FFF               	goto	l723
  7648  17FE                     u3870:
  7649  17FE                     l2710:
  7650  17FE  17D5               	bsf	___fladd@b+3,7
  7651  17FF                     l723:
  7652  17FF                     l693:
  7653  17FF  0008               	return
  7654  1800                     __end_of___fladd:
  7655                           
  7656                           	psect	text17
  7657  1979                     __ptext17:	
  7658 ;; *************** function ___flneg *****************
  7659 ;; Defined at:
  7660 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  f1              4    0[COMMON] unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;		None
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  4    0[COMMON] unsigned char 
  7667 ;; Registers used:
  7668 ;;		wreg
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7674 ;;      Params:         4       0       0       0       0
  7675 ;;      Locals:         0       0       0       0       0
  7676 ;;      Temps:          0       0       0       0       0
  7677 ;;      Totals:         4       0       0       0       0
  7678 ;;Total ram usage:        4 bytes
  7679 ;; Hardware stack levels used:    1
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_sprintf
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           
  7688                           ;psect for function ___flneg
  7689  1979                     ___flneg:
  7690  1979                     l3130:	
  7691                           ;incstack = 0
  7692                           ; Regs used in ___flneg: [wreg]
  7693                           
  7694  1979  0873               	movf	___flneg@f1+3,w
  7695  197A  0472               	iorwf	___flneg@f1+2,w
  7696  197B  0471               	iorwf	___flneg@f1+1,w
  7697  197C  0470               	iorwf	___flneg@f1,w
  7698  197D  1903               	skipnz
  7699  197E  2980               	goto	u4991
  7700  197F  2981               	goto	u4990
  7701  1980                     u4991:
  7702  1980  2983               	goto	l3134
  7703  1981                     u4990:
  7704  1981                     l3132:
  7705  1981  3080               	movlw	128
  7706  1982  06F3               	xorwf	___flneg@f1+3,f
  7707  1983                     l3134:
  7708  1983                     l552:
  7709  1983  0008               	return
  7710  1984                     __end_of___flneg:
  7711                           
  7712                           	psect	text18
  7713  1EA4                     __ptext18:	
  7714 ;; *************** function ___flge *****************
  7715 ;; Defined at:
  7716 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  ff1             4    0[COMMON] unsigned char 
  7719 ;;  ff2             4    4[COMMON] unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;		None               void
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7731 ;;      Params:         8       0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0
  7733 ;;      Temps:          4       0       0       0       0
  7734 ;;      Totals:        12       0       0       0       0
  7735 ;;Total ram usage:       12 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_sprintf
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function ___flge
  7746  1EA4                     ___flge:
  7747  1EA4                     l3110:	
  7748                           ;incstack = 0
  7749                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7750                           
  7751  1EA4  3000               	movlw	0
  7752  1EA5  0570               	andwf	___flge@ff1,w
  7753  1EA6  00F8               	movwf	??___flge
  7754  1EA7  3000               	movlw	0
  7755  1EA8  0571               	andwf	___flge@ff1+1,w
  7756  1EA9  00F9               	movwf	??___flge+1
  7757  1EAA  3080               	movlw	128
  7758  1EAB  0572               	andwf	___flge@ff1+2,w
  7759  1EAC  00FA               	movwf	??___flge+2
  7760  1EAD  307F               	movlw	127
  7761  1EAE  0573               	andwf	___flge@ff1+3,w
  7762  1EAF  00FB               	movwf	??___flge+3
  7763  1EB0  087B               	movf	??___flge+3,w
  7764  1EB1  047A               	iorwf	??___flge+2,w
  7765  1EB2  0479               	iorwf	??___flge+1,w
  7766  1EB3  0478               	iorwf	??___flge,w
  7767  1EB4  1D03               	skipz
  7768  1EB5  2EB7               	goto	u4921
  7769  1EB6  2EB8               	goto	u4920
  7770  1EB7                     u4921:
  7771  1EB7  2EC0               	goto	l544
  7772  1EB8                     u4920:
  7773  1EB8                     l3112:
  7774  1EB8  3000               	movlw	0
  7775  1EB9  00F3               	movwf	___flge@ff1+3
  7776  1EBA  3000               	movlw	0
  7777  1EBB  00F2               	movwf	___flge@ff1+2
  7778  1EBC  3000               	movlw	0
  7779  1EBD  00F1               	movwf	___flge@ff1+1
  7780  1EBE  3000               	movlw	0
  7781  1EBF  00F0               	movwf	___flge@ff1
  7782  1EC0                     l544:
  7783  1EC0  3000               	movlw	0
  7784  1EC1  0574               	andwf	___flge@ff2,w
  7785  1EC2  00F8               	movwf	??___flge
  7786  1EC3  3000               	movlw	0
  7787  1EC4  0575               	andwf	___flge@ff2+1,w
  7788  1EC5  00F9               	movwf	??___flge+1
  7789  1EC6  3080               	movlw	128
  7790  1EC7  0576               	andwf	___flge@ff2+2,w
  7791  1EC8  00FA               	movwf	??___flge+2
  7792  1EC9  307F               	movlw	127
  7793  1ECA  0577               	andwf	___flge@ff2+3,w
  7794  1ECB  00FB               	movwf	??___flge+3
  7795  1ECC  087B               	movf	??___flge+3,w
  7796  1ECD  047A               	iorwf	??___flge+2,w
  7797  1ECE  0479               	iorwf	??___flge+1,w
  7798  1ECF  0478               	iorwf	??___flge,w
  7799  1ED0  1D03               	skipz
  7800  1ED1  2ED3               	goto	u4931
  7801  1ED2  2ED4               	goto	u4930
  7802  1ED3                     u4931:
  7803  1ED3  2EDC               	goto	l3116
  7804  1ED4                     u4930:
  7805  1ED4                     l3114:
  7806  1ED4  3000               	movlw	0
  7807  1ED5  00F7               	movwf	___flge@ff2+3
  7808  1ED6  3000               	movlw	0
  7809  1ED7  00F6               	movwf	___flge@ff2+2
  7810  1ED8  3000               	movlw	0
  7811  1ED9  00F5               	movwf	___flge@ff2+1
  7812  1EDA  3000               	movlw	0
  7813  1EDB  00F4               	movwf	___flge@ff2
  7814  1EDC                     l3116:
  7815  1EDC  1FF3               	btfss	___flge@ff1+3,7
  7816  1EDD  2EDF               	goto	u4941
  7817  1EDE  2EE0               	goto	u4940
  7818  1EDF                     u4941:
  7819  1EDF  2F04               	goto	l3120
  7820  1EE0                     u4940:
  7821  1EE0                     l3118:
  7822  1EE0  3000               	movlw	0
  7823  1EE1  00F8               	movwf	??___flge
  7824  1EE2  3000               	movlw	0
  7825  1EE3  00F9               	movwf	??___flge+1
  7826  1EE4  3000               	movlw	0
  7827  1EE5  00FA               	movwf	??___flge+2
  7828  1EE6  3080               	movlw	128
  7829  1EE7  00FB               	movwf	??___flge+3
  7830  1EE8  0870               	movf	___flge@ff1,w
  7831  1EE9  02F8               	subwf	??___flge,f
  7832  1EEA  0871               	movf	___flge@ff1+1,w
  7833  1EEB  1C03               	skipc
  7834  1EEC  0F71               	incfsz	___flge@ff1+1,w
  7835  1EED  2EEF               	goto	u4951
  7836  1EEE  2EF0               	goto	u4952
  7837  1EEF                     u4951:
  7838  1EEF  02F9               	subwf	??___flge+1,f
  7839  1EF0                     u4952:
  7840  1EF0  0872               	movf	___flge@ff1+2,w
  7841  1EF1  1C03               	skipc
  7842  1EF2  0F72               	incfsz	___flge@ff1+2,w
  7843  1EF3  2EF5               	goto	u4953
  7844  1EF4  2EF6               	goto	u4954
  7845  1EF5                     u4953:
  7846  1EF5  02FA               	subwf	??___flge+2,f
  7847  1EF6                     u4954:
  7848  1EF6  0873               	movf	___flge@ff1+3,w
  7849  1EF7  1C03               	skipc
  7850  1EF8  0F73               	incfsz	___flge@ff1+3,w
  7851  1EF9  2EFB               	goto	u4955
  7852  1EFA  2EFC               	goto	u4956
  7853  1EFB                     u4955:
  7854  1EFB  02FB               	subwf	??___flge+3,f
  7855  1EFC                     u4956:
  7856  1EFC  087B               	movf	??___flge+3,w
  7857  1EFD  00F3               	movwf	___flge@ff1+3
  7858  1EFE  087A               	movf	??___flge+2,w
  7859  1EFF  00F2               	movwf	___flge@ff1+2
  7860  1F00  0879               	movf	??___flge+1,w
  7861  1F01  00F1               	movwf	___flge@ff1+1
  7862  1F02  0878               	movf	??___flge,w
  7863  1F03  00F0               	movwf	___flge@ff1
  7864  1F04                     l3120:
  7865  1F04  1FF7               	btfss	___flge@ff2+3,7
  7866  1F05  2F07               	goto	u4961
  7867  1F06  2F08               	goto	u4960
  7868  1F07                     u4961:
  7869  1F07  2F2C               	goto	l547
  7870  1F08                     u4960:
  7871  1F08                     l3122:
  7872  1F08  3000               	movlw	0
  7873  1F09  00F8               	movwf	??___flge
  7874  1F0A  3000               	movlw	0
  7875  1F0B  00F9               	movwf	??___flge+1
  7876  1F0C  3000               	movlw	0
  7877  1F0D  00FA               	movwf	??___flge+2
  7878  1F0E  3080               	movlw	128
  7879  1F0F  00FB               	movwf	??___flge+3
  7880  1F10  0874               	movf	___flge@ff2,w
  7881  1F11  02F8               	subwf	??___flge,f
  7882  1F12  0875               	movf	___flge@ff2+1,w
  7883  1F13  1C03               	skipc
  7884  1F14  0F75               	incfsz	___flge@ff2+1,w
  7885  1F15  2F17               	goto	u4971
  7886  1F16  2F18               	goto	u4972
  7887  1F17                     u4971:
  7888  1F17  02F9               	subwf	??___flge+1,f
  7889  1F18                     u4972:
  7890  1F18  0876               	movf	___flge@ff2+2,w
  7891  1F19  1C03               	skipc
  7892  1F1A  0F76               	incfsz	___flge@ff2+2,w
  7893  1F1B  2F1D               	goto	u4973
  7894  1F1C  2F1E               	goto	u4974
  7895  1F1D                     u4973:
  7896  1F1D  02FA               	subwf	??___flge+2,f
  7897  1F1E                     u4974:
  7898  1F1E  0877               	movf	___flge@ff2+3,w
  7899  1F1F  1C03               	skipc
  7900  1F20  0F77               	incfsz	___flge@ff2+3,w
  7901  1F21  2F23               	goto	u4975
  7902  1F22  2F24               	goto	u4976
  7903  1F23                     u4975:
  7904  1F23  02FB               	subwf	??___flge+3,f
  7905  1F24                     u4976:
  7906  1F24  087B               	movf	??___flge+3,w
  7907  1F25  00F7               	movwf	___flge@ff2+3
  7908  1F26  087A               	movf	??___flge+2,w
  7909  1F27  00F6               	movwf	___flge@ff2+2
  7910  1F28  0879               	movf	??___flge+1,w
  7911  1F29  00F5               	movwf	___flge@ff2+1
  7912  1F2A  0878               	movf	??___flge,w
  7913  1F2B  00F4               	movwf	___flge@ff2
  7914  1F2C                     l547:
  7915  1F2C  3080               	movlw	128
  7916  1F2D  06F3               	xorwf	___flge@ff1+3,f
  7917  1F2E  3080               	movlw	128
  7918  1F2F  06F7               	xorwf	___flge@ff2+3,f
  7919  1F30  0877               	movf	___flge@ff2+3,w
  7920  1F31  0273               	subwf	___flge@ff1+3,w
  7921  1F32  1D03               	skipz
  7922  1F33  2F3E               	goto	u4985
  7923  1F34  0876               	movf	___flge@ff2+2,w
  7924  1F35  0272               	subwf	___flge@ff1+2,w
  7925  1F36  1D03               	skipz
  7926  1F37  2F3E               	goto	u4985
  7927  1F38  0875               	movf	___flge@ff2+1,w
  7928  1F39  0271               	subwf	___flge@ff1+1,w
  7929  1F3A  1D03               	skipz
  7930  1F3B  2F3E               	goto	u4985
  7931  1F3C  0874               	movf	___flge@ff2,w
  7932  1F3D  0270               	subwf	___flge@ff1,w
  7933  1F3E                     u4985:
  7934  1F3E  1803               	skipnc
  7935  1F3F  2F41               	goto	u4981
  7936  1F40  2F42               	goto	u4980
  7937  1F41                     u4981:
  7938  1F41  2F44               	goto	l3126
  7939  1F42                     u4980:
  7940  1F42                     l3124:
  7941  1F42  1003               	clrc
  7942  1F43  2F45               	goto	l548
  7943  1F44                     l3126:
  7944  1F44  1403               	setc
  7945  1F45                     l548:
  7946  1F45  0008               	return
  7947  1F46                     __end_of___flge:
  7948                           
  7949                           	psect	text19
  7950  1BA0                     __ptext19:	
  7951 ;; *************** function ___fleq *****************
  7952 ;; Defined at:
  7953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  ff1             4    0[COMMON] unsigned char 
  7956 ;;  ff2             4    4[COMMON] unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;		None               void
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7968 ;;      Params:         8       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0
  7970 ;;      Temps:          4       0       0       0       0
  7971 ;;      Totals:        12       0       0       0       0
  7972 ;;Total ram usage:       12 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_sprintf
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           
  7982                           ;psect for function ___fleq
  7983  1BA0                     ___fleq:
  7984  1BA0                     l3098:	
  7985                           ;incstack = 0
  7986                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7987                           
  7988  1BA0  3000               	movlw	0
  7989  1BA1  0570               	andwf	___fleq@ff1,w
  7990  1BA2  00F8               	movwf	??___fleq
  7991  1BA3  3000               	movlw	0
  7992  1BA4  0571               	andwf	___fleq@ff1+1,w
  7993  1BA5  00F9               	movwf	??___fleq+1
  7994  1BA6  3080               	movlw	128
  7995  1BA7  0572               	andwf	___fleq@ff1+2,w
  7996  1BA8  00FA               	movwf	??___fleq+2
  7997  1BA9  307F               	movlw	127
  7998  1BAA  0573               	andwf	___fleq@ff1+3,w
  7999  1BAB  00FB               	movwf	??___fleq+3
  8000  1BAC  087B               	movf	??___fleq+3,w
  8001  1BAD  047A               	iorwf	??___fleq+2,w
  8002  1BAE  0479               	iorwf	??___fleq+1,w
  8003  1BAF  0478               	iorwf	??___fleq,w
  8004  1BB0  1D03               	skipz
  8005  1BB1  2BB3               	goto	u4891
  8006  1BB2  2BB4               	goto	u4890
  8007  1BB3                     u4891:
  8008  1BB3  2BBC               	goto	l539
  8009  1BB4                     u4890:
  8010  1BB4                     l3100:
  8011  1BB4  3000               	movlw	0
  8012  1BB5  00F3               	movwf	___fleq@ff1+3
  8013  1BB6  3000               	movlw	0
  8014  1BB7  00F2               	movwf	___fleq@ff1+2
  8015  1BB8  3000               	movlw	0
  8016  1BB9  00F1               	movwf	___fleq@ff1+1
  8017  1BBA  3000               	movlw	0
  8018  1BBB  00F0               	movwf	___fleq@ff1
  8019  1BBC                     l539:
  8020  1BBC  3000               	movlw	0
  8021  1BBD  0574               	andwf	___fleq@ff2,w
  8022  1BBE  00F8               	movwf	??___fleq
  8023  1BBF  3000               	movlw	0
  8024  1BC0  0575               	andwf	___fleq@ff2+1,w
  8025  1BC1  00F9               	movwf	??___fleq+1
  8026  1BC2  3080               	movlw	128
  8027  1BC3  0576               	andwf	___fleq@ff2+2,w
  8028  1BC4  00FA               	movwf	??___fleq+2
  8029  1BC5  307F               	movlw	127
  8030  1BC6  0577               	andwf	___fleq@ff2+3,w
  8031  1BC7  00FB               	movwf	??___fleq+3
  8032  1BC8  087B               	movf	??___fleq+3,w
  8033  1BC9  047A               	iorwf	??___fleq+2,w
  8034  1BCA  0479               	iorwf	??___fleq+1,w
  8035  1BCB  0478               	iorwf	??___fleq,w
  8036  1BCC  1D03               	skipz
  8037  1BCD  2BCF               	goto	u4901
  8038  1BCE  2BD0               	goto	u4900
  8039  1BCF                     u4901:
  8040  1BCF  2BD8               	goto	l540
  8041  1BD0                     u4900:
  8042  1BD0                     l3102:
  8043  1BD0  3000               	movlw	0
  8044  1BD1  00F7               	movwf	___fleq@ff2+3
  8045  1BD2  3000               	movlw	0
  8046  1BD3  00F6               	movwf	___fleq@ff2+2
  8047  1BD4  3000               	movlw	0
  8048  1BD5  00F5               	movwf	___fleq@ff2+1
  8049  1BD6  3000               	movlw	0
  8050  1BD7  00F4               	movwf	___fleq@ff2
  8051  1BD8                     l540:
  8052  1BD8  0877               	movf	___fleq@ff2+3,w
  8053  1BD9  0673               	xorwf	___fleq@ff1+3,w
  8054  1BDA  1D03               	skipz
  8055  1BDB  2BE6               	goto	u4915
  8056  1BDC  0876               	movf	___fleq@ff2+2,w
  8057  1BDD  0672               	xorwf	___fleq@ff1+2,w
  8058  1BDE  1D03               	skipz
  8059  1BDF  2BE6               	goto	u4915
  8060  1BE0  0875               	movf	___fleq@ff2+1,w
  8061  1BE1  0671               	xorwf	___fleq@ff1+1,w
  8062  1BE2  1D03               	skipz
  8063  1BE3  2BE6               	goto	u4915
  8064  1BE4  0874               	movf	___fleq@ff2,w
  8065  1BE5  0670               	xorwf	___fleq@ff1,w
  8066  1BE6                     u4915:
  8067  1BE6  1903               	skipnz
  8068  1BE7  2BE9               	goto	u4911
  8069  1BE8  2BEA               	goto	u4910
  8070  1BE9                     u4911:
  8071  1BE9  2BEC               	goto	l3106
  8072  1BEA                     u4910:
  8073  1BEA                     l3104:
  8074  1BEA  1003               	clrc
  8075  1BEB  2BED               	goto	l541
  8076  1BEC                     l3106:
  8077  1BEC  1403               	setc
  8078  1BED                     l541:
  8079  1BED  0008               	return
  8080  1BEE                     __end_of___fleq:
  8081                           
  8082                           	psect	text20
  8083  19BD                     __ptext20:	
  8084 ;; *************** function _setup *****************
  8085 ;; Defined at:
  8086 ;;		line 126 in file "main.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;		None
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8100 ;;      Params:         0       0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0
  8102 ;;      Temps:          0       0       0       0       0
  8103 ;;      Totals:         0       0       0       0       0
  8104 ;;Total ram usage:        0 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		_main
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           
  8114                           ;psect for function _setup
  8115  19BD                     _setup:
  8116  19BD                     l3386:	
  8117                           ;incstack = 0
  8118                           ; Regs used in _setup: [wreg+status,2]
  8119                           
  8120                           
  8121                           ;main.c: 127:     ANSEL = 0b00000011;
  8122  19BD  3003               	movlw	3
  8123  19BE  1683               	bsf	3,5	;RP0=1, select bank3
  8124  19BF  1703               	bsf	3,6	;RP1=1, select bank3
  8125  19C0  0088               	movwf	8	;volatile
  8126  19C1                     l3388:
  8127                           
  8128                           ;main.c: 128:     ANSELH = 0;
  8129  19C1  0189               	clrf	9	;volatile
  8130  19C2                     l3390:
  8131                           
  8132                           ;main.c: 129:     TRISA = 0b00000011;
  8133  19C2  3003               	movlw	3
  8134  19C3  1683               	bsf	3,5	;RP0=1, select bank1
  8135  19C4  1303               	bcf	3,6	;RP1=0, select bank1
  8136  19C5  0085               	movwf	5	;volatile
  8137                           
  8138                           ;main.c: 130:     TRISB = 0;
  8139  19C6  0186               	clrf	6	;volatile
  8140                           
  8141                           ;main.c: 131:     TRISC = 0;
  8142  19C7  0187               	clrf	7	;volatile
  8143                           
  8144                           ;main.c: 132:     TRISD = 0;
  8145  19C8  0188               	clrf	8	;volatile
  8146                           
  8147                           ;main.c: 133:     TRISE = 0;
  8148  19C9  0189               	clrf	9	;volatile
  8149                           
  8150                           ;main.c: 134:     PORTA = 0;
  8151  19CA  1283               	bcf	3,5	;RP0=0, select bank0
  8152  19CB  1303               	bcf	3,6	;RP1=0, select bank0
  8153  19CC  0185               	clrf	5	;volatile
  8154                           
  8155                           ;main.c: 135:     PORTB = 0;
  8156  19CD  0186               	clrf	6	;volatile
  8157                           
  8158                           ;main.c: 136:     PORTC = 0;
  8159  19CE  0187               	clrf	7	;volatile
  8160                           
  8161                           ;main.c: 137:     PORTD = 0;
  8162  19CF  0188               	clrf	8	;volatile
  8163                           
  8164                           ;main.c: 138:     PORTE = 0;
  8165  19D0  0189               	clrf	9	;volatile
  8166                           
  8167                           ;main.c: 140:     ADCON1 = 0b00000000;
  8168  19D1  1683               	bsf	3,5	;RP0=1, select bank1
  8169  19D2  1303               	bcf	3,6	;RP1=0, select bank1
  8170  19D3  019F               	clrf	31	;volatile
  8171  19D4                     l3392:
  8172                           
  8173                           ;main.c: 141:     PIE1bits.ADIE = 0;
  8174  19D4  130C               	bcf	12,6	;volatile
  8175  19D5                     l3394:
  8176                           
  8177                           ;main.c: 142:     PIR1bits.ADIF = 0;
  8178  19D5  1283               	bcf	3,5	;RP0=0, select bank0
  8179  19D6  1303               	bcf	3,6	;RP1=0, select bank0
  8180  19D7  130C               	bcf	12,6	;volatile
  8181                           
  8182                           ;main.c: 143:     OPTION_REG = 0b00000000;
  8183  19D8  1683               	bsf	3,5	;RP0=1, select bank1
  8184  19D9  1303               	bcf	3,6	;RP1=0, select bank1
  8185  19DA  0181               	clrf	1	;volatile
  8186                           
  8187                           ;main.c: 144:     INTCON = 0b00000000;
  8188  19DB  018B               	clrf	11	;volatile
  8189  19DC                     l83:
  8190  19DC  0008               	return
  8191  19DD                     __end_of_setup:
  8192                           
  8193                           	psect	text21
  8194  1ACF                     __ptext21:	
  8195 ;; *************** function _Lcd_Write_String *****************
  8196 ;; Defined at:
  8197 ;;		line 132 in file "LCD.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  a               2    3[COMMON] PTR unsigned char 
  8200 ;;		 -> data(16), STR_3(4), STR_2(4), STR_1(4), 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  i               2    8[COMMON] int 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8212 ;;      Params:         2       0       0       0       0
  8213 ;;      Locals:         2       0       0       0       0
  8214 ;;      Temps:          3       0       0       0       0
  8215 ;;      Totals:         7       0       0       0       0
  8216 ;;Total ram usage:        7 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    2
  8219 ;; This function calls:
  8220 ;;		_Lcd_Write_Char
  8221 ;; This function is called by:
  8222 ;;		_main
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           
  8227                           ;psect for function _Lcd_Write_String
  8228  1ACF                     _Lcd_Write_String:
  8229  1ACF                     l3420:	
  8230                           ;incstack = 0
  8231                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8232                           
  8233                           
  8234                           ;LCD.c: 132: void Lcd_Write_String(char *a);LCD.c: 133: {;LCD.c: 134:  int i;;LCD.c: 135
      +                          :  for(i=0;a[i]!='\0';i++)
  8235  1ACF  01F8               	clrf	Lcd_Write_String@i
  8236  1AD0  01F9               	clrf	Lcd_Write_String@i+1
  8237  1AD1  2AF4               	goto	l3426
  8238  1AD2                     l3422:
  8239                           
  8240                           ;LCD.c: 136:     Lcd_Write_Char(a[i]);
  8241  1AD2  0878               	movf	Lcd_Write_String@i,w
  8242  1AD3  0773               	addwf	Lcd_Write_String@a,w
  8243  1AD4  00F6               	movwf	??_Lcd_Write_String+1
  8244  1AD5  0874               	movf	Lcd_Write_String@a+1,w
  8245  1AD6  00F5               	movwf	??_Lcd_Write_String
  8246  1AD7  1803               	skipnc
  8247  1AD8  0AF5               	incf	??_Lcd_Write_String,f
  8248  1AD9  1FF8               	btfss	Lcd_Write_String@i,7
  8249  1ADA  2ADC               	goto	u5610
  8250  1ADB  03F5               	decf	??_Lcd_Write_String,f
  8251  1ADC                     u5610:
  8252  1ADC  0875               	movf	??_Lcd_Write_String,w
  8253  1ADD  00F7               	movwf	??_Lcd_Write_String+2
  8254  1ADE  0877               	movf	??_Lcd_Write_String+2,w
  8255  1ADF  1283               	bcf	3,5	;RP0=0, select bank0
  8256  1AE0  1303               	bcf	3,6	;RP1=0, select bank0
  8257  1AE1  00FF               	movwf	btemp+1
  8258  1AE2  0876               	movf	??_Lcd_Write_String+1,w
  8259  1AE3  0084               	movwf	4
  8260  1AE4  160A  118A  2000  160A  158A  	fcall	stringtab
  8261  1AE9  160A  118A  20BD  160A  158A  	fcall	_Lcd_Write_Char
  8262  1AEE                     l3424:
  8263  1AEE  3001               	movlw	1
  8264  1AEF  07F8               	addwf	Lcd_Write_String@i,f
  8265  1AF0  1803               	skipnc
  8266  1AF1  0AF9               	incf	Lcd_Write_String@i+1,f
  8267  1AF2  3000               	movlw	0
  8268  1AF3  07F9               	addwf	Lcd_Write_String@i+1,f
  8269  1AF4                     l3426:
  8270  1AF4  0878               	movf	Lcd_Write_String@i,w
  8271  1AF5  0773               	addwf	Lcd_Write_String@a,w
  8272  1AF6  00F6               	movwf	??_Lcd_Write_String+1
  8273  1AF7  0874               	movf	Lcd_Write_String@a+1,w
  8274  1AF8  00F5               	movwf	??_Lcd_Write_String
  8275  1AF9  1803               	skipnc
  8276  1AFA  0AF5               	incf	??_Lcd_Write_String,f
  8277  1AFB  1FF8               	btfss	Lcd_Write_String@i,7
  8278  1AFC  2AFE               	goto	u5620
  8279  1AFD  03F5               	decf	??_Lcd_Write_String,f
  8280  1AFE                     u5620:
  8281  1AFE  0875               	movf	??_Lcd_Write_String,w
  8282  1AFF  00F7               	movwf	??_Lcd_Write_String+2
  8283  1B00  0877               	movf	??_Lcd_Write_String+2,w
  8284  1B01  1283               	bcf	3,5	;RP0=0, select bank0
  8285  1B02  1303               	bcf	3,6	;RP1=0, select bank0
  8286  1B03  00FF               	movwf	btemp+1
  8287  1B04  0876               	movf	??_Lcd_Write_String+1,w
  8288  1B05  0084               	movwf	4
  8289  1B06  160A  118A  2000  160A  158A  	fcall	stringtab
  8290  1B0B  3A00               	xorlw	0
  8291  1B0C  1D03               	skipz
  8292  1B0D  2B0F               	goto	u5631
  8293  1B0E  2B10               	goto	u5630
  8294  1B0F                     u5631:
  8295  1B0F  2AD2               	goto	l3422
  8296  1B10                     u5630:
  8297  1B10                     l130:
  8298  1B10  0008               	return
  8299  1B11                     __end_of_Lcd_Write_String:
  8300                           
  8301                           	psect	text22
  8302  10BD                     __ptext22:	
  8303 ;; *************** function _Lcd_Write_Char *****************
  8304 ;; Defined at:
  8305 ;;		line 115 in file "LCD.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  a               1    wreg     unsigned char 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;  a               1    2[COMMON] unsigned char 
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0, pclath, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8319 ;;      Params:         0       0       0       0       0
  8320 ;;      Locals:         1       0       0       0       0
  8321 ;;      Temps:          1       0       0       0       0
  8322 ;;      Totals:         2       0       0       0       0
  8323 ;;Total ram usage:        2 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    1
  8326 ;; This function calls:
  8327 ;;		_Lcd_Port
  8328 ;; This function is called by:
  8329 ;;		_Lcd_Write_String
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           
  8334                           ;psect for function _Lcd_Write_Char
  8335  10BD                     _Lcd_Write_Char:
  8336                           
  8337                           ;incstack = 0
  8338                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8339                           ;Lcd_Write_Char@a stored from wreg
  8340  10BD  00F2               	movwf	Lcd_Write_Char@a
  8341  10BE                     l2876:
  8342                           
  8343                           ;LCD.c: 115: void Lcd_Write_Char(char a);LCD.c: 116: {;LCD.c: 121:    RE0 = 1;
  8344  10BE  1283               	bcf	3,5	;RP0=0, select bank0
  8345  10BF  1303               	bcf	3,6	;RP1=0, select bank0
  8346  10C0  1409               	bsf	9,0	;volatile
  8347  10C1                     l2878:
  8348                           
  8349                           ;LCD.c: 126:    Lcd_Port(a);
  8350  10C1  0872               	movf	Lcd_Write_Char@a,w
  8351  10C2  120A  158A  2000  160A  118A  	fcall	_Lcd_Port
  8352  10C7                     l2880:
  8353                           
  8354                           ;LCD.c: 127:    RE1 = 1;
  8355  10C7  1283               	bcf	3,5	;RP0=0, select bank0
  8356  10C8  1303               	bcf	3,6	;RP1=0, select bank0
  8357  10C9  1489               	bsf	9,1	;volatile
  8358  10CA                     l2882:
  8359                           
  8360                           ;LCD.c: 128:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8361  10CA  301A               	movlw	26
  8362  10CB  00F1               	movwf	??_Lcd_Write_Char
  8363  10CC                     u6137:
  8364  10CC  0BF1               	decfsz	??_Lcd_Write_Char,f
  8365  10CD  28CC               	goto	u6137
  8366  10CE  0000               	nop
  8367  10CF                     l2884:
  8368                           
  8369                           ;LCD.c: 129:    RE1 = 0;
  8370  10CF  1283               	bcf	3,5	;RP0=0, select bank0
  8371  10D0  1303               	bcf	3,6	;RP1=0, select bank0
  8372  10D1  1089               	bcf	9,1	;volatile
  8373  10D2                     l124:
  8374  10D2  0008               	return
  8375  10D3                     __end_of_Lcd_Write_Char:
  8376                           
  8377                           	psect	text23
  8378  1A01                     __ptext23:	
  8379 ;; *************** function _Lcd_Set_Cursor *****************
  8380 ;; Defined at:
  8381 ;;		line 75 in file "LCD.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  a               1    wreg     unsigned char 
  8384 ;;  b               1    4[COMMON] unsigned char 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  a               1    6[COMMON] unsigned char 
  8387 ;;  temp            1    7[COMMON] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0, pclath, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8397 ;;      Params:         1       0       0       0       0
  8398 ;;      Locals:         2       0       0       0       0
  8399 ;;      Temps:          1       0       0       0       0
  8400 ;;      Totals:         4       0       0       0       0
  8401 ;;Total ram usage:        4 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    2
  8404 ;; This function calls:
  8405 ;;		_Lcd_Cmd
  8406 ;; This function is called by:
  8407 ;;		_main
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function _Lcd_Set_Cursor
  8413  1A01                     _Lcd_Set_Cursor:
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8417                           ;Lcd_Set_Cursor@a stored from wreg
  8418  1A01  00F6               	movwf	Lcd_Set_Cursor@a
  8419  1A02                     l3408:
  8420                           
  8421                           ;LCD.c: 75: void Lcd_Set_Cursor(char a, char b);LCD.c: 76: {;LCD.c: 77:  char temp;;LCD.
      +                          c: 78:  if(a == 1)
  8422  1A02  0376               	decf	Lcd_Set_Cursor@a,w
  8423  1A03  1D03               	btfss	3,2
  8424  1A04  2A06               	goto	u5591
  8425  1A05  2A07               	goto	u5590
  8426  1A06                     u5591:
  8427  1A06  2A13               	goto	l3414
  8428  1A07                     u5590:
  8429  1A07                     l3410:
  8430                           
  8431                           ;LCD.c: 79:  {;LCD.c: 80:    temp = 0x80 + b - 1;
  8432  1A07  0874               	movf	Lcd_Set_Cursor@b,w
  8433  1A08  3E7F               	addlw	127
  8434  1A09  00F5               	movwf	??_Lcd_Set_Cursor
  8435  1A0A  0875               	movf	??_Lcd_Set_Cursor,w
  8436  1A0B  00F7               	movwf	Lcd_Set_Cursor@temp
  8437  1A0C                     l3412:
  8438                           
  8439                           ;LCD.c: 84:   Lcd_Cmd(temp);
  8440  1A0C  0877               	movf	Lcd_Set_Cursor@temp,w
  8441  1A0D  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8442                           
  8443                           ;LCD.c: 85:  }
  8444  1A12  2A24               	goto	l118
  8445  1A13                     l3414:
  8446  1A13  3002               	movlw	2
  8447  1A14  0676               	xorwf	Lcd_Set_Cursor@a,w
  8448  1A15  1D03               	btfss	3,2
  8449  1A16  2A18               	goto	u5601
  8450  1A17  2A19               	goto	u5600
  8451  1A18                     u5601:
  8452  1A18  2A24               	goto	l118
  8453  1A19                     u5600:
  8454  1A19                     l3416:
  8455                           
  8456                           ;LCD.c: 87:  {;LCD.c: 88:   temp = 0xC0 + b - 1;
  8457  1A19  0874               	movf	Lcd_Set_Cursor@b,w
  8458  1A1A  3EBF               	addlw	191
  8459  1A1B  00F5               	movwf	??_Lcd_Set_Cursor
  8460  1A1C  0875               	movf	??_Lcd_Set_Cursor,w
  8461  1A1D  00F7               	movwf	Lcd_Set_Cursor@temp
  8462  1A1E                     l3418:
  8463                           
  8464                           ;LCD.c: 92:   Lcd_Cmd(temp);
  8465  1A1E  0877               	movf	Lcd_Set_Cursor@temp,w
  8466  1A1F  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8467  1A24                     l118:
  8468  1A24  0008               	return
  8469  1A25                     __end_of_Lcd_Set_Cursor:
  8470                           
  8471                           	psect	text24
  8472  1B55                     __ptext24:	
  8473 ;; *************** function _Lcd_Init *****************
  8474 ;; Defined at:
  8475 ;;		line 96 in file "LCD.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;		None
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8489 ;;      Params:         0       0       0       0       0
  8490 ;;      Locals:         0       0       0       0       0
  8491 ;;      Temps:          2       0       0       0       0
  8492 ;;      Totals:         2       0       0       0       0
  8493 ;;Total ram usage:        2 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    2
  8496 ;; This function calls:
  8497 ;;		_Lcd_Cmd
  8498 ;;		_Lcd_Port
  8499 ;; This function is called by:
  8500 ;;		_main
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function _Lcd_Init
  8506  1B55                     _Lcd_Init:
  8507  1B55                     l3396:	
  8508                           ;incstack = 0
  8509                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8510                           
  8511                           
  8512                           ;LCD.c: 98:   Lcd_Port(0x00);
  8513  1B55  3000               	movlw	0
  8514  1B56  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  8515  1B5B                     l3398:
  8516                           
  8517                           ;LCD.c: 99:    _delay((unsigned long)((20)*(8000000/4000.0)));
  8518  1B5B  3034               	movlw	52
  8519  1B5C  00F5               	movwf	??_Lcd_Init+1
  8520  1B5D  30F1               	movlw	241
  8521  1B5E  00F4               	movwf	??_Lcd_Init
  8522  1B5F                     u6147:
  8523  1B5F  0BF4               	decfsz	??_Lcd_Init,f
  8524  1B60  2B5F               	goto	u6147
  8525  1B61  0BF5               	decfsz	??_Lcd_Init+1,f
  8526  1B62  2B5F               	goto	u6147
  8527  1B63  2B64               	nop2
  8528  1B64                     l3400:
  8529                           
  8530                           ;LCD.c: 100:   Lcd_Cmd(0x30);
  8531  1B64  3030               	movlw	48
  8532  1B65  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8533                           
  8534                           ;LCD.c: 101:  _delay((unsigned long)((5)*(8000000/4000.0)));
  8535  1B6A  300D               	movlw	13
  8536  1B6B  00F5               	movwf	??_Lcd_Init+1
  8537  1B6C  30FB               	movlw	251
  8538  1B6D  00F4               	movwf	??_Lcd_Init
  8539  1B6E                     u6157:
  8540  1B6E  0BF4               	decfsz	??_Lcd_Init,f
  8541  1B6F  2B6E               	goto	u6157
  8542  1B70  0BF5               	decfsz	??_Lcd_Init+1,f
  8543  1B71  2B6E               	goto	u6157
  8544  1B72  2B73               	nop2
  8545  1B73                     l3402:
  8546                           
  8547                           ;LCD.c: 102:   Lcd_Cmd(0x30);
  8548  1B73  3030               	movlw	48
  8549  1B74  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8550  1B79                     l3404:
  8551                           
  8552                           ;LCD.c: 103:  _delay((unsigned long)((11)*(8000000/4000.0)));
  8553  1B79  301D               	movlw	29
  8554  1B7A  00F5               	movwf	??_Lcd_Init+1
  8555  1B7B  3091               	movlw	145
  8556  1B7C  00F4               	movwf	??_Lcd_Init
  8557  1B7D                     u6167:
  8558  1B7D  0BF4               	decfsz	??_Lcd_Init,f
  8559  1B7E  2B7D               	goto	u6167
  8560  1B7F  0BF5               	decfsz	??_Lcd_Init+1,f
  8561  1B80  2B7D               	goto	u6167
  8562                           
  8563                           ;LCD.c: 104:   Lcd_Cmd(0x30);
  8564  1B81  3030               	movlw	48
  8565  1B82  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8566                           
  8567                           ;LCD.c: 106:   Lcd_Cmd(0x38);
  8568  1B87  3038               	movlw	56
  8569  1B88  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8570                           
  8571                           ;LCD.c: 107:   Lcd_Cmd(0x0C);
  8572  1B8D  300C               	movlw	12
  8573  1B8E  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8574                           
  8575                           ;LCD.c: 108:   Lcd_Cmd(0x01);
  8576  1B93  3001               	movlw	1
  8577  1B94  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8578                           
  8579                           ;LCD.c: 109:   Lcd_Cmd(0x06);
  8580  1B99  3006               	movlw	6
  8581  1B9A  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8582  1B9F                     l121:
  8583  1B9F  0008               	return
  8584  1BA0                     __end_of_Lcd_Init:
  8585                           
  8586                           	psect	text25
  8587  1984                     __ptext25:	
  8588 ;; *************** function _Lcd_Clear *****************
  8589 ;; Defined at:
  8590 ;;		line 69 in file "LCD.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8604 ;;      Params:         0       0       0       0       0
  8605 ;;      Locals:         0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0
  8607 ;;      Totals:         0       0       0       0       0
  8608 ;;Total ram usage:        0 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    2
  8611 ;; This function calls:
  8612 ;;		_Lcd_Cmd
  8613 ;; This function is called by:
  8614 ;;		_main
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function _Lcd_Clear
  8620  1984                     _Lcd_Clear:
  8621  1984                     l3406:	
  8622                           ;incstack = 0
  8623                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  8624                           
  8625                           
  8626                           ;LCD.c: 71:  Lcd_Cmd(0);
  8627  1984  3000               	movlw	0
  8628  1985  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8629                           
  8630                           ;LCD.c: 72:  Lcd_Cmd(1);
  8631  198A  3001               	movlw	1
  8632  198B  160A  158A  21A3  160A  158A  	fcall	_Lcd_Cmd
  8633  1990                     l112:
  8634  1990  0008               	return
  8635  1991                     __end_of_Lcd_Clear:
  8636                           
  8637                           	psect	text26
  8638  19A3                     __ptext26:	
  8639 ;; *************** function _Lcd_Cmd *****************
  8640 ;; Defined at:
  8641 ;;		line 60 in file "LCD.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  a               1    wreg     unsigned char 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  a               1    3[COMMON] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      void 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0, pclath, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8655 ;;      Params:         0       0       0       0       0
  8656 ;;      Locals:         1       0       0       0       0
  8657 ;;      Temps:          2       0       0       0       0
  8658 ;;      Totals:         3       0       0       0       0
  8659 ;;Total ram usage:        3 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    1
  8662 ;; This function calls:
  8663 ;;		_Lcd_Port
  8664 ;; This function is called by:
  8665 ;;		_Lcd_Clear
  8666 ;;		_Lcd_Set_Cursor
  8667 ;;		_Lcd_Init
  8668 ;;		_Lcd_Shift_Right
  8669 ;;		_Lcd_Shift_Left
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           
  8674                           ;psect for function _Lcd_Cmd
  8675  19A3                     _Lcd_Cmd:
  8676                           
  8677                           ;incstack = 0
  8678                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8679                           ;Lcd_Cmd@a stored from wreg
  8680  19A3  00F3               	movwf	Lcd_Cmd@a
  8681  19A4                     l2866:
  8682                           
  8683                           ;LCD.c: 60: void Lcd_Cmd(char a);LCD.c: 61: {;LCD.c: 62:  RE0 = 0;
  8684  19A4  1283               	bcf	3,5	;RP0=0, select bank0
  8685  19A5  1303               	bcf	3,6	;RP1=0, select bank0
  8686  19A6  1009               	bcf	9,0	;volatile
  8687  19A7                     l2868:
  8688                           
  8689                           ;LCD.c: 63:  Lcd_Port(a);
  8690  19A7  0873               	movf	Lcd_Cmd@a,w
  8691  19A8  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  8692  19AD                     l2870:
  8693                           
  8694                           ;LCD.c: 64:  RE1 = 1;
  8695  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  8696  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  8697  19AF  1489               	bsf	9,1	;volatile
  8698  19B0                     l2872:
  8699                           
  8700                           ;LCD.c: 65:         _delay((unsigned long)((4)*(8000000/4000.0)));
  8701  19B0  300B               	movlw	11
  8702  19B1  00F2               	movwf	??_Lcd_Cmd+1
  8703  19B2  3062               	movlw	98
  8704  19B3  00F1               	movwf	??_Lcd_Cmd
  8705  19B4                     u6177:
  8706  19B4  0BF1               	decfsz	??_Lcd_Cmd,f
  8707  19B5  29B4               	goto	u6177
  8708  19B6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  8709  19B7  29B4               	goto	u6177
  8710  19B8  0000               	nop
  8711  19B9                     l2874:
  8712                           
  8713                           ;LCD.c: 66:         RE1 = 0;
  8714  19B9  1283               	bcf	3,5	;RP0=0, select bank0
  8715  19BA  1303               	bcf	3,6	;RP1=0, select bank0
  8716  19BB  1089               	bcf	9,1	;volatile
  8717  19BC                     l109:
  8718  19BC  0008               	return
  8719  19BD                     __end_of_Lcd_Cmd:
  8720                           
  8721                           	psect	text27
  8722  0800                     __ptext27:	
  8723 ;; *************** function _Lcd_Port *****************
  8724 ;; Defined at:
  8725 ;;		line 17 in file "LCD.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;  a               1    wreg     unsigned char 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;  a               1    0[COMMON] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  1    wreg      void 
  8732 ;; Registers used:
  8733 ;;		wreg
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8739 ;;      Params:         0       0       0       0       0
  8740 ;;      Locals:         1       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0
  8742 ;;      Totals:         1       0       0       0       0
  8743 ;;Total ram usage:        1 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_Lcd_Cmd
  8749 ;;		_Lcd_Init
  8750 ;;		_Lcd_Write_Char
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _Lcd_Port
  8756  0800                     _Lcd_Port:
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _Lcd_Port: [wreg]
  8760                           ;Lcd_Port@a stored from wreg
  8761  0800  00F0               	movwf	Lcd_Port@a
  8762  0801                     l2386:
  8763                           
  8764                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  8765  0801  0870               	movf	Lcd_Port@a,w
  8766  0802  1283               	bcf	3,5	;RP0=0, select bank0
  8767  0803  1303               	bcf	3,6	;RP1=0, select bank0
  8768  0804  0088               	movwf	8	;volatile
  8769  0805                     l106:
  8770  0805  0008               	return
  8771  0806                     __end_of_Lcd_Port:
  8772                           
  8773                           	psect	text28
  8774  1E13                     __ptext28:	
  8775 ;; *************** function _ADC_CH1 *****************
  8776 ;; Defined at:
  8777 ;;		line 165 in file "main.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      void 
  8784 ;; Registers used:
  8785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8791 ;;      Params:         0       0       0       0       0
  8792 ;;      Locals:         0       0       0       0       0
  8793 ;;      Temps:          0       4       0       0       0
  8794 ;;      Totals:         0       4       0       0       0
  8795 ;;Total ram usage:        4 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    2
  8798 ;; This function calls:
  8799 ;;		_ADC_ch
  8800 ;;		_ADC_val
  8801 ;;		___fldiv
  8802 ;;		___flmul
  8803 ;;		___xxtofl
  8804 ;; This function is called by:
  8805 ;;		_main
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           
  8810                           ;psect for function _ADC_CH1
  8811  1E13                     _ADC_CH1:
  8812  1E13                     l3446:	
  8813                           ;incstack = 0
  8814                           ; Regs used in _ADC_CH1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8815                           
  8816                           
  8817                           ;main.c: 166:     ADC_ch(1);
  8818  1E13  3001               	movlw	1
  8819  1E14  00F0               	movwf	ADC_ch@channel
  8820  1E15  3000               	movlw	0
  8821  1E16  00F1               	movwf	ADC_ch@channel+1
  8822  1E17  160A  158A  21DD  160A  158A  	fcall	_ADC_ch
  8823  1E1C                     l3448:
  8824                           
  8825                           ;main.c: 167:     ADCON0bits.ADCS0 = 1;
  8826  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  8827  1E1D  1303               	bcf	3,6	;RP1=0, select bank0
  8828  1E1E  171F               	bsf	31,6	;volatile
  8829  1E1F                     l3450:
  8830                           
  8831                           ;main.c: 168:     ADCON0bits.ADCS1 = 0;
  8832  1E1F  139F               	bcf	31,7	;volatile
  8833  1E20                     l3452:
  8834                           
  8835                           ;main.c: 169:     ADCON0bits.ADON = 1;
  8836  1E20  141F               	bsf	31,0	;volatile
  8837  1E21                     l3454:
  8838                           
  8839                           ;main.c: 170:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  8840  1E21  3019               	movlw	25
  8841  1E22  1283               	bcf	3,5	;RP0=0, select bank0
  8842  1E23  1303               	bcf	3,6	;RP1=0, select bank0
  8843  1E24  00D8               	movwf	??_ADC_CH1
  8844  1E25                     u6187:
  8845  1E25  0BD8               	decfsz	??_ADC_CH1,f
  8846  1E26  2E25               	goto	u6187
  8847  1E27  2E28               	nop2
  8848  1E28                     l3456:
  8849                           
  8850                           ;main.c: 171:     ADCON0bits.GO = 1;
  8851  1E28  1283               	bcf	3,5	;RP0=0, select bank0
  8852  1E29  1303               	bcf	3,6	;RP1=0, select bank0
  8853  1E2A  149F               	bsf	31,1	;volatile
  8854                           
  8855                           ;main.c: 172:     while(ADCON0bits.GO != 0){
  8856  1E2B  2E9E               	goto	l3462
  8857  1E2C                     l3458:
  8858                           
  8859                           ;main.c: 173:         ADC_res2 = ADC_val(ADRESL, ADRESH);
  8860  1E2C  081E               	movf	30,w	;volatile
  8861  1E2D  00D8               	movwf	??_ADC_CH1
  8862  1E2E  0858               	movf	??_ADC_CH1,w
  8863  1E2F  00F0               	movwf	ADC_val@ADRES_H
  8864  1E30  1683               	bsf	3,5	;RP0=1, select bank1
  8865  1E31  1303               	bcf	3,6	;RP1=0, select bank1
  8866  1E32  081E               	movf	30,w	;volatile
  8867  1E33  160A  158A  216F  160A  158A  	fcall	_ADC_val
  8868  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  8869  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  8870  1E3A  00D9               	movwf	??_ADC_CH1+1
  8871  1E3B  0859               	movf	??_ADC_CH1+1,w
  8872  1E3C  1683               	bsf	3,5	;RP0=1, select bank1
  8873  1E3D  1303               	bcf	3,6	;RP1=0, select bank1
  8874  1E3E  00D4               	movwf	_ADC_res2^(0+128)
  8875  1E3F                     l3460:
  8876                           
  8877                           ;main.c: 174:         VAL2 = ((ADC_res2 * 5.0)/255);
  8878  1E3F  3043               	movlw	67
  8879  1E40  1283               	bcf	3,5	;RP0=0, select bank0
  8880  1E41  1303               	bcf	3,6	;RP1=0, select bank0
  8881  1E42  00C1               	movwf	___fldiv@a+3
  8882  1E43  307F               	movlw	127
  8883  1E44  00C0               	movwf	___fldiv@a+2
  8884  1E45  3000               	movlw	0
  8885  1E46  00BF               	movwf	___fldiv@a+1
  8886  1E47  3000               	movlw	0
  8887  1E48  00BE               	movwf	___fldiv@a
  8888  1E49  3040               	movlw	64
  8889  1E4A  00A7               	movwf	___flmul@b+3
  8890  1E4B  30A0               	movlw	160
  8891  1E4C  00A6               	movwf	___flmul@b+2
  8892  1E4D  3000               	movlw	0
  8893  1E4E  00A5               	movwf	___flmul@b+1
  8894  1E4F  3000               	movlw	0
  8895  1E50  00A4               	movwf	___flmul@b
  8896  1E51  1683               	bsf	3,5	;RP0=1, select bank1
  8897  1E52  1303               	bcf	3,6	;RP1=0, select bank1
  8898  1E53  0854               	movf	_ADC_res2^(0+128),w
  8899  1E54  1283               	bcf	3,5	;RP0=0, select bank0
  8900  1E55  1303               	bcf	3,6	;RP1=0, select bank0
  8901  1E56  00D8               	movwf	??_ADC_CH1
  8902  1E57  01D9               	clrf	??_ADC_CH1+1
  8903  1E58  01DA               	clrf	??_ADC_CH1+2
  8904  1E59  01DB               	clrf	??_ADC_CH1+3
  8905  1E5A  085B               	movf	??_ADC_CH1+3,w
  8906  1E5B  00F3               	movwf	___xxtofl@val+3
  8907  1E5C  085A               	movf	??_ADC_CH1+2,w
  8908  1E5D  00F2               	movwf	___xxtofl@val+2
  8909  1E5E  0859               	movf	??_ADC_CH1+1,w
  8910  1E5F  00F1               	movwf	___xxtofl@val+1
  8911  1E60  0858               	movf	??_ADC_CH1,w
  8912  1E61  00F0               	movwf	___xxtofl@val
  8913  1E62  3001               	movlw	1
  8914  1E63  160A  158A  2746  160A  158A  	fcall	___xxtofl
  8915  1E68  0873               	movf	?___xxtofl+3,w
  8916  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  8917  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  8918  1E6B  00AB               	movwf	___flmul@a+3
  8919  1E6C  0872               	movf	?___xxtofl+2,w
  8920  1E6D  00AA               	movwf	___flmul@a+2
  8921  1E6E  0871               	movf	?___xxtofl+1,w
  8922  1E6F  00A9               	movwf	___flmul@a+1
  8923  1E70  0870               	movf	?___xxtofl,w
  8924  1E71  00A8               	movwf	___flmul@a
  8925  1E72  120A  158A  249F  160A  158A  	fcall	___flmul
  8926  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  8927  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  8928  1E79  0827               	movf	?___flmul+3,w
  8929  1E7A  00C5               	movwf	___fldiv@b+3
  8930  1E7B  0826               	movf	?___flmul+2,w
  8931  1E7C  00C4               	movwf	___fldiv@b+2
  8932  1E7D  0825               	movf	?___flmul+1,w
  8933  1E7E  00C3               	movwf	___fldiv@b+1
  8934  1E7F  0824               	movf	?___flmul,w
  8935  1E80  00C2               	movwf	___fldiv@b
  8936  1E81  160A  118A  2190  160A  158A  	fcall	___fldiv
  8937  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  8938  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  8939  1E88  0841               	movf	?___fldiv+3,w
  8940  1E89  1683               	bsf	3,5	;RP0=1, select bank1
  8941  1E8A  1303               	bcf	3,6	;RP1=0, select bank1
  8942  1E8B  00CC               	movwf	(_VAL2+3)^(0+128)
  8943  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  8944  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  8945  1E8E  0840               	movf	?___fldiv+2,w
  8946  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  8947  1E90  1303               	bcf	3,6	;RP1=0, select bank1
  8948  1E91  00CB               	movwf	(_VAL2+2)^(0+128)
  8949  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  8950  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  8951  1E94  083F               	movf	?___fldiv+1,w
  8952  1E95  1683               	bsf	3,5	;RP0=1, select bank1
  8953  1E96  1303               	bcf	3,6	;RP1=0, select bank1
  8954  1E97  00CA               	movwf	(_VAL2+1)^(0+128)
  8955  1E98  1283               	bcf	3,5	;RP0=0, select bank0
  8956  1E99  1303               	bcf	3,6	;RP1=0, select bank0
  8957  1E9A  083E               	movf	?___fldiv,w
  8958  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  8959  1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  8960  1E9D  00C9               	movwf	_VAL2^(0+128)
  8961  1E9E                     l3462:
  8962                           
  8963                           ;main.c: 172:     while(ADCON0bits.GO != 0){
  8964  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  8965  1E9F  189F               	btfsc	31,1	;volatile
  8966  1EA0  2EA2               	goto	u5651
  8967  1EA1  2EA3               	goto	u5650
  8968  1EA2                     u5651:
  8969  1EA2  2E2C               	goto	l3458
  8970  1EA3                     u5650:
  8971  1EA3                     l95:
  8972  1EA3  0008               	return
  8973  1EA4                     __end_of_ADC_CH1:
  8974                           
  8975                           	psect	text29
  8976  1D01                     __ptext29:	
  8977 ;; *************** function _ADC_CH0 *****************
  8978 ;; Defined at:
  8979 ;;		line 150 in file "main.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8993 ;;      Params:         0       0       0       0       0
  8994 ;;      Locals:         0       0       0       0       0
  8995 ;;      Temps:          0       4       0       0       0
  8996 ;;      Totals:         0       4       0       0       0
  8997 ;;Total ram usage:        4 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    2
  9000 ;; This function calls:
  9001 ;;		_ADC_ch
  9002 ;;		_ADC_val
  9003 ;;		___fldiv
  9004 ;;		___flmul
  9005 ;;		___xxtofl
  9006 ;; This function is called by:
  9007 ;;		_main
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           
  9012                           ;psect for function _ADC_CH0
  9013  1D01                     _ADC_CH0:
  9014  1D01                     l3428:	
  9015                           ;incstack = 0
  9016                           ; Regs used in _ADC_CH0: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9017                           
  9018                           
  9019                           ;main.c: 151:     ADC_ch(0);
  9020  1D01  3000               	movlw	0
  9021  1D02  00F0               	movwf	ADC_ch@channel
  9022  1D03  00F1               	movwf	ADC_ch@channel+1
  9023  1D04  160A  158A  21DD  160A  158A  	fcall	_ADC_ch
  9024  1D09                     l3430:
  9025                           
  9026                           ;main.c: 153:     ADCON0bits.ADCS0 = 1;
  9027  1D09  1283               	bcf	3,5	;RP0=0, select bank0
  9028  1D0A  1303               	bcf	3,6	;RP1=0, select bank0
  9029  1D0B  171F               	bsf	31,6	;volatile
  9030  1D0C                     l3432:
  9031                           
  9032                           ;main.c: 154:     ADCON0bits.ADCS1 = 0;
  9033  1D0C  139F               	bcf	31,7	;volatile
  9034  1D0D                     l3434:
  9035                           
  9036                           ;main.c: 155:     ADCON0bits.ADON = 1;
  9037  1D0D  141F               	bsf	31,0	;volatile
  9038  1D0E                     l3436:
  9039                           
  9040                           ;main.c: 156:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9041  1D0E  3019               	movlw	25
  9042  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  9043  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  9044  1D11  00D8               	movwf	??_ADC_CH0
  9045  1D12                     u6197:
  9046  1D12  0BD8               	decfsz	??_ADC_CH0,f
  9047  1D13  2D12               	goto	u6197
  9048  1D14  2D15               	nop2
  9049  1D15                     l3438:
  9050                           
  9051                           ;main.c: 157:     ADCON0bits.GO = 1;
  9052  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  9053  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  9054  1D17  149F               	bsf	31,1	;volatile
  9055                           
  9056                           ;main.c: 158:     while(ADCON0bits.GO != 0){
  9057  1D18  2D83               	goto	l3444
  9058  1D19                     l3440:
  9059                           
  9060                           ;main.c: 159:         ADC_res1 = ADC_val(ADRESL, ADRESH);
  9061  1D19  081E               	movf	30,w	;volatile
  9062  1D1A  00D8               	movwf	??_ADC_CH0
  9063  1D1B  0858               	movf	??_ADC_CH0,w
  9064  1D1C  00F0               	movwf	ADC_val@ADRES_H
  9065  1D1D  1683               	bsf	3,5	;RP0=1, select bank1
  9066  1D1E  1303               	bcf	3,6	;RP1=0, select bank1
  9067  1D1F  081E               	movf	30,w	;volatile
  9068  1D20  160A  158A  216F  160A  158A  	fcall	_ADC_val
  9069  1D25  1283               	bcf	3,5	;RP0=0, select bank0
  9070  1D26  1303               	bcf	3,6	;RP1=0, select bank0
  9071  1D27  00D9               	movwf	??_ADC_CH0+1
  9072  1D28  0859               	movf	??_ADC_CH0+1,w
  9073  1D29  00EF               	movwf	_ADC_res1
  9074  1D2A                     l3442:
  9075                           
  9076                           ;main.c: 160:         VAL1 = ((ADC_res1 * 5.0)/255);
  9077  1D2A  3043               	movlw	67
  9078  1D2B  00C1               	movwf	___fldiv@a+3
  9079  1D2C  307F               	movlw	127
  9080  1D2D  00C0               	movwf	___fldiv@a+2
  9081  1D2E  3000               	movlw	0
  9082  1D2F  00BF               	movwf	___fldiv@a+1
  9083  1D30  3000               	movlw	0
  9084  1D31  00BE               	movwf	___fldiv@a
  9085  1D32  3040               	movlw	64
  9086  1D33  00A7               	movwf	___flmul@b+3
  9087  1D34  30A0               	movlw	160
  9088  1D35  00A6               	movwf	___flmul@b+2
  9089  1D36  3000               	movlw	0
  9090  1D37  00A5               	movwf	___flmul@b+1
  9091  1D38  3000               	movlw	0
  9092  1D39  00A4               	movwf	___flmul@b
  9093  1D3A  086F               	movf	_ADC_res1,w
  9094  1D3B  00D8               	movwf	??_ADC_CH0
  9095  1D3C  01D9               	clrf	??_ADC_CH0+1
  9096  1D3D  01DA               	clrf	??_ADC_CH0+2
  9097  1D3E  01DB               	clrf	??_ADC_CH0+3
  9098  1D3F  085B               	movf	??_ADC_CH0+3,w
  9099  1D40  00F3               	movwf	___xxtofl@val+3
  9100  1D41  085A               	movf	??_ADC_CH0+2,w
  9101  1D42  00F2               	movwf	___xxtofl@val+2
  9102  1D43  0859               	movf	??_ADC_CH0+1,w
  9103  1D44  00F1               	movwf	___xxtofl@val+1
  9104  1D45  0858               	movf	??_ADC_CH0,w
  9105  1D46  00F0               	movwf	___xxtofl@val
  9106  1D47  3001               	movlw	1
  9107  1D48  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9108  1D4D  0873               	movf	?___xxtofl+3,w
  9109  1D4E  1283               	bcf	3,5	;RP0=0, select bank0
  9110  1D4F  1303               	bcf	3,6	;RP1=0, select bank0
  9111  1D50  00AB               	movwf	___flmul@a+3
  9112  1D51  0872               	movf	?___xxtofl+2,w
  9113  1D52  00AA               	movwf	___flmul@a+2
  9114  1D53  0871               	movf	?___xxtofl+1,w
  9115  1D54  00A9               	movwf	___flmul@a+1
  9116  1D55  0870               	movf	?___xxtofl,w
  9117  1D56  00A8               	movwf	___flmul@a
  9118  1D57  120A  158A  249F  160A  158A  	fcall	___flmul
  9119  1D5C  1283               	bcf	3,5	;RP0=0, select bank0
  9120  1D5D  1303               	bcf	3,6	;RP1=0, select bank0
  9121  1D5E  0827               	movf	?___flmul+3,w
  9122  1D5F  00C5               	movwf	___fldiv@b+3
  9123  1D60  0826               	movf	?___flmul+2,w
  9124  1D61  00C4               	movwf	___fldiv@b+2
  9125  1D62  0825               	movf	?___flmul+1,w
  9126  1D63  00C3               	movwf	___fldiv@b+1
  9127  1D64  0824               	movf	?___flmul,w
  9128  1D65  00C2               	movwf	___fldiv@b
  9129  1D66  160A  118A  2190  160A  158A  	fcall	___fldiv
  9130  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
  9131  1D6C  1303               	bcf	3,6	;RP1=0, select bank0
  9132  1D6D  0841               	movf	?___fldiv+3,w
  9133  1D6E  1683               	bsf	3,5	;RP0=1, select bank1
  9134  1D6F  1303               	bcf	3,6	;RP1=0, select bank1
  9135  1D70  00D0               	movwf	(_VAL1+3)^(0+128)
  9136  1D71  1283               	bcf	3,5	;RP0=0, select bank0
  9137  1D72  1303               	bcf	3,6	;RP1=0, select bank0
  9138  1D73  0840               	movf	?___fldiv+2,w
  9139  1D74  1683               	bsf	3,5	;RP0=1, select bank1
  9140  1D75  1303               	bcf	3,6	;RP1=0, select bank1
  9141  1D76  00CF               	movwf	(_VAL1+2)^(0+128)
  9142  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  9143  1D78  1303               	bcf	3,6	;RP1=0, select bank0
  9144  1D79  083F               	movf	?___fldiv+1,w
  9145  1D7A  1683               	bsf	3,5	;RP0=1, select bank1
  9146  1D7B  1303               	bcf	3,6	;RP1=0, select bank1
  9147  1D7C  00CE               	movwf	(_VAL1+1)^(0+128)
  9148  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  9149  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  9150  1D7F  083E               	movf	?___fldiv,w
  9151  1D80  1683               	bsf	3,5	;RP0=1, select bank1
  9152  1D81  1303               	bcf	3,6	;RP1=0, select bank1
  9153  1D82  00CD               	movwf	_VAL1^(0+128)
  9154  1D83                     l3444:
  9155                           
  9156                           ;main.c: 158:     while(ADCON0bits.GO != 0){
  9157  1D83  1283               	bcf	3,5	;RP0=0, select bank0
  9158  1D84  189F               	btfsc	31,1	;volatile
  9159  1D85  2D87               	goto	u5641
  9160  1D86  2D88               	goto	u5640
  9161  1D87                     u5641:
  9162  1D87  2D19               	goto	l3440
  9163  1D88                     u5640:
  9164  1D88                     l89:
  9165  1D88  0008               	return
  9166  1D89                     __end_of_ADC_CH0:
  9167                           
  9168                           	psect	text30
  9169  1F46                     __ptext30:	
  9170 ;; *************** function ___xxtofl *****************
  9171 ;; Defined at:
  9172 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  sign            1    wreg     unsigned char 
  9175 ;;  val             4    0[COMMON] long 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  sign            1    8[COMMON] unsigned char 
  9178 ;;  arg             4   10[COMMON] unsigned long 
  9179 ;;  exp             1    9[COMMON] unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  4    0[COMMON] unsigned char 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9189 ;;      Params:         4       0       0       0       0
  9190 ;;      Locals:         6       0       0       0       0
  9191 ;;      Temps:          4       0       0       0       0
  9192 ;;      Totals:        14       0       0       0       0
  9193 ;;Total ram usage:       14 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_ADC_CH0
  9199 ;;		_ADC_CH1
  9200 ;;		_sprintf
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function ___xxtofl
  9206  1F46                     ___xxtofl:
  9207                           
  9208                           ;incstack = 0
  9209                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9210                           ;___xxtofl@sign stored from wreg
  9211  1F46  00F8               	movwf	___xxtofl@sign
  9212  1F47                     l3342:
  9213  1F47  0878               	movf	___xxtofl@sign,w
  9214  1F48  1903               	btfsc	3,2
  9215  1F49  2F4B               	goto	u5451
  9216  1F4A  2F4C               	goto	u5450
  9217  1F4B                     u5451:
  9218  1F4B  2F60               	goto	l3348
  9219  1F4C                     u5450:
  9220  1F4C                     l3344:
  9221  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9222  1F4D  2F4F               	goto	u5461
  9223  1F4E  2F50               	goto	u5460
  9224  1F4F                     u5461:
  9225  1F4F  2F60               	goto	l3348
  9226  1F50                     u5460:
  9227  1F50                     l3346:
  9228  1F50  0970               	comf	___xxtofl@val,w
  9229  1F51  00FA               	movwf	___xxtofl@arg
  9230  1F52  0971               	comf	___xxtofl@val+1,w
  9231  1F53  00FB               	movwf	___xxtofl@arg+1
  9232  1F54  0972               	comf	___xxtofl@val+2,w
  9233  1F55  00FC               	movwf	___xxtofl@arg+2
  9234  1F56  0973               	comf	___xxtofl@val+3,w
  9235  1F57  00FD               	movwf	___xxtofl@arg+3
  9236  1F58  0AFA               	incf	___xxtofl@arg,f
  9237  1F59  1903               	skipnz
  9238  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9239  1F5B  1903               	skipnz
  9240  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9241  1F5D  1903               	skipnz
  9242  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9243  1F5F  2F68               	goto	l820
  9244  1F60                     l3348:
  9245  1F60  0873               	movf	___xxtofl@val+3,w
  9246  1F61  00FD               	movwf	___xxtofl@arg+3
  9247  1F62  0872               	movf	___xxtofl@val+2,w
  9248  1F63  00FC               	movwf	___xxtofl@arg+2
  9249  1F64  0871               	movf	___xxtofl@val+1,w
  9250  1F65  00FB               	movwf	___xxtofl@arg+1
  9251  1F66  0870               	movf	___xxtofl@val,w
  9252  1F67  00FA               	movwf	___xxtofl@arg
  9253  1F68                     l820:
  9254  1F68  0873               	movf	___xxtofl@val+3,w
  9255  1F69  0472               	iorwf	___xxtofl@val+2,w
  9256  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9257  1F6B  0470               	iorwf	___xxtofl@val,w
  9258  1F6C  1D03               	skipz
  9259  1F6D  2F6F               	goto	u5471
  9260  1F6E  2F70               	goto	u5470
  9261  1F6F                     u5471:
  9262  1F6F  2F79               	goto	l3354
  9263  1F70                     u5470:
  9264  1F70                     l3350:
  9265  1F70  3000               	movlw	0
  9266  1F71  00F3               	movwf	?___xxtofl+3
  9267  1F72  3000               	movlw	0
  9268  1F73  00F2               	movwf	?___xxtofl+2
  9269  1F74  3000               	movlw	0
  9270  1F75  00F1               	movwf	?___xxtofl+1
  9271  1F76  3000               	movlw	0
  9272  1F77  00F0               	movwf	?___xxtofl
  9273  1F78  2FFF               	goto	l822
  9274  1F79                     l3354:
  9275  1F79  3096               	movlw	150
  9276  1F7A  00F4               	movwf	??___xxtofl
  9277  1F7B  0874               	movf	??___xxtofl,w
  9278  1F7C  00F9               	movwf	___xxtofl@exp
  9279  1F7D  2F8B               	goto	l3358
  9280  1F7E                     l3356:
  9281  1F7E  3001               	movlw	1
  9282  1F7F  00F4               	movwf	??___xxtofl
  9283  1F80  0874               	movf	??___xxtofl,w
  9284  1F81  07F9               	addwf	___xxtofl@exp,f
  9285  1F82  3001               	movlw	1
  9286  1F83                     u5485:
  9287  1F83  1003               	clrc
  9288  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9289  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9290  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9291  1F87  0CFA               	rrf	___xxtofl@arg,f
  9292  1F88  3EFF               	addlw	-1
  9293  1F89  1D03               	skipz
  9294  1F8A  2F83               	goto	u5485
  9295  1F8B                     l3358:
  9296  1F8B  30FE               	movlw	254
  9297  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9298  1F8D  1D03               	btfss	3,2
  9299  1F8E  2F90               	goto	u5491
  9300  1F8F  2F91               	goto	u5490
  9301  1F90                     u5491:
  9302  1F90  2F7E               	goto	l3356
  9303  1F91                     u5490:
  9304  1F91  2FAD               	goto	l826
  9305  1F92                     l3360:
  9306  1F92  3001               	movlw	1
  9307  1F93  00F4               	movwf	??___xxtofl
  9308  1F94  0874               	movf	??___xxtofl,w
  9309  1F95  07F9               	addwf	___xxtofl@exp,f
  9310  1F96                     l3362:
  9311  1F96  3001               	movlw	1
  9312  1F97  07FA               	addwf	___xxtofl@arg,f
  9313  1F98  3000               	movlw	0
  9314  1F99  1803               	skipnc
  9315  1F9A  3001               	movlw	1
  9316  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9317  1F9C  3000               	movlw	0
  9318  1F9D  1803               	skipnc
  9319  1F9E  3001               	movlw	1
  9320  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9321  1FA0  3000               	movlw	0
  9322  1FA1  1803               	skipnc
  9323  1FA2  3001               	movlw	1
  9324  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9325  1FA4                     l3364:
  9326  1FA4  3001               	movlw	1
  9327  1FA5                     u5505:
  9328  1FA5  1003               	clrc
  9329  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9330  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9331  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9332  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9333  1FAA  3EFF               	addlw	-1
  9334  1FAB  1D03               	skipz
  9335  1FAC  2FA5               	goto	u5505
  9336  1FAD                     l826:
  9337  1FAD  30FF               	movlw	255
  9338  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9339  1FAF  1D03               	btfss	3,2
  9340  1FB0  2FB2               	goto	u5511
  9341  1FB1  2FB3               	goto	u5510
  9342  1FB2                     u5511:
  9343  1FB2  2F92               	goto	l3360
  9344  1FB3                     u5510:
  9345  1FB3  2FBF               	goto	l3368
  9346  1FB4                     l3366:
  9347  1FB4  3001               	movlw	1
  9348  1FB5  02F9               	subwf	___xxtofl@exp,f
  9349  1FB6  3001               	movlw	1
  9350  1FB7  00F4               	movwf	??___xxtofl
  9351  1FB8                     u5525:
  9352  1FB8  1003               	clrc
  9353  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9354  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9355  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9356  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9357  1FBD  0BF4               	decfsz	??___xxtofl,f
  9358  1FBE  2FB8               	goto	u5525
  9359  1FBF                     l3368:
  9360  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9361  1FC0  2FC2               	goto	u5531
  9362  1FC1  2FC3               	goto	u5530
  9363  1FC2                     u5531:
  9364  1FC2  2FC9               	goto	l833
  9365  1FC3                     u5530:
  9366  1FC3                     l3370:
  9367  1FC3  3002               	movlw	2
  9368  1FC4  0279               	subwf	___xxtofl@exp,w
  9369  1FC5  1803               	skipnc
  9370  1FC6  2FC8               	goto	u5541
  9371  1FC7  2FC9               	goto	u5540
  9372  1FC8                     u5541:
  9373  1FC8  2FB4               	goto	l3366
  9374  1FC9                     u5540:
  9375  1FC9                     l833:
  9376  1FC9  1879               	btfsc	___xxtofl@exp,0
  9377  1FCA  2FCC               	goto	u5551
  9378  1FCB  2FCD               	goto	u5550
  9379  1FCC                     u5551:
  9380  1FCC  2FD5               	goto	l834
  9381  1FCD                     u5550:
  9382  1FCD                     l3372:
  9383  1FCD  30FF               	movlw	255
  9384  1FCE  05FA               	andwf	___xxtofl@arg,f
  9385  1FCF  30FF               	movlw	255
  9386  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9387  1FD1  307F               	movlw	127
  9388  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9389  1FD3  30FF               	movlw	255
  9390  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9391  1FD5                     l834:
  9392  1FD5  1003               	clrc
  9393  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9394  1FD7                     l3374:
  9395  1FD7  0879               	movf	___xxtofl@exp,w
  9396  1FD8  00F4               	movwf	??___xxtofl
  9397  1FD9  01F5               	clrf	??___xxtofl+1
  9398  1FDA  01F6               	clrf	??___xxtofl+2
  9399  1FDB  01F7               	clrf	??___xxtofl+3
  9400  1FDC  3018               	movlw	24
  9401  1FDD                     u5565:
  9402  1FDD  1003               	clrc
  9403  1FDE  0DF4               	rlf	??___xxtofl,f
  9404  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9405  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9406  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9407  1FE2                     u5560:
  9408  1FE2  3EFF               	addlw	-1
  9409  1FE3  1D03               	skipz
  9410  1FE4  2FDD               	goto	u5565
  9411  1FE5  0874               	movf	??___xxtofl,w
  9412  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9413  1FE7  0875               	movf	??___xxtofl+1,w
  9414  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9415  1FE9  0876               	movf	??___xxtofl+2,w
  9416  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9417  1FEB  0877               	movf	??___xxtofl+3,w
  9418  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9419  1FED                     l3376:
  9420  1FED  0878               	movf	___xxtofl@sign,w
  9421  1FEE  1903               	btfsc	3,2
  9422  1FEF  2FF1               	goto	u5571
  9423  1FF0  2FF2               	goto	u5570
  9424  1FF1                     u5571:
  9425  1FF1  2FF7               	goto	l3382
  9426  1FF2                     u5570:
  9427  1FF2                     l3378:
  9428  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9429  1FF3  2FF5               	goto	u5581
  9430  1FF4  2FF6               	goto	u5580
  9431  1FF5                     u5581:
  9432  1FF5  2FF7               	goto	l3382
  9433  1FF6                     u5580:
  9434  1FF6                     l3380:
  9435  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9436  1FF7                     l3382:
  9437  1FF7  087D               	movf	___xxtofl@arg+3,w
  9438  1FF8  00F3               	movwf	?___xxtofl+3
  9439  1FF9  087C               	movf	___xxtofl@arg+2,w
  9440  1FFA  00F2               	movwf	?___xxtofl+2
  9441  1FFB  087B               	movf	___xxtofl@arg+1,w
  9442  1FFC  00F1               	movwf	?___xxtofl+1
  9443  1FFD  087A               	movf	___xxtofl@arg,w
  9444  1FFE  00F0               	movwf	?___xxtofl
  9445  1FFF                     l822:
  9446  1FFF  0008               	return
  9447  2000                     __end_of___xxtofl:
  9448                           
  9449                           	psect	text31
  9450  0C9F                     __ptext31:	
  9451 ;; *************** function ___flmul *****************
  9452 ;; Defined at:
  9453 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  b               4    4[BANK0 ] unsigned char 
  9456 ;;  a               4    8[BANK0 ] unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  prod            4   24[BANK0 ] struct .
  9459 ;;  grs             4   18[BANK0 ] unsigned long 
  9460 ;;  temp            2   28[BANK0 ] struct .
  9461 ;;  bexp            1   23[BANK0 ] unsigned char 
  9462 ;;  aexp            1   22[BANK0 ] unsigned char 
  9463 ;;  sign            1   17[BANK0 ] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  4    4[BANK0 ] unsigned char 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9473 ;;      Params:         0       8       0       0       0
  9474 ;;      Locals:         0      13       0       0       0
  9475 ;;      Temps:          0       5       0       0       0
  9476 ;;      Totals:         0      26       0       0       0
  9477 ;;Total ram usage:       26 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    1
  9480 ;; This function calls:
  9481 ;;		__Umul8_16
  9482 ;; This function is called by:
  9483 ;;		_ADC_CH0
  9484 ;;		_ADC_CH1
  9485 ;;		_fround
  9486 ;;		_scale
  9487 ;;		_sprintf
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           
  9492                           ;psect for function ___flmul
  9493  0C9F                     ___flmul:
  9494  0C9F                     l2712:	
  9495                           ;incstack = 0
  9496                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9497                           
  9498  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9499  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9500  0CA1  0827               	movf	___flmul@b+3,w
  9501  0CA2  3980               	andlw	128
  9502  0CA3  00AC               	movwf	??___flmul
  9503  0CA4  082C               	movf	??___flmul,w
  9504  0CA5  00B1               	movwf	___flmul@sign
  9505  0CA6                     l2714:
  9506  0CA6  0827               	movf	___flmul@b+3,w
  9507  0CA7  00AC               	movwf	??___flmul
  9508  0CA8  072C               	addwf	??___flmul,w
  9509  0CA9  00AD               	movwf	??___flmul+1
  9510  0CAA  082D               	movf	??___flmul+1,w
  9511  0CAB  00B7               	movwf	___flmul@bexp
  9512  0CAC                     l2716:
  9513  0CAC  1FA6               	btfss	___flmul@b+2,7
  9514  0CAD  2CAF               	goto	u3881
  9515  0CAE  2CB0               	goto	u3880
  9516  0CAF                     u3881:
  9517  0CAF  2CB1               	goto	l2720
  9518  0CB0                     u3880:
  9519  0CB0                     l2718:
  9520  0CB0  1437               	bsf	___flmul@bexp,0
  9521  0CB1                     l2720:
  9522  0CB1  0837               	movf	___flmul@bexp,w
  9523  0CB2  1903               	btfsc	3,2
  9524  0CB3  2CB5               	goto	u3891
  9525  0CB4  2CB6               	goto	u3890
  9526  0CB5                     u3891:
  9527  0CB5  2CC5               	goto	l2728
  9528  0CB6                     u3890:
  9529  0CB6                     l2722:
  9530  0CB6  0A37               	incf	___flmul@bexp,w
  9531  0CB7  1D03               	btfss	3,2
  9532  0CB8  2CBA               	goto	u3901
  9533  0CB9  2CBB               	goto	u3900
  9534  0CBA                     u3901:
  9535  0CBA  2CC3               	goto	l2726
  9536  0CBB                     u3900:
  9537  0CBB                     l2724:
  9538  0CBB  3000               	movlw	0
  9539  0CBC  00A7               	movwf	___flmul@b+3
  9540  0CBD  3000               	movlw	0
  9541  0CBE  00A6               	movwf	___flmul@b+2
  9542  0CBF  3000               	movlw	0
  9543  0CC0  00A5               	movwf	___flmul@b+1
  9544  0CC1  3000               	movlw	0
  9545  0CC2  00A4               	movwf	___flmul@b
  9546  0CC3                     l2726:
  9547  0CC3  17A6               	bsf	___flmul@b+2,7
  9548  0CC4  2CCD               	goto	l2730
  9549  0CC5                     l2728:
  9550  0CC5  3000               	movlw	0
  9551  0CC6  00A7               	movwf	___flmul@b+3
  9552  0CC7  3000               	movlw	0
  9553  0CC8  00A6               	movwf	___flmul@b+2
  9554  0CC9  3000               	movlw	0
  9555  0CCA  00A5               	movwf	___flmul@b+1
  9556  0CCB  3000               	movlw	0
  9557  0CCC  00A4               	movwf	___flmul@b
  9558  0CCD                     l2730:
  9559  0CCD  082B               	movf	___flmul@a+3,w
  9560  0CCE  3980               	andlw	128
  9561  0CCF  00AC               	movwf	??___flmul
  9562  0CD0  082C               	movf	??___flmul,w
  9563  0CD1  06B1               	xorwf	___flmul@sign,f
  9564  0CD2                     l2732:
  9565  0CD2  082B               	movf	___flmul@a+3,w
  9566  0CD3  00AC               	movwf	??___flmul
  9567  0CD4  072C               	addwf	??___flmul,w
  9568  0CD5  00AD               	movwf	??___flmul+1
  9569  0CD6  082D               	movf	??___flmul+1,w
  9570  0CD7  00B6               	movwf	___flmul@aexp
  9571  0CD8                     l2734:
  9572  0CD8  1FAA               	btfss	___flmul@a+2,7
  9573  0CD9  2CDB               	goto	u3911
  9574  0CDA  2CDC               	goto	u3910
  9575  0CDB                     u3911:
  9576  0CDB  2CDD               	goto	l2738
  9577  0CDC                     u3910:
  9578  0CDC                     l2736:
  9579  0CDC  1436               	bsf	___flmul@aexp,0
  9580  0CDD                     l2738:
  9581  0CDD  0836               	movf	___flmul@aexp,w
  9582  0CDE  1903               	btfsc	3,2
  9583  0CDF  2CE1               	goto	u3921
  9584  0CE0  2CE2               	goto	u3920
  9585  0CE1                     u3921:
  9586  0CE1  2CF1               	goto	l2746
  9587  0CE2                     u3920:
  9588  0CE2                     l2740:
  9589  0CE2  0A36               	incf	___flmul@aexp,w
  9590  0CE3  1D03               	btfss	3,2
  9591  0CE4  2CE6               	goto	u3931
  9592  0CE5  2CE7               	goto	u3930
  9593  0CE6                     u3931:
  9594  0CE6  2CEF               	goto	l2744
  9595  0CE7                     u3930:
  9596  0CE7                     l2742:
  9597  0CE7  3000               	movlw	0
  9598  0CE8  00AB               	movwf	___flmul@a+3
  9599  0CE9  3000               	movlw	0
  9600  0CEA  00AA               	movwf	___flmul@a+2
  9601  0CEB  3000               	movlw	0
  9602  0CEC  00A9               	movwf	___flmul@a+1
  9603  0CED  3000               	movlw	0
  9604  0CEE  00A8               	movwf	___flmul@a
  9605  0CEF                     l2744:
  9606  0CEF  17AA               	bsf	___flmul@a+2,7
  9607  0CF0  2CF9               	goto	l2748
  9608  0CF1                     l2746:
  9609  0CF1  3000               	movlw	0
  9610  0CF2  00AB               	movwf	___flmul@a+3
  9611  0CF3  3000               	movlw	0
  9612  0CF4  00AA               	movwf	___flmul@a+2
  9613  0CF5  3000               	movlw	0
  9614  0CF6  00A9               	movwf	___flmul@a+1
  9615  0CF7  3000               	movlw	0
  9616  0CF8  00A8               	movwf	___flmul@a
  9617  0CF9                     l2748:
  9618  0CF9  0836               	movf	___flmul@aexp,w
  9619  0CFA  1903               	btfsc	3,2
  9620  0CFB  2CFD               	goto	u3941
  9621  0CFC  2CFE               	goto	u3940
  9622  0CFD                     u3941:
  9623  0CFD  2D03               	goto	l2752
  9624  0CFE                     u3940:
  9625  0CFE                     l2750:
  9626  0CFE  0837               	movf	___flmul@bexp,w
  9627  0CFF  1D03               	btfss	3,2
  9628  0D00  2D02               	goto	u3951
  9629  0D01  2D03               	goto	u3950
  9630  0D02                     u3951:
  9631  0D02  2D0C               	goto	l2756
  9632  0D03                     u3950:
  9633  0D03                     l2752:
  9634  0D03  3000               	movlw	0
  9635  0D04  00A7               	movwf	?___flmul+3
  9636  0D05  3000               	movlw	0
  9637  0D06  00A6               	movwf	?___flmul+2
  9638  0D07  3000               	movlw	0
  9639  0D08  00A5               	movwf	?___flmul+1
  9640  0D09  3000               	movlw	0
  9641  0D0A  00A4               	movwf	?___flmul
  9642  0D0B  2FFF               	goto	l776
  9643  0D0C                     l2756:
  9644  0D0C  0824               	movf	___flmul@b,w
  9645  0D0D  00AC               	movwf	??___flmul
  9646  0D0E  082C               	movf	??___flmul,w
  9647  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  9648  0D10  082A               	movf	___flmul@a+2,w
  9649  0D11  160A  158A  226E  120A  158A  	fcall	__Umul8_16
  9650  0D16  0871               	movf	?__Umul8_16+1,w
  9651  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9652  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9653  0D19  00BD               	movwf	___flmul@temp+1
  9654  0D1A  0870               	movf	?__Umul8_16,w
  9655  0D1B  00BC               	movwf	___flmul@temp
  9656  0D1C                     l2758:
  9657  0D1C  083C               	movf	___flmul@temp,w
  9658  0D1D  00AC               	movwf	??___flmul
  9659  0D1E  01AD               	clrf	??___flmul+1
  9660  0D1F  01AE               	clrf	??___flmul+2
  9661  0D20  01AF               	clrf	??___flmul+3
  9662  0D21  082F               	movf	??___flmul+3,w
  9663  0D22  00B5               	movwf	___flmul@grs+3
  9664  0D23  082E               	movf	??___flmul+2,w
  9665  0D24  00B4               	movwf	___flmul@grs+2
  9666  0D25  082D               	movf	??___flmul+1,w
  9667  0D26  00B3               	movwf	___flmul@grs+1
  9668  0D27  082C               	movf	??___flmul,w
  9669  0D28  00B2               	movwf	___flmul@grs
  9670  0D29                     l2760:
  9671  0D29  083D               	movf	___flmul@temp+1,w
  9672  0D2A  00AC               	movwf	??___flmul
  9673  0D2B  01AD               	clrf	??___flmul+1
  9674  0D2C  01AE               	clrf	??___flmul+2
  9675  0D2D  01AF               	clrf	??___flmul+3
  9676  0D2E  082F               	movf	??___flmul+3,w
  9677  0D2F  00BB               	movwf	___flmul@prod+3
  9678  0D30  082E               	movf	??___flmul+2,w
  9679  0D31  00BA               	movwf	___flmul@prod+2
  9680  0D32  082D               	movf	??___flmul+1,w
  9681  0D33  00B9               	movwf	___flmul@prod+1
  9682  0D34  082C               	movf	??___flmul,w
  9683  0D35  00B8               	movwf	___flmul@prod
  9684  0D36  0825               	movf	___flmul@b+1,w
  9685  0D37  00AC               	movwf	??___flmul
  9686  0D38  082C               	movf	??___flmul,w
  9687  0D39  00F0               	movwf	__Umul8_16@multiplicand
  9688  0D3A  0829               	movf	___flmul@a+1,w
  9689  0D3B  160A  158A  226E  120A  158A  	fcall	__Umul8_16
  9690  0D40  0871               	movf	?__Umul8_16+1,w
  9691  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  9692  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  9693  0D43  00BD               	movwf	___flmul@temp+1
  9694  0D44  0870               	movf	?__Umul8_16,w
  9695  0D45  00BC               	movwf	___flmul@temp
  9696  0D46                     l2762:
  9697  0D46  083C               	movf	___flmul@temp,w
  9698  0D47  00AC               	movwf	??___flmul
  9699  0D48  01AD               	clrf	??___flmul+1
  9700  0D49  01AE               	clrf	??___flmul+2
  9701  0D4A  01AF               	clrf	??___flmul+3
  9702  0D4B  082C               	movf	??___flmul,w
  9703  0D4C  07B2               	addwf	___flmul@grs,f
  9704  0D4D  082D               	movf	??___flmul+1,w
  9705  0D4E  1103               	clrz
  9706  0D4F  1803               	skipnc
  9707  0D50  3E01               	addlw	1
  9708  0D51  1903               	skipnz
  9709  0D52  2D54               	goto	u3961
  9710  0D53  07B3               	addwf	___flmul@grs+1,f
  9711  0D54                     u3961:
  9712  0D54  082E               	movf	??___flmul+2,w
  9713  0D55  1103               	clrz
  9714  0D56  1803               	skipnc
  9715  0D57  3E01               	addlw	1
  9716  0D58  1903               	skipnz
  9717  0D59  2D5B               	goto	u3962
  9718  0D5A  07B4               	addwf	___flmul@grs+2,f
  9719  0D5B                     u3962:
  9720  0D5B  082F               	movf	??___flmul+3,w
  9721  0D5C  1103               	clrz
  9722  0D5D  1803               	skipnc
  9723  0D5E  3E01               	addlw	1
  9724  0D5F  1903               	skipnz
  9725  0D60  2D62               	goto	u3963
  9726  0D61  07B5               	addwf	___flmul@grs+3,f
  9727  0D62                     u3963:
  9728  0D62                     l2764:
  9729  0D62  083D               	movf	___flmul@temp+1,w
  9730  0D63  00AC               	movwf	??___flmul
  9731  0D64  01AD               	clrf	??___flmul+1
  9732  0D65  01AE               	clrf	??___flmul+2
  9733  0D66  01AF               	clrf	??___flmul+3
  9734  0D67  082C               	movf	??___flmul,w
  9735  0D68  07B8               	addwf	___flmul@prod,f
  9736  0D69  082D               	movf	??___flmul+1,w
  9737  0D6A  1103               	clrz
  9738  0D6B  1803               	skipnc
  9739  0D6C  3E01               	addlw	1
  9740  0D6D  1903               	skipnz
  9741  0D6E  2D70               	goto	u3971
  9742  0D6F  07B9               	addwf	___flmul@prod+1,f
  9743  0D70                     u3971:
  9744  0D70  082E               	movf	??___flmul+2,w
  9745  0D71  1103               	clrz
  9746  0D72  1803               	skipnc
  9747  0D73  3E01               	addlw	1
  9748  0D74  1903               	skipnz
  9749  0D75  2D77               	goto	u3972
  9750  0D76  07BA               	addwf	___flmul@prod+2,f
  9751  0D77                     u3972:
  9752  0D77  082F               	movf	??___flmul+3,w
  9753  0D78  1103               	clrz
  9754  0D79  1803               	skipnc
  9755  0D7A  3E01               	addlw	1
  9756  0D7B  1903               	skipnz
  9757  0D7C  2D7E               	goto	u3973
  9758  0D7D  07BB               	addwf	___flmul@prod+3,f
  9759  0D7E                     u3973:
  9760  0D7E  0826               	movf	___flmul@b+2,w
  9761  0D7F  00AC               	movwf	??___flmul
  9762  0D80  082C               	movf	??___flmul,w
  9763  0D81  00F0               	movwf	__Umul8_16@multiplicand
  9764  0D82  0828               	movf	___flmul@a,w
  9765  0D83  160A  158A  226E  120A  158A  	fcall	__Umul8_16
  9766  0D88  0871               	movf	?__Umul8_16+1,w
  9767  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  9768  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  9769  0D8B  00BD               	movwf	___flmul@temp+1
  9770  0D8C  0870               	movf	?__Umul8_16,w
  9771  0D8D  00BC               	movwf	___flmul@temp
  9772  0D8E                     l2766:
  9773  0D8E  083C               	movf	___flmul@temp,w
  9774  0D8F  00AC               	movwf	??___flmul
  9775  0D90  01AD               	clrf	??___flmul+1
  9776  0D91  01AE               	clrf	??___flmul+2
  9777  0D92  01AF               	clrf	??___flmul+3
  9778  0D93  082C               	movf	??___flmul,w
  9779  0D94  07B2               	addwf	___flmul@grs,f
  9780  0D95  082D               	movf	??___flmul+1,w
  9781  0D96  1103               	clrz
  9782  0D97  1803               	skipnc
  9783  0D98  3E01               	addlw	1
  9784  0D99  1903               	skipnz
  9785  0D9A  2D9C               	goto	u3981
  9786  0D9B  07B3               	addwf	___flmul@grs+1,f
  9787  0D9C                     u3981:
  9788  0D9C  082E               	movf	??___flmul+2,w
  9789  0D9D  1103               	clrz
  9790  0D9E  1803               	skipnc
  9791  0D9F  3E01               	addlw	1
  9792  0DA0  1903               	skipnz
  9793  0DA1  2DA3               	goto	u3982
  9794  0DA2  07B4               	addwf	___flmul@grs+2,f
  9795  0DA3                     u3982:
  9796  0DA3  082F               	movf	??___flmul+3,w
  9797  0DA4  1103               	clrz
  9798  0DA5  1803               	skipnc
  9799  0DA6  3E01               	addlw	1
  9800  0DA7  1903               	skipnz
  9801  0DA8  2DAA               	goto	u3983
  9802  0DA9  07B5               	addwf	___flmul@grs+3,f
  9803  0DAA                     u3983:
  9804  0DAA                     l2768:
  9805  0DAA  083D               	movf	___flmul@temp+1,w
  9806  0DAB  00AC               	movwf	??___flmul
  9807  0DAC  01AD               	clrf	??___flmul+1
  9808  0DAD  01AE               	clrf	??___flmul+2
  9809  0DAE  01AF               	clrf	??___flmul+3
  9810  0DAF  082C               	movf	??___flmul,w
  9811  0DB0  07B8               	addwf	___flmul@prod,f
  9812  0DB1  082D               	movf	??___flmul+1,w
  9813  0DB2  1103               	clrz
  9814  0DB3  1803               	skipnc
  9815  0DB4  3E01               	addlw	1
  9816  0DB5  1903               	skipnz
  9817  0DB6  2DB8               	goto	u3991
  9818  0DB7  07B9               	addwf	___flmul@prod+1,f
  9819  0DB8                     u3991:
  9820  0DB8  082E               	movf	??___flmul+2,w
  9821  0DB9  1103               	clrz
  9822  0DBA  1803               	skipnc
  9823  0DBB  3E01               	addlw	1
  9824  0DBC  1903               	skipnz
  9825  0DBD  2DBF               	goto	u3992
  9826  0DBE  07BA               	addwf	___flmul@prod+2,f
  9827  0DBF                     u3992:
  9828  0DBF  082F               	movf	??___flmul+3,w
  9829  0DC0  1103               	clrz
  9830  0DC1  1803               	skipnc
  9831  0DC2  3E01               	addlw	1
  9832  0DC3  1903               	skipnz
  9833  0DC4  2DC6               	goto	u3993
  9834  0DC5  07BB               	addwf	___flmul@prod+3,f
  9835  0DC6                     u3993:
  9836  0DC6                     l2770:
  9837  0DC6  3008               	movlw	8
  9838  0DC7  00AC               	movwf	??___flmul
  9839  0DC8                     u4005:
  9840  0DC8  1003               	clrc
  9841  0DC9  0DB2               	rlf	___flmul@grs,f
  9842  0DCA  0DB3               	rlf	___flmul@grs+1,f
  9843  0DCB  0DB4               	rlf	___flmul@grs+2,f
  9844  0DCC  0DB5               	rlf	___flmul@grs+3,f
  9845  0DCD  0BAC               	decfsz	??___flmul,f
  9846  0DCE  2DC8               	goto	u4005
  9847  0DCF                     l2772:
  9848  0DCF  0825               	movf	___flmul@b+1,w
  9849  0DD0  00AC               	movwf	??___flmul
  9850  0DD1  082C               	movf	??___flmul,w
  9851  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  9852  0DD3  0828               	movf	___flmul@a,w
  9853  0DD4  160A  158A  226E  120A  158A  	fcall	__Umul8_16
  9854  0DD9  0871               	movf	?__Umul8_16+1,w
  9855  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  9856  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  9857  0DDC  00BD               	movwf	___flmul@temp+1
  9858  0DDD  0870               	movf	?__Umul8_16,w
  9859  0DDE  00BC               	movwf	___flmul@temp
  9860  0DDF                     l2774:
  9861  0DDF  083C               	movf	___flmul@temp,w
  9862  0DE0  00AC               	movwf	??___flmul
  9863  0DE1  083D               	movf	___flmul@temp+1,w
  9864  0DE2  00AD               	movwf	??___flmul+1
  9865  0DE3  01AE               	clrf	??___flmul+2
  9866  0DE4  01AF               	clrf	??___flmul+3
  9867  0DE5  082C               	movf	??___flmul,w
  9868  0DE6  07B2               	addwf	___flmul@grs,f
  9869  0DE7  082D               	movf	??___flmul+1,w
  9870  0DE8  1103               	clrz
  9871  0DE9  1803               	skipnc
  9872  0DEA  3E01               	addlw	1
  9873  0DEB  1903               	skipnz
  9874  0DEC  2DEE               	goto	u4011
  9875  0DED  07B3               	addwf	___flmul@grs+1,f
  9876  0DEE                     u4011:
  9877  0DEE  082E               	movf	??___flmul+2,w
  9878  0DEF  1103               	clrz
  9879  0DF0  1803               	skipnc
  9880  0DF1  3E01               	addlw	1
  9881  0DF2  1903               	skipnz
  9882  0DF3  2DF5               	goto	u4012
  9883  0DF4  07B4               	addwf	___flmul@grs+2,f
  9884  0DF5                     u4012:
  9885  0DF5  082F               	movf	??___flmul+3,w
  9886  0DF6  1103               	clrz
  9887  0DF7  1803               	skipnc
  9888  0DF8  3E01               	addlw	1
  9889  0DF9  1903               	skipnz
  9890  0DFA  2DFC               	goto	u4013
  9891  0DFB  07B5               	addwf	___flmul@grs+3,f
  9892  0DFC                     u4013:
  9893  0DFC                     l2776:
  9894  0DFC  0824               	movf	___flmul@b,w
  9895  0DFD  00AC               	movwf	??___flmul
  9896  0DFE  082C               	movf	??___flmul,w
  9897  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  9898  0E00  0829               	movf	___flmul@a+1,w
  9899  0E01  160A  158A  226E  120A  158A  	fcall	__Umul8_16
  9900  0E06  0871               	movf	?__Umul8_16+1,w
  9901  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  9902  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  9903  0E09  00BD               	movwf	___flmul@temp+1
  9904  0E0A  0870               	movf	?__Umul8_16,w
  9905  0E0B  00BC               	movwf	___flmul@temp
  9906  0E0C                     l2778:
  9907  0E0C  083C               	movf	___flmul@temp,w
  9908  0E0D  00AC               	movwf	??___flmul
  9909  0E0E  083D               	movf	___flmul@temp+1,w
  9910  0E0F  00AD               	movwf	??___flmul+1
  9911  0E10  01AE               	clrf	??___flmul+2
  9912  0E11  01AF               	clrf	??___flmul+3
  9913  0E12  082C               	movf	??___flmul,w
  9914  0E13  07B2               	addwf	___flmul@grs,f
  9915  0E14  082D               	movf	??___flmul+1,w
  9916  0E15  1103               	clrz
  9917  0E16  1803               	skipnc
  9918  0E17  3E01               	addlw	1
  9919  0E18  1903               	skipnz
  9920  0E19  2E1B               	goto	u4021
  9921  0E1A  07B3               	addwf	___flmul@grs+1,f
  9922  0E1B                     u4021:
  9923  0E1B  082E               	movf	??___flmul+2,w
  9924  0E1C  1103               	clrz
  9925  0E1D  1803               	skipnc
  9926  0E1E  3E01               	addlw	1
  9927  0E1F  1903               	skipnz
  9928  0E20  2E22               	goto	u4022
  9929  0E21  07B4               	addwf	___flmul@grs+2,f
  9930  0E22                     u4022:
  9931  0E22  082F               	movf	??___flmul+3,w
  9932  0E23  1103               	clrz
  9933  0E24  1803               	skipnc
  9934  0E25  3E01               	addlw	1
  9935  0E26  1903               	skipnz
  9936  0E27  2E29               	goto	u4023
  9937  0E28  07B5               	addwf	___flmul@grs+3,f
  9938  0E29                     u4023:
  9939  0E29                     l2780:
  9940  0E29  3008               	movlw	8
  9941  0E2A  00AC               	movwf	??___flmul
  9942  0E2B                     u4035:
  9943  0E2B  1003               	clrc
  9944  0E2C  0DB2               	rlf	___flmul@grs,f
  9945  0E2D  0DB3               	rlf	___flmul@grs+1,f
  9946  0E2E  0DB4               	rlf	___flmul@grs+2,f
  9947  0E2F  0DB5               	rlf	___flmul@grs+3,f
  9948  0E30  0BAC               	decfsz	??___flmul,f
  9949  0E31  2E2B               	goto	u4035
  9950  0E32  0824               	movf	___flmul@b,w
  9951  0E33  00AC               	movwf	??___flmul
  9952  0E34  082C               	movf	??___flmul,w
  9953  0E35  00F0               	movwf	__Umul8_16@multiplicand
  9954  0E36  0828               	movf	___flmul@a,w
  9955  0E37  160A  158A  226E  120A  158A  	fcall	__Umul8_16
  9956  0E3C  0871               	movf	?__Umul8_16+1,w
  9957  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9958  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9959  0E3F  00BD               	movwf	___flmul@temp+1
  9960  0E40  0870               	movf	?__Umul8_16,w
  9961  0E41  00BC               	movwf	___flmul@temp
  9962  0E42                     l2782:
  9963  0E42  083C               	movf	___flmul@temp,w
  9964  0E43  00AC               	movwf	??___flmul
  9965  0E44  083D               	movf	___flmul@temp+1,w
  9966  0E45  00AD               	movwf	??___flmul+1
  9967  0E46  01AE               	clrf	??___flmul+2
  9968  0E47  01AF               	clrf	??___flmul+3
  9969  0E48  082C               	movf	??___flmul,w
  9970  0E49  07B2               	addwf	___flmul@grs,f
  9971  0E4A  082D               	movf	??___flmul+1,w
  9972  0E4B  1103               	clrz
  9973  0E4C  1803               	skipnc
  9974  0E4D  3E01               	addlw	1
  9975  0E4E  1903               	skipnz
  9976  0E4F  2E51               	goto	u4041
  9977  0E50  07B3               	addwf	___flmul@grs+1,f
  9978  0E51                     u4041:
  9979  0E51  082E               	movf	??___flmul+2,w
  9980  0E52  1103               	clrz
  9981  0E53  1803               	skipnc
  9982  0E54  3E01               	addlw	1
  9983  0E55  1903               	skipnz
  9984  0E56  2E58               	goto	u4042
  9985  0E57  07B4               	addwf	___flmul@grs+2,f
  9986  0E58                     u4042:
  9987  0E58  082F               	movf	??___flmul+3,w
  9988  0E59  1103               	clrz
  9989  0E5A  1803               	skipnc
  9990  0E5B  3E01               	addlw	1
  9991  0E5C  1903               	skipnz
  9992  0E5D  2E5F               	goto	u4043
  9993  0E5E  07B5               	addwf	___flmul@grs+3,f
  9994  0E5F                     u4043:
  9995  0E5F                     l2784:
  9996  0E5F  0825               	movf	___flmul@b+1,w
  9997  0E60  00AC               	movwf	??___flmul
  9998  0E61  082C               	movf	??___flmul,w
  9999  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10000  0E63  082A               	movf	___flmul@a+2,w
 10001  0E64  160A  158A  226E  120A  158A  	fcall	__Umul8_16
 10002  0E69  0871               	movf	?__Umul8_16+1,w
 10003  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10004  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10005  0E6C  00BD               	movwf	___flmul@temp+1
 10006  0E6D  0870               	movf	?__Umul8_16,w
 10007  0E6E  00BC               	movwf	___flmul@temp
 10008  0E6F  083C               	movf	___flmul@temp,w
 10009  0E70  00AC               	movwf	??___flmul
 10010  0E71  083D               	movf	___flmul@temp+1,w
 10011  0E72  00AD               	movwf	??___flmul+1
 10012  0E73  01AE               	clrf	??___flmul+2
 10013  0E74  01AF               	clrf	??___flmul+3
 10014  0E75  082C               	movf	??___flmul,w
 10015  0E76  07B8               	addwf	___flmul@prod,f
 10016  0E77  082D               	movf	??___flmul+1,w
 10017  0E78  1103               	clrz
 10018  0E79  1803               	skipnc
 10019  0E7A  3E01               	addlw	1
 10020  0E7B  1903               	skipnz
 10021  0E7C  2E7E               	goto	u4051
 10022  0E7D  07B9               	addwf	___flmul@prod+1,f
 10023  0E7E                     u4051:
 10024  0E7E  082E               	movf	??___flmul+2,w
 10025  0E7F  1103               	clrz
 10026  0E80  1803               	skipnc
 10027  0E81  3E01               	addlw	1
 10028  0E82  1903               	skipnz
 10029  0E83  2E85               	goto	u4052
 10030  0E84  07BA               	addwf	___flmul@prod+2,f
 10031  0E85                     u4052:
 10032  0E85  082F               	movf	??___flmul+3,w
 10033  0E86  1103               	clrz
 10034  0E87  1803               	skipnc
 10035  0E88  3E01               	addlw	1
 10036  0E89  1903               	skipnz
 10037  0E8A  2E8C               	goto	u4053
 10038  0E8B  07BB               	addwf	___flmul@prod+3,f
 10039  0E8C                     u4053:
 10040  0E8C                     l2786:
 10041  0E8C  0826               	movf	___flmul@b+2,w
 10042  0E8D  00AC               	movwf	??___flmul
 10043  0E8E  082C               	movf	??___flmul,w
 10044  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10045  0E90  0829               	movf	___flmul@a+1,w
 10046  0E91  160A  158A  226E  120A  158A  	fcall	__Umul8_16
 10047  0E96  0871               	movf	?__Umul8_16+1,w
 10048  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10049  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10050  0E99  00BD               	movwf	___flmul@temp+1
 10051  0E9A  0870               	movf	?__Umul8_16,w
 10052  0E9B  00BC               	movwf	___flmul@temp
 10053  0E9C                     l2788:
 10054  0E9C  083C               	movf	___flmul@temp,w
 10055  0E9D  00AC               	movwf	??___flmul
 10056  0E9E  083D               	movf	___flmul@temp+1,w
 10057  0E9F  00AD               	movwf	??___flmul+1
 10058  0EA0  01AE               	clrf	??___flmul+2
 10059  0EA1  01AF               	clrf	??___flmul+3
 10060  0EA2  082C               	movf	??___flmul,w
 10061  0EA3  07B8               	addwf	___flmul@prod,f
 10062  0EA4  082D               	movf	??___flmul+1,w
 10063  0EA5  1103               	clrz
 10064  0EA6  1803               	skipnc
 10065  0EA7  3E01               	addlw	1
 10066  0EA8  1903               	skipnz
 10067  0EA9  2EAB               	goto	u4061
 10068  0EAA  07B9               	addwf	___flmul@prod+1,f
 10069  0EAB                     u4061:
 10070  0EAB  082E               	movf	??___flmul+2,w
 10071  0EAC  1103               	clrz
 10072  0EAD  1803               	skipnc
 10073  0EAE  3E01               	addlw	1
 10074  0EAF  1903               	skipnz
 10075  0EB0  2EB2               	goto	u4062
 10076  0EB1  07BA               	addwf	___flmul@prod+2,f
 10077  0EB2                     u4062:
 10078  0EB2  082F               	movf	??___flmul+3,w
 10079  0EB3  1103               	clrz
 10080  0EB4  1803               	skipnc
 10081  0EB5  3E01               	addlw	1
 10082  0EB6  1903               	skipnz
 10083  0EB7  2EB9               	goto	u4063
 10084  0EB8  07BB               	addwf	___flmul@prod+3,f
 10085  0EB9                     u4063:
 10086  0EB9  0826               	movf	___flmul@b+2,w
 10087  0EBA  00AC               	movwf	??___flmul
 10088  0EBB  082C               	movf	??___flmul,w
 10089  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10090  0EBD  082A               	movf	___flmul@a+2,w
 10091  0EBE  160A  158A  226E  120A  158A  	fcall	__Umul8_16
 10092  0EC3  0871               	movf	?__Umul8_16+1,w
 10093  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10094  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10095  0EC6  00BD               	movwf	___flmul@temp+1
 10096  0EC7  0870               	movf	?__Umul8_16,w
 10097  0EC8  00BC               	movwf	___flmul@temp
 10098  0EC9                     l2790:
 10099  0EC9  083C               	movf	___flmul@temp,w
 10100  0ECA  00AC               	movwf	??___flmul
 10101  0ECB  083D               	movf	___flmul@temp+1,w
 10102  0ECC  00AD               	movwf	??___flmul+1
 10103  0ECD  01AE               	clrf	??___flmul+2
 10104  0ECE  01AF               	clrf	??___flmul+3
 10105  0ECF  3008               	movlw	8
 10106  0ED0                     u4075:
 10107  0ED0  1003               	clrc
 10108  0ED1  0DAC               	rlf	??___flmul,f
 10109  0ED2  0DAD               	rlf	??___flmul+1,f
 10110  0ED3  0DAE               	rlf	??___flmul+2,f
 10111  0ED4  0DAF               	rlf	??___flmul+3,f
 10112  0ED5                     u4070:
 10113  0ED5  3EFF               	addlw	-1
 10114  0ED6  1D03               	skipz
 10115  0ED7  2ED0               	goto	u4075
 10116  0ED8  082C               	movf	??___flmul,w
 10117  0ED9  07B8               	addwf	___flmul@prod,f
 10118  0EDA  082D               	movf	??___flmul+1,w
 10119  0EDB  1103               	clrz
 10120  0EDC  1803               	skipnc
 10121  0EDD  3E01               	addlw	1
 10122  0EDE  1903               	skipnz
 10123  0EDF  2EE1               	goto	u4081
 10124  0EE0  07B9               	addwf	___flmul@prod+1,f
 10125  0EE1                     u4081:
 10126  0EE1  082E               	movf	??___flmul+2,w
 10127  0EE2  1103               	clrz
 10128  0EE3  1803               	skipnc
 10129  0EE4  3E01               	addlw	1
 10130  0EE5  1903               	skipnz
 10131  0EE6  2EE8               	goto	u4082
 10132  0EE7  07BA               	addwf	___flmul@prod+2,f
 10133  0EE8                     u4082:
 10134  0EE8  082F               	movf	??___flmul+3,w
 10135  0EE9  1103               	clrz
 10136  0EEA  1803               	skipnc
 10137  0EEB  3E01               	addlw	1
 10138  0EEC  1903               	skipnz
 10139  0EED  2EEF               	goto	u4083
 10140  0EEE  07BB               	addwf	___flmul@prod+3,f
 10141  0EEF                     u4083:
 10142  0EEF                     l2792:
 10143  0EEF  0832               	movf	___flmul@grs,w
 10144  0EF0  00AC               	movwf	??___flmul
 10145  0EF1  0833               	movf	___flmul@grs+1,w
 10146  0EF2  00AD               	movwf	??___flmul+1
 10147  0EF3  0834               	movf	___flmul@grs+2,w
 10148  0EF4  00AE               	movwf	??___flmul+2
 10149  0EF5  0835               	movf	___flmul@grs+3,w
 10150  0EF6  00AF               	movwf	??___flmul+3
 10151  0EF7  3018               	movlw	24
 10152  0EF8                     u4095:
 10153  0EF8  1003               	clrc
 10154  0EF9  0CAF               	rrf	??___flmul+3,f
 10155  0EFA  0CAE               	rrf	??___flmul+2,f
 10156  0EFB  0CAD               	rrf	??___flmul+1,f
 10157  0EFC  0CAC               	rrf	??___flmul,f
 10158  0EFD                     u4090:
 10159  0EFD  3EFF               	addlw	-1
 10160  0EFE  1D03               	skipz
 10161  0EFF  2EF8               	goto	u4095
 10162  0F00  082C               	movf	??___flmul,w
 10163  0F01  07B8               	addwf	___flmul@prod,f
 10164  0F02  082D               	movf	??___flmul+1,w
 10165  0F03  1103               	clrz
 10166  0F04  1803               	skipnc
 10167  0F05  3E01               	addlw	1
 10168  0F06  1903               	skipnz
 10169  0F07  2F09               	goto	u4101
 10170  0F08  07B9               	addwf	___flmul@prod+1,f
 10171  0F09                     u4101:
 10172  0F09  082E               	movf	??___flmul+2,w
 10173  0F0A  1103               	clrz
 10174  0F0B  1803               	skipnc
 10175  0F0C  3E01               	addlw	1
 10176  0F0D  1903               	skipnz
 10177  0F0E  2F10               	goto	u4102
 10178  0F0F  07BA               	addwf	___flmul@prod+2,f
 10179  0F10                     u4102:
 10180  0F10  082F               	movf	??___flmul+3,w
 10181  0F11  1103               	clrz
 10182  0F12  1803               	skipnc
 10183  0F13  3E01               	addlw	1
 10184  0F14  1903               	skipnz
 10185  0F15  2F17               	goto	u4103
 10186  0F16  07BB               	addwf	___flmul@prod+3,f
 10187  0F17                     u4103:
 10188  0F17                     l2794:
 10189  0F17  3008               	movlw	8
 10190  0F18  00AC               	movwf	??___flmul
 10191  0F19                     u4115:
 10192  0F19  1003               	clrc
 10193  0F1A  0DB2               	rlf	___flmul@grs,f
 10194  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10195  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10196  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10197  0F1E  0BAC               	decfsz	??___flmul,f
 10198  0F1F  2F19               	goto	u4115
 10199  0F20                     l2796:
 10200  0F20  0837               	movf	___flmul@bexp,w
 10201  0F21  0736               	addwf	___flmul@aexp,w
 10202  0F22  00AC               	movwf	??___flmul
 10203  0F23  01AD               	clrf	??___flmul+1
 10204  0F24  0DAD               	rlf	??___flmul+1,f
 10205  0F25  082C               	movf	??___flmul,w
 10206  0F26  3E82               	addlw	130
 10207  0F27  00BC               	movwf	___flmul@temp
 10208  0F28  082D               	movf	??___flmul+1,w
 10209  0F29  1803               	skipnc
 10210  0F2A  3E01               	addlw	1
 10211  0F2B  3EFF               	addlw	255
 10212  0F2C  00BD               	movwf	___flmul@temp+1
 10213  0F2D  2F4B               	goto	l2808
 10214  0F2E                     l2798:
 10215  0F2E  3001               	movlw	1
 10216  0F2F  00AC               	movwf	??___flmul
 10217  0F30                     u4125:
 10218  0F30  1003               	clrc
 10219  0F31  0DB8               	rlf	___flmul@prod,f
 10220  0F32  0DB9               	rlf	___flmul@prod+1,f
 10221  0F33  0DBA               	rlf	___flmul@prod+2,f
 10222  0F34  0DBB               	rlf	___flmul@prod+3,f
 10223  0F35  0BAC               	decfsz	??___flmul,f
 10224  0F36  2F30               	goto	u4125
 10225  0F37                     l2800:
 10226  0F37  1FB5               	btfss	___flmul@grs+3,7
 10227  0F38  2F3A               	goto	u4131
 10228  0F39  2F3B               	goto	u4130
 10229  0F3A                     u4131:
 10230  0F3A  2F3C               	goto	l2804
 10231  0F3B                     u4130:
 10232  0F3B                     l2802:
 10233  0F3B  1438               	bsf	___flmul@prod,0
 10234  0F3C                     l2804:
 10235  0F3C  3001               	movlw	1
 10236  0F3D  00AC               	movwf	??___flmul
 10237  0F3E                     u4145:
 10238  0F3E  1003               	clrc
 10239  0F3F  0DB2               	rlf	___flmul@grs,f
 10240  0F40  0DB3               	rlf	___flmul@grs+1,f
 10241  0F41  0DB4               	rlf	___flmul@grs+2,f
 10242  0F42  0DB5               	rlf	___flmul@grs+3,f
 10243  0F43  0BAC               	decfsz	??___flmul,f
 10244  0F44  2F3E               	goto	u4145
 10245  0F45                     l2806:
 10246  0F45  30FF               	movlw	255
 10247  0F46  07BC               	addwf	___flmul@temp,f
 10248  0F47  1803               	skipnc
 10249  0F48  0ABD               	incf	___flmul@temp+1,f
 10250  0F49  30FF               	movlw	255
 10251  0F4A  07BD               	addwf	___flmul@temp+1,f
 10252  0F4B                     l2808:
 10253  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10254  0F4C  2F4E               	goto	u4151
 10255  0F4D  2F4F               	goto	u4150
 10256  0F4E                     u4151:
 10257  0F4E  2F2E               	goto	l2798
 10258  0F4F                     u4150:
 10259  0F4F                     l2810:
 10260  0F4F  01B6               	clrf	___flmul@aexp
 10261  0F50                     l2812:
 10262  0F50  1FB5               	btfss	___flmul@grs+3,7
 10263  0F51  2F53               	goto	u4161
 10264  0F52  2F54               	goto	u4160
 10265  0F53                     u4161:
 10266  0F53  2F70               	goto	l2820
 10267  0F54                     u4160:
 10268  0F54                     l2814:
 10269  0F54  30FF               	movlw	255
 10270  0F55  0532               	andwf	___flmul@grs,w
 10271  0F56  00AC               	movwf	??___flmul
 10272  0F57  30FF               	movlw	255
 10273  0F58  0533               	andwf	___flmul@grs+1,w
 10274  0F59  00AD               	movwf	??___flmul+1
 10275  0F5A  30FF               	movlw	255
 10276  0F5B  0534               	andwf	___flmul@grs+2,w
 10277  0F5C  00AE               	movwf	??___flmul+2
 10278  0F5D  307F               	movlw	127
 10279  0F5E  0535               	andwf	___flmul@grs+3,w
 10280  0F5F  00AF               	movwf	??___flmul+3
 10281  0F60  082F               	movf	??___flmul+3,w
 10282  0F61  042E               	iorwf	??___flmul+2,w
 10283  0F62  042D               	iorwf	??___flmul+1,w
 10284  0F63  042C               	iorwf	??___flmul,w
 10285  0F64  1903               	skipnz
 10286  0F65  2F67               	goto	u4171
 10287  0F66  2F68               	goto	u4170
 10288  0F67                     u4171:
 10289  0F67  2F6B               	goto	l782
 10290  0F68                     u4170:
 10291  0F68                     l2816:
 10292  0F68  01B6               	clrf	___flmul@aexp
 10293  0F69  0AB6               	incf	___flmul@aexp,f
 10294  0F6A  2F70               	goto	l2820
 10295  0F6B                     l782:
 10296  0F6B  1C38               	btfss	___flmul@prod,0
 10297  0F6C  2F6E               	goto	u4181
 10298  0F6D  2F6F               	goto	u4180
 10299  0F6E                     u4181:
 10300  0F6E  2F70               	goto	l2820
 10301  0F6F                     u4180:
 10302  0F6F  2F68               	goto	l2816
 10303  0F70                     l2820:
 10304  0F70  0836               	movf	___flmul@aexp,w
 10305  0F71  1903               	btfsc	3,2
 10306  0F72  2F74               	goto	u4191
 10307  0F73  2F75               	goto	u4190
 10308  0F74                     u4191:
 10309  0F74  2FA6               	goto	l2830
 10310  0F75                     u4190:
 10311  0F75                     l2822:
 10312  0F75  3001               	movlw	1
 10313  0F76  07B8               	addwf	___flmul@prod,f
 10314  0F77  3000               	movlw	0
 10315  0F78  1803               	skipnc
 10316  0F79  3001               	movlw	1
 10317  0F7A  07B9               	addwf	___flmul@prod+1,f
 10318  0F7B  3000               	movlw	0
 10319  0F7C  1803               	skipnc
 10320  0F7D  3001               	movlw	1
 10321  0F7E  07BA               	addwf	___flmul@prod+2,f
 10322  0F7F  3000               	movlw	0
 10323  0F80  1803               	skipnc
 10324  0F81  3001               	movlw	1
 10325  0F82  07BB               	addwf	___flmul@prod+3,f
 10326  0F83                     l2824:
 10327  0F83  1C3B               	btfss	___flmul@prod+3,0
 10328  0F84  2F86               	goto	u4201
 10329  0F85  2F87               	goto	u4200
 10330  0F86                     u4201:
 10331  0F86  2FA6               	goto	l2830
 10332  0F87                     u4200:
 10333  0F87                     l2826:
 10334  0F87  0838               	movf	___flmul@prod,w
 10335  0F88  00AC               	movwf	??___flmul
 10336  0F89  0839               	movf	___flmul@prod+1,w
 10337  0F8A  00AD               	movwf	??___flmul+1
 10338  0F8B  083A               	movf	___flmul@prod+2,w
 10339  0F8C  00AE               	movwf	??___flmul+2
 10340  0F8D  083B               	movf	___flmul@prod+3,w
 10341  0F8E  00AF               	movwf	??___flmul+3
 10342  0F8F  3001               	movlw	1
 10343  0F90  00B0               	movwf	??___flmul+4
 10344  0F91                     u4215:
 10345  0F91  0D2F               	rlf	??___flmul+3,w
 10346  0F92  0CAF               	rrf	??___flmul+3,f
 10347  0F93  0CAE               	rrf	??___flmul+2,f
 10348  0F94  0CAD               	rrf	??___flmul+1,f
 10349  0F95  0CAC               	rrf	??___flmul,f
 10350  0F96                     u4210:
 10351  0F96  0BB0               	decfsz	??___flmul+4,f
 10352  0F97  2F91               	goto	u4215
 10353  0F98  082F               	movf	??___flmul+3,w
 10354  0F99  00BB               	movwf	___flmul@prod+3
 10355  0F9A  082E               	movf	??___flmul+2,w
 10356  0F9B  00BA               	movwf	___flmul@prod+2
 10357  0F9C  082D               	movf	??___flmul+1,w
 10358  0F9D  00B9               	movwf	___flmul@prod+1
 10359  0F9E  082C               	movf	??___flmul,w
 10360  0F9F  00B8               	movwf	___flmul@prod
 10361  0FA0                     l2828:
 10362  0FA0  3001               	movlw	1
 10363  0FA1  07BC               	addwf	___flmul@temp,f
 10364  0FA2  1803               	skipnc
 10365  0FA3  0ABD               	incf	___flmul@temp+1,f
 10366  0FA4  3000               	movlw	0
 10367  0FA5  07BD               	addwf	___flmul@temp+1,f
 10368  0FA6                     l2830:
 10369  0FA6  083D               	movf	___flmul@temp+1,w
 10370  0FA7  3A80               	xorlw	128
 10371  0FA8  00FF               	movwf	btemp+1
 10372  0FA9  3080               	movlw	128
 10373  0FAA  027F               	subwf	btemp+1,w
 10374  0FAB  1D03               	skipz
 10375  0FAC  2FAF               	goto	u4225
 10376  0FAD  30FF               	movlw	255
 10377  0FAE  023C               	subwf	___flmul@temp,w
 10378  0FAF                     u4225:
 10379  0FAF  1C03               	skipc
 10380  0FB0  2FB2               	goto	u4221
 10381  0FB1  2FB3               	goto	u4220
 10382  0FB2                     u4221:
 10383  0FB2  2FBE               	goto	l2834
 10384  0FB3                     u4220:
 10385  0FB3                     l2832:
 10386  0FB3  307F               	movlw	127
 10387  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 10388  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 10389  0FB6  00BB               	movwf	___flmul@prod+3
 10390  0FB7  3080               	movlw	128
 10391  0FB8  00BA               	movwf	___flmul@prod+2
 10392  0FB9  3000               	movlw	0
 10393  0FBA  00B9               	movwf	___flmul@prod+1
 10394  0FBB  3000               	movlw	0
 10395  0FBC  00B8               	movwf	___flmul@prod
 10396  0FBD  2FF3               	goto	l788
 10397  0FBE                     l2834:
 10398  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10399  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10400  0FC0  083D               	movf	___flmul@temp+1,w
 10401  0FC1  3A80               	xorlw	128
 10402  0FC2  00FF               	movwf	btemp+1
 10403  0FC3  3080               	movlw	128
 10404  0FC4  027F               	subwf	btemp+1,w
 10405  0FC5  1D03               	skipz
 10406  0FC6  2FC9               	goto	u4235
 10407  0FC7  3001               	movlw	1
 10408  0FC8  023C               	subwf	___flmul@temp,w
 10409  0FC9                     u4235:
 10410  0FC9  1803               	skipnc
 10411  0FCA  2FCC               	goto	u4231
 10412  0FCB  2FCD               	goto	u4230
 10413  0FCC                     u4231:
 10414  0FCC  2FD9               	goto	l2840
 10415  0FCD                     u4230:
 10416  0FCD                     l2836:
 10417  0FCD  3000               	movlw	0
 10418  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10419  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10420  0FD0  00BB               	movwf	___flmul@prod+3
 10421  0FD1  3000               	movlw	0
 10422  0FD2  00BA               	movwf	___flmul@prod+2
 10423  0FD3  3000               	movlw	0
 10424  0FD4  00B9               	movwf	___flmul@prod+1
 10425  0FD5  3000               	movlw	0
 10426  0FD6  00B8               	movwf	___flmul@prod
 10427  0FD7                     l2838:
 10428  0FD7  01B1               	clrf	___flmul@sign
 10429  0FD8  2FF3               	goto	l788
 10430  0FD9                     l2840:
 10431  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10432  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10433  0FDB  083C               	movf	___flmul@temp,w
 10434  0FDC  00AC               	movwf	??___flmul
 10435  0FDD  082C               	movf	??___flmul,w
 10436  0FDE  00B7               	movwf	___flmul@bexp
 10437  0FDF  30FF               	movlw	255
 10438  0FE0  05B8               	andwf	___flmul@prod,f
 10439  0FE1  30FF               	movlw	255
 10440  0FE2  05B9               	andwf	___flmul@prod+1,f
 10441  0FE3  307F               	movlw	127
 10442  0FE4  05BA               	andwf	___flmul@prod+2,f
 10443  0FE5  3000               	movlw	0
 10444  0FE6  05BB               	andwf	___flmul@prod+3,f
 10445  0FE7                     l2842:
 10446  0FE7  1C37               	btfss	___flmul@bexp,0
 10447  0FE8  2FEA               	goto	u4241
 10448  0FE9  2FEB               	goto	u4240
 10449  0FEA                     u4241:
 10450  0FEA  2FEC               	goto	l2846
 10451  0FEB                     u4240:
 10452  0FEB                     l2844:
 10453  0FEB  17BA               	bsf	___flmul@prod+2,7
 10454  0FEC                     l2846:
 10455  0FEC  0837               	movf	___flmul@bexp,w
 10456  0FED  00AC               	movwf	??___flmul
 10457  0FEE  1003               	clrc
 10458  0FEF  0C2C               	rrf	??___flmul,w
 10459  0FF0  00AD               	movwf	??___flmul+1
 10460  0FF1  082D               	movf	??___flmul+1,w
 10461  0FF2  00BB               	movwf	___flmul@prod+3
 10462  0FF3                     l788:
 10463  0FF3  0831               	movf	___flmul@sign,w
 10464  0FF4  00AC               	movwf	??___flmul
 10465  0FF5  082C               	movf	??___flmul,w
 10466  0FF6  04BB               	iorwf	___flmul@prod+3,f
 10467  0FF7                     l2848:
 10468  0FF7  083B               	movf	___flmul@prod+3,w
 10469  0FF8  00A7               	movwf	?___flmul+3
 10470  0FF9  083A               	movf	___flmul@prod+2,w
 10471  0FFA  00A6               	movwf	?___flmul+2
 10472  0FFB  0839               	movf	___flmul@prod+1,w
 10473  0FFC  00A5               	movwf	?___flmul+1
 10474  0FFD  0838               	movf	___flmul@prod,w
 10475  0FFE  00A4               	movwf	?___flmul
 10476  0FFF                     l776:
 10477  0FFF  0008               	return
 10478  1000                     __end_of___flmul:
 10479                           
 10480                           	psect	text32
 10481  1A6E                     __ptext32:	
 10482 ;; *************** function __Umul8_16 *****************
 10483 ;; Defined at:
 10484 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  multiplier      1    wreg     unsigned char 
 10487 ;;  multiplicand    1    0[COMMON] unsigned char 
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  multiplier      1    8[COMMON] unsigned char 
 10490 ;;  word_mpld       2    6[COMMON] unsigned int 
 10491 ;;  product         2    4[COMMON] unsigned int 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  2    0[COMMON] unsigned int 
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10501 ;;      Params:         2       0       0       0       0
 10502 ;;      Locals:         5       0       0       0       0
 10503 ;;      Temps:          2       0       0       0       0
 10504 ;;      Totals:         9       0       0       0       0
 10505 ;;Total ram usage:        9 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		___flmul
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           
 10515                           ;psect for function __Umul8_16
 10516  1A6E                     __Umul8_16:
 10517                           
 10518                           ;incstack = 0
 10519                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10520                           ;__Umul8_16@multiplier stored from wreg
 10521  1A6E  00F8               	movwf	__Umul8_16@multiplier
 10522  1A6F                     l2372:
 10523  1A6F  01F4               	clrf	__Umul8_16@product
 10524  1A70  01F5               	clrf	__Umul8_16@product+1
 10525  1A71                     l2374:
 10526  1A71  0870               	movf	__Umul8_16@multiplicand,w
 10527  1A72  00F2               	movwf	??__Umul8_16
 10528  1A73  01F3               	clrf	??__Umul8_16+1
 10529  1A74  0872               	movf	??__Umul8_16,w
 10530  1A75  00F6               	movwf	__Umul8_16@word_mpld
 10531  1A76  0873               	movf	??__Umul8_16+1,w
 10532  1A77  00F7               	movwf	__Umul8_16@word_mpld+1
 10533  1A78                     l2376:
 10534  1A78  1C78               	btfss	__Umul8_16@multiplier,0
 10535  1A79  2A7B               	goto	u3071
 10536  1A7A  2A7C               	goto	u3070
 10537  1A7B                     u3071:
 10538  1A7B  2A82               	goto	l795
 10539  1A7C                     u3070:
 10540  1A7C                     l2378:
 10541  1A7C  0876               	movf	__Umul8_16@word_mpld,w
 10542  1A7D  07F4               	addwf	__Umul8_16@product,f
 10543  1A7E  1803               	skipnc
 10544  1A7F  0AF5               	incf	__Umul8_16@product+1,f
 10545  1A80  0877               	movf	__Umul8_16@word_mpld+1,w
 10546  1A81  07F5               	addwf	__Umul8_16@product+1,f
 10547  1A82                     l795:
 10548  1A82  3001               	movlw	1
 10549  1A83                     u3085:
 10550  1A83  1003               	clrc
 10551  1A84  0DF6               	rlf	__Umul8_16@word_mpld,f
 10552  1A85  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10553  1A86  3EFF               	addlw	-1
 10554  1A87  1D03               	skipz
 10555  1A88  2A83               	goto	u3085
 10556  1A89  1003               	clrc
 10557  1A8A  0CF8               	rrf	__Umul8_16@multiplier,f
 10558  1A8B                     l2380:
 10559  1A8B  0878               	movf	__Umul8_16@multiplier,w
 10560  1A8C  1D03               	btfss	3,2
 10561  1A8D  2A8F               	goto	u3091
 10562  1A8E  2A90               	goto	u3090
 10563  1A8F                     u3091:
 10564  1A8F  2A78               	goto	l2376
 10565  1A90                     u3090:
 10566  1A90                     l2382:
 10567  1A90  0875               	movf	__Umul8_16@product+1,w
 10568  1A91  00F1               	movwf	?__Umul8_16+1
 10569  1A92  0874               	movf	__Umul8_16@product,w
 10570  1A93  00F0               	movwf	?__Umul8_16
 10571  1A94                     l797:
 10572  1A94  0008               	return
 10573  1A95                     __end_of__Umul8_16:
 10574                           
 10575                           	psect	text33
 10576  1190                     __ptext33:	
 10577 ;; *************** function ___fldiv *****************
 10578 ;; Defined at:
 10579 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  a               4   30[BANK0 ] unsigned int 
 10582 ;;  b               4   34[BANK0 ] unsigned int 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  grs             4   50[BANK0 ] unsigned long 
 10585 ;;  rem             4   43[BANK0 ] unsigned long 
 10586 ;;  new_exp         2   48[BANK0 ] int 
 10587 ;;  aexp            1   55[BANK0 ] unsigned char 
 10588 ;;  bexp            1   54[BANK0 ] unsigned char 
 10589 ;;  sign            1   47[BANK0 ] unsigned char 
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  4   30[BANK0 ] unsigned char 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0, btemp+1
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10599 ;;      Params:         0       8       0       0       0
 10600 ;;      Locals:         0      13       0       0       0
 10601 ;;      Temps:          0       5       0       0       0
 10602 ;;      Totals:         0      26       0       0       0
 10603 ;;Total ram usage:       26 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_ADC_CH0
 10609 ;;		_ADC_CH1
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           
 10614                           ;psect for function ___fldiv
 10615  1190                     ___fldiv:
 10616  1190                     l3200:	
 10617                           ;incstack = 0
 10618                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10619                           
 10620  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10621  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10622  1192  0845               	movf	___fldiv@b+3,w
 10623  1193  3980               	andlw	128
 10624  1194  00C6               	movwf	??___fldiv
 10625  1195  0846               	movf	??___fldiv,w
 10626  1196  00CF               	movwf	___fldiv@sign
 10627  1197                     l3202:
 10628  1197  0845               	movf	___fldiv@b+3,w
 10629  1198  00C6               	movwf	??___fldiv
 10630  1199  0746               	addwf	??___fldiv,w
 10631  119A  00C7               	movwf	??___fldiv+1
 10632  119B  0847               	movf	??___fldiv+1,w
 10633  119C  00D6               	movwf	___fldiv@bexp
 10634  119D                     l3204:
 10635  119D  1FC4               	btfss	___fldiv@b+2,7
 10636  119E  29A0               	goto	u5161
 10637  119F  29A1               	goto	u5160
 10638  11A0                     u5161:
 10639  11A0  29A2               	goto	l3208
 10640  11A1                     u5160:
 10641  11A1                     l3206:
 10642  11A1  1456               	bsf	___fldiv@bexp,0
 10643  11A2                     l3208:
 10644  11A2  0856               	movf	___fldiv@bexp,w
 10645  11A3  1903               	btfsc	3,2
 10646  11A4  29A6               	goto	u5171
 10647  11A5  29A7               	goto	u5170
 10648  11A6                     u5171:
 10649  11A6  29B7               	goto	l3218
 10650  11A7                     u5170:
 10651  11A7                     l3210:
 10652  11A7  0A56               	incf	___fldiv@bexp,w
 10653  11A8  1D03               	btfss	3,2
 10654  11A9  29AB               	goto	u5181
 10655  11AA  29AC               	goto	u5180
 10656  11AB                     u5181:
 10657  11AB  29B4               	goto	l3214
 10658  11AC                     u5180:
 10659  11AC                     l3212:
 10660  11AC  3000               	movlw	0
 10661  11AD  00C5               	movwf	___fldiv@b+3
 10662  11AE  3000               	movlw	0
 10663  11AF  00C4               	movwf	___fldiv@b+2
 10664  11B0  3000               	movlw	0
 10665  11B1  00C3               	movwf	___fldiv@b+1
 10666  11B2  3000               	movlw	0
 10667  11B3  00C2               	movwf	___fldiv@b
 10668  11B4                     l3214:
 10669  11B4  17C4               	bsf	___fldiv@b+2,7
 10670  11B5                     l3216:
 10671  11B5  01C5               	clrf	___fldiv@b+3
 10672  11B6  29BF               	goto	l3220
 10673  11B7                     l3218:
 10674  11B7  3000               	movlw	0
 10675  11B8  00C5               	movwf	___fldiv@b+3
 10676  11B9  3000               	movlw	0
 10677  11BA  00C4               	movwf	___fldiv@b+2
 10678  11BB  3000               	movlw	0
 10679  11BC  00C3               	movwf	___fldiv@b+1
 10680  11BD  3000               	movlw	0
 10681  11BE  00C2               	movwf	___fldiv@b
 10682  11BF                     l3220:
 10683  11BF  0841               	movf	___fldiv@a+3,w
 10684  11C0  3980               	andlw	128
 10685  11C1  00C6               	movwf	??___fldiv
 10686  11C2  0846               	movf	??___fldiv,w
 10687  11C3  06CF               	xorwf	___fldiv@sign,f
 10688  11C4                     l3222:
 10689  11C4  0841               	movf	___fldiv@a+3,w
 10690  11C5  00C6               	movwf	??___fldiv
 10691  11C6  0746               	addwf	??___fldiv,w
 10692  11C7  00C7               	movwf	??___fldiv+1
 10693  11C8  0847               	movf	??___fldiv+1,w
 10694  11C9  00D7               	movwf	___fldiv@aexp
 10695  11CA                     l3224:
 10696  11CA  1FC0               	btfss	___fldiv@a+2,7
 10697  11CB  29CD               	goto	u5191
 10698  11CC  29CE               	goto	u5190
 10699  11CD                     u5191:
 10700  11CD  29CF               	goto	l3228
 10701  11CE                     u5190:
 10702  11CE                     l3226:
 10703  11CE  1457               	bsf	___fldiv@aexp,0
 10704  11CF                     l3228:
 10705  11CF  0857               	movf	___fldiv@aexp,w
 10706  11D0  1903               	btfsc	3,2
 10707  11D1  29D3               	goto	u5201
 10708  11D2  29D4               	goto	u5200
 10709  11D3                     u5201:
 10710  11D3  29E4               	goto	l3238
 10711  11D4                     u5200:
 10712  11D4                     l3230:
 10713  11D4  0A57               	incf	___fldiv@aexp,w
 10714  11D5  1D03               	btfss	3,2
 10715  11D6  29D8               	goto	u5211
 10716  11D7  29D9               	goto	u5210
 10717  11D8                     u5211:
 10718  11D8  29E1               	goto	l3234
 10719  11D9                     u5210:
 10720  11D9                     l3232:
 10721  11D9  3000               	movlw	0
 10722  11DA  00C1               	movwf	___fldiv@a+3
 10723  11DB  3000               	movlw	0
 10724  11DC  00C0               	movwf	___fldiv@a+2
 10725  11DD  3000               	movlw	0
 10726  11DE  00BF               	movwf	___fldiv@a+1
 10727  11DF  3000               	movlw	0
 10728  11E0  00BE               	movwf	___fldiv@a
 10729  11E1                     l3234:
 10730  11E1  17C0               	bsf	___fldiv@a+2,7
 10731  11E2                     l3236:
 10732  11E2  01C1               	clrf	___fldiv@a+3
 10733  11E3  29EC               	goto	l736
 10734  11E4                     l3238:
 10735  11E4  3000               	movlw	0
 10736  11E5  00C1               	movwf	___fldiv@a+3
 10737  11E6  3000               	movlw	0
 10738  11E7  00C0               	movwf	___fldiv@a+2
 10739  11E8  3000               	movlw	0
 10740  11E9  00BF               	movwf	___fldiv@a+1
 10741  11EA  3000               	movlw	0
 10742  11EB  00BE               	movwf	___fldiv@a
 10743  11EC                     l736:
 10744  11EC  0841               	movf	___fldiv@a+3,w
 10745  11ED  0440               	iorwf	___fldiv@a+2,w
 10746  11EE  043F               	iorwf	___fldiv@a+1,w
 10747  11EF  043E               	iorwf	___fldiv@a,w
 10748  11F0  1D03               	skipz
 10749  11F1  29F3               	goto	u5221
 10750  11F2  29F4               	goto	u5220
 10751  11F3                     u5221:
 10752  11F3  2A0D               	goto	l3248
 10753  11F4                     u5220:
 10754  11F4                     l3240:
 10755  11F4  3000               	movlw	0
 10756  11F5  00C5               	movwf	___fldiv@b+3
 10757  11F6  3000               	movlw	0
 10758  11F7  00C4               	movwf	___fldiv@b+2
 10759  11F8  3000               	movlw	0
 10760  11F9  00C3               	movwf	___fldiv@b+1
 10761  11FA  3000               	movlw	0
 10762  11FB  00C2               	movwf	___fldiv@b
 10763  11FC  3080               	movlw	128
 10764  11FD  04C4               	iorwf	___fldiv@b+2,f
 10765  11FE  307F               	movlw	127
 10766  11FF  04C5               	iorwf	___fldiv@b+3,f
 10767  1200                     l3242:
 10768  1200  084F               	movf	___fldiv@sign,w
 10769  1201  00C6               	movwf	??___fldiv
 10770  1202  0846               	movf	??___fldiv,w
 10771  1203  04C5               	iorwf	___fldiv@b+3,f
 10772  1204                     l3244:
 10773  1204  0845               	movf	___fldiv@b+3,w
 10774  1205  00C1               	movwf	?___fldiv+3
 10775  1206  0844               	movf	___fldiv@b+2,w
 10776  1207  00C0               	movwf	?___fldiv+2
 10777  1208  0843               	movf	___fldiv@b+1,w
 10778  1209  00BF               	movwf	?___fldiv+1
 10779  120A  0842               	movf	___fldiv@b,w
 10780  120B  00BE               	movwf	?___fldiv
 10781  120C  2B6C               	goto	l738
 10782  120D                     l3248:
 10783  120D  0856               	movf	___fldiv@bexp,w
 10784  120E  1D03               	btfss	3,2
 10785  120F  2A11               	goto	u5231
 10786  1210  2A12               	goto	u5230
 10787  1211                     u5231:
 10788  1211  2A1B               	goto	l3254
 10789  1212                     u5230:
 10790  1212                     l3250:
 10791  1212  3000               	movlw	0
 10792  1213  00C1               	movwf	?___fldiv+3
 10793  1214  3000               	movlw	0
 10794  1215  00C0               	movwf	?___fldiv+2
 10795  1216  3000               	movlw	0
 10796  1217  00BF               	movwf	?___fldiv+1
 10797  1218  3000               	movlw	0
 10798  1219  00BE               	movwf	?___fldiv
 10799  121A  2B6C               	goto	l738
 10800  121B                     l3254:
 10801  121B  0856               	movf	___fldiv@bexp,w
 10802  121C  00C6               	movwf	??___fldiv
 10803  121D  01C7               	clrf	??___fldiv+1
 10804  121E  0847               	movf	??___fldiv+1,w
 10805  121F  00C9               	movwf	??___fldiv+3
 10806  1220  0857               	movf	___fldiv@aexp,w
 10807  1221  0246               	subwf	??___fldiv,w
 10808  1222  00C8               	movwf	??___fldiv+2
 10809  1223  1C03               	skipc
 10810  1224  03C9               	decf	??___fldiv+3,f
 10811  1225  0848               	movf	??___fldiv+2,w
 10812  1226  3E7F               	addlw	127
 10813  1227  00D0               	movwf	___fldiv@new_exp
 10814  1228  0849               	movf	??___fldiv+3,w
 10815  1229  1803               	skipnc
 10816  122A  3E01               	addlw	1
 10817  122B  3E00               	addlw	0
 10818  122C  00D1               	movwf	___fldiv@new_exp+1
 10819  122D                     l3256:
 10820  122D  0845               	movf	___fldiv@b+3,w
 10821  122E  00CE               	movwf	___fldiv@rem+3
 10822  122F  0844               	movf	___fldiv@b+2,w
 10823  1230  00CD               	movwf	___fldiv@rem+2
 10824  1231  0843               	movf	___fldiv@b+1,w
 10825  1232  00CC               	movwf	___fldiv@rem+1
 10826  1233  0842               	movf	___fldiv@b,w
 10827  1234  00CB               	movwf	___fldiv@rem
 10828  1235                     l3258:
 10829  1235  3000               	movlw	0
 10830  1236  00C5               	movwf	___fldiv@b+3
 10831  1237  3000               	movlw	0
 10832  1238  00C4               	movwf	___fldiv@b+2
 10833  1239  3000               	movlw	0
 10834  123A  00C3               	movwf	___fldiv@b+1
 10835  123B  3000               	movlw	0
 10836  123C  00C2               	movwf	___fldiv@b
 10837  123D                     l3260:
 10838  123D  3000               	movlw	0
 10839  123E  00D5               	movwf	___fldiv@grs+3
 10840  123F  3000               	movlw	0
 10841  1240  00D4               	movwf	___fldiv@grs+2
 10842  1241  3000               	movlw	0
 10843  1242  00D3               	movwf	___fldiv@grs+1
 10844  1243  3000               	movlw	0
 10845  1244  00D2               	movwf	___fldiv@grs
 10846  1245                     l3262:
 10847  1245  01D7               	clrf	___fldiv@aexp
 10848  1246  2A91               	goto	l3282
 10849  1247                     l3264:
 10850  1247  0857               	movf	___fldiv@aexp,w
 10851  1248  1903               	btfsc	3,2
 10852  1249  2A4B               	goto	u5241
 10853  124A  2A4C               	goto	u5240
 10854  124B                     u5241:
 10855  124B  2A6C               	goto	l3274
 10856  124C                     u5240:
 10857  124C                     l3266:
 10858  124C  3001               	movlw	1
 10859  124D  00C6               	movwf	??___fldiv
 10860  124E                     u5255:
 10861  124E  1003               	clrc
 10862  124F  0DCB               	rlf	___fldiv@rem,f
 10863  1250  0DCC               	rlf	___fldiv@rem+1,f
 10864  1251  0DCD               	rlf	___fldiv@rem+2,f
 10865  1252  0DCE               	rlf	___fldiv@rem+3,f
 10866  1253  0BC6               	decfsz	??___fldiv,f
 10867  1254  2A4E               	goto	u5255
 10868  1255  3001               	movlw	1
 10869  1256  00C6               	movwf	??___fldiv
 10870  1257                     u5265:
 10871  1257  1003               	clrc
 10872  1258  0DC2               	rlf	___fldiv@b,f
 10873  1259  0DC3               	rlf	___fldiv@b+1,f
 10874  125A  0DC4               	rlf	___fldiv@b+2,f
 10875  125B  0DC5               	rlf	___fldiv@b+3,f
 10876  125C  0BC6               	decfsz	??___fldiv,f
 10877  125D  2A57               	goto	u5265
 10878  125E                     l3268:
 10879  125E  1FD5               	btfss	___fldiv@grs+3,7
 10880  125F  2A61               	goto	u5271
 10881  1260  2A62               	goto	u5270
 10882  1261                     u5271:
 10883  1261  2A63               	goto	l3272
 10884  1262                     u5270:
 10885  1262                     l3270:
 10886  1262  1442               	bsf	___fldiv@b,0
 10887  1263                     l3272:
 10888  1263  3001               	movlw	1
 10889  1264  00C6               	movwf	??___fldiv
 10890  1265                     u5285:
 10891  1265  1003               	clrc
 10892  1266  0DD2               	rlf	___fldiv@grs,f
 10893  1267  0DD3               	rlf	___fldiv@grs+1,f
 10894  1268  0DD4               	rlf	___fldiv@grs+2,f
 10895  1269  0DD5               	rlf	___fldiv@grs+3,f
 10896  126A  0BC6               	decfsz	??___fldiv,f
 10897  126B  2A65               	goto	u5285
 10898  126C                     l3274:
 10899  126C  0841               	movf	___fldiv@a+3,w
 10900  126D  024E               	subwf	___fldiv@rem+3,w
 10901  126E  1D03               	skipz
 10902  126F  2A7A               	goto	u5295
 10903  1270  0840               	movf	___fldiv@a+2,w
 10904  1271  024D               	subwf	___fldiv@rem+2,w
 10905  1272  1D03               	skipz
 10906  1273  2A7A               	goto	u5295
 10907  1274  083F               	movf	___fldiv@a+1,w
 10908  1275  024C               	subwf	___fldiv@rem+1,w
 10909  1276  1D03               	skipz
 10910  1277  2A7A               	goto	u5295
 10911  1278  083E               	movf	___fldiv@a,w
 10912  1279  024B               	subwf	___fldiv@rem,w
 10913  127A                     u5295:
 10914  127A  1C03               	skipc
 10915  127B  2A7D               	goto	u5291
 10916  127C  2A7E               	goto	u5290
 10917  127D                     u5291:
 10918  127D  2A8D               	goto	l3280
 10919  127E                     u5290:
 10920  127E                     l3276:
 10921  127E  1755               	bsf	___fldiv@grs+3,6
 10922  127F                     l3278:
 10923  127F  083E               	movf	___fldiv@a,w
 10924  1280  02CB               	subwf	___fldiv@rem,f
 10925  1281  083F               	movf	___fldiv@a+1,w
 10926  1282  1C03               	skipc
 10927  1283  0F3F               	incfsz	___fldiv@a+1,w
 10928  1284  02CC               	subwf	___fldiv@rem+1,f
 10929  1285  0840               	movf	___fldiv@a+2,w
 10930  1286  1C03               	skipc
 10931  1287  0F40               	incfsz	___fldiv@a+2,w
 10932  1288  02CD               	subwf	___fldiv@rem+2,f
 10933  1289  0841               	movf	___fldiv@a+3,w
 10934  128A  1C03               	skipc
 10935  128B  0F41               	incfsz	___fldiv@a+3,w
 10936  128C  02CE               	subwf	___fldiv@rem+3,f
 10937  128D                     l3280:
 10938  128D  3001               	movlw	1
 10939  128E  00C6               	movwf	??___fldiv
 10940  128F  0846               	movf	??___fldiv,w
 10941  1290  07D7               	addwf	___fldiv@aexp,f
 10942  1291                     l3282:
 10943  1291  301A               	movlw	26
 10944  1292  0257               	subwf	___fldiv@aexp,w
 10945  1293  1C03               	skipc
 10946  1294  2A96               	goto	u5301
 10947  1295  2A97               	goto	u5300
 10948  1296                     u5301:
 10949  1296  2A47               	goto	l3264
 10950  1297                     u5300:
 10951  1297                     l3284:
 10952  1297  084E               	movf	___fldiv@rem+3,w
 10953  1298  044D               	iorwf	___fldiv@rem+2,w
 10954  1299  044C               	iorwf	___fldiv@rem+1,w
 10955  129A  044B               	iorwf	___fldiv@rem,w
 10956  129B  1903               	skipnz
 10957  129C  2A9E               	goto	u5311
 10958  129D  2A9F               	goto	u5310
 10959  129E                     u5311:
 10960  129E  2ABE               	goto	l3298
 10961  129F                     u5310:
 10962  129F                     l3286:
 10963  129F  1452               	bsf	___fldiv@grs,0
 10964  12A0  2ABE               	goto	l3298
 10965  12A1                     l3288:
 10966  12A1  3001               	movlw	1
 10967  12A2  00C6               	movwf	??___fldiv
 10968  12A3                     u5325:
 10969  12A3  1003               	clrc
 10970  12A4  0DC2               	rlf	___fldiv@b,f
 10971  12A5  0DC3               	rlf	___fldiv@b+1,f
 10972  12A6  0DC4               	rlf	___fldiv@b+2,f
 10973  12A7  0DC5               	rlf	___fldiv@b+3,f
 10974  12A8  0BC6               	decfsz	??___fldiv,f
 10975  12A9  2AA3               	goto	u5325
 10976  12AA                     l3290:
 10977  12AA  1FD5               	btfss	___fldiv@grs+3,7
 10978  12AB  2AAD               	goto	u5331
 10979  12AC  2AAE               	goto	u5330
 10980  12AD                     u5331:
 10981  12AD  2AAF               	goto	l3294
 10982  12AE                     u5330:
 10983  12AE                     l3292:
 10984  12AE  1442               	bsf	___fldiv@b,0
 10985  12AF                     l3294:
 10986  12AF  3001               	movlw	1
 10987  12B0  00C6               	movwf	??___fldiv
 10988  12B1                     u5345:
 10989  12B1  1003               	clrc
 10990  12B2  0DD2               	rlf	___fldiv@grs,f
 10991  12B3  0DD3               	rlf	___fldiv@grs+1,f
 10992  12B4  0DD4               	rlf	___fldiv@grs+2,f
 10993  12B5  0DD5               	rlf	___fldiv@grs+3,f
 10994  12B6  0BC6               	decfsz	??___fldiv,f
 10995  12B7  2AB1               	goto	u5345
 10996  12B8                     l3296:
 10997  12B8  30FF               	movlw	255
 10998  12B9  07D0               	addwf	___fldiv@new_exp,f
 10999  12BA  1803               	skipnc
 11000  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11001  12BC  30FF               	movlw	255
 11002  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11003  12BE                     l3298:
 11004  12BE  1FC4               	btfss	___fldiv@b+2,7
 11005  12BF  2AC1               	goto	u5351
 11006  12C0  2AC2               	goto	u5350
 11007  12C1                     u5351:
 11008  12C1  2AA1               	goto	l3288
 11009  12C2                     u5350:
 11010  12C2                     l3300:
 11011  12C2  01D7               	clrf	___fldiv@aexp
 11012  12C3                     l3302:
 11013  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11014  12C4  2AC6               	goto	u5361
 11015  12C5  2AC7               	goto	u5360
 11016  12C6                     u5361:
 11017  12C6  2AE3               	goto	l3310
 11018  12C7                     u5360:
 11019  12C7                     l3304:
 11020  12C7  30FF               	movlw	255
 11021  12C8  0552               	andwf	___fldiv@grs,w
 11022  12C9  00C6               	movwf	??___fldiv
 11023  12CA  30FF               	movlw	255
 11024  12CB  0553               	andwf	___fldiv@grs+1,w
 11025  12CC  00C7               	movwf	??___fldiv+1
 11026  12CD  30FF               	movlw	255
 11027  12CE  0554               	andwf	___fldiv@grs+2,w
 11028  12CF  00C8               	movwf	??___fldiv+2
 11029  12D0  307F               	movlw	127
 11030  12D1  0555               	andwf	___fldiv@grs+3,w
 11031  12D2  00C9               	movwf	??___fldiv+3
 11032  12D3  0849               	movf	??___fldiv+3,w
 11033  12D4  0448               	iorwf	??___fldiv+2,w
 11034  12D5  0447               	iorwf	??___fldiv+1,w
 11035  12D6  0446               	iorwf	??___fldiv,w
 11036  12D7  1903               	skipnz
 11037  12D8  2ADA               	goto	u5371
 11038  12D9  2ADB               	goto	u5370
 11039  12DA                     u5371:
 11040  12DA  2ADE               	goto	l752
 11041  12DB                     u5370:
 11042  12DB                     l3306:
 11043  12DB  01D7               	clrf	___fldiv@aexp
 11044  12DC  0AD7               	incf	___fldiv@aexp,f
 11045  12DD  2AE3               	goto	l3310
 11046  12DE                     l752:
 11047  12DE  1C42               	btfss	___fldiv@b,0
 11048  12DF  2AE1               	goto	u5381
 11049  12E0  2AE2               	goto	u5380
 11050  12E1                     u5381:
 11051  12E1  2AE3               	goto	l3310
 11052  12E2                     u5380:
 11053  12E2  2ADB               	goto	l3306
 11054  12E3                     l3310:
 11055  12E3  0857               	movf	___fldiv@aexp,w
 11056  12E4  1903               	btfsc	3,2
 11057  12E5  2AE7               	goto	u5391
 11058  12E6  2AE8               	goto	u5390
 11059  12E7                     u5391:
 11060  12E7  2B19               	goto	l3320
 11061  12E8                     u5390:
 11062  12E8                     l3312:
 11063  12E8  3001               	movlw	1
 11064  12E9  07C2               	addwf	___fldiv@b,f
 11065  12EA  3000               	movlw	0
 11066  12EB  1803               	skipnc
 11067  12EC  3001               	movlw	1
 11068  12ED  07C3               	addwf	___fldiv@b+1,f
 11069  12EE  3000               	movlw	0
 11070  12EF  1803               	skipnc
 11071  12F0  3001               	movlw	1
 11072  12F1  07C4               	addwf	___fldiv@b+2,f
 11073  12F2  3000               	movlw	0
 11074  12F3  1803               	skipnc
 11075  12F4  3001               	movlw	1
 11076  12F5  07C5               	addwf	___fldiv@b+3,f
 11077  12F6                     l3314:
 11078  12F6  1C45               	btfss	___fldiv@b+3,0
 11079  12F7  2AF9               	goto	u5401
 11080  12F8  2AFA               	goto	u5400
 11081  12F9                     u5401:
 11082  12F9  2B19               	goto	l3320
 11083  12FA                     u5400:
 11084  12FA                     l3316:
 11085  12FA  0842               	movf	___fldiv@b,w
 11086  12FB  00C6               	movwf	??___fldiv
 11087  12FC  0843               	movf	___fldiv@b+1,w
 11088  12FD  00C7               	movwf	??___fldiv+1
 11089  12FE  0844               	movf	___fldiv@b+2,w
 11090  12FF  00C8               	movwf	??___fldiv+2
 11091  1300  0845               	movf	___fldiv@b+3,w
 11092  1301  00C9               	movwf	??___fldiv+3
 11093  1302  3001               	movlw	1
 11094  1303  00CA               	movwf	??___fldiv+4
 11095  1304                     u5415:
 11096  1304  0D49               	rlf	??___fldiv+3,w
 11097  1305  0CC9               	rrf	??___fldiv+3,f
 11098  1306  0CC8               	rrf	??___fldiv+2,f
 11099  1307  0CC7               	rrf	??___fldiv+1,f
 11100  1308  0CC6               	rrf	??___fldiv,f
 11101  1309                     u5410:
 11102  1309  0BCA               	decfsz	??___fldiv+4,f
 11103  130A  2B04               	goto	u5415
 11104  130B  0849               	movf	??___fldiv+3,w
 11105  130C  00C5               	movwf	___fldiv@b+3
 11106  130D  0848               	movf	??___fldiv+2,w
 11107  130E  00C4               	movwf	___fldiv@b+2
 11108  130F  0847               	movf	??___fldiv+1,w
 11109  1310  00C3               	movwf	___fldiv@b+1
 11110  1311  0846               	movf	??___fldiv,w
 11111  1312  00C2               	movwf	___fldiv@b
 11112  1313                     l3318:
 11113  1313  3001               	movlw	1
 11114  1314  07D0               	addwf	___fldiv@new_exp,f
 11115  1315  1803               	skipnc
 11116  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11117  1317  3000               	movlw	0
 11118  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11119  1319                     l3320:
 11120  1319  0851               	movf	___fldiv@new_exp+1,w
 11121  131A  3A80               	xorlw	128
 11122  131B  00FF               	movwf	btemp+1
 11123  131C  3080               	movlw	128
 11124  131D  027F               	subwf	btemp+1,w
 11125  131E  1D03               	skipz
 11126  131F  2B22               	goto	u5425
 11127  1320  30FF               	movlw	255
 11128  1321  0250               	subwf	___fldiv@new_exp,w
 11129  1322                     u5425:
 11130  1322  1C03               	skipc
 11131  1323  2B25               	goto	u5421
 11132  1324  2B26               	goto	u5420
 11133  1325                     u5421:
 11134  1325  2B34               	goto	l3324
 11135  1326                     u5420:
 11136  1326                     l3322:
 11137  1326  30FF               	movlw	255
 11138  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11139  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11140  1329  00D0               	movwf	___fldiv@new_exp
 11141  132A  3000               	movlw	0
 11142  132B  00D1               	movwf	___fldiv@new_exp+1
 11143  132C  3000               	movlw	0
 11144  132D  00C5               	movwf	___fldiv@b+3
 11145  132E  3000               	movlw	0
 11146  132F  00C4               	movwf	___fldiv@b+2
 11147  1330  3000               	movlw	0
 11148  1331  00C3               	movwf	___fldiv@b+1
 11149  1332  3000               	movlw	0
 11150  1333  00C2               	movwf	___fldiv@b
 11151  1334                     l3324:
 11152  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11153  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11154  1336  0851               	movf	___fldiv@new_exp+1,w
 11155  1337  3A80               	xorlw	128
 11156  1338  00FF               	movwf	btemp+1
 11157  1339  3080               	movlw	128
 11158  133A  027F               	subwf	btemp+1,w
 11159  133B  1D03               	skipz
 11160  133C  2B3F               	goto	u5435
 11161  133D  3001               	movlw	1
 11162  133E  0250               	subwf	___fldiv@new_exp,w
 11163  133F                     u5435:
 11164  133F  1803               	skipnc
 11165  1340  2B42               	goto	u5431
 11166  1341  2B43               	goto	u5430
 11167  1342                     u5431:
 11168  1342  2B50               	goto	l758
 11169  1343                     u5430:
 11170  1343                     l3326:
 11171  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11172  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11173  1345  01D0               	clrf	___fldiv@new_exp
 11174  1346  01D1               	clrf	___fldiv@new_exp+1
 11175  1347                     l3328:
 11176  1347  3000               	movlw	0
 11177  1348  00C5               	movwf	___fldiv@b+3
 11178  1349  3000               	movlw	0
 11179  134A  00C4               	movwf	___fldiv@b+2
 11180  134B  3000               	movlw	0
 11181  134C  00C3               	movwf	___fldiv@b+1
 11182  134D  3000               	movlw	0
 11183  134E  00C2               	movwf	___fldiv@b
 11184  134F                     l3330:
 11185  134F  01CF               	clrf	___fldiv@sign
 11186  1350                     l758:
 11187  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11188  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11189  1352  0850               	movf	___fldiv@new_exp,w
 11190  1353  00C6               	movwf	??___fldiv
 11191  1354  0846               	movf	??___fldiv,w
 11192  1355  00D6               	movwf	___fldiv@bexp
 11193  1356                     l3332:
 11194  1356  1C56               	btfss	___fldiv@bexp,0
 11195  1357  2B59               	goto	u5441
 11196  1358  2B5A               	goto	u5440
 11197  1359                     u5441:
 11198  1359  2B5C               	goto	l3336
 11199  135A                     u5440:
 11200  135A                     l3334:
 11201  135A  17C4               	bsf	___fldiv@b+2,7
 11202  135B  2B60               	goto	l760
 11203  135C                     l3336:
 11204  135C  307F               	movlw	127
 11205  135D  00C6               	movwf	??___fldiv
 11206  135E  0846               	movf	??___fldiv,w
 11207  135F  05C4               	andwf	___fldiv@b+2,f
 11208  1360                     l760:
 11209  1360  0856               	movf	___fldiv@bexp,w
 11210  1361  00C6               	movwf	??___fldiv
 11211  1362  1003               	clrc
 11212  1363  0C46               	rrf	??___fldiv,w
 11213  1364  00C7               	movwf	??___fldiv+1
 11214  1365  0847               	movf	??___fldiv+1,w
 11215  1366  00C5               	movwf	___fldiv@b+3
 11216  1367  084F               	movf	___fldiv@sign,w
 11217  1368  00C6               	movwf	??___fldiv
 11218  1369  0846               	movf	??___fldiv,w
 11219  136A  04C5               	iorwf	___fldiv@b+3,f
 11220  136B  2A04               	goto	l3244
 11221  136C                     l738:
 11222  136C  0008               	return
 11223  136D                     __end_of___fldiv:
 11224                           
 11225                           	psect	text34
 11226  196F                     __ptext34:	
 11227 ;; *************** function _ADC_val *****************
 11228 ;; Defined at:
 11229 ;;		line 12 in file "ADC.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  ADRES_L         1    wreg     unsigned char 
 11232 ;;  ADRES_H         1    0[COMMON] unsigned char 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  ADRES_L         1    0[COMMON] unsigned char 
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      unsigned char 
 11237 ;; Registers used:
 11238 ;;		wreg
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11244 ;;      Params:         1       0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0
 11246 ;;      Temps:          1       0       0       0       0
 11247 ;;      Totals:         2       0       0       0       0
 11248 ;;Total ram usage:        2 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; This function calls:
 11251 ;;		Nothing
 11252 ;; This function is called by:
 11253 ;;		_ADC_CH0
 11254 ;;		_ADC_CH1
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function _ADC_val
 11260  196F                     _ADC_val:
 11261  196F                     l2862:	
 11262                           ;incstack = 0
 11263                           ; Regs used in _ADC_val: [wreg]
 11264                           
 11265                           
 11266                           ;ADC.c: 13:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
 11267  196F  1283               	bcf	3,5	;RP0=0, select bank0
 11268  1970  1303               	bcf	3,6	;RP1=0, select bank0
 11269  1971  081E               	movf	30,w	;volatile
 11270  1972  00F1               	movwf	??_ADC_val
 11271  1973  0871               	movf	??_ADC_val,w
 11272  1974  1683               	bsf	3,5	;RP0=1, select bank1
 11273  1975  1303               	bcf	3,6	;RP1=0, select bank1
 11274  1976  00D3               	movwf	_VALOR_ADC^(0+128)
 11275                           
 11276                           ;ADC.c: 15:     return VALOR_ADC;
 11277  1977  0853               	movf	_VALOR_ADC^(0+128),w
 11278  1978                     l149:
 11279  1978  0008               	return
 11280  1979                     __end_of_ADC_val:
 11281                           
 11282                           	psect	text35
 11283  19DD                     __ptext35:	
 11284 ;; *************** function _ADC_ch *****************
 11285 ;; Defined at:
 11286 ;;		line 18 in file "ADC.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  channel         2    0[COMMON] unsigned short 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;		None
 11291 ;; Return value:  Size  Location     Type
 11292 ;;                  2    0[COMMON] unsigned int 
 11293 ;; Registers used:
 11294 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11300 ;;      Params:         2       0       0       0       0
 11301 ;;      Locals:         0       0       0       0       0
 11302 ;;      Temps:          0       0       0       0       0
 11303 ;;      Totals:         2       0       0       0       0
 11304 ;;Total ram usage:        2 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_ADC_CH0
 11310 ;;		_ADC_CH1
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           
 11315                           ;psect for function _ADC_ch
 11316  19DD                     _ADC_ch:
 11317  19DD                     l2852:	
 11318                           ;incstack = 0
 11319                           ; Regs used in _ADC_ch: [wreg-fsr0h+status,2+status,0]
 11320                           
 11321                           
 11322                           ;ADC.c: 19:      switch (channel) {
 11323  19DD  29F3               	goto	l2856
 11324  19DE                     l153:	
 11325                           ;ADC.c: 20:         case 0:
 11326                           
 11327                           
 11328                           ;ADC.c: 21:             ADCON0bits.CHS3 = 0;
 11329  19DE  1283               	bcf	3,5	;RP0=0, select bank0
 11330  19DF  1303               	bcf	3,6	;RP1=0, select bank0
 11331  19E0  129F               	bcf	31,5	;volatile
 11332                           
 11333                           ;ADC.c: 22:             ADCON0bits.CHS2 = 0;
 11334  19E1  121F               	bcf	31,4	;volatile
 11335                           
 11336                           ;ADC.c: 23:             ADCON0bits.CHS1 = 0;
 11337  19E2  119F               	bcf	31,3	;volatile
 11338                           
 11339                           ;ADC.c: 24:             ADCON0bits.CHS0 = 0;
 11340  19E3  111F               	bcf	31,2	;volatile
 11341                           
 11342                           ;ADC.c: 26:             break;
 11343  19E4  2A00               	goto	l157
 11344  19E5                     l155:	
 11345                           ;ADC.c: 27:         case 1:
 11346                           
 11347                           
 11348                           ;ADC.c: 28:             ADCON0bits.CHS3 = 0;
 11349  19E5  1283               	bcf	3,5	;RP0=0, select bank0
 11350  19E6  1303               	bcf	3,6	;RP1=0, select bank0
 11351  19E7  129F               	bcf	31,5	;volatile
 11352                           
 11353                           ;ADC.c: 29:             ADCON0bits.CHS2 = 0;
 11354  19E8  121F               	bcf	31,4	;volatile
 11355                           
 11356                           ;ADC.c: 30:             ADCON0bits.CHS1 = 0;
 11357  19E9  119F               	bcf	31,3	;volatile
 11358                           
 11359                           ;ADC.c: 31:             ADCON0bits.CHS0 = 1;
 11360  19EA  151F               	bsf	31,2	;volatile
 11361                           
 11362                           ;ADC.c: 32:             break;
 11363  19EB  2A00               	goto	l157
 11364  19EC                     l156:	
 11365                           ;ADC.c: 33:         default:
 11366                           
 11367                           
 11368                           ;ADC.c: 34:             ADCON0bits.CHS3 = 0;
 11369  19EC  1283               	bcf	3,5	;RP0=0, select bank0
 11370  19ED  1303               	bcf	3,6	;RP1=0, select bank0
 11371  19EE  129F               	bcf	31,5	;volatile
 11372                           
 11373                           ;ADC.c: 35:             ADCON0bits.CHS2 = 0;
 11374  19EF  121F               	bcf	31,4	;volatile
 11375                           
 11376                           ;ADC.c: 36:             ADCON0bits.CHS1 = 0;
 11377  19F0  119F               	bcf	31,3	;volatile
 11378                           
 11379                           ;ADC.c: 37:             ADCON0bits.CHS0 = 0;
 11380  19F1  111F               	bcf	31,2	;volatile
 11381                           
 11382                           ;ADC.c: 38:             break;
 11383  19F2  2A00               	goto	l157
 11384  19F3                     l2856:
 11385                           
 11386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11387                           ; Switch size 1, requested type "simple"
 11388                           ; Number of cases is 1, Range of values is 0 to 0
 11389                           ; switch strategies available:
 11390                           ; Name         Instructions Cycles
 11391                           ; simple_byte            4     3 (average)
 11392                           ; direct_byte           11     8 (fixed)
 11393                           ; jumptable            260     6 (fixed)
 11394                           ;	Chosen strategy is simple_byte
 11395  19F3  0871               	movf	ADC_ch@channel+1,w
 11396  19F4  3A00               	xorlw	0	; case 0
 11397  19F5  1903               	skipnz
 11398  19F6  29F8               	goto	l3812
 11399  19F7  29EC               	goto	l156
 11400  19F8                     l3812:
 11401                           
 11402                           ; Switch size 1, requested type "simple"
 11403                           ; Number of cases is 2, Range of values is 0 to 1
 11404                           ; switch strategies available:
 11405                           ; Name         Instructions Cycles
 11406                           ; simple_byte            7     4 (average)
 11407                           ; direct_byte           14     8 (fixed)
 11408                           ; jumptable            260     6 (fixed)
 11409                           ;	Chosen strategy is simple_byte
 11410  19F8  0870               	movf	ADC_ch@channel,w
 11411  19F9  3A00               	xorlw	0	; case 0
 11412  19FA  1903               	skipnz
 11413  19FB  29DE               	goto	l153
 11414  19FC  3A01               	xorlw	1	; case 1
 11415  19FD  1903               	skipnz
 11416  19FE  29E5               	goto	l155
 11417  19FF  29EC               	goto	l156
 11418  1A00                     l157:
 11419  1A00  0008               	return
 11420  1A01                     __end_of_ADC_ch:
 11421  007E                     btemp	set	126	;btemp
 11422  007E                     wtemp0	set	126
 11423                           
 11424                           	psect	config
 11425                           
 11426                           ;Config register CONFIG1 @ 0x2007
 11427                           ;	Oscillator Selection bits
 11428                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 11429                           ;	Watchdog Timer Enable bit
 11430                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11431                           ;	Power-up Timer Enable bit
 11432                           ;	PWRTE = OFF, PWRT disabled
 11433                           ;	RE3/MCLR pin function select bit
 11434                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11435                           ;	Code Protection bit
 11436                           ;	CP = OFF, Program memory code protection is disabled
 11437                           ;	Data Code Protection bit
 11438                           ;	CPD = OFF, Data memory code protection is disabled
 11439                           ;	Brown Out Reset Selection bits
 11440                           ;	BOREN = ON, BOR enabled
 11441                           ;	Internal External Switchover bit
 11442                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11443                           ;	Fail-Safe Clock Monitor Enabled bit
 11444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11445                           ;	Low Voltage Programming Enable bit
 11446                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11447                           ;	In-Circuit Debugger Mode bit
 11448                           ;	DEBUG = 0x1, unprogrammed default
 11449  2007                     	org	8199
 11450  2007  23D2               	dw	9170
 11451                           
 11452                           ;Config register CONFIG2 @ 0x2008
 11453                           ;	Brown-out Reset Selection bit
 11454                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11455                           ;	Flash Program Memory Self Write Enable bits
 11456                           ;	WRT = OFF, Write protection off
 11457  2008                     	org	8200
 11458  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    144
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     41      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_4(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> data(BANK1[16]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_CH1->___xxtofl
    _ADC_CH0->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_CH1->___fldiv
    _ADC_CH0->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   47186
                                             78 BANK0      1     1      0
                            _ADC_CH0
                            _ADC_CH1
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   32160
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CH1                                              4     4      0    6998
                                             56 BANK0      4     4      0
                             _ADC_ch
                            _ADC_val
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_CH0                                              4     4      0    6998
                                             56 BANK0      4     4      0
                             _ADC_ch
                            _ADC_val
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_val                                              3     2      1     152
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_ch                                               2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CH0
     _ADC_ch
     _ADC_val
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_CH1
     _ADC_ch
     _ADC_val
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A3      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 12:16:48 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          pc 0002  
             ___fldiv@sign 004F                         l83 19DC                         l95 1EA3  
                       l89 1D88               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l112 1990  
                      l121 1B9F                        l106 0805                        l130 1B10  
                      l124 10D2                        l109 19BC                        l118 1A24  
                      l153 19DE                        l155 19E5                        l156 19EC  
                      l157 1A00                        l149 1978                        l334 072A  
                      l326 05C3                        l319 057F                        l353 1A55  
                      l506 0074                        l266 0C9E                        l355 1A6D  
                      l523 093F                        l259 1577                        l540 1BD8  
                      l524 08A4                        l541 1BED                        l701 174D  
                      l349 07EF                        l534 0932                        l711 1793  
                      l527 0902                        l519 1C9A                        l544 1EC0  
                      l552 1983                        l288 013A                        l705 1771  
                      l609 1C41                        l722 17F3                        l714 17D1  
                      l570 118F                        l539 1BBC                        l547 1F2C  
                      l723 17FF                        l563 086C                        l571 1101  
                      l820 1F68                        l548 1F45                        l556 0881  
                      l389 1D00                        l581 1182                        l822 1FFF  
                      l726 1A48                        l566 0881                        l574 1152  
                      l760 1360                        l752 12DE                        l736 11EC  
                      l680 15DB                        l840 19A2                        l833 1FC9  
                      l738 136C                        l834 1FD5                        l826 1FAD  
                      l659 1B54                        l684 1682                        l693 17FF  
                      l669 1ACE                        l758 1350                        l782 0F6B  
                      l686 1659                        l776 0FFF                        l795 1A82  
                      l788 0FF3                        l797 1A94                        _RE0 0048  
                      _RE1 0049            __end_of_ADC_CH0 1D89            __end_of_ADC_CH1 1EA4  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
          __end_of_ADC_val 1979               ___flmul@aexp 0036               ___flmul@bexp 0037  
              _sprintf$971 00AE               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038               ___fltol@exp1 005B                       l3010 088F  
                     l3002 1177                       l3100 1BB4                       l3020 08A5  
                     l3004 1187                       l3102 1BD0                       l3110 1EA4  
                     l3030 08D2                       l3022 08AD                       l3014 0898  
                     l3200 1190                       l3104 1BEA                       l3120 1F04  
                     l3112 1EB8                       l3040 0906                       l3032 08E4  
                     l3024 08BE                       l3008 0882                       l2400 0023  
                     l3210 11A7                       l3202 1197                       l3106 1BEC  
                     l3122 1F08                       l3114 1ED4                       l3130 1979  
                     l3034 08F2                       l3026 08C0                       l2410 0039  
                     l2402 0027                       l3300 12C2                       l3220 11BF  
                     l3212 11AC                       l3204 119D                       l3124 1F42  
                     l3116 1EDC                       l3132 1981                       l3140 0813  
                     l3060 1A49                       l3036 08F3                       l3028 08C9  
                     l2500 1A9E                       l2420 0059                       l2412 003D  
                     l2404 0029                       l3310 12E3                       l3302 12C3  
                     l3230 11D4                       l3222 11C4                       l3214 11B4  
                     l3206 11A1                       l3126 1F44                       l3118 1EE0  
                     l3134 1983                       l3150 083A                       l3070 1A69  
                     l3062 1A4B                       l3054 0927                       l3046 090E  
                     l3038 08FC                       l2510 1ABD                       l2502 1AA5  
                     l2422 0060                       l2414 0041                       l2406 002F  
                     l3312 12E8                       l3320 1319                       l3304 12C7  
                     l3240 11F4                       l3232 11D9                       l3224 11CA  
                     l3216 11B5                       l3208 11A2                       l3400 1B64  
                     l2600 163D                       l2520 157F                       l3160 0848  
                     l3152 083C                       l3144 081C                       l3080 1CBB  
                     l3064 1A4F                       l3056 0937                       l3048 0920  
                     l2512 1AC4                       l2504 1AA9                       l2416 0052  
                     l2408 0032                       l2424 0066                       l2440 1C4E  
                     l2432 1C42                       l3330 134F                       l3322 1326  
                     l3314 12F6                       l3306 12DB                       l3250 1212  
                     l3242 1200                       l3234 11E1                       l3226 11CE  
                     l3218 11B7                       l3402 1B73                       l3410 1A07  
                     l2610 166D                       l2602 165D                       l2530 1594  
                     l2522 1585                       l3170 0871                       l3154 0840  
                     l3162 085A                       l3146 0831                       l3138 0806  
                     l3090 1CE9                       l3082 1CBF                       l3074 1C9B  
                     l3066 1A5C                       l2506 1AAD                       l2514 1ACA  
                     l2426 006B                       l2418 0058                       l2450 1C67  
                     l2442 1C52                       l2434 1C43                       l3332 1356  
                     l3324 1334                       l3316 12FA                       l3260 123D  
                     l3244 1204                       l3236 11E2                       l3228 11CF  
                     l2380 1A8B                       l2372 1A6F                       l3404 1B79  
                     l3412 1A0C                       l3420 1ACF                       l2700 17E8  
                     l2612 1676                       l2604 1666                       l2540 15AC  
                     l2532 159C                       l2524 1589                       l3172 0876  
                     l3148 0832                       l3092 1CF2                       l3084 1CC8  
                     l3076 1CAB                       l3180 1C06                       l3068 1A63  
                     l2508 1AB7                       l2428 0070                       l2460 1C86  
                     l2452 1C6B                       l2444 1C57                       l2436 1C47  
                     l3500 0125                       l3334 135A                       l3326 1343  
                     l3318 1313                       l3270 1262                       l3262 1245  
                     l3254 121B                       l3238 11E4                       l2382 1A90  
                     l2374 1A71                       l3350 1F70                       l3342 1F47  
                     l3430 1D09                       l3406 1984                       l3414 1A13  
                     l3422 1AD2                       l2710 17FE                       l2702 17E9  
                     l2630 16BC                       l2622 1694                       l2606 1668  
                     l2614 167A                       l2550 15BE                       l2542 15B2  
                     l2534 159D                       l2526 158A                       l2518 1578  
                     l3086 1CDA                       l3078 1CAE                       l3094 1CF8  
                     l3182 1C0A                       l3190 1C39                       l3174 1BEE  
                     l2470 1B11                       l2390 000F                       l2454 1C6F  
                     l2446 1C5D                       l2462 1C8C                       l2438 1C4C  
                     l3510 0158                       l3502 0136                       l3336 135C  
                     l3328 1347                       l3280 128D                       l3272 1263  
                     l3264 1247                       l3256 122D                       l3248 120D  
                     l2376 1A78                       l2800 0F37                       l2720 0CB1  
                     l2712 0C9F                       l3360 1F92                       l3344 1F4C  
                     l3440 1D19                       l3432 1D0C                       l3416 1A19  
                     l3408 1A02                       l3424 1AEE                       l2704 17ED  
                     l2632 16BE                       l2624 16AB                       l2616 1686  
                     l2640 16D1                       l2608 166C                       l2552 15C3  
                     l2560 15D3                       l2544 15B3                       l2528 158F  
                     l2536 159F                       l3168 0861                       l3088 1CE8  
                     l3184 1C1C                       l3176 1BF6                       l2480 1B27  
                     l2472 1B13                       l2392 0013                       l2464 1C91  
                     l2456 1C79                       l2448 1C60                       l3600 04CB  
                     l3520 017E                       l3512 0164                       l3504 0138  
                     l3290 12AA                       l3266 124C                       l3274 126C  
                     l3282 1291                       l3258 1235                       l2378 1A7C  
                     l2810 0F4F                       l2802 0F3B                       l2730 0CCD  
                     l2722 0CB6                       l2714 0CA6                       l3370 1FC3  
                     l3362 1F96                       l3354 1F79                       l3346 1F50  
                     l3442 1D2A                       l3434 1D0D                       l3450 1E1F  
                     l2386 0801                       l3418 1A1E                       l3426 1AF4  
                     l3098 1BA0                       l2706 17EF                       l2642 16E7  
                     l2650 173F                       l2634 16C2                       l2626 16AF  
                     l2618 168B                       l2570 15F1                       l2562 15E1  
                     l2554 15C8                       l2546 15B9                       l2538 15A7  
                     l3194 1A25                       l3186 1C2A                       l3178 1BF9  
                     l2490 1B4A                       l2482 1B2B                       l2474 1B19  
                     l2394 0018                       l2466 1C96                       l2458 1C7F  
                     l3602 04D1                       l3530 01D1                       l3522 0197  
                     l3514 0168                       l3292 12AE                       l3284 1297  
                     l3276 127E                       l3268 125E                       l2820 0F70  
                     l2812 0F50                       l2804 0F3C                       l2740 0CE2  
                     l2732 0CD2                       l2724 0CBB                       l2716 0CAC  
                     l3380 1FF6                       l3372 1FCD                       l3364 1FA4  
                     l3356 1F7E                       l3348 1F60                       l3444 1D83  
                     l3436 1D0E                       l3428 1D01                       l3460 1E3F  
                     l3452 1E20                       l2708 17FA                       l2660 176C  
                     l2652 1755                       l2644 1725                       l2636 16C3  
                     l2628 16B3                       l2580 1605                       l2572 15F5  
                     l2564 15E5                       l2556 15D0                       l2548 15BD  
                     l3196 1A29                       l3188 1C33                       l2484 1B3C  
                     l2476 1B1C                       l2492 1B50                       l2900 1534  
                     l2396 001A                       l2388 000C                       l3700 07A8  
                     l3620 0519                       l3604 04DD                       l3612 04F2  
                     l3540 020C                       l3532 01DC                       l3524 01B0  
                     l3516 016C                       l3508 013C                       l3294 12AF  
                     l3286 129F                       l3278 127F                       l2822 0F75  
                     l2830 0FA6                       l2814 0F54                       l2806 0F45  
                     l2750 0CFE                       l2742 0CE7                       l2734 0CD8  
                     l2726 0CC3                       l2718 0CB0                       l3382 1FF7  
                     l3374 1FD7                       l3366 1FB4                       l3358 1F8B  
                     l3438 1D15                       l3462 1E9E                       l3454 1E21  
                     l3446 1E13                       l3390 19C2                       l2670 177F  
                     l2662 1770                       l2654 175A                       l2646 172B  
                     l2638 16CC                       l2590 1619                       l2582 1609  
                     l2574 15F9                       l2566 15E9                       l2558 15D1  
                     l2486 1B42                       l2478 1B23                       l2398 001E  
                     l2910 0950                       l3710 07D1                       l3702 07AE  
                     l3630 0594                       l3622 0554                       l3614 04FF  
                     l3606 04E4                       l3550 029E                       l3542 0212  
                     l3534 01E2                       l3526 01B4                       l3518 017A  
                     l3470 008A                       l3296 12B8                       l3288 12A1  
                     l2840 0FD9                       l2832 0FB3                       l2824 0F83  
                     l2816 0F68                       l2808 0F4B                       l2760 0D29  
                     l2752 0D03                       l2744 0CEF                       l2736 0CDC  
                     l2728 0CC5                       l3376 1FED                       l3368 1FBF  
                     l3456 1E28                       l3448 1E1C                       l3392 19D4  
                     l2680 1790                       l2664 1775                       l2672 1781  
                     l2648 1730                       l2592 161D                       l2584 160D  
                     l2576 15FD                       l2568 15ED                       l2488 1B43  
                     l2496 1A95                       l2904 0943                       l3704 07B5  
                     l3640 05CC                       l3632 059A                       l3624 0573  
                     l3616 050D                       l3608 04ED                       l3560 0326  
                     l3552 02B9                       l3544 0231                       l3536 01F5  
                     l3528 01B8                       l3480 00BC                       l3472 008F  
                     l3464 0078                       l3298 12BE                       l2842 0FE7  
                     l2834 0FBE                       l2826 0F87                       l2770 0DC6  
                     l2762 0D46                       l2746 0CF1                       l2738 0CDD  
                     l3378 1FF2                       l3458 1E2C                       l3394 19D5  
                     l3386 19BD                       l2690 17AF                       l2666 1778  
                     l2658 1763                       l2674 1785                       l2594 1621  
                     l2586 1611                       l2578 1601                       l2498 1A9B  
                     l2922 0AC7                       l2906 0947                       l3706 07B9  
                     l3650 0655                       l3642 05D1                       l3634 05A7  
                     l3626 0587                       l3618 0514                       l3570 039B  
                     l3562 0341                       l3546 027C                       l3538 0208  
                     l3554 02C1                       l3810 0150                       l3490 00F2  
                     l3482 00CF                       l3474 0093                       l3466 007D  
                     l3714 07D9                       l3730 1D91                       l3812 19F8  
                     l2852 19DD                       l2844 0FEB                       l2836 0FCD  
                     l2828 0FA0                       l2780 0E29                       l2772 0DCF  
                     l2764 0D62                       l2756 0D0C                       l2748 0CF9  
                     l3396 1B55                       l3388 19C1                       l2692 17CD  
                     l2684 1798                       l2676 1786                       l2668 177A  
                     l2588 1615                       l2596 1625                       l2940 0C72  
                     l2916 0A38                       l2908 0949                       l3708 07C5  
                     l3660 06FE                       l3652 0690                       l3644 05D8  
                     l3636 05B6                       l3628 0590                       l3572 03A3  
                     l3564 0368                       l3580 03E9                       l3556 02D0  
                     l3548 0295                       l3716 07EB                       l3492 00F6  
                     l3484 00D3                       l3476 00A3                       l3468 0083  
                     l3740 1DB8                       l3732 1D96                       l2862 196F  
                     l2846 0FEC                       l2838 0FD7                       l2790 0EC9  
                     l2782 0E42                       l2774 0DDF                       l2766 0D8E  
                     l2758 0D1C                       l2870 19AD                       l3398 1B5B  
                     l2694 17D6                       l2686 179D                       l2678 178A  
                     l2598 1626                       l2950 199F                       l2934 0BE3  
                     l2918 0A3F                       l2926 0AF4                       l3670 071C  
                     l3662 0705                       l3654 06AF                       l3646 05DC  
                     l3638 05BD                       l3582 041E                       l3574 03C1  
                     l3566 0377                       l3558 0317                       l3494 00F9  
                     l3478 00A7                       l3486 00E3                       l3750 1DE0  
                     l3742 1DC1                       l3734 1D9B                       l3726 1D89  
                     l2856 19F3                       l2848 0FF7                       l2792 0EEF  
                     l2784 0E5F                       l2776 0DFC                       l2768 0DAA  
                     l2872 19B0                       l2880 10C7                       l2696 17DB  
                     l2688 17AB                       l2952 19A1                       l2944 1992  
                     l2936 0BEA                       l2928 0AFB                       l3680 0754  
                     l3672 0724                       l3664 0709                       l3656 06BB  
                     l3648 05FA                       l3592 046F                       l3584 046B  
                     l3568 0392                       l3496 010E                       l3488 00F1  
                     l3752 1DFE                       l3744 1DCD                       l3736 1DA3  
                     l3728 1D8E                       l2794 0F17                       l2786 0E8C  
                     l2778 0E0C                       l2874 19B9                       l2866 19A4  
                     l2882 10CA                       l2698 17E3                       l2970 1108  
                     l2962 10EF                       l2946 1993                       l3690 0780  
                     l3682 075C                       l3674 0735                       l3666 070F  
                     l3658 06F6                       l3586 046D                       l3578 03E0  
                     l3498 0121                       l3754 1E06                       l3746 1DD6  
                     l3738 1DAC                       l2796 0F20                       l2788 0E9C  
                     l2868 19A7                       l2884 10CF                       l2876 10BE  
                     l2980 1139                       l2972 1117                       l2956 10D3  
                     l2948 1999                       l3692 0789                       l3684 0768  
                     l3676 073C                       l3596 04A6                       l3668 0716  
                     l3748 1DDB                       l2798 0F2E                       l2878 10C1  
                     l2982 1143                       l2974 1119                       l2958 10E6  
                     l2894 1483                       l2886 1370                       l3694 078D  
                     l3686 076E                       l3678 074B                       l3598 04B0  
                     l2984 1144                       l2976 1122                       l2968 1102  
                     l2896 1489                       l2888 1376                       l3696 0798  
                     l3688 0772                       l2994 115E                       l2986 114C  
                     l2978 112B                       l3698 07A4                       l2988 1156  
                     l2996 1170                       STR_1 10AE                       STR_2 10B2  
                     STR_3 10B6                       STR_4 10A0                       u3100 0013  
                     u3101 0012                       u3110 001E                       u3111 001D  
                     u3120 002F                       u3200 1C47                       u3121 002E  
                     u3201 1C46                       u3210 1C52                       u4011 0DEE  
                     u3211 1C51                       u4012 0DF5                       u3140 0041  
                     u3220 1C5D                       u4101 0F09                       u4021 0E1B  
                     u4013 0DFC                       u4005 0DC8                       u3141 0040  
                     u3221 1C5C                       u3070 1A7C                       u4102 0F10  
                     u4022 0E22                       u3310 1B2B                       u3071 1A7B  
                     u4103 0F17                       u4023 0E29                       u3311 1B2A  
                     u3135 0033                       u4200 0F87                       u5000 0813  
                     u3160 0052                       u3240 1C6F                       u4201 0F86  
                     u4041 0E51                       u5001 0812                       u3305 1B1D  
                     u3161 0051                       u3241 1C6E                       u3090 1A90  
                     u4210 0F96                       u4130 0F3B                       u4042 0E58  
                     u5010 082A                       u3330 1B3C                       u3410 1ACA  
                     u3250 1C79                       u3091 1A8F                       u4131 0F3A  
                     u4115 0F19                       u4051 0E7E                       u4043 0E5F  
                     u4035 0E2B                       u3331 1B3B                       u3411 1AC9  
                     u3155 0042                       u3251 1C78                       u3235 1C61  
                     u4220 0FB3                       u4052 0E85                       u3500 15E5  
                     u3420 1589                       u5020 0840                       u5100 1BF6  
                     u3180 0066                       u3085 1A83                       u4221 0FB2  
                     u4125 0F30                       u4061 0EAB                       u4053 0E8C  
                     u3501 15E4                       u3421 1588                       u5021 083F  
                     u5101 1BF5                       u3325 1B2C                       u3405 1ABE  
                     u3181 0065                       u3165 004E                       u4230 0FCD  
                     u4150 0F4F                       u4070 0ED5                       u4062 0EB2  
                     u3510 163D                       u3430 158F                       u5030 0847  
                     u3350 1B50                       u3190 006B                       u3270 1C8C  
                     u4231 0FCC                       u4215 0F91                       u4151 0F4E  
                     u4063 0EB9                       u3511 163C                       u3431 158E  
                     u5031 0846                       u5015 0825                       u3351 1B4F  
                     u3335 1B38                       u3191 006A                       u3175 005A  
                     u3271 1C8B                       u3255 1C75                       u5200 11D4  
                     u4240 0FEB                       u4160 0F54                       u3520 1648  
                     u3440 1594                       u5120 1C0A                       u3360 1A9B  
                     u3280 1C91                       u6000 071C                       u5201 11D3  
                     u4241 0FEA                       u4225 0FAF                       u4161 0F53  
                     u4145 0F3E                       u4081 0EE1                       u3601 169D  
                     u3521 1646                       u3441 1593                       u5121 1C09  
                     u3345 1B44                       u3361 1A9A                       u4305 14A6  
                     u3281 1C90                       u3265 1C80                       u6001 071B  
                     u5210 11D9                       u4170 0F68                       u4090 0EFD  
                     u4082 0EE8                       u3610 16AF                       u3602 16A4  
                     u3530 1649                       u3450 15B2                       u5050 0859  
                     u5130 1C1C                       u3290 1B19                       u4250 1376  
                     u4330 0947                       u6010 0724                       u5211 11D8  
                     u4235 0FC9                       u4171 0F67                       u4083 0EEF  
                     u4075 0ED0                       u3611 16AE                       u3603 16AB  
                     u3515 1639                       u3451 15B1                       u5051 0858  
                     u5131 1C1B                       u5115 1BFB                       u3291 1B18  
                     u4315 14F3                       u4251 1375                       u4331 0946  
                     u6011 0723                       u5300 1297                       u5220 11F4  
                     u4180 0F6F                       u3700 175A                       u3620 16B3  
                     u3540 165D                       u3460 15BD                       u5060 0860  
                     u3380 1AAD                       u4500 1999                       u4420 0AFB  
                     u4340 0950                       u6100 07C5                       u6020 0735  
                     u5301 1296                       u5221 11F3                       u4181 0F6E  
                     u3701 1759                       u3621 16B2                       u3541 165C  
                     u3461 15BC                       u5061 085F                       u5045 0849  
                     u3381 1AAC                       u4325 153F                       u4501 1998  
                     u4421 0AFA                       u4405 0A8E                       u4341 094F  
                     u6101 07C4                       u6021 0734                       u5310 129F  
                     u5230 1212                       u4190 0F75                       u3630 16C2  
                     u3550 166C                       u3470 15C3                       u5150 1C39  
                     u3390 1AB7                       u4510 199F                       u6110 07D1  
                     u6030 074B                       u5311 129E                       u5231 1211  
                     u4191 0F74                       u4095 0EF8                       u3631 16C1  
                     u3551 166B                       u3471 15C2                       u5151 1C38  
                     u5135 1C18                       u3391 1AB6                       u3375 1A9F  
                     u4511 199E                       u4415 0ACA                       u6111 07D0  
                     u6031 074A                       u5400 12FA                       u5240 124C  
                     u5160 11A1                       u3800 17AF                       u3720 1770  
                     u3480 15C8                       u5080 0871                       u4520 10E6  
                     u6120 07EB                       u6040 075C                       u5401 12F9  
                     u5241 124B                       u5161 11A0                       u3801 17AE  
                     u3721 176F                       u3481 15C7                       u5081 0870  
                     u5145 1C2B                       u4521 10E5                       u4265 1393  
                     u6121 07EA                       u6041 075B                       u6025 0731  
                     u5410 1309                       u5330 12AE                       u5170 11A7  
                     u3810 17BE                       u3730 1775                       u3650 16E7  
                     u3570 1682                       u3490 15E1                       u5090 0876  
                     u4610 116F                       u4530 1100                       u4290 1489  
                     u6050 0768                       u5331 12AD                       u5171 11A6  
                     u3731 1774                       u3715 1765                       u3651 16E6  
                     u3571 1681                       u3491 15E0                       u5091 0875  
                     u5075 0863                       u4611 116E                       u4531 10FF  
                     u3395 1AB3                       u4291 1488                       u4275 13ED  
                     u4435 0B1B                       u4355 0970                       u6051 0767  
                     u6035 0747                       u5420 1326                       u5180 11AC  
                     u3900 0CBB                       u3820 17CD                       u3740 177F  
                     u3580 1686                       u4700 0902                       u4620 1176  
                     u4460 0BEA                       u4380 0A3F                       u6060 0772  
                     u5421 1325                       u5325 12A3                       u5181 11AB  
                     u3901 0CBA                       u3821 17CC                       u3741 177E  
                     u3661 16FE                       u3653 16E3                       u3645 16C5  
                     u3581 1685                       u3565 166F                       u4701 0901  
                     u4621 1175                       u4605 115F                       u4285 1442  
                     u4461 0BE9                       u4445 0B57                       u4381 0A3E  
                     u4365 09AC                       u6061 0771                       u5430 1343  
                     u5350 12C2                       u5270 1262                       u5190 11CE  
                     u3910 0CDC                       u5510 1FB3                       u3830 17D6  
                     u3750 1785                       u3670 1712                       u3662 16FF  
                     u3590 168B                       u4710 0906                       u4550 1139  
                     u6070 0780                       u5431 1342                       u5415 1304  
                     u5351 12C1                       u5271 1261                       u5255 124E  
                     u5191 11CD                       u3911 0CDB                       u5511 1FB2  
                     u3831 17D5                       u3815 17B9                       u3751 1784  
                     u3671 1713                       u3663 1704                       u3591 168A  
                     u4711 0905                       u4551 1138                       u4455 0BA2  
                     u4375 09F7                       u6071 077F                       u5440 135A  
                     u5360 12C7                       u3920 0CE2                       u5600 1A19  
                     u3840 17DB                       u3760 178A                       u3680 1730  
                     u3672 1718                       u3664 1705                       u4720 090D  
                     u4640 1187                       u6080 0798                       u5441 1359  
                     u5425 1322                       u5361 12C6                       u5345 12B1  
                     u5265 1257                       u3921 0CE1                       u5505 1FA5  
                     u5601 1A18                       u6137 10CC                       u3841 17DA  
                     u3761 1789                       u3681 172F                       u3673 1719  
                     u3665 170A                       u4721 090C                       u4641 1186  
                     u4545 1124                       u6081 0797                       u5370 12DB  
                     u5290 127E                       u3930 0CE7                       u5530 1FC3  
                     u5450 1F4C                       u5610 1ADC                       u3850 17E8  
                     u3770 1790                       u3690 1755                       u3666 170B  
                     u4810 1A69                       u4650 088F                       u4570 1152  
                     u6090 07AE                       u5435 133F                       u5371 12DA  
                     u5291 127D                       u3931 0CE6                       u5531 1FC2  
                     u5451 1F4B                       u6147 1B5F                       u3851 17E7  
                     u3771 178F                       u3691 1754                       u4811 1A68  
                     u4651 088E                       u4635 1179                       u4571 1151  
                     u4555 1135                       u4475 0BFD                       u4395 0A52  
                     u6091 07AD                       u6075 077C                       u5380 12E2  
                     u3940 0CFE                       u5540 1FC9                       u5460 1F50  
                     u5620 1AFE                       u4900 1BD0                       u3860 17ED  
                     u3780 1797                       u4820 1CAB                       u4740 091F  
                     u4660 08A3                       u4580 1156                       u5700 0135  
                     u5381 12E1                       u5285 1265                       u3941 0CFD  
                     u5541 1FC8                       u5525 1FB8                       u5461 1F4F  
                     u6157 1B6E                       u4901 1BCF                       u3861 17EC  
                     u3781 1796                       u4821 1CAA                       u4805 1A5D  
                     u4741 091E                       u4661 08A2                       u4581 1155  
                     u4565 1145                       u4485 0C39                       u6085 0794  
                     u5701 0134                       u5390 12E8                       u3950 0D03  
                     u5550 1FCD                       u5470 1F70                       u5630 1B10  
                     u4910 1BEA                       u3870 17FE                       u3790 179D  
                     u4750 0926                       u4590 115D                       u5710 0164  
                     u5391 12E7                       u5295 127A                       u3951 0D02  
                     u5551 1FCC                       u5471 1F6F                       u6167 1B7D  
                     u5631 1B0F                       u4911 1BE9                       u3871 17FD  
                     u3791 179C                       u4751 0925                       u4735 090F  
                     u4591 115C                       u4495 0C75                       u5711 0163  
                     u3880 0CB0                       u5560 1FE2                       u5640 1D88  
                     u4920 1EB8                       u4840 1CBF                       u4680 08E4  
                     u5800 0341                       u5720 0168                       u3961 0D54  
                     u3881 0CAF                       u5641 1D87                       u6177 19B4  
                     u4921 1EB7                       u4841 1CBE                       u4681 08E3  
                     u5801 0340                       u5721 0167                       u3962 0D5B  
                     u3890 0CB6                       u5570 1FF2                       u5490 1F91  
                     u5650 1EA3                       u4930 1ED4                       u4770 0937  
                     u5810 0368                       u5730 0197                       u3971 0D70  
                     u3963 0D62                       u3891 0CB5                       u5571 1FF1  
                     u5491 1F90                       u5651 1EA2                       u6187 1E25  
                     u4915 1BE6                       u4931 1ED3                       u4835 1CB0  
                     u4771 0936                       u4675 08CB                       u5811 0367  
                     u5731 0196                       u3972 0D77                       u5580 1FF6  
                     u4940 1EE0                       u4860 1CDA                       u4780 1A4F  
                     u5900 050D                       u5820 0377                       u5740 01D1  
                     u5660 0083                       u3981 0D9C                       u3973 0D7E  
                     u5581 1FF5                       u5565 1FDD                       u5485 1F83  
                     u6197 1D12                       u4941 1EDF                       u4861 1CD9  
                     u4781 1A4E                       u4765 0929                       u4685 08E0  
                     u5901 050C                       u5821 0376                       u5741 01D0  
                     u5661 0082                       _VAL1 00CD                       u3982 0DA3  
                     u5590 1A07                       u5830 0392                       u5750 020C  
                     u5670 00A3                       _VAL2 00C9                       u3991 0DB8  
                     u3983 0DAA                       u5591 1A06                       u4951 1EEF  
                     u4855 1CC1                       u4695 08F5                       u5831 0391  
                     u5751 020B                       u5671 00A2                       u3992 0DBF  
                     u4960 1F08                       u4952 1EF0                       u4880 1CF8  
                     u5920 0586                       u5760 0295                       u5680 00E3  
                     u3993 0DC6                       u4961 1F07                       u4953 1EF5  
                     u4881 1CF7                       u4865 1CD6                       u5921 0585  
                     u5825 0373                       u5761 0294                       u5681 00E2  
                     u4890 1BB4                       u4954 1EF6                       u5930 05A7  
                     u5850 04A5                       u5770 02B9                       u5690 00F1  
                     u4891 1BB3                       u4971 1F17                       u4955 1EFB  
                     u4875 1CEA                       u4795 1A56                       u5931 05A6  
                     u5915 051C                       u5851 04A4                       u5771 02B8  
                     u5691 00F0                       u4980 1F42                       u4972 1F18  
                     u4956 1EFC                       u5940 05B6                       u5860 04B0  
                     u5780 02D0                       u4981 1F41                       u4973 1F1D  
                     u5941 05B5                       u5861 04AF                       u5845 0472  
                     u5781 02CF                       u4974 1F1E                       u4990 1981  
                     u5950 05D1                       u5870 04CB                       u5790 0326  
                     u4975 1F23                       u4991 1980                       u5951 05D0  
                     u5935 05A3                       u5871 04CA                       u5855 04A1  
                     u5791 0325                       u4976 1F24                       u5880 04DD  
                     u4985 1F3E                       u5945 05B2                       u5881 04DC  
                     u5785 02CC                       u5890 04FF                       u5891 04FE  
                     u5795 0322                       u5980 06FD                       u5981 06FC  
                     u5965 0658                       u5990 0715                       u5991 0714  
                     u5975 06BE                       u5895 04FB                       _data 00D5  
        ?_Lcd_Write_String 0073                       _main 1D89                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            ___fldiv@new_exp 0050  
          __end_of_Lcd_Cmd 19BD              ___fltol@sign1 005A            __end_of___fladd 1800  
                    ?_main 0070            __end_of___fldiv 136D            __end_of___awdiv 0075  
          __end_of___flneg 1984            __end_of___awmod 1C9B            __end_of___flmul 1000  
          __end_of___flsub 1A49            __end_of___fltol 0882                      _ANSEL 0188  
          __end_of___lldiv 1D01            ___awdiv@divisor 0077            __end_of___llmod 1C42  
          __end_of___lwdiv 1B55            __end_of___lwmod 1ACF            ___awdiv@counter 0020  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089            __end_of_dpowers 10A0  
                    _scale 0940            __end_of_isdigit 19A3                      _setup 19BD  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F0             ADC_val@ADRES_H 0070             ADC_val@ADRES_L 0070  
         __end_of_Lcd_Init 1BA0           __end_of_Lcd_Port 0806            __initialization 07F0  
             __end_of_main 1E13                  ??_ADC_CH0 0058                  ??_ADC_CH1 0058  
                ??_ADC_val 0071                     ??_main 006E         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD                     _ADCON1 009F           ___llmod@dividend 0074  
                   ?_scale 003E                     _ADRESH 001E                     _ADRESL 009E  
                   _ADC_ch 19DD           ___awdiv@dividend 0079                     ?_setup 0070  
                   _ANSELH 0189                     _INTCON 000B                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0016           __end_of___xxtofl 2000           __end_of__powers_ 1044  
                   ___flge 1EA4                     ___fleq 1BA0                  ??___fladd 005A  
                   ___wmul 1A49                  ??___fldiv 0046                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0078                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 136D           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075                  ??_isdigit 0070         __size_of__Umul8_16 0027  
                ??_sprintf 00A9            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
        __end_of_Lcd_Clear 1991                 ___fltol@f1 0051             __pcstackCOMMON 0070  
            __end_of_scale 0C9F              __end_of_setup 19DD             _Lcd_Set_Cursor 1A01  
               __div_to_l_ 0882                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
                  ?_ADC_ch 0070            __div_to_l_@quot 0020               sprintf@width 00B9  
                  ??_setup 0070                 __pbssBANK0 006F                 __pbssBANK1 00C9  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1A95  
               __pmaintext 1D89                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                    _ADC_CH0 1D01                    _ADC_CH1 1E13  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1A25  
                  _ADC_val 196F                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070            __size_of_ADC_ch 0024                 __stringtab 1000  
           _Lcd_Write_Char 10BD                    _Lcd_Cmd 19A3          __end_of__npowers_ 1078  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 1578  
                  ___fldiv 1190                    ___awdiv 000C                    ___flneg 1979  
                  ___awmod 1C42                    ___flmul 0C9F                    ___flsub 1A25  
                  ___fltol 0806                    ___lldiv 1C9B            __size_of___wmul 0025  
                  ___llmod 1BEE                    ___lwdiv 1B11                 _fround$968 004D  
               _fround$969 0049                    ___lwmod 1A95                    _channel 00D1  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 0075  
                  __ptext2 0940                    __ptext3 1C42                    __ptext4 000C  
                  __ptext5 1991                    __ptext6 136D                    __ptext7 1A95  
                  __ptext8 1B11                    __ptext9 10D3                ?__div_to_l_ 0070  
                  _dpowers 1078                    _isdigit 1991                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _sprintf 0075                    clrloop0 0005  
   __end_of_Lcd_Write_Char 10D3       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _VALOR_ADC 00D3                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 0065              ___xxtofl@sign 0078                ___fldiv@grs 0052  
              ___fldiv@rem 004B            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078             __end_of_ADC_ch 1A01                ___flmul@grs 0032  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 1984             __end_of___flge 1F46  
           __end_of___fleq 1BEE             __end_of___wmul 1A6E           _Lcd_Write_String 1ACF  
           __end_of_fround 1578        start_initialization 07F0        __end_of__tdiv_to_l_ 1190  
                 ??_ADC_ch 0072          __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0070            ___llmod@counter 0079                 ?_Lcd_Clear 0070  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 1A6E                   ?_ADC_CH0 0070                   ?_ADC_CH1 0070  
          Lcd_Write_Char@a 0072                   ??_fround 0042                   ?_ADC_val 0070  
            sprintf@tmpval 00BB                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 003E                  ___fldiv@b 0042  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B7                sprintf@eexp 00BF                sprintf@fval 00C1  
              sprintf@prec 00C6           ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 0052                   ?___fldiv 003E                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 1044                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 1000  
              __tdiv_to_l_ 10D3               ??__div_to_l_ 0078                   ?_isdigit 0070  
                _scale$970 004C                   _ADC_res1 006F                   _ADC_res2 00D4  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
           __size_of_setup 0020             ___wmul@product 0074                  clear_ram0 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0073                   _PIR1bits 000C  
       __end_of__div_to_l_ 0940                ??_Lcd_Clear 0074           __size_of_ADC_CH0 0088  
         __size_of_ADC_CH1 0091                 _ADCON0bits 001F                __stringbase 100F  
        ___wmul@multiplier 0070           __size_of_ADC_val 000A           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1B55                   _Lcd_Port 0800   __end_of_Lcd_Write_String 1B11  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___fldiv 01DD           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0054  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 1010  
              _isdigit$790 0070                 sprintf@val 00B3                   ___xxtofl 1F46  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 0882                   __ptext11 1A49                   __ptext20 19BD  
                 __ptext12 1BEE                   __ptext21 1ACF                   __ptext13 1C9B  
                 __ptext30 1F46                   __ptext22 10BD                   __ptext14 0806  
                 __ptext31 0C9F                   __ptext23 1A01                   __ptext15 1A25  
                 __ptext32 1A6E                   __ptext24 1B55                   __ptext16 1578  
                 __ptext33 1190                   __ptext25 1984                   __ptext17 1979  
                 __ptext34 196F                   __ptext26 19A3                   __ptext18 1EA4  
                 __ptext35 19DD                   __ptext27 0800                   __ptext19 1BA0  
                 __ptext28 1E13                   __ptext29 1D01                   __powers_ 1010  
         __size_of_sprintf 077B              __size_of_main 008A                   isdigit@c 0071  
                 scale@scl 0050              ADC_ch@channel 0070                  sprintf@ap 00B2  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C5  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 100A         Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070                 _OPTION_REG 0081                   sprintf@c 00C8  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 100A                   stringtab 1000  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
