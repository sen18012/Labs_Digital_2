

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 17:30:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  001F                     _ADCON0	set	31
   288  0005                     _PORTA	set	5
   289  0006                     _PORTB	set	6
   290  0009                     _PORTE	set	9
   291  0008                     _PORTD	set	8
   292  001E                     _ADRESH	set	30
   293  001F                     _ADCON0bits	set	31
   294  000C                     _PIR1bits	set	12
   295  0007                     _PORTC	set	7
   296  0006                     _PORTBbits	set	6
   297  000B                     _INTCONbits	set	11
   298  008C                     _PIE1bits	set	140
   299  009F                     _ADCON1	set	159
   300  0096                     _IOCBbits	set	150
   301  0085                     _TRISA	set	133
   302  0086                     _TRISB	set	134
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0087                     _TRISC	set	135
   306  008F                     _OSCCON	set	143
   307  009E                     _ADRESL	set	158
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	cinit
   312  000F                     start_initialization:	
   313                           ; #config settings
   314                           
   315  000F                     __initialization:
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   321  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   322  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   323  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   324  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   325                           
   326                           ; Clear objects allocated to BANK0
   327  0016  1283               	bcf	3,5	;RP0=0, select bank0
   328  0017  1303               	bcf	3,6	;RP1=0, select bank0
   329  0018  01A0               	clrf	__pbssBANK0& (0+127)
   330  0019                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  0019                     __end_of__initialization:
   334  0019  0183               	clrf	3
   335  001A  120A  118A  28D9   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338  0070                     __pbssCOMMON:
   339  0070                     _VALOR_NIB2:
   340  0070                     	ds	1
   341  0071                     _VALOR_NIB1:
   342  0071                     	ds	1
   343  0072                     _VALOR_SWAP:
   344  0072                     	ds	1
   345  0073                     _VALOR_ADC:
   346  0073                     	ds	1
   347  0074                     _NIB1_res:
   348  0074                     	ds	1
   349  0075                     _ADC_res:
   350  0075                     	ds	1
   351  0076                     _contador:
   352  0076                     	ds	1
   353                           
   354                           	psect	bssBANK0
   355  0020                     __pbssBANK0:
   356  0020                     _NIB2_res:
   357  0020                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360  0077                     __pcstackCOMMON:
   361  0077                     ?_ADC_val:
   362  0077                     ?_ADC_nib_1:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0077                     ??_ADC_nib_1:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0077                     ?_ADC_nib_2:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0077                     ??_ADC_nib_2:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0077                     ?_setup:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0077                     ?_ISR:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0077                     ?_main:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0077                     ADC_val@ADRESL_:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0077                     ADC_val@ADRESH_:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391  0077                     	ds	1
   392  0078                     ??_ADC_val:
   393  0078                     ADC_nib_1@val_ADC_:	
   394                           ; 1 bytes @ 0x1
   395                           
   396                           
   397                           ; 1 bytes @ 0x1
   398  0078                     	ds	1
   399  0079                     ADC_nib_2@val_ADC_1:
   400                           
   401                           ; 1 bytes @ 0x2
   402  0079                     	ds	1
   403  007A                     ??_ISR:
   404                           
   405                           ; 1 bytes @ 0x3
   406  007A                     	ds	4
   407                           
   408                           	psect	cstackBANK0
   409  0000                     __pcstackBANK0:
   410  0000                     ??_setup:
   411  0000                     ??_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           	psect	maintext
   416  00D9                     __pmaintext:	
   417                           ; 1 bytes @ 0x0
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 90 in file "main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels required when called:    3
   443 ;; This function calls:
   444 ;;		_setup
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function _main
   452  00D9                     _main:
   453  00D9                     l907:	
   454                           ;incstack = 0
   455                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   456                           
   457                           
   458                           ;main.c: 91:     IOCBbits.IOCB1 = 1;
   459  00D9  01F6               	clrf	_contador
   460  00DA                     l909:
   461                           
   462                           ;main.c: 92:     INTCONbits.PEIE = 1;
   463  00DA  120A  118A  2086  120A  118A  	fcall	_setup
   464  00DF                     l87:	
   465                           ;main.c: 93:     ADCON0 = 0b01001001;
   466                           
   467  00DF                     l88:	
   468                           ;main.c: 96: 
   469                           
   470  00DF  28DF               	goto	l87
   471  00E0  120A  118A  280C   	ljmp	start
   472  00E3                     __end_of_main:
   473                           
   474                           	psect	text1
   475  0086                     __ptext1:	
   476 ;; *************** function _setup *****************
   477 ;; Defined at:
   478 ;;		line 104 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; Hardware stack levels required when called:    2
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _setup
   508  0086                     _setup:
   509  0086                     l867:	
   510                           ;incstack = 0
   511                           ; Regs used in _setup: [wreg+status,2]
   512                           
   513                           
   514                           ;main.c: 105: 
   515  0086  3061               	movlw	97
   516  0087  1683               	bsf	3,5	;RP0=1, select bank1
   517  0088  1303               	bcf	3,6	;RP1=0, select bank1
   518  0089  008F               	movwf	15	;volatile
   519                           
   520                           ;main.c: 106: 
   521  008A  3004               	movlw	4
   522  008B  1683               	bsf	3,5	;RP0=1, select bank3
   523  008C  1703               	bsf	3,6	;RP1=1, select bank3
   524  008D  0088               	movwf	8	;volatile
   525  008E                     l869:
   526                           
   527                           ;main.c: 107: 
   528  008E  0189               	clrf	9	;volatile
   529  008F                     l871:
   530                           
   531                           ;main.c: 108: void cont(void) {
   532  008F  1683               	bsf	3,5	;RP0=1, select bank1
   533  0090  1303               	bcf	3,6	;RP1=0, select bank1
   534  0091  0187               	clrf	7	;volatile
   535  0092                     l873:
   536                           
   537                           ;main.c: 109:     PORTC = contador;
   538  0092  1283               	bcf	3,5	;RP0=0, select bank0
   539  0093  1303               	bcf	3,6	;RP1=0, select bank0
   540  0094  0187               	clrf	7	;volatile
   541  0095                     l875:
   542                           
   543                           ;main.c: 110: }
   544  0095  1683               	bsf	3,5	;RP0=1, select bank1
   545  0096  1303               	bcf	3,6	;RP1=0, select bank1
   546  0097  0188               	clrf	8	;volatile
   547  0098                     l877:
   548  0098  1283               	bcf	3,5	;RP0=0, select bank0
   549  0099  1303               	bcf	3,6	;RP1=0, select bank0
   550  009A  0188               	clrf	8	;volatile
   551  009B                     l879:
   552  009B  1683               	bsf	3,5	;RP0=1, select bank1
   553  009C  1303               	bcf	3,6	;RP1=0, select bank1
   554  009D  0189               	clrf	9	;volatile
   555  009E                     l881:
   556  009E  1283               	bcf	3,5	;RP0=0, select bank0
   557  009F  1303               	bcf	3,6	;RP1=0, select bank0
   558  00A0  0189               	clrf	9	;volatile
   559  00A1                     l883:
   560  00A1  3003               	movlw	3
   561  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   562  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   563  00A4  0086               	movwf	6	;volatile
   564  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   565  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   566  00A7  0186               	clrf	6	;volatile
   567  00A8                     l885:
   568  00A8  3004               	movlw	4
   569  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   570  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   571  00AB  0085               	movwf	5	;volatile
   572  00AC                     l887:
   573  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   574  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   575  00AE  0185               	clrf	5	;volatile
   576  00AF                     l889:
   577  00AF  178B               	bsf	11,7	;volatile
   578  00B0                     l891:
   579  00B0  158B               	bsf	11,3	;volatile
   580  00B1                     l893:
   581  00B1  100B               	bcf	11,0	;volatile
   582  00B2                     l895:
   583  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   584  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   585  00B4  1416               	bsf	22,0	;volatile
   586  00B5                     l897:
   587  00B5  1496               	bsf	22,1	;volatile
   588  00B6                     l899:
   589  00B6  170B               	bsf	11,6	;volatile
   590  00B7  3049               	movlw	73
   591  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   592  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   593  00BA  009F               	movwf	31	;volatile
   594  00BB                     l901:
   595  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   596  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   597  00BD  019F               	clrf	31	;volatile
   598  00BE                     l903:
   599  00BE  170C               	bsf	12,6	;volatile
   600  00BF                     l905:
   601  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   602  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   603  00C1  170C               	bsf	12,6	;volatile
   604  00C2                     l93:
   605  00C2  0008               	return
   606  00C3                     __end_of_setup:
   607                           
   608                           	psect	text2
   609  001D                     __ptext2:	
   610 ;; *************** function _ISR *****************
   611 ;; Defined at:
   612 ;;		line 46 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          4       0       0       0       0
   629 ;;      Totals:         4       0       0       0       0
   630 ;;Total ram usage:        4 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		_ADC_nib_1
   635 ;;		_ADC_nib_2
   636 ;;		_ADC_val
   637 ;; This function is called by:
   638 ;;		Interrupt level 1
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _ISR
   644  001D                     _ISR:
   645  001D                     i1l829:
   646                           
   647                           ;main.c: 47: }
   648  001D  1C0B               	btfss	11,0	;volatile
   649  001E  2820               	goto	u10_21
   650  001F  2821               	goto	u10_20
   651  0020                     u10_21:
   652  0020  2841               	goto	i1l847
   653  0021                     u10_20:
   654  0021                     i1l831:
   655                           
   656                           ;main.c: 48: 
   657  0021  1283               	bcf	3,5	;RP0=0, select bank0
   658  0022  1303               	bcf	3,6	;RP1=0, select bank0
   659  0023  1C06               	btfss	6,0	;volatile
   660  0024  2826               	goto	u11_21
   661  0025  2827               	goto	u11_20
   662  0026                     u11_21:
   663  0026  2832               	goto	i1l839
   664  0027                     u11_20:
   665  0027                     i1l71:	
   666                           ;main.c: 51: 
   667                           
   668                           
   669                           ;main.c: 49: 
   670  0027  1806               	btfsc	6,0	;volatile
   671  0028  282A               	goto	u12_21
   672  0029  282B               	goto	u12_20
   673  002A                     u12_21:
   674  002A  2827               	goto	i1l71
   675  002B                     u12_20:
   676  002B                     i1l835:
   677                           
   678                           ;main.c: 52: void setup(void);
   679  002B  0876               	movf	_contador,w
   680  002C  3E01               	addlw	1
   681  002D  00FA               	movwf	??_ISR
   682  002E  087A               	movf	??_ISR,w
   683  002F  00F6               	movwf	_contador
   684  0030                     i1l837:
   685                           
   686                           ;main.c: 53: void cont(void);
   687  0030  0876               	movf	_contador,w
   688  0031  0087               	movwf	7	;volatile
   689  0032                     i1l839:
   690                           
   691                           ;main.c: 55: 
   692  0032  1C86               	btfss	6,1	;volatile
   693  0033  2835               	goto	u13_21
   694  0034  2836               	goto	u13_20
   695  0035                     u13_21:
   696  0035  2841               	goto	i1l847
   697  0036                     u13_20:
   698  0036                     i1l75:	
   699                           ;main.c: 58: 
   700                           
   701                           
   702                           ;main.c: 56: 
   703  0036  1886               	btfsc	6,1	;volatile
   704  0037  2839               	goto	u14_21
   705  0038  283A               	goto	u14_20
   706  0039                     u14_21:
   707  0039  2836               	goto	i1l75
   708  003A                     u14_20:
   709  003A                     i1l843:
   710                           
   711                           ;main.c: 59: void main(void) {
   712  003A  0876               	movf	_contador,w
   713  003B  3EFF               	addlw	255
   714  003C  00FA               	movwf	??_ISR
   715  003D  087A               	movf	??_ISR,w
   716  003E  00F6               	movwf	_contador
   717  003F                     i1l845:
   718                           
   719                           ;main.c: 60:     contador = 0;
   720  003F  0876               	movf	_contador,w
   721  0040  0087               	movwf	7	;volatile
   722  0041                     i1l847:
   723                           
   724                           ;main.c: 63: 
   725  0041  100B               	bcf	11,0	;volatile
   726  0042                     i1l849:
   727                           
   728                           ;main.c: 65:     }
   729  0042  1283               	bcf	3,5	;RP0=0, select bank0
   730  0043  1303               	bcf	3,6	;RP1=0, select bank0
   731  0044  1F0C               	btfss	12,6	;volatile
   732  0045  2847               	goto	u15_21
   733  0046  2848               	goto	u15_20
   734  0047                     u15_21:
   735  0047  287F               	goto	i1l82
   736  0048                     u15_20:
   737  0048                     i1l851:
   738                           
   739                           ;main.c: 66:     return;
   740  0048  130C               	bcf	12,6	;volatile
   741  0049                     i1l853:
   742                           
   743                           ;main.c: 67: }
   744  0049  3006               	movlw	6
   745  004A  00FB               	movwf	??_ISR+1
   746  004B  3030               	movlw	48
   747  004C  00FA               	movwf	??_ISR
   748  004D                     u17_27:
   749  004D  0BFA               	decfsz	??_ISR,f
   750  004E  284D               	goto	u17_27
   751  004F  0BFB               	decfsz	??_ISR+1,f
   752  0050  284D               	goto	u17_27
   753  0051  0000               	nop
   754  0052                     i1l855:
   755                           
   756                           ;main.c: 68: 
   757  0052  1283               	bcf	3,5	;RP0=0, select bank0
   758  0053  1303               	bcf	3,6	;RP1=0, select bank0
   759  0054  149F               	bsf	31,1	;volatile
   760                           
   761                           ;main.c: 69: 
   762  0055  287B               	goto	i1l865
   763  0056                     i1l857:
   764                           
   765                           ;main.c: 70: 
   766  0056  081E               	movf	30,w	;volatile
   767  0057  00FA               	movwf	??_ISR
   768  0058  087A               	movf	??_ISR,w
   769  0059  00F7               	movwf	ADC_val@ADRESH_
   770  005A  1683               	bsf	3,5	;RP0=1, select bank1
   771  005B  1303               	bcf	3,6	;RP1=0, select bank1
   772  005C  081E               	movf	30,w	;volatile
   773  005D  120A  118A  20E3  120A  118A  	fcall	_ADC_val
   774  0062  00FB               	movwf	??_ISR+1
   775  0063  087B               	movf	??_ISR+1,w
   776  0064  00F5               	movwf	_ADC_res
   777  0065                     i1l859:
   778                           
   779                           ;main.c: 72: 
   780  0065  0875               	movf	_ADC_res,w
   781  0066  120A  118A  20EB  120A  118A  	fcall	_ADC_nib_1
   782  006B  00FA               	movwf	??_ISR
   783  006C  087A               	movf	??_ISR,w
   784  006D  00F4               	movwf	_NIB1_res
   785  006E                     i1l861:
   786                           
   787                           ;main.c: 73: void setup(void) {
   788  006E  0875               	movf	_ADC_res,w
   789  006F  120A  118A  20C3  120A  118A  	fcall	_ADC_nib_2
   790  0074  00FA               	movwf	??_ISR
   791  0075  087A               	movf	??_ISR,w
   792  0076  1283               	bcf	3,5	;RP0=0, select bank0
   793  0077  1303               	bcf	3,6	;RP1=0, select bank0
   794  0078  00A0               	movwf	_NIB2_res
   795  0079                     i1l863:
   796                           
   797                           ;main.c: 75:     ANSEL = 0b00000100;
   798  0079  0875               	movf	_ADC_res,w
   799  007A  0088               	movwf	8	;volatile
   800  007B                     i1l865:
   801                           
   802                           ;main.c: 69: 
   803  007B  189F               	btfsc	31,1	;volatile
   804  007C  287E               	goto	u16_21
   805  007D  287F               	goto	u16_20
   806  007E                     u16_21:
   807  007E  2856               	goto	i1l857
   808  007F                     u16_20:
   809  007F                     i1l82:
   810  007F  087D               	movf	??_ISR+3,w
   811  0080  008A               	movwf	10
   812  0081  0E7C               	swapf	??_ISR+2,w
   813  0082  0083               	movwf	3
   814  0083  0EFE               	swapf	btemp,f
   815  0084  0E7E               	swapf	btemp,w
   816  0085  0009               	retfie
   817  0086                     __end_of_ISR:
   818                           
   819                           	psect	intentry
   820  0004                     __pintentry:	
   821                           ;incstack = 0
   822                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   823                           
   824  0004                     interrupt_function:
   825  007E                     saved_w	set	btemp
   826  0004  00FE               	movwf	btemp
   827  0005  0E03               	swapf	3,w
   828  0006  00FC               	movwf	??_ISR+2
   829  0007  080A               	movf	10,w
   830  0008  00FD               	movwf	??_ISR+3
   831  0009  120A  118A  281D   	ljmp	_ISR
   832                           
   833                           	psect	text3
   834  00E3                     __ptext3:	
   835 ;; *************** function _ADC_val *****************
   836 ;; Defined at:
   837 ;;		line 9 in file "ADC1.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  ADRESL_         1    wreg     unsigned char 
   840 ;;  ADRESH_         1    0[COMMON] unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  ADRESL_         1    0[COMMON] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      unsigned char 
   845 ;; Registers used:
   846 ;;		wreg
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         1       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0
   854 ;;      Temps:          1       0       0       0       0
   855 ;;      Totals:         2       0       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_ISR
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _ADC_val
   867  00E3                     _ADC_val:
   868  00E3                     i1l811:	
   869                           ;incstack = 0
   870                           ; Regs used in _ADC_val: [wreg]
   871                           
   872                           
   873                           ;ADC1.c: 10:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
   874  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   875  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   876  00E5  081E               	movf	30,w	;volatile
   877  00E6  00F8               	movwf	??_ADC_val
   878  00E7  0878               	movf	??_ADC_val,w
   879  00E8  00F3               	movwf	_VALOR_ADC
   880                           
   881                           ;ADC1.c: 11:     return VALOR_ADC;
   882  00E9  0873               	movf	_VALOR_ADC,w
   883  00EA                     i1l111:
   884  00EA  0008               	return
   885  00EB                     __end_of_ADC_val:
   886                           
   887                           	psect	text4
   888  00C3                     __ptext4:	
   889 ;; *************** function _ADC_nib_2 *****************
   890 ;; Defined at:
   891 ;;		line 19 in file "ADC1.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  val_ADC_1       1    wreg     unsigned char 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  val_ADC_1       1    2[COMMON] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      unsigned char 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         1       0       0       0       0
   907 ;;      Temps:          2       0       0       0       0
   908 ;;      Totals:         3       0       0       0       0
   909 ;;Total ram usage:        3 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_ISR
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _ADC_nib_2
   920  00C3                     _ADC_nib_2:
   921                           
   922                           ;incstack = 0
   923                           ; Regs used in _ADC_nib_2: [wreg+status,2+status,0]
   924                           ;ADC_nib_2@val_ADC_1 stored from wreg
   925  00C3  00F9               	movwf	ADC_nib_2@val_ADC_1
   926  00C4                     i1l821:
   927                           
   928                           ;ADC1.c: 20:     VALOR_SWAP = (((val_ADC_1 & 0x0F)<<4) | ((val_ADC_1 & 0x0F)>>4));
   929  00C4  0879               	movf	ADC_nib_2@val_ADC_1,w
   930  00C5  390F               	andlw	15
   931  00C6  00F7               	movwf	??_ADC_nib_2
   932  00C7  3003               	movlw	3
   933  00C8                     u9_25:
   934  00C8  1003               	clrc
   935  00C9  0DF7               	rlf	??_ADC_nib_2,f
   936  00CA  3EFF               	addlw	-1
   937  00CB  1D03               	skipz
   938  00CC  28C8               	goto	u9_25
   939  00CD  1003               	clrc
   940  00CE  0D77               	rlf	??_ADC_nib_2,w
   941  00CF  00F8               	movwf	??_ADC_nib_2+1
   942  00D0  0878               	movf	??_ADC_nib_2+1,w
   943  00D1  00F2               	movwf	_VALOR_SWAP
   944  00D2                     i1l823:
   945                           
   946                           ;ADC1.c: 21:     VALOR_NIB2 = (VALOR_SWAP & 15);
   947  00D2  0872               	movf	_VALOR_SWAP,w
   948  00D3  390F               	andlw	15
   949  00D4  00F7               	movwf	??_ADC_nib_2
   950  00D5  0877               	movf	??_ADC_nib_2,w
   951  00D6  00F0               	movwf	_VALOR_NIB2
   952  00D7                     i1l825:
   953                           
   954                           ;ADC1.c: 22:     return VALOR_NIB2;
   955  00D7  0870               	movf	_VALOR_NIB2,w
   956  00D8                     i1l117:
   957  00D8  0008               	return
   958  00D9                     __end_of_ADC_nib_2:
   959                           
   960                           	psect	text5
   961  00EB                     __ptext5:	
   962 ;; *************** function _ADC_nib_1 *****************
   963 ;; Defined at:
   964 ;;		line 14 in file "ADC1.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  val_ADC_        1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  val_ADC_        1    1[COMMON] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      unsigned char 
   971 ;; Registers used:
   972 ;;		wreg, status,2
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   978 ;;      Params:         0       0       0       0       0
   979 ;;      Locals:         1       0       0       0       0
   980 ;;      Temps:          1       0       0       0       0
   981 ;;      Totals:         2       0       0       0       0
   982 ;;Total ram usage:        2 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_ISR
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _ADC_nib_1
   993  00EB                     _ADC_nib_1:
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _ADC_nib_1: [wreg+status,2]
   997                           ;ADC_nib_1@val_ADC_ stored from wreg
   998  00EB  00F8               	movwf	ADC_nib_1@val_ADC_
   999  00EC                     i1l815:
  1000                           
  1001                           ;ADC1.c: 15:     VALOR_NIB1 = (val_ADC_ & 15);
  1002  00EC  0878               	movf	ADC_nib_1@val_ADC_,w
  1003  00ED  390F               	andlw	15
  1004  00EE  00F7               	movwf	??_ADC_nib_1
  1005  00EF  0877               	movf	??_ADC_nib_1,w
  1006  00F0  00F1               	movwf	_VALOR_NIB1
  1007  00F1                     i1l817:
  1008                           
  1009                           ;ADC1.c: 16:     return VALOR_NIB1;
  1010  00F1  0871               	movf	_VALOR_NIB1,w
  1011  00F2                     i1l114:
  1012  00F2  0008               	return
  1013  00F3                     __end_of_ADC_nib_1:
  1014  007E                     btemp	set	126	;btemp
  1015  007E                     wtemp0	set	126
  1016                           
  1017                           	psect	config
  1018                           
  1019                           ;Config register CONFIG1 @ 0x2007
  1020                           ;	Oscillator Selection bits
  1021                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1022                           ;	Watchdog Timer Enable bit
  1023                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1024                           ;	Power-up Timer Enable bit
  1025                           ;	PWRTE = OFF, PWRT disabled
  1026                           ;	RE3/MCLR pin function select bit
  1027                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1028                           ;	Code Protection bit
  1029                           ;	CP = OFF, Program memory code protection is disabled
  1030                           ;	Data Code Protection bit
  1031                           ;	CPD = OFF, Data memory code protection is disabled
  1032                           ;	Brown Out Reset Selection bits
  1033                           ;	BOREN = OFF, BOR disabled
  1034                           ;	Internal External Switchover bit
  1035                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1036                           ;	Fail-Safe Clock Monitor Enabled bit
  1037                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1038                           ;	Low Voltage Programming Enable bit
  1039                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1040                           ;	In-Circuit Debugger Mode bit
  1041                           ;	DEBUG = 0x1, unprogrammed default
  1042  2007                     	org	8199
  1043  2007  20D4               	dw	8404
  1044                           
  1045                           ;Config register CONFIG2 @ 0x2008
  1046                           ;	Brown-out Reset Selection bit
  1047                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1048                           ;	Flash Program Memory Self Write Enable bits
  1049                           ;	WRT = OFF, Write protection off
  1050  2008                     	org	8200
  1051  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      0       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC_nib_2

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0     120
                                              3 COMMON     4     4      0
                          _ADC_nib_1
                          _ADC_nib_2
                            _ADC_val
 ---------------------------------------------------------------------------------
 (3) _ADC_val                                              3     2      1      76
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _ADC_nib_2                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_nib_1                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _ISR (ROOT)
   _ADC_nib_1
   _ADC_nib_2
   _ADC_val

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 17:30:56 2021

                     l93 00C2                       l87 00DF                       l88 00DF  
     __size_of_ADC_nib_1 0008       __size_of_ADC_nib_2 0016                      l901 00BB  
                    l903 00BE                      l905 00BF                      l907 00D9  
                    l909 00DA                      l871 008F                      l881 009E  
                    l873 0092                      l891 00B0                      l883 00A1  
                    l875 0095                      l867 0086                      l893 00B1  
                    l885 00A8                      l877 0098                      l869 008E  
                    l895 00B2                      l887 00AC                      l879 009B  
                    l897 00B5                      l889 00AF                      l899 00B6  
                    _ISR 001D          __end_of_ADC_val 00EB                     ?_ISR 0077  
                   i1l71 0027                     i1l82 007F                     i1l75 0036  
                   u9_25 00C8                     _main 00D9                     btemp 007E  
                   start 000C                    ??_ISR 007A                    ?_main 0077  
                  _ANSEL 0188                    i1l111 00EA                    i1l114 00F2  
                  i1l117 00D8                    i1l811 00E3                    i1l821 00C4  
                  i1l815 00EC                    i1l823 00D2                    i1l831 0021  
                  i1l817 00F1                    i1l825 00D7                    i1l851 0048  
                  i1l843 003A                    i1l835 002B                    i1l861 006E  
                  i1l853 0049                    i1l845 003F                    i1l837 0030  
                  i1l829 001D                    i1l863 0079                    i1l855 0052  
                  i1l839 0032                    i1l847 0041                    i1l857 0056  
                  i1l865 007B                    i1l849 0042                    i1l859 0065  
                  u10_20 0021                    u10_21 0020                    u11_20 0027  
                  u11_21 0026                    u12_20 002B                    u12_21 002A  
                  u13_20 0036                    u13_21 0035                    u14_20 003A  
                  u14_21 0039                    u15_20 0048                    u15_21 0047  
                  u16_20 007F                    u16_21 007E                    u17_27 004D  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0086                    pclath 000A  
                  status 0003        __end_of_ADC_nib_1 00F3        __end_of_ADC_nib_2 00D9  
                  wtemp0 007E           ADC_val@ADRESH_ 0077           ADC_val@ADRESL_ 0077  
        __initialization 000F             __end_of_main 00E3                ??_ADC_val 0078  
                 ??_main 0000                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0077  
                 _ANSELH 0189                   _OSCCON 008F       ADC_nib_2@val_ADC_1 0079  
                 saved_w 007E  __end_of__initialization 0019           __pcstackCOMMON 0077  
          __end_of_setup 00C3                  ??_setup 0000               __pbssBANK0 0020  
             __pmaintext 00D9               __pintentry 0004                  _ADC_res 0075  
                _ADC_val 00E3                _ADC_nib_1 00EB                _ADC_nib_2 00C3  
                __ptext1 0086                  __ptext2 001D                  __ptext3 00E3  
                __ptext4 00C3                  __ptext5 00EB             __size_of_ISR 0069  
   end_of_initialization 0019               ?_ADC_nib_1 0077               ?_ADC_nib_2 0077  
              _VALOR_ADC 0073                _PORTBbits 0006      start_initialization 000F  
            __end_of_ISR 0086              ??_ADC_nib_1 0077              ??_ADC_nib_2 0077  
      ADC_nib_1@val_ADC_ 0078                 ?_ADC_val 0077              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0000           __size_of_setup 003D  
      interrupt_function 0004                 _NIB1_res 0074                 _NIB2_res 0020  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_ADC_val 0008                 _contador 0076  
          __size_of_main 000A               _INTCONbits 000B                 intlevel1 0000  
             _VALOR_NIB1 0071               _VALOR_NIB2 0070               _VALOR_SWAP 0072  
