

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 09:41:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  001F                     _ADCON0	set	31
   369  0005                     _PORTA	set	5
   370  0006                     _PORTB	set	6
   371  0009                     _PORTE	set	9
   372  0008                     _PORTD	set	8
   373  0009                     _PORTEbits	set	9
   374  0001                     _TMR0	set	1
   375  001E                     _ADRESH	set	30
   376  001F                     _ADCON0bits	set	31
   377  000C                     _PIR1bits	set	12
   378  0007                     _PORTC	set	7
   379  0006                     _PORTBbits	set	6
   380  000B                     _INTCONbits	set	11
   381  005A                     _TMR0IF	set	90
   382  008C                     _PIE1bits	set	140
   383  009F                     _ADCON1	set	159
   384  0096                     _IOCBbits	set	150
   385  0085                     _TRISA	set	133
   386  0086                     _TRISB	set	134
   387  0089                     _TRISE	set	137
   388  0088                     _TRISD	set	136
   389  0087                     _TRISC	set	135
   390  008F                     _OSCCON	set	143
   391  009E                     _ADRESL	set	158
   392  0189                     _ANSELH	set	393
   393  0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396  0011                     start_initialization:	
   397                           ; #config settings
   398                           
   399  0011                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   403  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   404  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   405  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   406  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   407  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   408                           
   409                           ; Clear objects allocated to BANK0
   410  0017  1283               	bcf	3,5	;RP0=0, select bank0
   411  0018  1303               	bcf	3,6	;RP1=0, select bank0
   412  0019  01A0               	clrf	__pbssBANK0& (0+127)
   413  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   414  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   415  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   416  001D                     end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  001D                     __end_of__initialization:
   420  001D  0183               	clrf	3
   421  001E  120A  118A  2975   	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssCOMMON
   424  0078                     __pbssCOMMON:
   425  0078                     _FLAG:
   426  0078                     	ds	1
   427  0079                     _cont:
   428  0079                     	ds	1
   429  007A                     _NIB2_res:
   430  007A                     	ds	1
   431  007B                     _NIB1_res:
   432  007B                     	ds	1
   433  007C                     _ADC_res:
   434  007C                     	ds	1
   435  007D                     _contador:
   436  007D                     	ds	1
   437                           
   438                           	psect	bssBANK0
   439  0020                     __pbssBANK0:
   440  0020                     _VALOR_NIB2:
   441  0020                     	ds	1
   442  0021                     _VALOR_NIB1:
   443  0021                     	ds	1
   444  0022                     _VALOR_SWAP:
   445  0022                     	ds	1
   446  0023                     _VALOR_ADC:
   447  0023                     	ds	1
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:
   451  0070                     ?_ADC_val:
   452  0070                     ?_ADC_nib_1:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_ADC_nib_1:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_ADC_nib_2:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ??_ADC_nib_2:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_DISP:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_setup:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_MULTIPLEX:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_DISPLAY7:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_DISPLAY7:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_ISR:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_main:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ADC_val@ADRESL_:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ADC_val@ADRESH_:	
   489                           ; 1 bytes @ 0x0
   490                           
   491                           
   492                           ; 1 bytes @ 0x0
   493  0070                     	ds	1
   494  0071                     ??_ADC_val:
   495  0071                     ADC_nib_1@val_ADC_:	
   496                           ; 1 bytes @ 0x1
   497                           
   498                           
   499                           ; 1 bytes @ 0x1
   500  0071                     	ds	1
   501  0072                     ADC_nib_2@val_ADC_1:
   502  0072                     DISPLAY7@val:	
   503                           ; 1 bytes @ 0x2
   504                           
   505                           
   506                           ; 1 bytes @ 0x2
   507  0072                     	ds	1
   508  0073                     ??_DISP:
   509  0073                     ??_ISR:	
   510                           ; 1 bytes @ 0x3
   511                           
   512                           
   513                           ; 1 bytes @ 0x3
   514  0073                     	ds	5
   515                           
   516                           	psect	cstackBANK0
   517  0000                     __pcstackBANK0:
   518  0000                     ??_setup:
   519  0000                     ??_MULTIPLEX:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0000                     ??_main:	
   523                           ; 1 bytes @ 0x0
   524                           
   525                           
   526                           	psect	maintext
   527  0175                     __pmaintext:	
   528                           ; 1 bytes @ 0x0
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 101 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels required when called:    4
   554 ;; This function calls:
   555 ;;		_MULTIPLEX
   556 ;;		_setup
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _main
   564  0175                     _main:
   565  0175                     l1126:	
   566                           ;incstack = 0
   567                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   568                           
   569                           
   570                           ;main.c: 102:     TRISB = 0b0000011;
   571  0175  01FD               	clrf	_contador
   572  0176                     l1128:
   573                           
   574                           ;main.c: 103:     PORTB = 0;
   575  0176  120A  118A  2138  120A  118A  	fcall	_setup
   576  017B                     l1130:
   577                           
   578                           ;main.c: 106:     INTCONbits.GIE = 1;
   579  017B  0879               	movf	_cont,w
   580  017C  1903               	btfsc	3,2
   581  017D  297F               	goto	u281
   582  017E  2980               	goto	u280
   583  017F                     u281:
   584  017F  2986               	goto	l1136
   585  0180                     u280:
   586  0180                     l1132:
   587                           
   588                           ;main.c: 107:     INTCONbits.RBIE = 1;
   589  0180  01F9               	clrf	_cont
   590  0181                     l1134:
   591                           
   592                           ;main.c: 108:     INTCONbits.RBIF = 0;
   593  0181  120A  118A  21D6  120A  118A  	fcall	_MULTIPLEX
   594  0186                     l1136:
   595                           
   596                           ;main.c: 110:     IOCBbits.IOCB1 = 1;
   597  0186  087C               	movf	_ADC_res,w
   598  0187  027D               	subwf	_contador,w
   599  0188  1803               	skipnc
   600  0189  298B               	goto	u291
   601  018A  298C               	goto	u290
   602  018B                     u291:
   603  018B  2990               	goto	l1140
   604  018C                     u290:
   605  018C                     l1138:
   606                           
   607                           ;main.c: 111:     INTCONbits.PEIE = 1;
   608  018C  1283               	bcf	3,5	;RP0=0, select bank0
   609  018D  1303               	bcf	3,6	;RP1=0, select bank0
   610  018E  1409               	bsf	9,0	;volatile
   611                           
   612                           ;main.c: 112:     ADCON0 = 0b01001001;
   613  018F  297B               	goto	l1130
   614  0190                     l1140:
   615  0190  087D               	movf	_contador,w
   616  0191  027C               	subwf	_ADC_res,w
   617  0192  1803               	skipnc
   618  0193  2995               	goto	u301
   619  0194  2996               	goto	u300
   620  0195                     u301:
   621  0195  297B               	goto	l1130
   622  0196                     u300:
   623  0196                     l1142:
   624                           
   625                           ;main.c: 114:     PIE1bits.ADIE = 1;
   626  0196  1283               	bcf	3,5	;RP0=0, select bank0
   627  0197  1303               	bcf	3,6	;RP1=0, select bank0
   628  0198  1009               	bcf	9,0	;volatile
   629  0199  297B               	goto	l1130
   630  019A  120A  118A  280E   	ljmp	start
   631  019D                     __end_of_main:
   632                           
   633                           	psect	text1
   634  0138                     __ptext1:	
   635 ;; *************** function _setup *****************
   636 ;; Defined at:
   637 ;;		line 124 in file "main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    3
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _setup
   667  0138                     _setup:
   668  0138                     l1034:	
   669                           ;incstack = 0
   670                           ; Regs used in _setup: [wreg+status,2]
   671                           
   672                           
   673                           ;main.c: 125:         PORTEbits.RE1 = 1;
   674  0138  3061               	movlw	97
   675  0139  1683               	bsf	3,5	;RP0=1, select bank1
   676  013A  1303               	bcf	3,6	;RP1=0, select bank1
   677  013B  008F               	movwf	15	;volatile
   678                           
   679                           ;main.c: 126:     } else if (FLAG == 1) {
   680  013C  3004               	movlw	4
   681  013D  1683               	bsf	3,5	;RP0=1, select bank3
   682  013E  1703               	bsf	3,6	;RP1=1, select bank3
   683  013F  0088               	movwf	8	;volatile
   684  0140                     l1036:
   685                           
   686                           ;main.c: 127:         DISPLAY7(NIB2_res);
   687  0140  0189               	clrf	9	;volatile
   688  0141                     l1038:
   689                           
   690                           ;main.c: 128:         PORTEbits.RE2 = 1;
   691  0141  1683               	bsf	3,5	;RP0=1, select bank1
   692  0142  1303               	bcf	3,6	;RP1=0, select bank1
   693  0143  0187               	clrf	7	;volatile
   694  0144                     l1040:
   695                           
   696                           ;main.c: 129:     }
   697  0144  1283               	bcf	3,5	;RP0=0, select bank0
   698  0145  1303               	bcf	3,6	;RP1=0, select bank0
   699  0146  0187               	clrf	7	;volatile
   700  0147                     l1042:
   701                           
   702                           ;main.c: 130: 
   703  0147  1683               	bsf	3,5	;RP0=1, select bank1
   704  0148  1303               	bcf	3,6	;RP1=0, select bank1
   705  0149  0188               	clrf	8	;volatile
   706  014A                     l1044:
   707                           
   708                           ;main.c: 131: }
   709  014A  1283               	bcf	3,5	;RP0=0, select bank0
   710  014B  1303               	bcf	3,6	;RP1=0, select bank0
   711  014C  0188               	clrf	8	;volatile
   712  014D                     l1046:
   713                           
   714                           ;main.c: 132: 
   715  014D  1683               	bsf	3,5	;RP0=1, select bank1
   716  014E  1303               	bcf	3,6	;RP1=0, select bank1
   717  014F  0189               	clrf	9	;volatile
   718  0150                     l1048:
   719                           
   720                           ;main.c: 133: void MULTIPLEX(void) {
   721  0150  1283               	bcf	3,5	;RP0=0, select bank0
   722  0151  1303               	bcf	3,6	;RP1=0, select bank0
   723  0152  0189               	clrf	9	;volatile
   724  0153                     l1050:
   725                           
   726                           ;main.c: 134:     if (FLAG == 1) {
   727  0153  3003               	movlw	3
   728  0154  1683               	bsf	3,5	;RP0=1, select bank1
   729  0155  1303               	bcf	3,6	;RP1=0, select bank1
   730  0156  0086               	movwf	6	;volatile
   731                           
   732                           ;main.c: 135:         FLAG = 0;
   733  0157  1283               	bcf	3,5	;RP0=0, select bank0
   734  0158  1303               	bcf	3,6	;RP1=0, select bank0
   735  0159  0186               	clrf	6	;volatile
   736  015A                     l1052:
   737                           
   738                           ;main.c: 136:     } else if (FLAG == 0) {
   739  015A  3004               	movlw	4
   740  015B  1683               	bsf	3,5	;RP0=1, select bank1
   741  015C  1303               	bcf	3,6	;RP1=0, select bank1
   742  015D  0085               	movwf	5	;volatile
   743  015E                     l1054:
   744                           
   745                           ;main.c: 137:         FLAG = 1;
   746  015E  1283               	bcf	3,5	;RP0=0, select bank0
   747  015F  1303               	bcf	3,6	;RP1=0, select bank0
   748  0160  0185               	clrf	5	;volatile
   749  0161                     l1056:
   750                           
   751                           ;main.c: 138: 
   752  0161  178B               	bsf	11,7	;volatile
   753  0162                     l1058:
   754                           
   755                           ;main.c: 139:     }
   756  0162  158B               	bsf	11,3	;volatile
   757  0163                     l1060:
   758                           
   759                           ;main.c: 140: }
   760  0163  100B               	bcf	11,0	;volatile
   761  0164                     l1062:
   762  0164  1683               	bsf	3,5	;RP0=1, select bank1
   763  0165  1303               	bcf	3,6	;RP1=0, select bank1
   764  0166  1416               	bsf	22,0	;volatile
   765  0167                     l1064:
   766  0167  1496               	bsf	22,1	;volatile
   767  0168                     l1066:
   768  0168  170B               	bsf	11,6	;volatile
   769  0169  3049               	movlw	73
   770  016A  1283               	bcf	3,5	;RP0=0, select bank0
   771  016B  1303               	bcf	3,6	;RP1=0, select bank0
   772  016C  009F               	movwf	31	;volatile
   773  016D                     l1068:
   774  016D  1683               	bsf	3,5	;RP0=1, select bank1
   775  016E  1303               	bcf	3,6	;RP1=0, select bank1
   776  016F  019F               	clrf	31	;volatile
   777  0170                     l1070:
   778  0170  170C               	bsf	12,6	;volatile
   779  0171                     l1072:
   780  0171  1283               	bcf	3,5	;RP0=0, select bank0
   781  0172  1303               	bcf	3,6	;RP1=0, select bank0
   782  0173  170C               	bsf	12,6	;volatile
   783  0174                     l114:
   784  0174  0008               	return
   785  0175                     __end_of_setup:
   786                           
   787                           	psect	text2
   788  01D6                     __ptext2:	
   789 ;; *************** function _MULTIPLEX *****************
   790 ;; Defined at:
   791 ;;		line 165 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    3
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _MULTIPLEX
   821  01D6                     _MULTIPLEX:
   822  01D6                     l1074:	
   823                           ;incstack = 0
   824                           ; Regs used in _MULTIPLEX: [wreg+status,2+status,0]
   825                           
   826  01D6  0378               	decf	_FLAG,w
   827  01D7  1D03               	btfss	3,2
   828  01D8  29DA               	goto	u181
   829  01D9  29DB               	goto	u180
   830  01DA                     u181:
   831  01DA  29DD               	goto	l1078
   832  01DB                     u180:
   833  01DB                     l1076:
   834  01DB  01F8               	clrf	_FLAG
   835  01DC  29E4               	goto	l126
   836  01DD                     l1078:
   837  01DD  0878               	movf	_FLAG,w
   838  01DE  1D03               	btfss	3,2
   839  01DF  29E1               	goto	u191
   840  01E0  29E2               	goto	u190
   841  01E1                     u191:
   842  01E1  29E4               	goto	l126
   843  01E2                     u190:
   844  01E2                     l1080:
   845  01E2  01F8               	clrf	_FLAG
   846  01E3  0AF8               	incf	_FLAG,f
   847  01E4                     l126:
   848  01E4  0008               	return
   849  01E5                     __end_of_MULTIPLEX:
   850                           
   851                           	psect	text3
   852  00BE                     __ptext3:	
   853 ;; *************** function _ISR *****************
   854 ;; Defined at:
   855 ;;		line 52 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          5       0       0       0       0
   872 ;;      Totals:         5       0       0       0       0
   873 ;;Total ram usage:        5 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		_ADC_nib_1
   878 ;;		_ADC_nib_2
   879 ;;		_ADC_val
   880 ;;		_DISP
   881 ;; This function is called by:
   882 ;;		Interrupt level 1
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _ISR
   888  00BE                     _ISR:
   889  00BE                     i1l1082:
   890                           
   891                           ;main.c: 53:         TMR0 = 4;
   892  00BE  1C0B               	btfss	11,0	;volatile
   893  00BF  28C1               	goto	u20_21
   894  00C0  28C2               	goto	u20_20
   895  00C1                     u20_21:
   896  00C1  28E2               	goto	i1l1100
   897  00C2                     u20_20:
   898  00C2                     i1l1084:
   899                           
   900                           ;main.c: 54:         cont = cont +1;
   901  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   902  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   903  00C4  1C06               	btfss	6,0	;volatile
   904  00C5  28C7               	goto	u21_21
   905  00C6  28C8               	goto	u21_20
   906  00C7                     u21_21:
   907  00C7  28D3               	goto	i1l1092
   908  00C8                     u21_20:
   909  00C8                     i1l87:	
   910                           ;main.c: 57: }
   911                           
   912                           
   913                           ;main.c: 55:     }
   914  00C8  1806               	btfsc	6,0	;volatile
   915  00C9  28CB               	goto	u22_21
   916  00CA  28CC               	goto	u22_20
   917  00CB                     u22_21:
   918  00CB  28C8               	goto	i1l87
   919  00CC                     u22_20:
   920  00CC                     i1l1088:
   921                           
   922                           ;main.c: 58: 
   923  00CC  087D               	movf	_contador,w
   924  00CD  3E01               	addlw	1
   925  00CE  00F3               	movwf	??_ISR
   926  00CF  0873               	movf	??_ISR,w
   927  00D0  00FD               	movwf	_contador
   928  00D1                     i1l1090:
   929                           
   930                           ;main.c: 59: 
   931  00D1  087D               	movf	_contador,w
   932  00D2  0087               	movwf	7	;volatile
   933  00D3                     i1l1092:
   934                           
   935                           ;main.c: 61: 
   936  00D3  1C86               	btfss	6,1	;volatile
   937  00D4  28D6               	goto	u23_21
   938  00D5  28D7               	goto	u23_20
   939  00D6                     u23_21:
   940  00D6  28E2               	goto	i1l1100
   941  00D7                     u23_20:
   942  00D7                     i1l91:	
   943                           ;main.c: 64: 
   944                           
   945                           
   946                           ;main.c: 62: void setup(void);
   947  00D7  1886               	btfsc	6,1	;volatile
   948  00D8  28DA               	goto	u24_21
   949  00D9  28DB               	goto	u24_20
   950  00DA                     u24_21:
   951  00DA  28D7               	goto	i1l91
   952  00DB                     u24_20:
   953  00DB                     i1l1096:
   954                           
   955                           ;main.c: 65: 
   956  00DB  087D               	movf	_contador,w
   957  00DC  3EFF               	addlw	255
   958  00DD  00F3               	movwf	??_ISR
   959  00DE  0873               	movf	??_ISR,w
   960  00DF  00FD               	movwf	_contador
   961  00E0                     i1l1098:
   962                           
   963                           ;main.c: 66: 
   964  00E0  087D               	movf	_contador,w
   965  00E1  0087               	movwf	7	;volatile
   966  00E2                     i1l1100:
   967                           
   968                           ;main.c: 69: void main(void) {
   969  00E2  100B               	bcf	11,0	;volatile
   970  00E3                     i1l1102:
   971                           
   972                           ;main.c: 71:     setup();
   973  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   974  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   975  00E5  1F0C               	btfss	12,6	;volatile
   976  00E6  28E8               	goto	u25_21
   977  00E7  28E9               	goto	u25_20
   978  00E8                     u25_21:
   979  00E8  2923               	goto	i1l94
   980  00E9                     u25_20:
   981  00E9                     i1l1104:
   982                           
   983                           ;main.c: 72:     while (1) {
   984  00E9  130C               	bcf	12,6	;volatile
   985  00EA                     i1l1106:
   986                           
   987                           ;main.c: 73: 
   988  00EA  3006               	movlw	6
   989  00EB  00F4               	movwf	??_ISR+1
   990  00EC  3030               	movlw	48
   991  00ED  00F3               	movwf	??_ISR
   992  00EE                     u31_27:
   993  00EE  0BF3               	decfsz	??_ISR,f
   994  00EF  28EE               	goto	u31_27
   995  00F0  0BF4               	decfsz	??_ISR+1,f
   996  00F1  28EE               	goto	u31_27
   997  00F2  0000               	nop
   998  00F3                     i1l1108:
   999                           
  1000                           ;main.c: 74:         if (cont >= 1){
  1001  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1002  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1003  00F5  149F               	bsf	31,1	;volatile
  1004                           
  1005                           ;main.c: 75:             cont = 0;
  1006  00F6  291D               	goto	i1l1118
  1007  00F7                     i1l1110:
  1008                           
  1009                           ;main.c: 76:             MULTIPLEX();
  1010  00F7  081E               	movf	30,w	;volatile
  1011  00F8  00F3               	movwf	??_ISR
  1012  00F9  0873               	movf	??_ISR,w
  1013  00FA  00F0               	movwf	ADC_val@ADRESH_
  1014  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1015  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1016  00FD  081E               	movf	30,w	;volatile
  1017  00FE  120A  118A  21EF  120A  118A  	fcall	_ADC_val
  1018  0103  00F4               	movwf	??_ISR+1
  1019  0104  0874               	movf	??_ISR+1,w
  1020  0105  00FC               	movwf	_ADC_res
  1021  0106                     i1l1112:
  1022                           
  1023                           ;main.c: 77:         }
  1024  0106  087C               	movf	_ADC_res,w
  1025  0107  120A  118A  21E5  120A  118A  	fcall	_ADC_nib_1
  1026  010C  00F3               	movwf	??_ISR
  1027  010D  0873               	movf	??_ISR,w
  1028  010E  00FB               	movwf	_NIB1_res
  1029  010F                     i1l1114:
  1030                           
  1031                           ;main.c: 78:         if (ADC_res > contador){
  1032  010F  087C               	movf	_ADC_res,w
  1033  0110  120A  118A  21BE  120A  118A  	fcall	_ADC_nib_2
  1034  0115  00F3               	movwf	??_ISR
  1035  0116  0873               	movf	??_ISR,w
  1036  0117  00FA               	movwf	_NIB2_res
  1037  0118                     i1l1116:
  1038                           
  1039                           ;main.c: 80:         }
  1040  0118  120A  118A  219D  120A  118A  	fcall	_DISP
  1041  011D                     i1l1118:
  1042                           
  1043                           ;main.c: 75:             cont = 0;
  1044  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1045  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1046  011F  189F               	btfsc	31,1	;volatile
  1047  0120  2922               	goto	u26_21
  1048  0121  2923               	goto	u26_20
  1049  0122                     u26_21:
  1050  0122  28F7               	goto	i1l1110
  1051  0123                     u26_20:
  1052  0123                     i1l94:	
  1053                           ;main.c: 82:             PORTEbits.RE0 = 0;
  1054                           
  1055                           
  1056                           ;main.c: 83:         }
  1057  0123  1D0B               	btfss	11,2	;volatile
  1058  0124  2926               	goto	u27_21
  1059  0125  2927               	goto	u27_20
  1060  0126                     u27_21:
  1061  0126  292F               	goto	i1l99
  1062  0127                     u27_20:
  1063  0127                     i1l1120:
  1064                           
  1065                           ;main.c: 84:     }
  1066  0127  110B               	bcf	11,2	;volatile
  1067  0128                     i1l1122:
  1068                           
  1069                           ;main.c: 85:     return;
  1070  0128  3004               	movlw	4
  1071  0129  0081               	movwf	1	;volatile
  1072  012A                     i1l1124:
  1073                           
  1074                           ;main.c: 86: }
  1075  012A  0879               	movf	_cont,w
  1076  012B  3E01               	addlw	1
  1077  012C  00F3               	movwf	??_ISR
  1078  012D  0873               	movf	??_ISR,w
  1079  012E  00F9               	movwf	_cont
  1080  012F                     i1l99:
  1081  012F  0877               	movf	??_ISR+4,w
  1082  0130  008A               	movwf	10
  1083  0131  0876               	movf	??_ISR+3,w
  1084  0132  0084               	movwf	4
  1085  0133  0E75               	swapf	??_ISR+2,w
  1086  0134  0083               	movwf	3
  1087  0135  0EFE               	swapf	btemp,f
  1088  0136  0E7E               	swapf	btemp,w
  1089  0137  0009               	retfie
  1090  0138                     __end_of_ISR:
  1091                           
  1092                           	psect	intentry
  1093  0004                     __pintentry:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1096                           
  1097  0004                     interrupt_function:
  1098  007E                     saved_w	set	btemp
  1099  0004  00FE               	movwf	btemp
  1100  0005  0E03               	swapf	3,w
  1101  0006  00F5               	movwf	??_ISR+2
  1102  0007  0804               	movf	4,w
  1103  0008  00F6               	movwf	??_ISR+3
  1104  0009  080A               	movf	10,w
  1105  000A  00F7               	movwf	??_ISR+4
  1106  000B  120A  118A  28BE   	ljmp	_ISR
  1107                           
  1108                           	psect	text4
  1109  019D                     __ptext4:	
  1110 ;; *************** function _DISP *****************
  1111 ;; Defined at:
  1112 ;;		line 153 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    1
  1133 ;; This function calls:
  1134 ;;		_DISPLAY7
  1135 ;; This function is called by:
  1136 ;;		_ISR
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _DISP
  1142  019D                     _DISP:
  1143  019D                     i1l872:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _DISP: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1146                           
  1147  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1148  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1149  019F  0189               	clrf	9	;volatile
  1150  01A0                     i1l874:
  1151  01A0  0878               	movf	_FLAG,w
  1152  01A1  1D03               	btfss	3,2
  1153  01A2  29A4               	goto	u2_21
  1154  01A3  29A5               	goto	u2_20
  1155  01A4                     u2_21:
  1156  01A4  29AF               	goto	i1l880
  1157  01A5                     u2_20:
  1158  01A5                     i1l876:
  1159  01A5  087B               	movf	_NIB1_res,w
  1160  01A6  120A  118A  2021  120A  118A  	fcall	_DISPLAY7
  1161  01AB                     i1l878:
  1162  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1163  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1164  01AD  1489               	bsf	9,1	;volatile
  1165  01AE  29BD               	goto	i1l120
  1166  01AF                     i1l880:
  1167  01AF  0378               	decf	_FLAG,w
  1168  01B0  1D03               	btfss	3,2
  1169  01B1  29B3               	goto	u3_21
  1170  01B2  29B4               	goto	u3_20
  1171  01B3                     u3_21:
  1172  01B3  29BD               	goto	i1l120
  1173  01B4                     u3_20:
  1174  01B4                     i1l882:
  1175  01B4  087A               	movf	_NIB2_res,w
  1176  01B5  120A  118A  2021  120A  118A  	fcall	_DISPLAY7
  1177  01BA                     i1l884:
  1178  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1179  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1180  01BC  1509               	bsf	9,2	;volatile
  1181  01BD                     i1l120:
  1182  01BD  0008               	return
  1183  01BE                     __end_of_DISP:
  1184                           
  1185                           	psect	text5
  1186  0021                     __ptext5:	
  1187 ;; *************** function _DISPLAY7 *****************
  1188 ;; Defined at:
  1189 ;;		line 3 in file "DISP7.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  val             1    wreg     unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  val             1    2[COMMON] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         1       0       0       0       0
  1205 ;;      Temps:          2       0       0       0       0
  1206 ;;      Totals:         3       0       0       0       0
  1207 ;;Total ram usage:        3 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_DISP
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           
  1217                           ;psect for function _DISPLAY7
  1218  0021                     _DISPLAY7:
  1219                           
  1220                           ;incstack = 0
  1221                           ; Regs used in _DISPLAY7: [wreg-fsr0h+status,2+status,0]
  1222                           ;DISPLAY7@val stored from wreg
  1223  0021  00F2               	movwf	DISPLAY7@val
  1224  0022                     i1l780:
  1225                           
  1226                           ;DISP7.c: 4:     TRISD = 0;
  1227  0022  1683               	bsf	3,5	;RP0=1, select bank1
  1228  0023  1303               	bcf	3,6	;RP1=0, select bank1
  1229  0024  0188               	clrf	8	;volatile
  1230                           
  1231                           ;DISP7.c: 5:     PORTD = 0;
  1232  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0027  0188               	clrf	8	;volatile
  1235                           
  1236                           ;DISP7.c: 6:     switch (val) {
  1237  0028  2856               	goto	i1l848
  1238  0029                     i1l782:
  1239                           
  1240                           ;DISP7.c: 8:             PORTD = 0x3F;
  1241  0029  303F               	movlw	63
  1242  002A  0088               	movwf	8	;volatile
  1243                           
  1244                           ;DISP7.c: 9:             break;
  1245  002B  28BD               	goto	i1l188
  1246  002C                     i1l784:
  1247                           
  1248                           ;DISP7.c: 11:             PORTD = 0x06;
  1249  002C  3006               	movlw	6
  1250  002D  0088               	movwf	8	;volatile
  1251                           
  1252                           ;DISP7.c: 12:             break;
  1253  002E  28BD               	goto	i1l188
  1254  002F                     i1l786:
  1255                           
  1256                           ;DISP7.c: 14:             PORTD = 0x5B;
  1257  002F  305B               	movlw	91
  1258  0030  0088               	movwf	8	;volatile
  1259                           
  1260                           ;DISP7.c: 15:             break;
  1261  0031  28BD               	goto	i1l188
  1262  0032                     i1l788:
  1263                           
  1264                           ;DISP7.c: 17:             PORTD = 0x4F;
  1265  0032  304F               	movlw	79
  1266  0033  0088               	movwf	8	;volatile
  1267                           
  1268                           ;DISP7.c: 18:             break;
  1269  0034  28BD               	goto	i1l188
  1270  0035                     i1l790:
  1271                           
  1272                           ;DISP7.c: 20:             PORTD = 0x66;
  1273  0035  3066               	movlw	102
  1274  0036  0088               	movwf	8	;volatile
  1275                           
  1276                           ;DISP7.c: 21:             break;
  1277  0037  28BD               	goto	i1l188
  1278  0038                     i1l792:
  1279                           
  1280                           ;DISP7.c: 23:             PORTD = 0x6D;
  1281  0038  306D               	movlw	109
  1282  0039  0088               	movwf	8	;volatile
  1283                           
  1284                           ;DISP7.c: 24:             break;
  1285  003A  28BD               	goto	i1l188
  1286  003B                     i1l794:
  1287                           
  1288                           ;DISP7.c: 26:             PORTD = 0x7D;
  1289  003B  307D               	movlw	125
  1290  003C  0088               	movwf	8	;volatile
  1291                           
  1292                           ;DISP7.c: 27:             break;
  1293  003D  28BD               	goto	i1l188
  1294  003E                     i1l796:
  1295                           
  1296                           ;DISP7.c: 29:             PORTD = 0x07;
  1297  003E  3007               	movlw	7
  1298  003F  0088               	movwf	8	;volatile
  1299                           
  1300                           ;DISP7.c: 30:             break;
  1301  0040  28BD               	goto	i1l188
  1302  0041                     i1l798:
  1303                           
  1304                           ;DISP7.c: 32:             PORTD = 0x7F;
  1305  0041  307F               	movlw	127
  1306  0042  0088               	movwf	8	;volatile
  1307                           
  1308                           ;DISP7.c: 33:             break;
  1309  0043  28BD               	goto	i1l188
  1310  0044                     i1l800:
  1311                           
  1312                           ;DISP7.c: 35:             PORTD = 0x6F;
  1313  0044  306F               	movlw	111
  1314  0045  0088               	movwf	8	;volatile
  1315                           
  1316                           ;DISP7.c: 36:             break;
  1317  0046  28BD               	goto	i1l188
  1318  0047                     i1l802:
  1319                           
  1320                           ;DISP7.c: 38:             PORTD = 0x77;
  1321  0047  3077               	movlw	119
  1322  0048  0088               	movwf	8	;volatile
  1323                           
  1324                           ;DISP7.c: 39:             break;
  1325  0049  28BD               	goto	i1l188
  1326  004A                     i1l804:
  1327                           
  1328                           ;DISP7.c: 41:             PORTD = 0x1F;
  1329  004A  301F               	movlw	31
  1330  004B  0088               	movwf	8	;volatile
  1331                           
  1332                           ;DISP7.c: 42:             break;
  1333  004C  28BD               	goto	i1l188
  1334  004D                     i1l806:
  1335                           
  1336                           ;DISP7.c: 44:             PORTD = 0x4E;
  1337  004D  304E               	movlw	78
  1338  004E  0088               	movwf	8	;volatile
  1339                           
  1340                           ;DISP7.c: 45:             break;
  1341  004F  28BD               	goto	i1l188
  1342  0050                     i1l808:
  1343                           
  1344                           ;DISP7.c: 47:             PORTD = 0x3D;
  1345  0050  303D               	movlw	61
  1346  0051  0088               	movwf	8	;volatile
  1347                           
  1348                           ;DISP7.c: 48:             break;
  1349  0052  28BD               	goto	i1l188
  1350  0053                     i1l812:
  1351                           
  1352                           ;DISP7.c: 53:             PORTD = 0x47;
  1353  0053  3047               	movlw	71
  1354  0054  0088               	movwf	8	;volatile
  1355                           
  1356                           ;DISP7.c: 54:             break;
  1357  0055  28BD               	goto	i1l188
  1358  0056                     i1l848:
  1359  0056  0872               	movf	DISPLAY7@val,w
  1360  0057  00F0               	movwf	??_DISPLAY7
  1361  0058  01F1               	clrf	??_DISPLAY7+1
  1362                           
  1363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1364                           ; Switch size 1, requested type "simple"
  1365                           ; Number of cases is 1, Range of values is 0 to 0
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte            4     3 (average)
  1369                           ; direct_byte           11     8 (fixed)
  1370                           ; jumptable            260     6 (fixed)
  1371                           ;	Chosen strategy is simple_byte
  1372  0059  0871               	movf	??_DISPLAY7+1,w
  1373  005A  3A00               	xorlw	0	; case 0
  1374  005B  1903               	skipnz
  1375  005C  285E               	goto	i1l1164
  1376  005D  2829               	goto	i1l782
  1377  005E                     i1l1164:
  1378                           
  1379                           ; Switch size 1, requested type "simple"
  1380                           ; Number of cases is 31, Range of values is 0 to 240
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte           94    48 (average)
  1384                           ; jumptable            260     6 (fixed)
  1385                           ;	Chosen strategy is simple_byte
  1386  005E  0870               	movf	??_DISPLAY7,w
  1387  005F  3A00               	xorlw	0	; case 0
  1388  0060  1903               	skipnz
  1389  0061  2829               	goto	i1l782
  1390  0062  3A01               	xorlw	1	; case 1
  1391  0063  1903               	skipnz
  1392  0064  282C               	goto	i1l784
  1393  0065  3A03               	xorlw	3	; case 2
  1394  0066  1903               	skipnz
  1395  0067  282F               	goto	i1l786
  1396  0068  3A01               	xorlw	1	; case 3
  1397  0069  1903               	skipnz
  1398  006A  2832               	goto	i1l788
  1399  006B  3A07               	xorlw	7	; case 4
  1400  006C  1903               	skipnz
  1401  006D  2835               	goto	i1l790
  1402  006E  3A01               	xorlw	1	; case 5
  1403  006F  1903               	skipnz
  1404  0070  2838               	goto	i1l792
  1405  0071  3A03               	xorlw	3	; case 6
  1406  0072  1903               	skipnz
  1407  0073  283B               	goto	i1l794
  1408  0074  3A01               	xorlw	1	; case 7
  1409  0075  1903               	skipnz
  1410  0076  283E               	goto	i1l796
  1411  0077  3A0F               	xorlw	15	; case 8
  1412  0078  1903               	skipnz
  1413  0079  2841               	goto	i1l798
  1414  007A  3A01               	xorlw	1	; case 9
  1415  007B  1903               	skipnz
  1416  007C  2844               	goto	i1l800
  1417  007D  3A03               	xorlw	3	; case 10
  1418  007E  1903               	skipnz
  1419  007F  2847               	goto	i1l802
  1420  0080  3A01               	xorlw	1	; case 11
  1421  0081  1903               	skipnz
  1422  0082  284A               	goto	i1l804
  1423  0083  3A07               	xorlw	7	; case 12
  1424  0084  1903               	skipnz
  1425  0085  284D               	goto	i1l806
  1426  0086  3A01               	xorlw	1	; case 13
  1427  0087  1903               	skipnz
  1428  0088  2850               	goto	i1l808
  1429  0089  3A03               	xorlw	3	; case 14
  1430  008A  1903               	skipnz
  1431  008B  2832               	goto	i1l788
  1432  008C  3A01               	xorlw	1	; case 15
  1433  008D  1903               	skipnz
  1434  008E  2853               	goto	i1l812
  1435  008F  3A1F               	xorlw	31	; case 16
  1436  0090  1903               	skipnz
  1437  0091  2841               	goto	i1l798
  1438  0092  3A30               	xorlw	48	; case 32
  1439  0093  1903               	skipnz
  1440  0094  2835               	goto	i1l790
  1441  0095  3A10               	xorlw	16	; case 48
  1442  0096  1903               	skipnz
  1443  0097  284D               	goto	i1l806
  1444  0098  3A70               	xorlw	112	; case 64
  1445  0099  1903               	skipnz
  1446  009A  282F               	goto	i1l786
  1447  009B  3A10               	xorlw	16	; case 80
  1448  009C  1903               	skipnz
  1449  009D  2847               	goto	i1l802
  1450  009E  3A30               	xorlw	48	; case 96
  1451  009F  1903               	skipnz
  1452  00A0  283B               	goto	i1l794
  1453  00A1  3A10               	xorlw	16	; case 112
  1454  00A2  1903               	skipnz
  1455  00A3  2832               	goto	i1l788
  1456  00A4  3AF0               	xorlw	240	; case 128
  1457  00A5  1903               	skipnz
  1458  00A6  282C               	goto	i1l784
  1459  00A7  3A10               	xorlw	16	; case 144
  1460  00A8  1903               	skipnz
  1461  00A9  2844               	goto	i1l800
  1462  00AA  3A30               	xorlw	48	; case 160
  1463  00AB  1903               	skipnz
  1464  00AC  2838               	goto	i1l792
  1465  00AD  3A10               	xorlw	16	; case 176
  1466  00AE  1903               	skipnz
  1467  00AF  2850               	goto	i1l808
  1468  00B0  3A70               	xorlw	112	; case 192
  1469  00B1  1903               	skipnz
  1470  00B2  2832               	goto	i1l788
  1471  00B3  3A10               	xorlw	16	; case 208
  1472  00B4  1903               	skipnz
  1473  00B5  284A               	goto	i1l804
  1474  00B6  3A30               	xorlw	48	; case 224
  1475  00B7  1903               	skipnz
  1476  00B8  283E               	goto	i1l796
  1477  00B9  3A10               	xorlw	16	; case 240
  1478  00BA  1903               	skipnz
  1479  00BB  2853               	goto	i1l812
  1480  00BC  2829               	goto	i1l782
  1481  00BD                     i1l188:
  1482  00BD  0008               	return
  1483  00BE                     __end_of_DISPLAY7:
  1484                           
  1485                           	psect	text6
  1486  01EF                     __ptext6:	
  1487 ;; *************** function _ADC_val *****************
  1488 ;; Defined at:
  1489 ;;		line 9 in file "ADC1.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  ADRESL_         1    wreg     unsigned char 
  1492 ;;  ADRESH_         1    0[COMMON] unsigned char 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  ADRESL_         1    0[COMMON] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      unsigned char 
  1497 ;; Registers used:
  1498 ;;		wreg
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         1       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0
  1506 ;;      Temps:          1       0       0       0       0
  1507 ;;      Totals:         2       0       0       0       0
  1508 ;;Total ram usage:        2 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_ISR
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _ADC_val
  1519  01EF                     _ADC_val:
  1520  01EF                     i1l1016:	
  1521                           ;incstack = 0
  1522                           ; Regs used in _ADC_val: [wreg]
  1523                           
  1524                           
  1525                           ;ADC1.c: 10:     VALOR_ADC = ((ADRESL << 8) | ADRESH);
  1526  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1527  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1528  01F1  081E               	movf	30,w	;volatile
  1529  01F2  00F1               	movwf	??_ADC_val
  1530  01F3  0871               	movf	??_ADC_val,w
  1531  01F4  00A3               	movwf	_VALOR_ADC
  1532                           
  1533                           ;ADC1.c: 11:     return VALOR_ADC;
  1534  01F5  0823               	movf	_VALOR_ADC,w
  1535  01F6                     i1l141:
  1536  01F6  0008               	return
  1537  01F7                     __end_of_ADC_val:
  1538                           
  1539                           	psect	text7
  1540  01BE                     __ptext7:	
  1541 ;; *************** function _ADC_nib_2 *****************
  1542 ;; Defined at:
  1543 ;;		line 19 in file "ADC1.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  val_ADC_1       1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  val_ADC_1       1    2[COMMON] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         1       0       0       0       0
  1559 ;;      Temps:          2       0       0       0       0
  1560 ;;      Totals:         3       0       0       0       0
  1561 ;;Total ram usage:        3 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_ISR
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _ADC_nib_2
  1572  01BE                     _ADC_nib_2:
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _ADC_nib_2: [wreg+status,2+status,0]
  1576                           ;ADC_nib_2@val_ADC_1 stored from wreg
  1577  01BE  00F2               	movwf	ADC_nib_2@val_ADC_1
  1578  01BF                     i1l1026:
  1579                           
  1580                           ;ADC1.c: 20:     VALOR_SWAP = (((val_ADC_1 & 0x0F)<<4) | ((val_ADC_1 & 0x0F)>>4));
  1581  01BF  0872               	movf	ADC_nib_2@val_ADC_1,w
  1582  01C0  390F               	andlw	15
  1583  01C1  00F0               	movwf	??_ADC_nib_2
  1584  01C2  3003               	movlw	3
  1585  01C3                     u17_25:
  1586  01C3  1003               	clrc
  1587  01C4  0DF0               	rlf	??_ADC_nib_2,f
  1588  01C5  3EFF               	addlw	-1
  1589  01C6  1D03               	skipz
  1590  01C7  29C3               	goto	u17_25
  1591  01C8  1003               	clrc
  1592  01C9  0D70               	rlf	??_ADC_nib_2,w
  1593  01CA  00F1               	movwf	??_ADC_nib_2+1
  1594  01CB  0871               	movf	??_ADC_nib_2+1,w
  1595  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1596  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1597  01CE  00A2               	movwf	_VALOR_SWAP
  1598  01CF                     i1l1028:
  1599                           
  1600                           ;ADC1.c: 21:     VALOR_NIB2 = (VALOR_SWAP & 15);
  1601  01CF  0822               	movf	_VALOR_SWAP,w
  1602  01D0  390F               	andlw	15
  1603  01D1  00F0               	movwf	??_ADC_nib_2
  1604  01D2  0870               	movf	??_ADC_nib_2,w
  1605  01D3  00A0               	movwf	_VALOR_NIB2
  1606  01D4                     i1l1030:
  1607                           
  1608                           ;ADC1.c: 22:     return VALOR_NIB2;
  1609  01D4  0820               	movf	_VALOR_NIB2,w
  1610  01D5                     i1l147:
  1611  01D5  0008               	return
  1612  01D6                     __end_of_ADC_nib_2:
  1613                           
  1614                           	psect	text8
  1615  01E5                     __ptext8:	
  1616 ;; *************** function _ADC_nib_1 *****************
  1617 ;; Defined at:
  1618 ;;		line 14 in file "ADC1.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  val_ADC_        1    wreg     unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  val_ADC_        1    1[COMMON] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         1       0       0       0       0
  1634 ;;      Temps:          1       0       0       0       0
  1635 ;;      Totals:         2       0       0       0       0
  1636 ;;Total ram usage:        2 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_ISR
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _ADC_nib_1
  1647  01E5                     _ADC_nib_1:
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _ADC_nib_1: [wreg+status,2]
  1651                           ;ADC_nib_1@val_ADC_ stored from wreg
  1652  01E5  00F1               	movwf	ADC_nib_1@val_ADC_
  1653  01E6                     i1l1020:
  1654                           
  1655                           ;ADC1.c: 15:     VALOR_NIB1 = (val_ADC_ & 15);
  1656  01E6  0871               	movf	ADC_nib_1@val_ADC_,w
  1657  01E7  390F               	andlw	15
  1658  01E8  00F0               	movwf	??_ADC_nib_1
  1659  01E9  0870               	movf	??_ADC_nib_1,w
  1660  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1661  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1662  01EC  00A1               	movwf	_VALOR_NIB1
  1663  01ED                     i1l1022:
  1664                           
  1665                           ;ADC1.c: 16:     return VALOR_NIB1;
  1666  01ED  0821               	movf	_VALOR_NIB1,w
  1667  01EE                     i1l144:
  1668  01EE  0008               	return
  1669  01EF                     __end_of_ADC_nib_1:
  1670  007E                     btemp	set	126	;btemp
  1671  007E                     wtemp0	set	126
  1672                           
  1673                           	psect	config
  1674                           
  1675                           ;Config register CONFIG1 @ 0x2007
  1676                           ;	Oscillator Selection bits
  1677                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1678                           ;	Watchdog Timer Enable bit
  1679                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1680                           ;	Power-up Timer Enable bit
  1681                           ;	PWRTE = OFF, PWRT disabled
  1682                           ;	RE3/MCLR pin function select bit
  1683                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1684                           ;	Code Protection bit
  1685                           ;	CP = OFF, Program memory code protection is disabled
  1686                           ;	Data Code Protection bit
  1687                           ;	CPD = OFF, Data memory code protection is disabled
  1688                           ;	Brown Out Reset Selection bits
  1689                           ;	BOREN = OFF, BOR disabled
  1690                           ;	Internal External Switchover bit
  1691                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1692                           ;	Fail-Safe Clock Monitor Enabled bit
  1693                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1694                           ;	Low Voltage Programming Enable bit
  1695                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1696                           ;	In-Circuit Debugger Mode bit
  1697                           ;	DEBUG = 0x1, unprogrammed default
  1698  2007                     	org	8199
  1699  2007  20D4               	dw	8404
  1700                           
  1701                           ;Config register CONFIG2 @ 0x2008
  1702                           ;	Brown-out Reset Selection bit
  1703                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1704                           ;	Flash Program Memory Self Write Enable bits
  1705                           ;	WRT = OFF, Write protection off
  1706  2008                     	org	8200
  1707  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC_nib_2
    _DISP->_DISPLAY7

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _MULTIPLEX
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MULTIPLEX                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     135
                                              3 COMMON     5     5      0
                          _ADC_nib_1
                          _ADC_nib_2
                            _ADC_val
                               _DISP
 ---------------------------------------------------------------------------------
 (3) _DISP                                                 0     0      0      15
                           _DISPLAY7
 ---------------------------------------------------------------------------------
 (4) _DISPLAY7                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_val                                              3     2      1      76
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) _ADC_nib_2                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_nib_1                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MULTIPLEX
   _setup

 _ISR (ROOT)
   _ADC_nib_1
   _ADC_nib_2
   _ADC_val
   _DISP
     _DISPLAY7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 09:41:58 2021

     __size_of_ADC_nib_1 000A       __size_of_ADC_nib_2 0018                      l114 0174  
                    l126 01E4                      u300 0196                      u301 0195  
                    u180 01DB                      u181 01DA                      u190 01E2  
                    u191 01E1                      u280 0180                      u281 017F  
                    u290 018C                      u291 018B                      _ISR 00BE  
                    fsr0 0004          __end_of_ADC_val 01F7                     ?_ISR 0070  
                   l1040 0144                     l1050 0153                     l1042 0147  
                   l1034 0138                     l1130 017B                     l1060 0163  
                   l1052 015A                     l1044 014A                     l1036 0140  
                   l1140 0190                     l1132 0180                     l1070 0170  
                   l1062 0164                     l1054 015E                     l1046 014D  
                   l1038 0141                     l1142 0196                     l1134 0181  
                   l1126 0175                     l1080 01E2                     l1072 0171  
                   l1064 0167                     l1056 0161                     l1048 0150  
                   l1136 0186                     l1128 0176                     l1074 01D6  
                   l1066 0168                     l1058 0162                     l1138 018C  
                   l1076 01DB                     l1068 016D                     l1078 01DD  
                   _FLAG 0078                     _DISP 019D                     i1l91 00D7  
                   i1l94 0123                     i1l87 00C8                     i1l99 012F  
                   _TMR0 0001                     u2_20 01A5                     u2_21 01A4  
                   u3_20 01B4                     u3_21 01B3                     _cont 0079  
                   _main 0175                     btemp 007E                     start 000E  
       __end_of_DISPLAY7 00BE                    ??_ISR 0073                    ?_DISP 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l120 01BD  
                  i1l141 01F6                    i1l144 01EE                    i1l147 01D5  
                  i1l188 00BD                    i1l800 0044                    i1l802 0047  
                  i1l812 0053                    i1l804 004A                    i1l806 004D  
                  i1l808 0050                    i1l780 0022                    i1l790 0035  
                  i1l782 0029                    i1l792 0038                    i1l784 002C  
                  i1l848 0056                    i1l880 01AF                    i1l872 019D  
                  i1l794 003B                    i1l786 002F                    i1l882 01B4  
                  i1l874 01A0                    i1l796 003E                    i1l788 0032  
                  i1l884 01BA                    i1l876 01A5                    i1l798 0041  
                  i1l878 01AB                    u20_20 00C2                    u20_21 00C1  
                  u21_20 00C8                    u21_21 00C7                    u22_20 00CC  
                  u22_21 00CB                    u23_20 00D7                    u23_21 00D6  
                  u31_27 00EE                    u24_20 00DB                    u24_21 00DA  
                  u25_20 00E9                    u25_21 00E8                    u17_25 01C3  
                  u26_20 0123                    u26_21 0122                    u27_20 0127  
                  u27_21 0126                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089       __size_of_MULTIPLEX 000F  
                  _setup 0138                    pclath 000A                    status 0003  
      __end_of_ADC_nib_1 01EF        __end_of_ADC_nib_2 01D6                    wtemp0 007E  
         ADC_val@ADRESH_ 0070           ADC_val@ADRESL_ 0070             __end_of_DISP 01BE  
        __initialization 0011             __end_of_main 019D                   ??_DISP 0073  
              ??_ADC_val 0071                   ??_main 0000                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1020 01E6  
                 i1l1100 00E2                   i1l1022 01ED                   i1l1030 01D4  
                 i1l1110 00F7                   i1l1102 00E3                   i1l1016 01EF  
                 i1l1120 0127                   i1l1112 0106                   i1l1104 00E9  
                 i1l1026 01BF                   i1l1122 0128                   i1l1114 010F  
                 i1l1106 00EA                   i1l1028 01CF                   i1l1124 012A  
                 i1l1116 0118                   i1l1108 00F3                   i1l1118 011D  
                 i1l1090 00D1                   i1l1082 00BE                   i1l1164 005E  
                 i1l1092 00D3                   i1l1084 00C2                   i1l1096 00DB  
                 i1l1088 00CC                   i1l1098 00E0                   _OSCCON 008F  
                 _TMR0IF 005A        __end_of_MULTIPLEX 01E5       ADC_nib_2@val_ADC_1 0072  
                 saved_w 007E                ?_DISPLAY7 0070  __end_of__initialization 001D  
         __pcstackCOMMON 0070            __end_of_setup 0175               ??_DISPLAY7 0070  
                ??_setup 0000               __pbssBANK0 0020               __pmaintext 0175  
             __pintentry 0004                  _ADC_res 007C                  _ADC_val 01EF  
              _ADC_nib_1 01E5                _ADC_nib_2 01BE                  __ptext1 0138  
                __ptext2 01D6                  __ptext3 00BE                  __ptext4 019D  
                __ptext5 0021                  __ptext6 01EF                  __ptext7 01BE  
                __ptext8 01E5             __size_of_ISR 007A     end_of_initialization 001D  
             ?_ADC_nib_1 0070               ?_ADC_nib_2 0070                _VALOR_ADC 0023  
              _MULTIPLEX 01D6                _PORTBbits 0006                _PORTEbits 0009  
      __size_of_DISPLAY7 009D               ?_MULTIPLEX 0070      start_initialization 0011  
            __end_of_ISR 0138              ??_ADC_nib_1 0070              ??_ADC_nib_2 0070  
      ADC_nib_1@val_ADC_ 0071                 ?_ADC_val 0070              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0000              ??_MULTIPLEX 0000  
               _DISPLAY7 0021           __size_of_setup 003D        interrupt_function 0004  
               _NIB1_res 007B                 _NIB2_res 007A                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
       __size_of_ADC_val 0008                 _contador 007D            __size_of_DISP 0021  
          __size_of_main 0028              DISPLAY7@val 0072               _INTCONbits 000B  
               intlevel1 0000               _VALOR_NIB1 0021               _VALOR_NIB2 0020  
             _VALOR_SWAP 0022  
