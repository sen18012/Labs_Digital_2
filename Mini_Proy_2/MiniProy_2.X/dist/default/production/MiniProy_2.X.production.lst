

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 23:12:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  008F                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0105                     	;# 
   456  0107                     	;# 
   457  0108                     	;# 
   458  0109                     	;# 
   459  010C                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  0185                     	;# 
   465  0187                     	;# 
   466  0188                     	;# 
   467  0189                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470                           
   471                           	psect	idataBANK0
   472  079D                     __pidataBANK0:
   473                           
   474                           ;initializer for _date1
   475  079D  3444               	retlw	68
   476  079E  3441               	retlw	65
   477  079F  3454               	retlw	84
   478  07A0  3445               	retlw	69
   479  07A1  343A               	retlw	58
   480  07A2  3420               	retlw	32
   481  07A3  3420               	retlw	32
   482  07A4  3420               	retlw	32
   483  07A5  342F               	retlw	47
   484  07A6  3420               	retlw	32
   485  07A7  3420               	retlw	32
   486  07A8  342F               	retlw	47
   487  07A9  3432               	retlw	50
   488  07AA  3430               	retlw	48
   489  07AB  3420               	retlw	32
   490  07AC  3420               	retlw	32
   491  07AD  3400               	retlw	0
   492                           
   493                           ;initializer for _time
   494  07AE  3454               	retlw	84
   495  07AF  3449               	retlw	73
   496  07B0  344D               	retlw	77
   497  07B1  3445               	retlw	69
   498  07B2  343A               	retlw	58
   499  07B3  3420               	retlw	32
   500  07B4  3420               	retlw	32
   501  07B5  3420               	retlw	32
   502  07B6  343A               	retlw	58
   503  07B7  3420               	retlw	32
   504  07B8  3420               	retlw	32
   505  07B9  343A               	retlw	58
   506  07BA  3420               	retlw	32
   507  07BB  3420               	retlw	32
   508  07BC  3400               	retlw	0
   509                           
   510                           	psect	strings
   511  0800                     __pstrings:
   512  0800                     stringtab:
   513  0800                     __stringtab:
   514  0800                     stringcode:	
   515                           ;	String table - string pointers are 1 byte each
   516                           
   517  0800                     stringdir:
   518  0800  3008               	movlw	high stringdir
   519  0801  008A               	movwf	10
   520  0802  0804               	movf	4,w
   521  0803  0A84               	incf	4,f
   522  0804  0782               	addwf	2,f
   523  0805                     __stringbase:
   524  0805  3400               	retlw	0
   525  0806                     __end_of__stringtab:
   526  0806                     _dpowers:
   527  0806  3401               	retlw	1
   528  0807  3400               	retlw	0
   529  0808  340A               	retlw	10
   530  0809  3400               	retlw	0
   531  080A  3464               	retlw	100
   532  080B  3400               	retlw	0
   533  080C  34E8               	retlw	232
   534  080D  3403               	retlw	3
   535  080E  3410               	retlw	16
   536  080F  3427               	retlw	39
   537  0810                     __end_of_dpowers:
   538  0013                     _SSPBUF	set	19
   539  0014                     _SSPCON	set	20
   540  0019                     _TXREG	set	25
   541  000B                     _INTCONbits	set	11
   542  0018                     _RCSTAbits	set	24
   543  0008                     _PORTD	set	8
   544  0007                     _PORTC	set	7
   545  0006                     _PORTB	set	6
   546  0005                     _PORTA	set	5
   547  0009                     _PORTE	set	9
   548  001A                     _RCREG	set	26
   549  000C                     _PIR1bits	set	12
   550  0063                     _SSPIF	set	99
   551  005E                     _PEIE	set	94
   552  005F                     _GIE	set	95
   553  0049                     _RE1	set	73
   554  0048                     _RE0	set	72
   555  0065                     _RCIF	set	101
   556  0091                     _SSPCON2bits	set	145
   557  0094                     _SSPSTAT	set	148
   558  0093                     _SSPADD	set	147
   559  0091                     _SSPCON2	set	145
   560  008C                     _PIE1bits	set	140
   561  0098                     _TXSTAbits	set	152
   562  0099                     _SPBRG	set	153
   563  009A                     _SPBRGH	set	154
   564  0089                     _TRISE	set	137
   565  0087                     _TRISCbits	set	135
   566  0086                     _TRISB	set	134
   567  0085                     _TRISA	set	133
   568  0088                     _TRISD	set	136
   569  0463                     _SSPIE	set	1123
   570  043C                     _TRISC4	set	1084
   571  043B                     _TRISC3	set	1083
   572  04C1                     _TRMT	set	1217
   573  0189                     _ANSELH	set	393
   574  0188                     _ANSEL	set	392
   575  0810                     STR_1:
   576  0810  3425               	retlw	37	;'%'
   577  0811  342E               	retlw	46	;'.'
   578  0812  3430               	retlw	48	;'0'
   579  0813  3469               	retlw	105	;'i'
   580  0814  3400               	retlw	0
   581                           
   582                           	psect	cinit
   583  000F                     start_initialization:	
   584                           ; #config settings
   585                           
   586  000F                     __initialization:
   587                           
   588                           ; Initialize objects allocated to BANK0
   589  000F  1383               	bcf	3,7	;select IRP bank0
   590  0010  3040               	movlw	low (__pdataBANK0+32)
   591  0011  00FD               	movwf	btemp+-1
   592  0012  3007               	movlw	high __pidataBANK0
   593  0013  00FE               	movwf	btemp
   594  0014  309D               	movlw	low __pidataBANK0
   595  0015  00FF               	movwf	btemp+1
   596  0016  3020               	movlw	low __pdataBANK0
   597  0017  0084               	movwf	4
   598  0018  120A  158A  27C4  120A  118A  	fcall	init_ram0
   599                           
   600                           ; Clear objects allocated to BANK0
   601  001D  01DC               	clrf	__pbssBANK0& (0+127)
   602  001E  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   603  001F  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   604  0020  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   605  0021  01E0               	clrf	(__pbssBANK0+4)& (0+127)
   606  0022  01E1               	clrf	(__pbssBANK0+5)& (0+127)
   607  0023  01E2               	clrf	(__pbssBANK0+6)& (0+127)
   608  0024  01E3               	clrf	(__pbssBANK0+7)& (0+127)
   609  0025  01E4               	clrf	(__pbssBANK0+8)& (0+127)
   610  0026  01E5               	clrf	(__pbssBANK0+9)& (0+127)
   611  0027  01E6               	clrf	(__pbssBANK0+10)& (0+127)
   612  0028  01E7               	clrf	(__pbssBANK0+11)& (0+127)
   613                           
   614                           ; Clear objects allocated to COMMON
   615  0029  01F6               	clrf	__pbssCOMMON& (0+127)
   616  002A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   617  002B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   618  002C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   619  002D                     end_of_initialization:	
   620                           ;End of C runtime variable initialization code
   621                           
   622  002D                     __end_of__initialization:
   623  002D  0183               	clrf	3
   624  002E  120A  118A  2831   	ljmp	_main	;jump to C main() function
   625                           
   626                           	psect	bssCOMMON
   627  0076                     __pbssCOMMON:
   628  0076                     _min:
   629  0076                     	ds	2
   630  0078                     _led:
   631  0078                     	ds	2
   632                           
   633                           	psect	bssBANK0
   634  005C                     __pbssBANK0:
   635  005C                     _year:
   636  005C                     	ds	2
   637  005E                     _month:
   638  005E                     	ds	2
   639  0060                     _date:
   640  0060                     	ds	2
   641  0062                     _hour:
   642  0062                     	ds	2
   643  0064                     _sec:
   644  0064                     	ds	2
   645  0066                     _USART_LEER:
   646  0066                     	ds	1
   647  0067                     _datos:
   648  0067                     	ds	1
   649                           
   650                           	psect	dataBANK0
   651  0020                     __pdataBANK0:
   652  0020                     _date1:
   653  0020                     	ds	17
   654  0031                     _time:
   655  0031                     	ds	15
   656                           
   657                           	psect	inittext
   658  0FC0                     init_fetch0:	
   659                           ;	Called with low address in FSR and high address in W
   660                           
   661  0FC0  087E               	movf	btemp,w
   662  0FC1  008A               	movwf	10
   663  0FC2  087F               	movf	btemp+1,w
   664  0FC3  0082               	movwf	2
   665  0FC4                     init_ram0:	
   666                           ;Called with:
   667                           ;	high address of idata address in btemp 
   668                           ;	low address of idata address in btemp+1 
   669                           ;	low address of data in FSR
   670                           ;	high address + 1 of data in btemp-1
   671                           
   672  0FC4  120A  158A  27C0  120A  158A  	fcall	init_fetch0
   673  0FC9  0080               	movwf	0
   674  0FCA  0A84               	incf	4,f
   675  0FCB  0804               	movf	4,w
   676  0FCC  067D               	xorwf	btemp+-1,w
   677  0FCD  1903               	btfsc	3,2
   678  0FCE  3400               	retlw	0
   679  0FCF  0AFF               	incf	btemp+1,f
   680  0FD0  1903               	btfsc	3,2
   681  0FD1  0AFE               	incf	btemp,f
   682  0FD2  2FC4               	goto	init_ram0
   683                           
   684                           	psect	cstackCOMMON
   685  0070                     __pcstackCOMMON:
   686  0070                     ?_isdigit:
   687  0070                     ?_setup:	
   688                           ; 1 bit 
   689                           
   690  0070                     ?_Lcd_Init:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_Lcd_Clear:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_Lcd_Write_String:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_I2C_Master_Start:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_I2C_Master_Stop:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_I2C_Master_RepeatedStart:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_DS3231_time:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_USART_STRING:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_USART_ESCRITURA:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_ISR:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??_ISR:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_main:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_bcd_to_decimal:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_Lcd_Port:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_Lcd_Cmd:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_Lcd_Write_Char:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_I2C_Master_Wait:	
   739                           ; 1 bytes @ 0x0
   740                           
   741                           
   742                           ; 1 bytes @ 0x0
   743  0070                     	ds	4
   744  0074                     ??_I2C_Master_Start:
   745  0074                     ?_I2C_Master_Write:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     ??_I2C_Master_Stop:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ??_I2C_Master_RepeatedStart:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ??_USART_ESCRITURA:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     ??_isdigit:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ??_Lcd_Port:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??_I2C_Master_Wait:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ?___bmul:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??___lldiv:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ??___awdiv:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ??___awmod:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ??___lwdiv:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     ?_I2C_Master_Read:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     USART_ESCRITURA@a:	
   785                           ; 2 bytes @ 0x4
   786                           
   787  0074                     Lcd_Port@a:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     ___bmul@multiplicand:	
   791                           ; 1 bytes @ 0x4
   792                           
   793  0074                     _isdigit$908:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     I2C_Master_Write@d:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     I2C_Master_Read@a:	
   800                           ; 2 bytes @ 0x4
   801                           
   802                           
   803                           ; 2 bytes @ 0x4
   804  0074                     	ds	1
   805  0075                     ??_setup:
   806  0075                     ??_USART_STRING:	
   807                           ; 1 bytes @ 0x5
   808                           
   809  0075                     ??_Lcd_Write_Char:	
   810                           ; 1 bytes @ 0x5
   811                           
   812  0075                     ??___bmul:	
   813                           ; 1 bytes @ 0x5
   814                           
   815  0075                     ??___lwmod:	
   816                           ; 1 bytes @ 0x5
   817                           
   818  0075                     Lcd_Cmd@a:	
   819                           ; 1 bytes @ 0x5
   820                           
   821  0075                     isdigit@c:	
   822                           ; 1 bytes @ 0x5
   823                           
   824                           
   825                           ; 1 bytes @ 0x5
   826  0075                     	ds	1
   827  0076                     ??_Lcd_Clear:
   828  0076                     ??_I2C_Master_Write:	
   829                           ; 1 bytes @ 0x6
   830                           
   831                           
   832                           	psect	cstackBANK0
   833  0040                     __pcstackBANK0:	
   834                           ; 1 bytes @ 0x6
   835                           
   836  0040                     ??_I2C_Master_Read:
   837  0040                     ??_Lcd_Cmd:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0040                     ?___awdiv:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0040                     ?___awmod:	
   844                           ; 2 bytes @ 0x0
   845                           
   846  0040                     ?___lwdiv:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0040                     ?___lldiv:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  0040                     USART_STRING@a:	
   853                           ; 4 bytes @ 0x0
   854                           
   855  0040                     Lcd_Write_Char@a:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0040                     ___bmul@product:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0040                     ___awdiv@divisor:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0040                     ___awmod@divisor:	
   865                           ; 2 bytes @ 0x0
   866                           
   867  0040                     ___lwdiv@divisor:	
   868                           ; 2 bytes @ 0x0
   869                           
   870  0040                     ___lldiv@divisor:	
   871                           ; 2 bytes @ 0x0
   872                           
   873                           
   874                           ; 4 bytes @ 0x0
   875  0040                     	ds	1
   876  0041                     ??_Lcd_Write_String:
   877  0041                     USART_STRING@i:	
   878                           ; 1 bytes @ 0x1
   879                           
   880  0041                     ___bmul@multiplier:	
   881                           ; 1 bytes @ 0x1
   882                           
   883                           
   884                           ; 1 bytes @ 0x1
   885  0041                     	ds	1
   886  0042                     ??_Lcd_Init:
   887  0042                     ?_Lcd_Set_Cursor:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0042                     ??_bcd_to_decimal:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0042                     Lcd_Set_Cursor@b:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0042                     Lcd_Write_String@i:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0042                     I2C_Master_Read@temp:	
   900                           ; 2 bytes @ 0x2
   901                           
   902  0042                     ___awdiv@dividend:	
   903                           ; 2 bytes @ 0x2
   904                           
   905  0042                     ___awmod@dividend:	
   906                           ; 2 bytes @ 0x2
   907                           
   908  0042                     ___lwdiv@dividend:	
   909                           ; 2 bytes @ 0x2
   910                           
   911                           
   912                           ; 2 bytes @ 0x2
   913  0042                     	ds	1
   914  0043                     ??_Lcd_Set_Cursor:
   915                           
   916                           ; 1 bytes @ 0x3
   917  0043                     	ds	1
   918  0044                     Lcd_Set_Cursor@a:
   919  0044                     Lcd_Write_String@a:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0044                     ___awdiv@counter:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0044                     ___awmod@counter:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0044                     ___lwdiv@counter:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0044                     ___lldiv@dividend:	
   932                           ; 1 bytes @ 0x4
   933                           
   934                           
   935                           ; 4 bytes @ 0x4
   936  0044                     	ds	1
   937  0045                     bcd_to_decimal@number:
   938  0045                     Lcd_Set_Cursor@temp:	
   939                           ; 1 bytes @ 0x5
   940                           
   941  0045                     ___awdiv@sign:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0045                     ___awmod@sign:	
   945                           ; 1 bytes @ 0x5
   946                           
   947  0045                     ___lwdiv@quotient:	
   948                           ; 1 bytes @ 0x5
   949                           
   950                           
   951                           ; 2 bytes @ 0x5
   952  0045                     	ds	1
   953  0046                     ___awdiv@quotient:
   954                           
   955                           ; 2 bytes @ 0x6
   956  0046                     	ds	1
   957  0047                     ?___lwmod:
   958  0047                     ___lwmod@divisor:	
   959                           ; 2 bytes @ 0x7
   960                           
   961                           
   962                           ; 2 bytes @ 0x7
   963  0047                     	ds	1
   964  0048                     ??_DS3231_time:
   965  0048                     ___lldiv@quotient:	
   966                           ; 1 bytes @ 0x8
   967                           
   968                           
   969                           ; 4 bytes @ 0x8
   970  0048                     	ds	1
   971  0049                     ___lwmod@dividend:
   972                           
   973                           ; 2 bytes @ 0x9
   974  0049                     	ds	2
   975  004B                     ___lwmod@counter:
   976                           
   977                           ; 1 bytes @ 0xB
   978  004B                     	ds	1
   979  004C                     ?_sprintf:
   980  004C                     sprintf@f:	
   981                           ; 2 bytes @ 0xC
   982                           
   983  004C                     ___lldiv@counter:	
   984                           ; 1 bytes @ 0xC
   985                           
   986                           
   987                           ; 1 bytes @ 0xC
   988  004C                     	ds	1
   989  004D                     ?_I2C_Master_Init:
   990  004D                     I2C_Master_Init@c:	
   991                           ; 1 bytes @ 0xD
   992                           
   993                           
   994                           ; 4 bytes @ 0xD
   995  004D                     	ds	2
   996  004F                     ??_sprintf:
   997                           
   998                           ; 1 bytes @ 0xF
   999  004F                     	ds	2
  1000  0051                     ??_I2C_Master_Init:
  1001                           
  1002                           ; 1 bytes @ 0x11
  1003  0051                     	ds	1
  1004  0052                     sprintf@ap:
  1005                           
  1006                           ; 1 bytes @ 0x12
  1007  0052                     	ds	1
  1008  0053                     sprintf@flag:
  1009                           
  1010                           ; 1 bytes @ 0x13
  1011  0053                     	ds	1
  1012  0054                     sprintf@sp:
  1013                           
  1014                           ; 1 bytes @ 0x14
  1015  0054                     	ds	1
  1016  0055                     sprintf@val:
  1017                           
  1018                           ; 2 bytes @ 0x15
  1019  0055                     	ds	2
  1020  0057                     sprintf@prec:
  1021                           
  1022                           ; 1 bytes @ 0x17
  1023  0057                     	ds	1
  1024  0058                     sprintf@c:
  1025                           
  1026                           ; 1 bytes @ 0x18
  1027  0058                     	ds	1
  1028  0059                     ??_main:
  1029                           
  1030                           ; 1 bytes @ 0x19
  1031  0059                     	ds	3
  1032                           
  1033                           	psect	maintext
  1034  0031                     __pmaintext:	
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 106 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : B00/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0
  1056 ;;      Temps:          0       3       0       0       0
  1057 ;;      Totals:         0       3       0       0       0
  1058 ;;Total ram usage:        3 bytes
  1059 ;; Hardware stack levels required when called:    4
  1060 ;; This function calls:
  1061 ;;		_DS3231_time
  1062 ;;		_I2C_Master_Read
  1063 ;;		_I2C_Master_RepeatedStart
  1064 ;;		_I2C_Master_Start
  1065 ;;		_I2C_Master_Stop
  1066 ;;		_I2C_Master_Write
  1067 ;;		_Lcd_Clear
  1068 ;;		_Lcd_Init
  1069 ;;		_Lcd_Set_Cursor
  1070 ;;		_Lcd_Write_String
  1071 ;;		_USART_ESCRITURA
  1072 ;;		_USART_STRING
  1073 ;;		_setup
  1074 ;;		_sprintf
  1075 ;; This function is called by:
  1076 ;;		Startup code after reset
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _main
  1082  0031                     _main:
  1083  0031                     l2372:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1086                           
  1087                           
  1088                           ;main.c: 107:     setup();
  1089  0031  120A  118A  26CA  120A  118A  	fcall	_setup
  1090  0036                     l2374:
  1091                           
  1092                           ;main.c: 108:     TRISD = 0x00;
  1093  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0037  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0038  0188               	clrf	8	;volatile
  1096  0039                     l2376:
  1097                           
  1098                           ;main.c: 109:     Lcd_Init();
  1099  0039  120A  118A  2584  120A  118A  	fcall	_Lcd_Init
  1100  003E                     l2378:
  1101                           
  1102                           ;main.c: 110:     Lcd_Clear();
  1103  003E  120A  158A  27A1  120A  118A  	fcall	_Lcd_Clear
  1104  0043                     l2380:
  1105                           
  1106                           ;main.c: 111:     Lcd_Set_Cursor(1, 1);
  1107  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0045  01C2               	clrf	Lcd_Set_Cursor@b
  1110  0046  0AC2               	incf	Lcd_Set_Cursor@b,f
  1111  0047  3001               	movlw	1
  1112  0048  120A  118A  2730  120A  118A  	fcall	_Lcd_Set_Cursor
  1113  004D                     l2382:
  1114                           
  1115                           ;main.c: 112:     Lcd_Write_String(time);
  1116  004D  3031               	movlw	(low (_time| 0))& (0+255)
  1117  004E  120A  118A  2756  120A  118A  	fcall	_Lcd_Write_String
  1118  0053                     l2384:
  1119                           
  1120                           ;main.c: 113:     Lcd_Set_Cursor(2, 1);
  1121  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0055  01C2               	clrf	Lcd_Set_Cursor@b
  1124  0056  0AC2               	incf	Lcd_Set_Cursor@b,f
  1125  0057  3002               	movlw	2
  1126  0058  120A  118A  2730  120A  118A  	fcall	_Lcd_Set_Cursor
  1127  005D                     l2386:
  1128                           
  1129                           ;main.c: 114:     Lcd_Write_String(date1);
  1130  005D  3020               	movlw	(low (_date1| 0))& (0+255)
  1131  005E  120A  118A  2756  120A  118A  	fcall	_Lcd_Write_String
  1132  0063                     l2388:
  1133                           
  1134                           ;main.c: 116:     I2C_Master_Start();
  1135  0063  120A  158A  2776  120A  118A  	fcall	_I2C_Master_Start
  1136  0068                     l2390:
  1137                           
  1138                           ;main.c: 117:     I2C_Master_Write(0xD0);
  1139  0068  30D0               	movlw	208
  1140  0069  00F4               	movwf	I2C_Master_Write@d
  1141  006A  3000               	movlw	0
  1142  006B  00F5               	movwf	I2C_Master_Write@d+1
  1143  006C  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1144  0071                     l2392:
  1145                           
  1146                           ;main.c: 118:     I2C_Master_Write(0);
  1147  0071  3000               	movlw	0
  1148  0072  00F4               	movwf	I2C_Master_Write@d
  1149  0073  00F5               	movwf	I2C_Master_Write@d+1
  1150  0074  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1151  0079                     l2394:
  1152                           
  1153                           ;main.c: 119:     I2C_Master_Write(0);
  1154  0079  3000               	movlw	0
  1155  007A  00F4               	movwf	I2C_Master_Write@d
  1156  007B  00F5               	movwf	I2C_Master_Write@d+1
  1157  007C  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1158  0081                     l2396:
  1159                           
  1160                           ;main.c: 120:     I2C_Master_Write(0);
  1161  0081  3000               	movlw	0
  1162  0082  00F4               	movwf	I2C_Master_Write@d
  1163  0083  00F5               	movwf	I2C_Master_Write@d+1
  1164  0084  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1165  0089                     l2398:
  1166                           
  1167                           ;main.c: 121:     I2C_Master_Write(1);
  1168  0089  3001               	movlw	1
  1169  008A  00F4               	movwf	I2C_Master_Write@d
  1170  008B  3000               	movlw	0
  1171  008C  00F5               	movwf	I2C_Master_Write@d+1
  1172  008D  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1173  0092                     l2400:
  1174                           
  1175                           ;main.c: 122:     I2C_Master_Write(0);
  1176  0092  3000               	movlw	0
  1177  0093  00F4               	movwf	I2C_Master_Write@d
  1178  0094  00F5               	movwf	I2C_Master_Write@d+1
  1179  0095  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1180  009A                     l2402:
  1181                           
  1182                           ;main.c: 123:     I2C_Master_Write(10);
  1183  009A  300A               	movlw	10
  1184  009B  00F4               	movwf	I2C_Master_Write@d
  1185  009C  3000               	movlw	0
  1186  009D  00F5               	movwf	I2C_Master_Write@d+1
  1187  009E  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1188  00A3                     l2404:
  1189                           
  1190                           ;main.c: 124:     I2C_Master_Write(3);
  1191  00A3  3003               	movlw	3
  1192  00A4  00F4               	movwf	I2C_Master_Write@d
  1193  00A5  3000               	movlw	0
  1194  00A6  00F5               	movwf	I2C_Master_Write@d+1
  1195  00A7  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1196  00AC                     l2406:
  1197                           
  1198                           ;main.c: 125:     I2C_Master_Write(27);
  1199  00AC  301B               	movlw	27
  1200  00AD  00F4               	movwf	I2C_Master_Write@d
  1201  00AE  3000               	movlw	0
  1202  00AF  00F5               	movwf	I2C_Master_Write@d+1
  1203  00B0  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1204  00B5                     l2408:
  1205                           
  1206                           ;main.c: 126:     I2C_Master_Stop();
  1207  00B5  120A  158A  277F  120A  118A  	fcall	_I2C_Master_Stop
  1208  00BA                     l2410:
  1209                           
  1210                           ;main.c: 127:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1211  00BA  3003               	movlw	3
  1212  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1213  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1214  00BD  00DB               	movwf	??_main+2
  1215  00BE  3008               	movlw	8
  1216  00BF  00DA               	movwf	??_main+1
  1217  00C0  3076               	movlw	118
  1218  00C1  00D9               	movwf	??_main
  1219  00C2                     u1977:
  1220  00C2  0BD9               	decfsz	??_main,f
  1221  00C3  28C2               	goto	u1977
  1222  00C4  0BDA               	decfsz	??_main+1,f
  1223  00C5  28C2               	goto	u1977
  1224  00C6  0BDB               	decfsz	??_main+2,f
  1225  00C7  28C2               	goto	u1977
  1226  00C8  0000               	nop
  1227  00C9                     l2412:
  1228                           
  1229                           ;main.c: 130:         I2C_Master_Start();
  1230  00C9  120A  158A  2776  120A  118A  	fcall	_I2C_Master_Start
  1231  00CE                     l2414:
  1232                           
  1233                           ;main.c: 131:         I2C_Master_Write(0xD0);
  1234  00CE  30D0               	movlw	208
  1235  00CF  00F4               	movwf	I2C_Master_Write@d
  1236  00D0  3000               	movlw	0
  1237  00D1  00F5               	movwf	I2C_Master_Write@d+1
  1238  00D2  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1239  00D7                     l2416:
  1240                           
  1241                           ;main.c: 132:         I2C_Master_Write(0);
  1242  00D7  3000               	movlw	0
  1243  00D8  00F4               	movwf	I2C_Master_Write@d
  1244  00D9  00F5               	movwf	I2C_Master_Write@d+1
  1245  00DA  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1246  00DF                     l2418:
  1247                           
  1248                           ;main.c: 133:         I2C_Master_RepeatedStart();
  1249  00DF  120A  158A  276D  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1250  00E4                     l2420:
  1251                           
  1252                           ;main.c: 134:         I2C_Master_Write(0xD1);
  1253  00E4  30D1               	movlw	209
  1254  00E5  00F4               	movwf	I2C_Master_Write@d
  1255  00E6  3000               	movlw	0
  1256  00E7  00F5               	movwf	I2C_Master_Write@d+1
  1257  00E8  120A  118A  27F5  120A  118A  	fcall	_I2C_Master_Write
  1258  00ED                     l2422:
  1259                           
  1260                           ;main.c: 135:         sec = I2C_Master_Read(1);
  1261  00ED  3001               	movlw	1
  1262  00EE  00F4               	movwf	I2C_Master_Read@a
  1263  00EF  3000               	movlw	0
  1264  00F0  00F5               	movwf	I2C_Master_Read@a+1
  1265  00F1  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1266  00F6  0875               	movf	?_I2C_Master_Read+1,w
  1267  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1268  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1269  00F9  00E5               	movwf	_sec+1
  1270  00FA  0874               	movf	?_I2C_Master_Read,w
  1271  00FB  00E4               	movwf	_sec
  1272  00FC                     l2424:
  1273                           
  1274                           ;main.c: 136:         min = I2C_Master_Read(1);
  1275  00FC  3001               	movlw	1
  1276  00FD  00F4               	movwf	I2C_Master_Read@a
  1277  00FE  3000               	movlw	0
  1278  00FF  00F5               	movwf	I2C_Master_Read@a+1
  1279  0100  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1280  0105  0875               	movf	?_I2C_Master_Read+1,w
  1281  0106  00F7               	movwf	_min+1
  1282  0107  0874               	movf	?_I2C_Master_Read,w
  1283  0108  00F6               	movwf	_min
  1284  0109                     l2426:
  1285                           
  1286                           ;main.c: 137:         hour = I2C_Master_Read(1);
  1287  0109  3001               	movlw	1
  1288  010A  00F4               	movwf	I2C_Master_Read@a
  1289  010B  3000               	movlw	0
  1290  010C  00F5               	movwf	I2C_Master_Read@a+1
  1291  010D  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1292  0112  0875               	movf	?_I2C_Master_Read+1,w
  1293  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0115  00E3               	movwf	_hour+1
  1296  0116  0874               	movf	?_I2C_Master_Read,w
  1297  0117  00E2               	movwf	_hour
  1298  0118                     l2428:
  1299                           
  1300                           ;main.c: 138:         I2C_Master_Read(1);
  1301  0118  3001               	movlw	1
  1302  0119  00F4               	movwf	I2C_Master_Read@a
  1303  011A  3000               	movlw	0
  1304  011B  00F5               	movwf	I2C_Master_Read@a+1
  1305  011C  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1306  0121                     l2430:
  1307                           
  1308                           ;main.c: 139:         date = I2C_Master_Read(1);
  1309  0121  3001               	movlw	1
  1310  0122  00F4               	movwf	I2C_Master_Read@a
  1311  0123  3000               	movlw	0
  1312  0124  00F5               	movwf	I2C_Master_Read@a+1
  1313  0125  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1314  012A  0875               	movf	?_I2C_Master_Read+1,w
  1315  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1316  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1317  012D  00E1               	movwf	_date+1
  1318  012E  0874               	movf	?_I2C_Master_Read,w
  1319  012F  00E0               	movwf	_date
  1320  0130                     l2432:
  1321                           
  1322                           ;main.c: 140:         month = I2C_Master_Read(1);
  1323  0130  3001               	movlw	1
  1324  0131  00F4               	movwf	I2C_Master_Read@a
  1325  0132  3000               	movlw	0
  1326  0133  00F5               	movwf	I2C_Master_Read@a+1
  1327  0134  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1328  0139  0875               	movf	?_I2C_Master_Read+1,w
  1329  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1330  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1331  013C  00DF               	movwf	_month+1
  1332  013D  0874               	movf	?_I2C_Master_Read,w
  1333  013E  00DE               	movwf	_month
  1334  013F                     l2434:
  1335                           
  1336                           ;main.c: 141:         year = I2C_Master_Read(0);
  1337  013F  3000               	movlw	0
  1338  0140  00F4               	movwf	I2C_Master_Read@a
  1339  0141  00F5               	movwf	I2C_Master_Read@a+1
  1340  0142  120A  118A  2700  120A  118A  	fcall	_I2C_Master_Read
  1341  0147  0875               	movf	?_I2C_Master_Read+1,w
  1342  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1344  014A  00DD               	movwf	_year+1
  1345  014B  0874               	movf	?_I2C_Master_Read,w
  1346  014C  00DC               	movwf	_year
  1347  014D                     l2436:
  1348                           
  1349                           ;main.c: 142:         I2C_Master_Stop();
  1350  014D  120A  158A  277F  120A  118A  	fcall	_I2C_Master_Stop
  1351  0152                     l2438:
  1352                           
  1353                           ;main.c: 144:         DS3231_time();
  1354  0152  120A  118A  2311  120A  118A  	fcall	_DS3231_time
  1355  0157                     l2440:
  1356                           
  1357                           ;main.c: 145:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1358  0157  3003               	movlw	3
  1359  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1361  015A  00DB               	movwf	??_main+2
  1362  015B  3008               	movlw	8
  1363  015C  00DA               	movwf	??_main+1
  1364  015D  3076               	movlw	118
  1365  015E  00D9               	movwf	??_main
  1366  015F                     u1987:
  1367  015F  0BD9               	decfsz	??_main,f
  1368  0160  295F               	goto	u1987
  1369  0161  0BDA               	decfsz	??_main+1,f
  1370  0162  295F               	goto	u1987
  1371  0163  0BDB               	decfsz	??_main+2,f
  1372  0164  295F               	goto	u1987
  1373  0165  0000               	nop
  1374  0166                     l2442:
  1375                           
  1376                           ;main.c: 147:         Lcd_Set_Cursor(1, 1);
  1377  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0168  01C2               	clrf	Lcd_Set_Cursor@b
  1380  0169  0AC2               	incf	Lcd_Set_Cursor@b,f
  1381  016A  3001               	movlw	1
  1382  016B  120A  118A  2730  120A  118A  	fcall	_Lcd_Set_Cursor
  1383  0170                     l2444:
  1384                           
  1385                           ;main.c: 148:         Lcd_Write_String(time);
  1386  0170  3031               	movlw	(low (_time| 0))& (0+255)
  1387  0171  120A  118A  2756  120A  118A  	fcall	_Lcd_Write_String
  1388  0176                     l2446:
  1389                           
  1390                           ;main.c: 149:         Lcd_Set_Cursor(2, 1);
  1391  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0178  01C2               	clrf	Lcd_Set_Cursor@b
  1394  0179  0AC2               	incf	Lcd_Set_Cursor@b,f
  1395  017A  3002               	movlw	2
  1396  017B  120A  118A  2730  120A  118A  	fcall	_Lcd_Set_Cursor
  1397  0180                     l2448:
  1398                           
  1399                           ;main.c: 150:         Lcd_Write_String(date1);
  1400  0180  3020               	movlw	(low (_date1| 0))& (0+255)
  1401  0181  120A  118A  2756  120A  118A  	fcall	_Lcd_Write_String
  1402  0186                     l2450:
  1403                           
  1404                           ;main.c: 152:         sprintf(datos, "%.0i", sec);
  1405  0186  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1406  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0189  00D9               	movwf	??_main
  1409  018A  0859               	movf	??_main,w
  1410  018B  00CC               	movwf	sprintf@f
  1411  018C  0865               	movf	_sec+1,w
  1412  018D  00CE               	movwf	?_sprintf+2
  1413  018E  0864               	movf	_sec,w
  1414  018F  00CD               	movwf	?_sprintf+1
  1415  0190  3067               	movlw	(low (_datos| 0))& (0+255)
  1416  0191  120A  118A  21AC  120A  118A  	fcall	_sprintf
  1417  0196                     l2452:
  1418                           
  1419                           ;main.c: 155:         USART_STRING(datos);
  1420  0196  3067               	movlw	(low (_datos| 0))& (0+255)
  1421  0197  120A  118A  277B  120A  118A  	fcall	_USART_STRING
  1422  019C                     l2454:
  1423                           
  1424                           ;main.c: 157:         USART_ESCRITURA(13);
  1425  019C  300D               	movlw	13
  1426  019D  120A  158A  2788  120A  118A  	fcall	_USART_ESCRITURA
  1427  01A2                     l2456:
  1428                           
  1429                           ;main.c: 158:         USART_ESCRITURA(10);
  1430  01A2  300A               	movlw	10
  1431  01A3  120A  158A  2788  120A  118A  	fcall	_USART_ESCRITURA
  1432  01A8  28C9               	goto	l2412
  1433  01A9  120A  118A  280C   	ljmp	start
  1434  01AC                     __end_of_main:
  1435                           
  1436                           	psect	text1
  1437  01AC                     __ptext1:	
  1438 ;; *************** function _sprintf *****************
  1439 ;; Defined at:
  1440 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  sp              1    wreg     PTR unsigned char 
  1443 ;;		 -> datos(1), 
  1444 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1445 ;;		 -> STR_1(5), 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1448 ;;		 -> datos(1), 
  1449 ;;  tmpval          4    0        struct .
  1450 ;;  val             2   21[BANK0 ] unsigned int 
  1451 ;;  cp              2    0        PTR const unsigned char 
  1452 ;;  len             2    0        unsigned int 
  1453 ;;  c               1   24[BANK0 ] unsigned char 
  1454 ;;  prec            1   23[BANK0 ] char 
  1455 ;;  flag            1   19[BANK0 ] unsigned char 
  1456 ;;  ap              1   18[BANK0 ] PTR void [1]
  1457 ;;		 -> ?_sprintf(2), 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2   12[BANK0 ] int 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       3       0       0       0
  1468 ;;      Locals:         0       7       0       0       0
  1469 ;;      Temps:          0       3       0       0       0
  1470 ;;      Totals:         0      13       0       0       0
  1471 ;;Total ram usage:       13 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    2
  1474 ;; This function calls:
  1475 ;;		___bmul
  1476 ;;		___lwdiv
  1477 ;;		___lwmod
  1478 ;;		_isdigit
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _sprintf
  1486  01AC                     _sprintf:
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1490                           ;sprintf@sp stored from wreg
  1491  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1492  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1493  01AE  00D4               	movwf	sprintf@sp
  1494  01AF                     l2274:
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1497  01AF  304D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1498  01B0  00CF               	movwf	??_sprintf
  1499  01B1  084F               	movf	??_sprintf,w
  1500  01B2  00D2               	movwf	sprintf@ap
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1503  01B3  2AFA               	goto	l2352
  1504  01B4                     l2276:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1507  01B4  3025               	movlw	37
  1508  01B5  0658               	xorwf	sprintf@c,w
  1509  01B6  1903               	btfsc	3,2
  1510  01B7  29B9               	goto	u1831
  1511  01B8  29BA               	goto	u1830
  1512  01B9                     u1831:
  1513  01B9  29C6               	goto	l2282
  1514  01BA                     u1830:
  1515  01BA                     l2278:
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1518  01BA  0858               	movf	sprintf@c,w
  1519  01BB  00CF               	movwf	??_sprintf
  1520  01BC  0854               	movf	sprintf@sp,w
  1521  01BD  0084               	movwf	4
  1522  01BE  084F               	movf	??_sprintf,w
  1523  01BF  1383               	bcf	3,7	;select IRP bank0
  1524  01C0  0080               	movwf	0
  1525  01C1                     l2280:
  1526  01C1  3001               	movlw	1
  1527  01C2  00CF               	movwf	??_sprintf
  1528  01C3  084F               	movf	??_sprintf,w
  1529  01C4  07D4               	addwf	sprintf@sp,f
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1532  01C5  2AFA               	goto	l2352
  1533  01C6                     l2282:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1536  01C6  01D3               	clrf	sprintf@flag
  1537  01C7                     l2284:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1540  01C7  084C               	movf	sprintf@f,w
  1541  01C8  0084               	movwf	4
  1542  01C9  120A  158A  2000  120A  118A  	fcall	stringdir
  1543  01CE  3A2E               	xorlw	46
  1544  01CF  1D03               	skipz
  1545  01D0  29D2               	goto	u1841
  1546  01D1  29D3               	goto	u1840
  1547  01D2                     u1841:
  1548  01D2  2A0A               	goto	l2298
  1549  01D3                     u1840:
  1550  01D3                     l2286:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1553  01D3  3001               	movlw	1
  1554  01D4  00CF               	movwf	??_sprintf
  1555  01D5  084F               	movf	??_sprintf,w
  1556  01D6  07CC               	addwf	sprintf@f,f
  1557  01D7                     l2288:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1560  01D7  01D7               	clrf	sprintf@prec
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1563  01D8  29F9               	goto	l2296
  1564  01D9                     l2290:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1567  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1568  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1569  01DB  0857               	movf	sprintf@prec,w
  1570  01DC  00CF               	movwf	??_sprintf
  1571  01DD  084F               	movf	??_sprintf,w
  1572  01DE  00F4               	movwf	___bmul@multiplicand
  1573  01DF  300A               	movlw	10
  1574  01E0  120A  158A  27E9  120A  118A  	fcall	___bmul
  1575  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1576  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1577  01E7  00D0               	movwf	??_sprintf+1
  1578  01E8  0850               	movf	??_sprintf+1,w
  1579  01E9  00D7               	movwf	sprintf@prec
  1580  01EA                     l2292:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1583  01EA  084C               	movf	sprintf@f,w
  1584  01EB  0084               	movwf	4
  1585  01EC  120A  158A  2000  120A  118A  	fcall	stringdir
  1586  01F1  3ED0               	addlw	-48
  1587  01F2  00CF               	movwf	??_sprintf
  1588  01F3  084F               	movf	??_sprintf,w
  1589  01F4  07D7               	addwf	sprintf@prec,f
  1590  01F5                     l2294:
  1591  01F5  3001               	movlw	1
  1592  01F6  00CF               	movwf	??_sprintf
  1593  01F7  084F               	movf	??_sprintf,w
  1594  01F8  07CC               	addwf	sprintf@f,f
  1595  01F9                     l2296:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1598  01F9  084C               	movf	sprintf@f,w
  1599  01FA  0084               	movwf	4
  1600  01FB  120A  158A  2000  120A  118A  	fcall	stringdir
  1601  0200  120A  158A  27AE  120A  118A  	fcall	_isdigit
  1602  0205  1803               	btfsc	3,0
  1603  0206  2A08               	goto	u1851
  1604  0207  2A09               	goto	u1850
  1605  0208                     u1851:
  1606  0208  29D9               	goto	l2290
  1607  0209                     u1850:
  1608  0209  2A0B               	goto	l2302
  1609  020A                     l2298:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1612  020A  01D7               	clrf	sprintf@prec
  1613  020B                     l2302:
  1614  020B  3001               	movlw	1
  1615  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1616  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1617  020E  07CC               	addwf	sprintf@f,f
  1618  020F  30FF               	movlw	-1
  1619  0210  074C               	addwf	sprintf@f,w
  1620  0211  0084               	movwf	4
  1621  0212  120A  158A  2000  120A  118A  	fcall	stringdir
  1622  0217  00D8               	movwf	sprintf@c
  1623  0218  00CF               	movwf	??_sprintf
  1624  0219  01D0               	clrf	??_sprintf+1
  1625                           
  1626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1627                           ; Switch size 1, requested type "simple"
  1628                           ; Number of cases is 1, Range of values is 0 to 0
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte            4     3 (average)
  1632                           ; direct_byte           11     8 (fixed)
  1633                           ; jumptable            260     6 (fixed)
  1634                           ;	Chosen strategy is simple_byte
  1635  021A  0850               	movf	??_sprintf+1,w
  1636  021B  3A00               	xorlw	0	; case 0
  1637  021C  1903               	skipnz
  1638  021D  2A1F               	goto	l2488
  1639  021E  2AFA               	goto	l2352
  1640  021F                     l2488:
  1641                           
  1642                           ; Switch size 1, requested type "simple"
  1643                           ; Number of cases is 3, Range of values is 0 to 105
  1644                           ; switch strategies available:
  1645                           ; Name         Instructions Cycles
  1646                           ; simple_byte           10     6 (average)
  1647                           ; jumptable            260     6 (fixed)
  1648                           ;	Chosen strategy is simple_byte
  1649  021F  084F               	movf	??_sprintf,w
  1650  0220  3A00               	xorlw	0	; case 0
  1651  0221  1903               	skipnz
  1652  0222  2B0C               	goto	l2354
  1653  0223  3A64               	xorlw	100	; case 100
  1654  0224  1903               	skipnz
  1655  0225  2A2A               	goto	l2304
  1656  0226  3A0D               	xorlw	13	; case 105
  1657  0227  1903               	skipnz
  1658  0228  2A2A               	goto	l2304
  1659  0229  2AFA               	goto	l2352
  1660  022A                     l2304:
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1663  022A  0852               	movf	sprintf@ap,w
  1664  022B  0084               	movwf	4
  1665  022C  1383               	bcf	3,7	;select IRP bank0
  1666  022D  0800               	movf	0,w
  1667  022E  00D5               	movwf	sprintf@val
  1668  022F  0A84               	incf	4,f
  1669  0230  0800               	movf	0,w
  1670  0231  00D6               	movwf	sprintf@val+1
  1671  0232                     l2306:
  1672  0232  3002               	movlw	2
  1673  0233  00CF               	movwf	??_sprintf
  1674  0234  084F               	movf	??_sprintf,w
  1675  0235  07D2               	addwf	sprintf@ap,f
  1676  0236                     l2308:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1679  0236  1FD6               	btfss	sprintf@val+1,7
  1680  0237  2A39               	goto	u1861
  1681  0238  2A3A               	goto	u1860
  1682  0239                     u1861:
  1683  0239  2A43               	goto	l2314
  1684  023A                     u1860:
  1685  023A                     l2310:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1688  023A  3003               	movlw	3
  1689  023B  00CF               	movwf	??_sprintf
  1690  023C  084F               	movf	??_sprintf,w
  1691  023D  04D3               	iorwf	sprintf@flag,f
  1692  023E                     l2312:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1695  023E  09D5               	comf	sprintf@val,f
  1696  023F  09D6               	comf	sprintf@val+1,f
  1697  0240  0AD5               	incf	sprintf@val,f
  1698  0241  1903               	skipnz
  1699  0242  0AD6               	incf	sprintf@val+1,f
  1700  0243                     l2314:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1703  0243  0857               	movf	sprintf@prec,w
  1704  0244  1D03               	btfss	3,2
  1705  0245  2A47               	goto	u1871
  1706  0246  2A48               	goto	u1870
  1707  0247                     u1871:
  1708  0247  2A52               	goto	l2320
  1709  0248                     u1870:
  1710  0248                     l2316:
  1711  0248  0855               	movf	sprintf@val,w
  1712  0249  0456               	iorwf	sprintf@val+1,w
  1713  024A  1D03               	btfss	3,2
  1714  024B  2A4D               	goto	u1881
  1715  024C  2A4E               	goto	u1880
  1716  024D                     u1881:
  1717  024D  2A52               	goto	l2320
  1718  024E                     u1880:
  1719  024E                     l2318:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1722  024E  3001               	movlw	1
  1723  024F  00CF               	movwf	??_sprintf
  1724  0250  084F               	movf	??_sprintf,w
  1725  0251  07D7               	addwf	sprintf@prec,f
  1726  0252                     l2320:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1729  0252  01D8               	clrf	sprintf@c
  1730  0253  0AD8               	incf	sprintf@c,f
  1731  0254                     l2324:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1734  0254  0858               	movf	sprintf@c,w
  1735  0255  00CF               	movwf	??_sprintf
  1736  0256  074F               	addwf	??_sprintf,w
  1737  0257  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1738  0258  0084               	movwf	4
  1739  0259  120A  158A  2000  120A  118A  	fcall	stringdir
  1740  025E  00D0               	movwf	??_sprintf+1
  1741  025F  120A  158A  2000  120A  118A  	fcall	stringdir
  1742  0264  00D1               	movwf	??_sprintf+2
  1743  0265  0851               	movf	??_sprintf+2,w
  1744  0266  0256               	subwf	sprintf@val+1,w
  1745  0267  1D03               	skipz
  1746  0268  2A6B               	goto	u1895
  1747  0269  0850               	movf	??_sprintf+1,w
  1748  026A  0255               	subwf	sprintf@val,w
  1749  026B                     u1895:
  1750  026B  1803               	skipnc
  1751  026C  2A6E               	goto	u1891
  1752  026D  2A6F               	goto	u1890
  1753  026E                     u1891:
  1754  026E  2A70               	goto	l2328
  1755  026F                     u1890:
  1756  026F  2A7A               	goto	l2330
  1757  0270                     l2328:
  1758  0270  3001               	movlw	1
  1759  0271  00CF               	movwf	??_sprintf
  1760  0272  084F               	movf	??_sprintf,w
  1761  0273  07D8               	addwf	sprintf@c,f
  1762  0274  3005               	movlw	5
  1763  0275  0658               	xorwf	sprintf@c,w
  1764  0276  1D03               	btfss	3,2
  1765  0277  2A79               	goto	u1901
  1766  0278  2A7A               	goto	u1900
  1767  0279                     u1901:
  1768  0279  2A54               	goto	l2324
  1769  027A                     u1900:
  1770  027A                     l2330:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1773  027A  0857               	movf	sprintf@prec,w
  1774  027B  00CF               	movwf	??_sprintf
  1775  027C  01D0               	clrf	??_sprintf+1
  1776  027D  1BCF               	btfsc	??_sprintf,7
  1777  027E  03D0               	decf	??_sprintf+1,f
  1778  027F  0850               	movf	??_sprintf+1,w
  1779  0280  3A80               	xorlw	128
  1780  0281  3C80               	sublw	128
  1781  0282  1D03               	skipz
  1782  0283  2A86               	goto	u1915
  1783  0284  084F               	movf	??_sprintf,w
  1784  0285  0258               	subwf	sprintf@c,w
  1785  0286                     u1915:
  1786  0286  1803               	skipnc
  1787  0287  2A89               	goto	u1911
  1788  0288  2A8A               	goto	u1910
  1789  0289                     u1911:
  1790  0289  2A8B               	goto	l2334
  1791  028A                     u1910:
  1792  028A                     l2332:
  1793  028A  2AA5               	goto	l2338
  1794  028B                     l2334:
  1795  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1796  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1797  028D  0857               	movf	sprintf@prec,w
  1798  028E  00CF               	movwf	??_sprintf
  1799  028F  01D0               	clrf	??_sprintf+1
  1800  0290  1BCF               	btfsc	??_sprintf,7
  1801  0291  03D0               	decf	??_sprintf+1,f
  1802  0292  0850               	movf	??_sprintf+1,w
  1803  0293  3A80               	xorlw	128
  1804  0294  00D1               	movwf	??_sprintf+2
  1805  0295  3080               	movlw	128
  1806  0296  0251               	subwf	??_sprintf+2,w
  1807  0297  1D03               	skipz
  1808  0298  2A9B               	goto	u1925
  1809  0299  0858               	movf	sprintf@c,w
  1810  029A  024F               	subwf	??_sprintf,w
  1811  029B                     u1925:
  1812  029B  1803               	skipnc
  1813  029C  2A9E               	goto	u1921
  1814  029D  2A9F               	goto	u1920
  1815  029E                     u1921:
  1816  029E  2AA5               	goto	l2338
  1817  029F                     u1920:
  1818  029F                     l2336:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1821  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1822  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1823  02A1  0858               	movf	sprintf@c,w
  1824  02A2  00CF               	movwf	??_sprintf
  1825  02A3  084F               	movf	??_sprintf,w
  1826  02A4  00D7               	movwf	sprintf@prec
  1827  02A5                     l2338:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1830  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1831  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1832  02A7  0853               	movf	sprintf@flag,w
  1833  02A8  3903               	andlw	3
  1834  02A9  1903               	btfsc	3,2
  1835  02AA  2AAC               	goto	u1931
  1836  02AB  2AAD               	goto	u1930
  1837  02AC                     u1931:
  1838  02AC  2AF1               	goto	l2350
  1839  02AD                     u1930:
  1840  02AD                     l2340:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1843  02AD  302D               	movlw	45
  1844  02AE  00CF               	movwf	??_sprintf
  1845  02AF  0854               	movf	sprintf@sp,w
  1846  02B0  0084               	movwf	4
  1847  02B1  084F               	movf	??_sprintf,w
  1848  02B2  1383               	bcf	3,7	;select IRP bank0
  1849  02B3  0080               	movwf	0
  1850  02B4                     l2342:
  1851  02B4  3001               	movlw	1
  1852  02B5  00CF               	movwf	??_sprintf
  1853  02B6  084F               	movf	??_sprintf,w
  1854  02B7  07D4               	addwf	sprintf@sp,f
  1855  02B8  2AF1               	goto	l2350
  1856  02B9                     l2344:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1859  02B9  300A               	movlw	10
  1860  02BA  00C7               	movwf	___lwmod@divisor
  1861  02BB  3000               	movlw	0
  1862  02BC  00C8               	movwf	___lwmod@divisor+1
  1863  02BD  0857               	movf	sprintf@prec,w
  1864  02BE  00CF               	movwf	??_sprintf
  1865  02BF  074F               	addwf	??_sprintf,w
  1866  02C0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1867  02C1  0084               	movwf	4
  1868  02C2  120A  158A  2000  120A  118A  	fcall	stringdir
  1869  02C7  00C0               	movwf	___lwdiv@divisor
  1870  02C8  120A  158A  2000  120A  118A  	fcall	stringdir
  1871  02CD  00C1               	movwf	___lwdiv@divisor+1
  1872  02CE  0856               	movf	sprintf@val+1,w
  1873  02CF  00C3               	movwf	___lwdiv@dividend+1
  1874  02D0  0855               	movf	sprintf@val,w
  1875  02D1  00C2               	movwf	___lwdiv@dividend
  1876  02D2  120A  118A  25D4  120A  118A  	fcall	___lwdiv
  1877  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1878  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1879  02D9  0841               	movf	?___lwdiv+1,w
  1880  02DA  00CA               	movwf	___lwmod@dividend+1
  1881  02DB  0840               	movf	?___lwdiv,w
  1882  02DC  00C9               	movwf	___lwmod@dividend
  1883  02DD  120A  118A  261A  120A  118A  	fcall	___lwmod
  1884  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1885  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1886  02E4  0847               	movf	?___lwmod,w
  1887  02E5  3E30               	addlw	48
  1888  02E6  00D0               	movwf	??_sprintf+1
  1889  02E7  0850               	movf	??_sprintf+1,w
  1890  02E8  00D8               	movwf	sprintf@c
  1891  02E9                     l2346:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1894  02E9  0858               	movf	sprintf@c,w
  1895  02EA  00CF               	movwf	??_sprintf
  1896  02EB  0854               	movf	sprintf@sp,w
  1897  02EC  0084               	movwf	4
  1898  02ED  084F               	movf	??_sprintf,w
  1899  02EE  1383               	bcf	3,7	;select IRP bank0
  1900  02EF  0080               	movwf	0
  1901  02F0  2AB4               	goto	l2342
  1902  02F1                     l2350:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1905  02F1  30FF               	movlw	255
  1906  02F2  00CF               	movwf	??_sprintf
  1907  02F3  084F               	movf	??_sprintf,w
  1908  02F4  07D7               	addwf	sprintf@prec,f
  1909  02F5  0A57               	incf	sprintf@prec,w
  1910  02F6  1D03               	btfss	3,2
  1911  02F7  2AF9               	goto	u1941
  1912  02F8  2AFA               	goto	u1940
  1913  02F9                     u1941:
  1914  02F9  2AB9               	goto	l2344
  1915  02FA                     u1940:
  1916  02FA                     l2352:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1919  02FA  3001               	movlw	1
  1920  02FB  07CC               	addwf	sprintf@f,f
  1921  02FC  30FF               	movlw	-1
  1922  02FD  074C               	addwf	sprintf@f,w
  1923  02FE  0084               	movwf	4
  1924  02FF  120A  158A  2000  120A  118A  	fcall	stringdir
  1925  0304  00CF               	movwf	??_sprintf
  1926  0305  084F               	movf	??_sprintf,w
  1927  0306  00D8               	movwf	sprintf@c
  1928  0307  0858               	movf	sprintf@c,w
  1929  0308  1D03               	btfss	3,2
  1930  0309  2B0B               	goto	u1951
  1931  030A  2B0C               	goto	u1950
  1932  030B                     u1951:
  1933  030B  29B4               	goto	l2276
  1934  030C                     u1950:
  1935  030C                     l2354:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1938  030C  0854               	movf	sprintf@sp,w
  1939  030D  0084               	movwf	4
  1940  030E  1383               	bcf	3,7	;select IRP bank0
  1941  030F  0180               	clrf	0
  1942  0310                     l361:
  1943  0310  0008               	return
  1944  0311                     __end_of_sprintf:
  1945                           
  1946                           	psect	text2
  1947  0FAE                     __ptext2:	
  1948 ;; *************** function _isdigit *****************
  1949 ;; Defined at:
  1950 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  c               1    wreg     unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  c               1    5[COMMON] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;		None               void
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         0       0       0       0       0
  1965 ;;      Locals:         2       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0
  1967 ;;      Totals:         2       0       0       0       0
  1968 ;;Total ram usage:        2 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_sprintf
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _isdigit
  1980  0FAE                     _isdigit:
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1984                           ;isdigit@c stored from wreg
  1985  0FAE  00F5               	movwf	isdigit@c
  1986  0FAF                     l1530:
  1987  0FAF  01F4               	clrf	_isdigit$908
  1988  0FB0                     l1532:
  1989  0FB0  303A               	movlw	58
  1990  0FB1  0275               	subwf	isdigit@c,w
  1991  0FB2  1803               	skipnc
  1992  0FB3  2FB5               	goto	u871
  1993  0FB4  2FB6               	goto	u870
  1994  0FB5                     u871:
  1995  0FB5  2FBE               	goto	l1538
  1996  0FB6                     u870:
  1997  0FB6                     l1534:
  1998  0FB6  3030               	movlw	48
  1999  0FB7  0275               	subwf	isdigit@c,w
  2000  0FB8  1C03               	skipc
  2001  0FB9  2FBB               	goto	u881
  2002  0FBA  2FBC               	goto	u880
  2003  0FBB                     u881:
  2004  0FBB  2FBE               	goto	l1538
  2005  0FBC                     u880:
  2006  0FBC                     l1536:
  2007  0FBC  01F4               	clrf	_isdigit$908
  2008  0FBD  0AF4               	incf	_isdigit$908,f
  2009  0FBE                     l1538:
  2010  0FBE  0C74               	rrf	_isdigit$908,w
  2011  0FBF                     l818:
  2012  0FBF  0008               	return
  2013  0FC0                     __end_of_isdigit:
  2014                           
  2015                           	psect	text3
  2016  061A                     __ptext3:	
  2017 ;; *************** function ___lwmod *****************
  2018 ;; Defined at:
  2019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  divisor         2    7[BANK0 ] unsigned int 
  2022 ;;  dividend        2    9[BANK0 ] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  counter         1   11[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    7[BANK0 ] unsigned int 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       4       0       0       0
  2035 ;;      Locals:         0       1       0       0       0
  2036 ;;      Temps:          1       0       0       0       0
  2037 ;;      Totals:         1       5       0       0       0
  2038 ;;Total ram usage:        6 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_sprintf
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function ___lwmod
  2050  061A                     ___lwmod:
  2051  061A                     l1650:	
  2052                           ;incstack = 0
  2053                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2054                           
  2055  061A  1283               	bcf	3,5	;RP0=0, select bank0
  2056  061B  1303               	bcf	3,6	;RP1=0, select bank0
  2057  061C  0847               	movf	___lwmod@divisor,w
  2058  061D  0448               	iorwf	___lwmod@divisor+1,w
  2059  061E  1903               	btfsc	3,2
  2060  061F  2E21               	goto	u1151
  2061  0620  2E22               	goto	u1150
  2062  0621                     u1151:
  2063  0621  2E51               	goto	l1668
  2064  0622                     u1150:
  2065  0622                     l1652:
  2066  0622  01CB               	clrf	___lwmod@counter
  2067  0623  0ACB               	incf	___lwmod@counter,f
  2068  0624  2E30               	goto	l1658
  2069  0625                     l1654:
  2070  0625  3001               	movlw	1
  2071  0626                     u1165:
  2072  0626  1003               	clrc
  2073  0627  0DC7               	rlf	___lwmod@divisor,f
  2074  0628  0DC8               	rlf	___lwmod@divisor+1,f
  2075  0629  3EFF               	addlw	-1
  2076  062A  1D03               	skipz
  2077  062B  2E26               	goto	u1165
  2078  062C                     l1656:
  2079  062C  3001               	movlw	1
  2080  062D  00F5               	movwf	??___lwmod
  2081  062E  0875               	movf	??___lwmod,w
  2082  062F  07CB               	addwf	___lwmod@counter,f
  2083  0630                     l1658:
  2084  0630  1FC8               	btfss	___lwmod@divisor+1,7
  2085  0631  2E33               	goto	u1171
  2086  0632  2E34               	goto	u1170
  2087  0633                     u1171:
  2088  0633  2E25               	goto	l1654
  2089  0634                     u1170:
  2090  0634                     l1660:
  2091  0634  0848               	movf	___lwmod@divisor+1,w
  2092  0635  024A               	subwf	___lwmod@dividend+1,w
  2093  0636  1D03               	skipz
  2094  0637  2E3A               	goto	u1185
  2095  0638  0847               	movf	___lwmod@divisor,w
  2096  0639  0249               	subwf	___lwmod@dividend,w
  2097  063A                     u1185:
  2098  063A  1C03               	skipc
  2099  063B  2E3D               	goto	u1181
  2100  063C  2E3E               	goto	u1180
  2101  063D                     u1181:
  2102  063D  2E44               	goto	l1664
  2103  063E                     u1180:
  2104  063E                     l1662:
  2105  063E  0847               	movf	___lwmod@divisor,w
  2106  063F  02C9               	subwf	___lwmod@dividend,f
  2107  0640  0848               	movf	___lwmod@divisor+1,w
  2108  0641  1C03               	skipc
  2109  0642  03CA               	decf	___lwmod@dividend+1,f
  2110  0643  02CA               	subwf	___lwmod@dividend+1,f
  2111  0644                     l1664:
  2112  0644  3001               	movlw	1
  2113  0645                     u1195:
  2114  0645  1003               	clrc
  2115  0646  0CC8               	rrf	___lwmod@divisor+1,f
  2116  0647  0CC7               	rrf	___lwmod@divisor,f
  2117  0648  3EFF               	addlw	-1
  2118  0649  1D03               	skipz
  2119  064A  2E45               	goto	u1195
  2120  064B                     l1666:
  2121  064B  3001               	movlw	1
  2122  064C  02CB               	subwf	___lwmod@counter,f
  2123  064D  1D03               	btfss	3,2
  2124  064E  2E50               	goto	u1201
  2125  064F  2E51               	goto	u1200
  2126  0650                     u1201:
  2127  0650  2E34               	goto	l1660
  2128  0651                     u1200:
  2129  0651                     l1668:
  2130  0651  084A               	movf	___lwmod@dividend+1,w
  2131  0652  00C8               	movwf	?___lwmod+1
  2132  0653  0849               	movf	___lwmod@dividend,w
  2133  0654  00C7               	movwf	?___lwmod
  2134  0655                     l647:
  2135  0655  0008               	return
  2136  0656                     __end_of___lwmod:
  2137                           
  2138                           	psect	text4
  2139  05D4                     __ptext4:	
  2140 ;; *************** function ___lwdiv *****************
  2141 ;; Defined at:
  2142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  divisor         2    0[BANK0 ] unsigned int 
  2145 ;;  dividend        2    2[BANK0 ] unsigned int 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  quotient        2    5[BANK0 ] unsigned int 
  2148 ;;  counter         1    4[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  2    0[BANK0 ] unsigned int 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       4       0       0       0
  2159 ;;      Locals:         0       3       0       0       0
  2160 ;;      Temps:          1       0       0       0       0
  2161 ;;      Totals:         1       7       0       0       0
  2162 ;;Total ram usage:        8 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_sprintf
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function ___lwdiv
  2174  05D4                     ___lwdiv:
  2175  05D4                     l2150:	
  2176                           ;incstack = 0
  2177                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2178                           
  2179  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2180  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2181  05D6  01C5               	clrf	___lwdiv@quotient
  2182  05D7  01C6               	clrf	___lwdiv@quotient+1
  2183  05D8                     l2152:
  2184  05D8  0840               	movf	___lwdiv@divisor,w
  2185  05D9  0441               	iorwf	___lwdiv@divisor+1,w
  2186  05DA  1903               	btfsc	3,2
  2187  05DB  2DDD               	goto	u1721
  2188  05DC  2DDE               	goto	u1720
  2189  05DD                     u1721:
  2190  05DD  2E15               	goto	l2172
  2191  05DE                     u1720:
  2192  05DE                     l2154:
  2193  05DE  01C4               	clrf	___lwdiv@counter
  2194  05DF  0AC4               	incf	___lwdiv@counter,f
  2195  05E0  2DEC               	goto	l2160
  2196  05E1                     l2156:
  2197  05E1  3001               	movlw	1
  2198  05E2                     u1735:
  2199  05E2  1003               	clrc
  2200  05E3  0DC0               	rlf	___lwdiv@divisor,f
  2201  05E4  0DC1               	rlf	___lwdiv@divisor+1,f
  2202  05E5  3EFF               	addlw	-1
  2203  05E6  1D03               	skipz
  2204  05E7  2DE2               	goto	u1735
  2205  05E8                     l2158:
  2206  05E8  3001               	movlw	1
  2207  05E9  00F4               	movwf	??___lwdiv
  2208  05EA  0874               	movf	??___lwdiv,w
  2209  05EB  07C4               	addwf	___lwdiv@counter,f
  2210  05EC                     l2160:
  2211  05EC  1FC1               	btfss	___lwdiv@divisor+1,7
  2212  05ED  2DEF               	goto	u1741
  2213  05EE  2DF0               	goto	u1740
  2214  05EF                     u1741:
  2215  05EF  2DE1               	goto	l2156
  2216  05F0                     u1740:
  2217  05F0                     l2162:
  2218  05F0  3001               	movlw	1
  2219  05F1                     u1755:
  2220  05F1  1003               	clrc
  2221  05F2  0DC5               	rlf	___lwdiv@quotient,f
  2222  05F3  0DC6               	rlf	___lwdiv@quotient+1,f
  2223  05F4  3EFF               	addlw	-1
  2224  05F5  1D03               	skipz
  2225  05F6  2DF1               	goto	u1755
  2226  05F7  0841               	movf	___lwdiv@divisor+1,w
  2227  05F8  0243               	subwf	___lwdiv@dividend+1,w
  2228  05F9  1D03               	skipz
  2229  05FA  2DFD               	goto	u1765
  2230  05FB  0840               	movf	___lwdiv@divisor,w
  2231  05FC  0242               	subwf	___lwdiv@dividend,w
  2232  05FD                     u1765:
  2233  05FD  1C03               	skipc
  2234  05FE  2E00               	goto	u1761
  2235  05FF  2E01               	goto	u1760
  2236  0600                     u1761:
  2237  0600  2E08               	goto	l2168
  2238  0601                     u1760:
  2239  0601                     l2164:
  2240  0601  0840               	movf	___lwdiv@divisor,w
  2241  0602  02C2               	subwf	___lwdiv@dividend,f
  2242  0603  0841               	movf	___lwdiv@divisor+1,w
  2243  0604  1C03               	skipc
  2244  0605  03C3               	decf	___lwdiv@dividend+1,f
  2245  0606  02C3               	subwf	___lwdiv@dividend+1,f
  2246  0607                     l2166:
  2247  0607  1445               	bsf	___lwdiv@quotient,0
  2248  0608                     l2168:
  2249  0608  3001               	movlw	1
  2250  0609                     u1775:
  2251  0609  1003               	clrc
  2252  060A  0CC1               	rrf	___lwdiv@divisor+1,f
  2253  060B  0CC0               	rrf	___lwdiv@divisor,f
  2254  060C  3EFF               	addlw	-1
  2255  060D  1D03               	skipz
  2256  060E  2E09               	goto	u1775
  2257  060F                     l2170:
  2258  060F  3001               	movlw	1
  2259  0610  02C4               	subwf	___lwdiv@counter,f
  2260  0611  1D03               	btfss	3,2
  2261  0612  2E14               	goto	u1781
  2262  0613  2E15               	goto	u1780
  2263  0614                     u1781:
  2264  0614  2DF0               	goto	l2162
  2265  0615                     u1780:
  2266  0615                     l2172:
  2267  0615  0846               	movf	___lwdiv@quotient+1,w
  2268  0616  00C1               	movwf	?___lwdiv+1
  2269  0617  0845               	movf	___lwdiv@quotient,w
  2270  0618  00C0               	movwf	?___lwdiv
  2271  0619                     l637:
  2272  0619  0008               	return
  2273  061A                     __end_of___lwdiv:
  2274                           
  2275                           	psect	text5
  2276  06CA                     __ptext5:	
  2277 ;; *************** function _setup *****************
  2278 ;; Defined at:
  2279 ;;		line 167 in file "main.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    3
  2300 ;; This function calls:
  2301 ;;		_I2C_Master_Init
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _setup
  2309  06CA                     _setup:
  2310  06CA                     l2176:	
  2311                           ;incstack = 0
  2312                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2313                           
  2314                           
  2315                           ;main.c: 168:     ANSEL = 0;
  2316  06CA  1683               	bsf	3,5	;RP0=1, select bank3
  2317  06CB  1703               	bsf	3,6	;RP1=1, select bank3
  2318  06CC  0188               	clrf	8	;volatile
  2319                           
  2320                           ;main.c: 169:     ANSELH = 0;
  2321  06CD  0189               	clrf	9	;volatile
  2322                           
  2323                           ;main.c: 170:     TRISA = 0;
  2324  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  2325  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  2326  06D0  0185               	clrf	5	;volatile
  2327                           
  2328                           ;main.c: 171:     TRISB = 0;
  2329  06D1  0186               	clrf	6	;volatile
  2330  06D2                     l2178:
  2331                           
  2332                           ;main.c: 172:     TRISCbits.TRISC3 = 0;
  2333  06D2  1187               	bcf	7,3	;volatile
  2334  06D3                     l2180:
  2335                           
  2336                           ;main.c: 173:     TRISCbits.TRISC6 = 0;
  2337  06D3  1307               	bcf	7,6	;volatile
  2338  06D4                     l2182:
  2339                           
  2340                           ;main.c: 174:     TRISCbits.TRISC7 = 1;
  2341  06D4  1787               	bsf	7,7	;volatile
  2342                           
  2343                           ;main.c: 175:     TRISD = 0;
  2344  06D5  0188               	clrf	8	;volatile
  2345                           
  2346                           ;main.c: 176:     TRISE = 0;
  2347  06D6  0189               	clrf	9	;volatile
  2348                           
  2349                           ;main.c: 177:     PORTA = 0;
  2350  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2351  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2352  06D9  0185               	clrf	5	;volatile
  2353                           
  2354                           ;main.c: 178:     PORTB = 0;
  2355  06DA  0186               	clrf	6	;volatile
  2356                           
  2357                           ;main.c: 179:     PORTC = 0;
  2358  06DB  0187               	clrf	7	;volatile
  2359                           
  2360                           ;main.c: 180:     PORTD = 0;
  2361  06DC  0188               	clrf	8	;volatile
  2362                           
  2363                           ;main.c: 181:     PORTE = 0;
  2364  06DD  0189               	clrf	9	;volatile
  2365  06DE                     l2184:
  2366                           
  2367                           ;main.c: 182:     I2C_Master_Init(100000);
  2368  06DE  3000               	movlw	0
  2369  06DF  00D0               	movwf	I2C_Master_Init@c+3
  2370  06E0  3001               	movlw	1
  2371  06E1  00CF               	movwf	I2C_Master_Init@c+2
  2372  06E2  3086               	movlw	134
  2373  06E3  00CE               	movwf	I2C_Master_Init@c+1
  2374  06E4  30A0               	movlw	160
  2375  06E5  00CD               	movwf	I2C_Master_Init@c
  2376  06E6  120A  118A  2656  120A  118A  	fcall	_I2C_Master_Init
  2377  06EB                     l2186:
  2378                           
  2379                           ;main.c: 185:     SPBRGH = 0;
  2380  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  2381  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  2382  06ED  019A               	clrf	26	;volatile
  2383  06EE                     l2188:
  2384                           
  2385                           ;main.c: 186:     SPBRG = 12;
  2386  06EE  300C               	movlw	12
  2387  06EF  0099               	movwf	25	;volatile
  2388  06F0                     l2190:
  2389                           
  2390                           ;main.c: 188:     TXSTAbits.TXEN = 1;
  2391  06F0  1698               	bsf	24,5	;volatile
  2392  06F1                     l2192:
  2393                           
  2394                           ;main.c: 189:     TXSTAbits.SYNC = 0;
  2395  06F1  1218               	bcf	24,4	;volatile
  2396  06F2                     l2194:
  2397                           
  2398                           ;main.c: 191:     RCSTAbits.SPEN = 1;
  2399  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2400  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2401  06F4  1798               	bsf	24,7	;volatile
  2402  06F5                     l2196:
  2403                           
  2404                           ;main.c: 192:     RCSTAbits.CREN = 1;
  2405  06F5  1618               	bsf	24,4	;volatile
  2406  06F6                     l2198:
  2407                           
  2408                           ;main.c: 193:     RCREG = 0;
  2409  06F6  019A               	clrf	26	;volatile
  2410  06F7                     l2200:
  2411                           
  2412                           ;main.c: 196:     PIE1bits.RCIE = 1;
  2413  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  2414  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  2415  06F9  168C               	bsf	12,5	;volatile
  2416  06FA                     l2202:
  2417                           
  2418                           ;main.c: 197:     PIE1bits.TXIE = 0;
  2419  06FA  120C               	bcf	12,4	;volatile
  2420  06FB                     l2204:
  2421                           
  2422                           ;main.c: 198:     PIR1bits.RCIF = 0;
  2423  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2424  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2425  06FD  128C               	bcf	12,5	;volatile
  2426  06FE                     l2206:
  2427                           
  2428                           ;main.c: 200:     INTCONbits.GIE = 1;
  2429  06FE  178B               	bsf	11,7	;volatile
  2430  06FF                     l118:
  2431  06FF  0008               	return
  2432  0700                     __end_of_setup:
  2433                           
  2434                           	psect	text6
  2435  0656                     __ptext6:	
  2436 ;; *************** function _I2C_Master_Init *****************
  2437 ;; Defined at:
  2438 ;;		line 16 in file "I2C.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  c               4   13[BANK0 ] const unsigned long 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0, pclath, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2452 ;;      Params:         0       4       0       0       0
  2453 ;;      Locals:         0       0       0       0       0
  2454 ;;      Temps:          0       4       0       0       0
  2455 ;;      Totals:         0       8       0       0       0
  2456 ;;Total ram usage:        8 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    2
  2459 ;; This function calls:
  2460 ;;		___lldiv
  2461 ;; This function is called by:
  2462 ;;		_setup
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _I2C_Master_Init
  2468  0656                     _I2C_Master_Init:
  2469  0656                     l2028:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2472                           
  2473                           
  2474                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2475  0656  3028               	movlw	40
  2476  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0659  0094               	movwf	20	;volatile
  2479  065A                     l2030:
  2480                           
  2481                           ;I2C.c: 19:     SSPCON2 = 0;
  2482  065A  1683               	bsf	3,5	;RP0=1, select bank1
  2483  065B  1303               	bcf	3,6	;RP1=0, select bank1
  2484  065C  0191               	clrf	17	;volatile
  2485  065D                     l2032:
  2486                           
  2487                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2488  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2489  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2490  065F  084D               	movf	I2C_Master_Init@c,w
  2491  0660  00D1               	movwf	??_I2C_Master_Init
  2492  0661  084E               	movf	I2C_Master_Init@c+1,w
  2493  0662  00D2               	movwf	??_I2C_Master_Init+1
  2494  0663  084F               	movf	I2C_Master_Init@c+2,w
  2495  0664  00D3               	movwf	??_I2C_Master_Init+2
  2496  0665  0850               	movf	I2C_Master_Init@c+3,w
  2497  0666  00D4               	movwf	??_I2C_Master_Init+3
  2498  0667  3002               	movlw	2
  2499  0668                     u1495:
  2500  0668  1003               	clrc
  2501  0669  0DD1               	rlf	??_I2C_Master_Init,f
  2502  066A  0DD2               	rlf	??_I2C_Master_Init+1,f
  2503  066B  0DD3               	rlf	??_I2C_Master_Init+2,f
  2504  066C  0DD4               	rlf	??_I2C_Master_Init+3,f
  2505  066D                     u1490:
  2506  066D  3EFF               	addlw	-1
  2507  066E  1D03               	skipz
  2508  066F  2E68               	goto	u1495
  2509  0670  0854               	movf	??_I2C_Master_Init+3,w
  2510  0671  00C3               	movwf	___lldiv@divisor+3
  2511  0672  0853               	movf	??_I2C_Master_Init+2,w
  2512  0673  00C2               	movwf	___lldiv@divisor+2
  2513  0674  0852               	movf	??_I2C_Master_Init+1,w
  2514  0675  00C1               	movwf	___lldiv@divisor+1
  2515  0676  0851               	movf	??_I2C_Master_Init,w
  2516  0677  00C0               	movwf	___lldiv@divisor
  2517  0678  3000               	movlw	0
  2518  0679  00C7               	movwf	___lldiv@dividend+3
  2519  067A  307A               	movlw	122
  2520  067B  00C6               	movwf	___lldiv@dividend+2
  2521  067C  3012               	movlw	18
  2522  067D  00C5               	movwf	___lldiv@dividend+1
  2523  067E  3000               	movlw	0
  2524  067F  00C4               	movwf	___lldiv@dividend
  2525  0680  120A  118A  24C1  120A  118A  	fcall	___lldiv
  2526  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0687  0840               	movf	?___lldiv,w
  2529  0688  3EFF               	addlw	255
  2530  0689  1683               	bsf	3,5	;RP0=1, select bank1
  2531  068A  1303               	bcf	3,6	;RP1=0, select bank1
  2532  068B  0093               	movwf	19	;volatile
  2533  068C                     l2034:
  2534                           
  2535                           ;I2C.c: 21:     SSPSTAT = 0;
  2536  068C  0194               	clrf	20	;volatile
  2537  068D                     l2036:
  2538                           
  2539                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2540  068D  1587               	bsf	7,3	;volatile
  2541  068E                     l2038:
  2542                           
  2543                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2544  068E  1607               	bsf	7,4	;volatile
  2545  068F                     l214:
  2546  068F  0008               	return
  2547  0690                     __end_of_I2C_Master_Init:
  2548                           
  2549                           	psect	text7
  2550  04C1                     __ptext7:	
  2551 ;; *************** function ___lldiv *****************
  2552 ;; Defined at:
  2553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  divisor         4    0[BANK0 ] unsigned long 
  2556 ;;  dividend        4    4[BANK0 ] unsigned long 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  quotient        4    8[BANK0 ] unsigned long 
  2559 ;;  counter         1   12[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  4    0[BANK0 ] unsigned long 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       8       0       0       0
  2570 ;;      Locals:         0       5       0       0       0
  2571 ;;      Temps:          1       0       0       0       0
  2572 ;;      Totals:         1      13       0       0       0
  2573 ;;Total ram usage:       14 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_I2C_Master_Init
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function ___lldiv
  2585  04C1                     ___lldiv:
  2586  04C1                     l2000:	
  2587                           ;incstack = 0
  2588                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2589                           
  2590  04C1  3000               	movlw	0
  2591  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2592  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2593  04C4  00CB               	movwf	___lldiv@quotient+3
  2594  04C5  3000               	movlw	0
  2595  04C6  00CA               	movwf	___lldiv@quotient+2
  2596  04C7  3000               	movlw	0
  2597  04C8  00C9               	movwf	___lldiv@quotient+1
  2598  04C9  3000               	movlw	0
  2599  04CA  00C8               	movwf	___lldiv@quotient
  2600  04CB  0843               	movf	___lldiv@divisor+3,w
  2601  04CC  0442               	iorwf	___lldiv@divisor+2,w
  2602  04CD  0441               	iorwf	___lldiv@divisor+1,w
  2603  04CE  0440               	iorwf	___lldiv@divisor,w
  2604  04CF  1903               	skipnz
  2605  04D0  2CD2               	goto	u1411
  2606  04D1  2CD3               	goto	u1410
  2607  04D2                     u1411:
  2608  04D2  2D20               	goto	l2020
  2609  04D3                     u1410:
  2610  04D3                     l2002:
  2611  04D3  01CC               	clrf	___lldiv@counter
  2612  04D4  0ACC               	incf	___lldiv@counter,f
  2613  04D5  2CE3               	goto	l2006
  2614  04D6                     l2004:
  2615  04D6  3001               	movlw	1
  2616  04D7  00F4               	movwf	??___lldiv
  2617  04D8                     u1425:
  2618  04D8  1003               	clrc
  2619  04D9  0DC0               	rlf	___lldiv@divisor,f
  2620  04DA  0DC1               	rlf	___lldiv@divisor+1,f
  2621  04DB  0DC2               	rlf	___lldiv@divisor+2,f
  2622  04DC  0DC3               	rlf	___lldiv@divisor+3,f
  2623  04DD  0BF4               	decfsz	??___lldiv,f
  2624  04DE  2CD8               	goto	u1425
  2625  04DF  3001               	movlw	1
  2626  04E0  00F4               	movwf	??___lldiv
  2627  04E1  0874               	movf	??___lldiv,w
  2628  04E2  07CC               	addwf	___lldiv@counter,f
  2629  04E3                     l2006:
  2630  04E3  1FC3               	btfss	___lldiv@divisor+3,7
  2631  04E4  2CE6               	goto	u1431
  2632  04E5  2CE7               	goto	u1430
  2633  04E6                     u1431:
  2634  04E6  2CD6               	goto	l2004
  2635  04E7                     u1430:
  2636  04E7                     l2008:
  2637  04E7  3001               	movlw	1
  2638  04E8  00F4               	movwf	??___lldiv
  2639  04E9                     u1445:
  2640  04E9  1003               	clrc
  2641  04EA  0DC8               	rlf	___lldiv@quotient,f
  2642  04EB  0DC9               	rlf	___lldiv@quotient+1,f
  2643  04EC  0DCA               	rlf	___lldiv@quotient+2,f
  2644  04ED  0DCB               	rlf	___lldiv@quotient+3,f
  2645  04EE  0BF4               	decfsz	??___lldiv,f
  2646  04EF  2CE9               	goto	u1445
  2647  04F0                     l2010:
  2648  04F0  0843               	movf	___lldiv@divisor+3,w
  2649  04F1  0247               	subwf	___lldiv@dividend+3,w
  2650  04F2  1D03               	skipz
  2651  04F3  2CFE               	goto	u1455
  2652  04F4  0842               	movf	___lldiv@divisor+2,w
  2653  04F5  0246               	subwf	___lldiv@dividend+2,w
  2654  04F6  1D03               	skipz
  2655  04F7  2CFE               	goto	u1455
  2656  04F8  0841               	movf	___lldiv@divisor+1,w
  2657  04F9  0245               	subwf	___lldiv@dividend+1,w
  2658  04FA  1D03               	skipz
  2659  04FB  2CFE               	goto	u1455
  2660  04FC  0840               	movf	___lldiv@divisor,w
  2661  04FD  0244               	subwf	___lldiv@dividend,w
  2662  04FE                     u1455:
  2663  04FE  1C03               	skipc
  2664  04FF  2D01               	goto	u1451
  2665  0500  2D02               	goto	u1450
  2666  0501                     u1451:
  2667  0501  2D11               	goto	l2016
  2668  0502                     u1450:
  2669  0502                     l2012:
  2670  0502  0840               	movf	___lldiv@divisor,w
  2671  0503  02C4               	subwf	___lldiv@dividend,f
  2672  0504  0841               	movf	___lldiv@divisor+1,w
  2673  0505  1C03               	skipc
  2674  0506  0F41               	incfsz	___lldiv@divisor+1,w
  2675  0507  02C5               	subwf	___lldiv@dividend+1,f
  2676  0508  0842               	movf	___lldiv@divisor+2,w
  2677  0509  1C03               	skipc
  2678  050A  0F42               	incfsz	___lldiv@divisor+2,w
  2679  050B  02C6               	subwf	___lldiv@dividend+2,f
  2680  050C  0843               	movf	___lldiv@divisor+3,w
  2681  050D  1C03               	skipc
  2682  050E  0F43               	incfsz	___lldiv@divisor+3,w
  2683  050F  02C7               	subwf	___lldiv@dividend+3,f
  2684  0510                     l2014:
  2685  0510  1448               	bsf	___lldiv@quotient,0
  2686  0511                     l2016:
  2687  0511  3001               	movlw	1
  2688  0512                     u1465:
  2689  0512  1003               	clrc
  2690  0513  0CC3               	rrf	___lldiv@divisor+3,f
  2691  0514  0CC2               	rrf	___lldiv@divisor+2,f
  2692  0515  0CC1               	rrf	___lldiv@divisor+1,f
  2693  0516  0CC0               	rrf	___lldiv@divisor,f
  2694  0517  3EFF               	addlw	-1
  2695  0518  1D03               	skipz
  2696  0519  2D12               	goto	u1465
  2697  051A                     l2018:
  2698  051A  3001               	movlw	1
  2699  051B  02CC               	subwf	___lldiv@counter,f
  2700  051C  1D03               	btfss	3,2
  2701  051D  2D1F               	goto	u1471
  2702  051E  2D20               	goto	u1470
  2703  051F                     u1471:
  2704  051F  2CE7               	goto	l2008
  2705  0520                     u1470:
  2706  0520                     l2020:
  2707  0520  084B               	movf	___lldiv@quotient+3,w
  2708  0521  00C3               	movwf	?___lldiv+3
  2709  0522  084A               	movf	___lldiv@quotient+2,w
  2710  0523  00C2               	movwf	?___lldiv+2
  2711  0524  0849               	movf	___lldiv@quotient+1,w
  2712  0525  00C1               	movwf	?___lldiv+1
  2713  0526  0848               	movf	___lldiv@quotient,w
  2714  0527  00C0               	movwf	?___lldiv
  2715  0528                     l401:
  2716  0528  0008               	return
  2717  0529                     __end_of___lldiv:
  2718                           
  2719                           	psect	text8
  2720  077B                     __ptext8:	
  2721 ;; *************** function _USART_STRING *****************
  2722 ;; Defined at:
  2723 ;;		line 17 in file "USART.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  a               1    wreg     PTR unsigned char 
  2726 ;;		 -> datos(1), 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  a               1    0[BANK0 ] PTR unsigned char 
  2729 ;;		 -> datos(1), 
  2730 ;;  i               1    1[BANK0 ] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         0       2       0       0       0
  2742 ;;      Temps:          1       0       0       0       0
  2743 ;;      Totals:         1       2       0       0       0
  2744 ;;Total ram usage:        3 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    2
  2747 ;; This function calls:
  2748 ;;		_USART_ESCRITURA
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _USART_STRING
  2756  077B                     _USART_STRING:
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2760                           ;USART_STRING@a stored from wreg
  2761  077B  1283               	bcf	3,5	;RP0=0, select bank0
  2762  077C  1303               	bcf	3,6	;RP1=0, select bank0
  2763  077D  00C0               	movwf	USART_STRING@a
  2764  077E                     l2364:
  2765                           
  2766                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  2767  077E  01C1               	clrf	USART_STRING@i
  2768  077F  2F91               	goto	l2370
  2769  0780                     l2366:
  2770                           
  2771                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  2772  0780  0841               	movf	USART_STRING@i,w
  2773  0781  0740               	addwf	USART_STRING@a,w
  2774  0782  00F5               	movwf	??_USART_STRING
  2775  0783  0875               	movf	??_USART_STRING,w
  2776  0784  0084               	movwf	4
  2777  0785  0800               	movf	0,w
  2778  0786  120A  158A  2788  120A  118A  	fcall	_USART_ESCRITURA
  2779  078B                     l2368:
  2780                           
  2781                           ;USART.c: 21:     }
  2782  078B  3001               	movlw	1
  2783  078C  00F5               	movwf	??_USART_STRING
  2784  078D  0875               	movf	??_USART_STRING,w
  2785  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2786  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0790  07C1               	addwf	USART_STRING@i,f
  2788  0791                     l2370:
  2789  0791  0841               	movf	USART_STRING@i,w
  2790  0792  0740               	addwf	USART_STRING@a,w
  2791  0793  00F5               	movwf	??_USART_STRING
  2792  0794  0875               	movf	??_USART_STRING,w
  2793  0795  0084               	movwf	4
  2794  0796  1383               	bcf	3,7	;select IRP bank0
  2795  0797  0800               	movf	0,w
  2796  0798  1D03               	btfss	3,2
  2797  0799  2F9B               	goto	u1961
  2798  079A  2F9C               	goto	u1960
  2799  079B                     u1961:
  2800  079B  2F80               	goto	l2366
  2801  079C                     u1960:
  2802  079C                     l150:
  2803  079C  0008               	return
  2804  079D                     __end_of_USART_STRING:
  2805                           
  2806                           	psect	text9
  2807  0F88                     __ptext9:	
  2808 ;; *************** function _USART_ESCRITURA *****************
  2809 ;; Defined at:
  2810 ;;		line 13 in file "USART.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  a               1    wreg     unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  a               1    4[COMMON] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       0       0       0       0
  2825 ;;      Locals:         1       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0
  2827 ;;      Totals:         1       0       0       0       0
  2828 ;;Total ram usage:        1 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;;		_USART_STRING
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _USART_ESCRITURA
  2841  0F88                     _USART_ESCRITURA:
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _USART_ESCRITURA: [wreg]
  2845                           ;USART_ESCRITURA@a stored from wreg
  2846  0F88  00F4               	movwf	USART_ESCRITURA@a
  2847  0F89                     l2024:
  2848  0F89                     l141:	
  2849                           ;USART.c: 14:     while(!TRMT);
  2850                           
  2851  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  2852  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  2853  0F8B  1C98               	btfss	24,1	;volatile
  2854  0F8C  2F8E               	goto	u1481
  2855  0F8D  2F8F               	goto	u1480
  2856  0F8E                     u1481:
  2857  0F8E  2F89               	goto	l141
  2858  0F8F                     u1480:
  2859  0F8F                     l2026:
  2860                           
  2861                           ;USART.c: 15:     TXREG = a;
  2862  0F8F  0874               	movf	USART_ESCRITURA@a,w
  2863  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0F92  0099               	movwf	25	;volatile
  2866  0F93                     l144:
  2867  0F93  0008               	return
  2868  0F94                     __end_of_USART_ESCRITURA:
  2869                           
  2870                           	psect	text10
  2871  0756                     __ptext10:	
  2872 ;; *************** function _Lcd_Write_String *****************
  2873 ;; Defined at:
  2874 ;;		line 94 in file "LCD.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  a               1    wreg     PTR unsigned char 
  2877 ;;		 -> date1(17), time(15), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  a               1    4[BANK0 ] PTR unsigned char 
  2880 ;;		 -> date1(17), time(15), 
  2881 ;;  i               2    2[BANK0 ] int 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       0       0       0       0
  2892 ;;      Locals:         0       3       0       0       0
  2893 ;;      Temps:          0       1       0       0       0
  2894 ;;      Totals:         0       4       0       0       0
  2895 ;;Total ram usage:        4 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    3
  2898 ;; This function calls:
  2899 ;;		_Lcd_Write_Char
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _Lcd_Write_String
  2907  0756                     _Lcd_Write_String:
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2911                           ;Lcd_Write_String@a stored from wreg
  2912  0756  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0757  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0758  00C4               	movwf	Lcd_Write_String@a
  2915  0759                     l2232:
  2916                           
  2917                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  2918  0759  01C2               	clrf	Lcd_Write_String@i
  2919  075A  01C3               	clrf	Lcd_Write_String@i+1
  2920  075B  2F6F               	goto	l2238
  2921  075C                     l2234:
  2922                           
  2923                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  2924  075C  0842               	movf	Lcd_Write_String@i,w
  2925  075D  0744               	addwf	Lcd_Write_String@a,w
  2926  075E  00C1               	movwf	??_Lcd_Write_String
  2927  075F  0841               	movf	??_Lcd_Write_String,w
  2928  0760  0084               	movwf	4
  2929  0761  0800               	movf	0,w
  2930  0762  120A  158A  27D3  120A  118A  	fcall	_Lcd_Write_Char
  2931  0767                     l2236:
  2932  0767  3001               	movlw	1
  2933  0768  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0769  1303               	bcf	3,6	;RP1=0, select bank0
  2935  076A  07C2               	addwf	Lcd_Write_String@i,f
  2936  076B  1803               	skipnc
  2937  076C  0AC3               	incf	Lcd_Write_String@i+1,f
  2938  076D  3000               	movlw	0
  2939  076E  07C3               	addwf	Lcd_Write_String@i+1,f
  2940  076F                     l2238:
  2941  076F  0842               	movf	Lcd_Write_String@i,w
  2942  0770  0744               	addwf	Lcd_Write_String@a,w
  2943  0771  00C1               	movwf	??_Lcd_Write_String
  2944  0772  0841               	movf	??_Lcd_Write_String,w
  2945  0773  0084               	movwf	4
  2946  0774  1383               	bcf	3,7	;select IRP bank0
  2947  0775  0800               	movf	0,w
  2948  0776  1D03               	btfss	3,2
  2949  0777  2F79               	goto	u1811
  2950  0778  2F7A               	goto	u1810
  2951  0779                     u1811:
  2952  0779  2F5C               	goto	l2234
  2953  077A                     u1810:
  2954  077A                     l185:
  2955  077A  0008               	return
  2956  077B                     __end_of_Lcd_Write_String:
  2957                           
  2958                           	psect	text11
  2959  0FD3                     __ptext11:	
  2960 ;; *************** function _Lcd_Write_Char *****************
  2961 ;; Defined at:
  2962 ;;		line 77 in file "LCD.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  a               1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  a               1    0[BANK0 ] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       0       0       0       0
  2977 ;;      Locals:         0       1       0       0       0
  2978 ;;      Temps:          1       0       0       0       0
  2979 ;;      Totals:         1       1       0       0       0
  2980 ;;Total ram usage:        2 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    2
  2983 ;; This function calls:
  2984 ;;		_Lcd_Port
  2985 ;; This function is called by:
  2986 ;;		_Lcd_Write_String
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _Lcd_Write_Char
  2992  0FD3                     _Lcd_Write_Char:
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2996                           ;Lcd_Write_Char@a stored from wreg
  2997  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0FD5  00C0               	movwf	Lcd_Write_Char@a
  3000  0FD6                     l2054:
  3001                           
  3002                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  3003  0FD6  1409               	bsf	9,0	;volatile
  3004  0FD7                     l2056:
  3005                           
  3006                           ;LCD.c: 88:    Lcd_Port(a);
  3007  0FD7  0840               	movf	Lcd_Write_Char@a,w
  3008  0FD8  120A  158A  2767  120A  158A  	fcall	_Lcd_Port
  3009  0FDD                     l2058:
  3010                           
  3011                           ;LCD.c: 89:    RE1 = 1;
  3012  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0FDF  1489               	bsf	9,1	;volatile
  3015  0FE0                     l2060:
  3016                           
  3017                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3018  0FE0  301A               	movlw	26
  3019  0FE1  00F5               	movwf	??_Lcd_Write_Char
  3020  0FE2                     u1997:
  3021  0FE2  0BF5               	decfsz	??_Lcd_Write_Char,f
  3022  0FE3  2FE2               	goto	u1997
  3023  0FE4  0000               	nop
  3024  0FE5                     l2062:
  3025                           
  3026                           ;LCD.c: 91:    RE1 = 0;
  3027  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0FE7  1089               	bcf	9,1	;volatile
  3030  0FE8                     l179:
  3031  0FE8  0008               	return
  3032  0FE9                     __end_of_Lcd_Write_Char:
  3033                           
  3034                           	psect	text12
  3035  0730                     __ptext12:	
  3036 ;; *************** function _Lcd_Set_Cursor *****************
  3037 ;; Defined at:
  3038 ;;		line 37 in file "LCD.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  a               1    wreg     unsigned char 
  3041 ;;  b               1    2[BANK0 ] unsigned char 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  a               1    4[BANK0 ] unsigned char 
  3044 ;;  temp            1    5[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       1       0       0       0
  3055 ;;      Locals:         0       2       0       0       0
  3056 ;;      Temps:          0       1       0       0       0
  3057 ;;      Totals:         0       4       0       0       0
  3058 ;;Total ram usage:        4 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    3
  3061 ;; This function calls:
  3062 ;;		_Lcd_Cmd
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _Lcd_Set_Cursor
  3070  0730                     _Lcd_Set_Cursor:
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3074                           ;Lcd_Set_Cursor@a stored from wreg
  3075  0730  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0731  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0732  00C4               	movwf	Lcd_Set_Cursor@a
  3078  0733                     l2220:
  3079                           
  3080                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  3081  0733  0344               	decf	Lcd_Set_Cursor@a,w
  3082  0734  1D03               	btfss	3,2
  3083  0735  2F37               	goto	u1791
  3084  0736  2F38               	goto	u1790
  3085  0737                     u1791:
  3086  0737  2F44               	goto	l2226
  3087  0738                     u1790:
  3088  0738                     l2222:
  3089                           
  3090                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  3091  0738  0842               	movf	Lcd_Set_Cursor@b,w
  3092  0739  3E7F               	addlw	127
  3093  073A  00C3               	movwf	??_Lcd_Set_Cursor
  3094  073B  0843               	movf	??_Lcd_Set_Cursor,w
  3095  073C  00C5               	movwf	Lcd_Set_Cursor@temp
  3096  073D                     l2224:
  3097                           
  3098                           ;LCD.c: 46:   Lcd_Cmd(temp);
  3099  073D  0845               	movf	Lcd_Set_Cursor@temp,w
  3100  073E  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3101                           
  3102                           ;LCD.c: 47:  }
  3103  0743  2F55               	goto	l173
  3104  0744                     l2226:
  3105  0744  3002               	movlw	2
  3106  0745  0644               	xorwf	Lcd_Set_Cursor@a,w
  3107  0746  1D03               	btfss	3,2
  3108  0747  2F49               	goto	u1801
  3109  0748  2F4A               	goto	u1800
  3110  0749                     u1801:
  3111  0749  2F55               	goto	l173
  3112  074A                     u1800:
  3113  074A                     l2228:
  3114                           
  3115                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  3116  074A  0842               	movf	Lcd_Set_Cursor@b,w
  3117  074B  3EBF               	addlw	191
  3118  074C  00C3               	movwf	??_Lcd_Set_Cursor
  3119  074D  0843               	movf	??_Lcd_Set_Cursor,w
  3120  074E  00C5               	movwf	Lcd_Set_Cursor@temp
  3121  074F                     l2230:
  3122                           
  3123                           ;LCD.c: 54:   Lcd_Cmd(temp);
  3124  074F  0845               	movf	Lcd_Set_Cursor@temp,w
  3125  0750  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3126  0755                     l173:
  3127  0755  0008               	return
  3128  0756                     __end_of_Lcd_Set_Cursor:
  3129                           
  3130                           	psect	text13
  3131  0584                     __ptext13:	
  3132 ;; *************** function _Lcd_Init *****************
  3133 ;; Defined at:
  3134 ;;		line 58 in file "LCD.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0
  3150 ;;      Temps:          0       2       0       0       0
  3151 ;;      Totals:         0       2       0       0       0
  3152 ;;Total ram usage:        2 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    3
  3155 ;; This function calls:
  3156 ;;		_Lcd_Cmd
  3157 ;;		_Lcd_Port
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _Lcd_Init
  3165  0584                     _Lcd_Init:
  3166  0584                     l2208:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3169                           
  3170                           
  3171                           ;LCD.c: 60:   Lcd_Port(0x00);
  3172  0584  3000               	movlw	0
  3173  0585  120A  158A  2767  120A  118A  	fcall	_Lcd_Port
  3174  058A                     l2210:
  3175                           
  3176                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3177  058A  3034               	movlw	52
  3178  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3179  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3180  058D  00C3               	movwf	??_Lcd_Init+1
  3181  058E  30F1               	movlw	241
  3182  058F  00C2               	movwf	??_Lcd_Init
  3183  0590                     u2007:
  3184  0590  0BC2               	decfsz	??_Lcd_Init,f
  3185  0591  2D90               	goto	u2007
  3186  0592  0BC3               	decfsz	??_Lcd_Init+1,f
  3187  0593  2D90               	goto	u2007
  3188  0594                     l2212:
  3189                           
  3190                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  3191  0594  3030               	movlw	48
  3192  0595  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3193                           
  3194                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  3195  059A  300D               	movlw	13
  3196  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3197  059C  1303               	bcf	3,6	;RP1=0, select bank0
  3198  059D  00C3               	movwf	??_Lcd_Init+1
  3199  059E  30FB               	movlw	251
  3200  059F  00C2               	movwf	??_Lcd_Init
  3201  05A0                     u2017:
  3202  05A0  0BC2               	decfsz	??_Lcd_Init,f
  3203  05A1  2DA0               	goto	u2017
  3204  05A2  0BC3               	decfsz	??_Lcd_Init+1,f
  3205  05A3  2DA0               	goto	u2017
  3206  05A4                     l2214:
  3207                           
  3208                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  3209  05A4  3030               	movlw	48
  3210  05A5  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3211  05AA                     l2216:
  3212                           
  3213                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  3214  05AA  301D               	movlw	29
  3215  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3216  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  3217  05AD  00C3               	movwf	??_Lcd_Init+1
  3218  05AE  3090               	movlw	144
  3219  05AF  00C2               	movwf	??_Lcd_Init
  3220  05B0                     u2027:
  3221  05B0  0BC2               	decfsz	??_Lcd_Init,f
  3222  05B1  2DB0               	goto	u2027
  3223  05B2  0BC3               	decfsz	??_Lcd_Init+1,f
  3224  05B3  2DB0               	goto	u2027
  3225  05B4  0000               	nop
  3226                           
  3227                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  3228  05B5  3030               	movlw	48
  3229  05B6  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3230                           
  3231                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  3232  05BB  3038               	movlw	56
  3233  05BC  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3234                           
  3235                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  3236  05C1  300C               	movlw	12
  3237  05C2  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3238                           
  3239                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  3240  05C7  3001               	movlw	1
  3241  05C8  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3242                           
  3243                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  3244  05CD  3006               	movlw	6
  3245  05CE  120A  118A  27BD  120A  118A  	fcall	_Lcd_Cmd
  3246  05D3                     l176:
  3247  05D3  0008               	return
  3248  05D4                     __end_of_Lcd_Init:
  3249                           
  3250                           	psect	text14
  3251  0FA1                     __ptext14:	
  3252 ;; *************** function _Lcd_Clear *****************
  3253 ;; Defined at:
  3254 ;;		line 31 in file "LCD.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0
  3271 ;;      Totals:         0       0       0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    3
  3275 ;; This function calls:
  3276 ;;		_Lcd_Cmd
  3277 ;; This function is called by:
  3278 ;;		_main
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           
  3283                           ;psect for function _Lcd_Clear
  3284  0FA1                     _Lcd_Clear:
  3285  0FA1                     l2218:	
  3286                           ;incstack = 0
  3287                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3288                           
  3289                           
  3290                           ;LCD.c: 33:  Lcd_Cmd(0);
  3291  0FA1  3000               	movlw	0
  3292  0FA2  120A  118A  27BD  120A  158A  	fcall	_Lcd_Cmd
  3293                           
  3294                           ;LCD.c: 34:  Lcd_Cmd(1);
  3295  0FA7  3001               	movlw	1
  3296  0FA8  120A  118A  27BD  120A  158A  	fcall	_Lcd_Cmd
  3297  0FAD                     l167:
  3298  0FAD  0008               	return
  3299  0FAE                     __end_of_Lcd_Clear:
  3300                           
  3301                           	psect	text15
  3302  07BD                     __ptext15:	
  3303 ;; *************** function _Lcd_Cmd *****************
  3304 ;; Defined at:
  3305 ;;		line 22 in file "LCD.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  a               1    wreg     unsigned char 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  a               1    5[COMMON] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       0       0       0       0
  3320 ;;      Locals:         1       0       0       0       0
  3321 ;;      Temps:          0       2       0       0       0
  3322 ;;      Totals:         1       2       0       0       0
  3323 ;;Total ram usage:        3 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    2
  3326 ;; This function calls:
  3327 ;;		_Lcd_Port
  3328 ;; This function is called by:
  3329 ;;		_Lcd_Clear
  3330 ;;		_Lcd_Set_Cursor
  3331 ;;		_Lcd_Init
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _Lcd_Cmd
  3337  07BD                     _Lcd_Cmd:
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3341                           ;Lcd_Cmd@a stored from wreg
  3342  07BD  00F5               	movwf	Lcd_Cmd@a
  3343  07BE                     l2044:
  3344                           
  3345                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  3346  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3347  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3348  07C0  1009               	bcf	9,0	;volatile
  3349  07C1                     l2046:
  3350                           
  3351                           ;LCD.c: 25:  Lcd_Port(a);
  3352  07C1  0875               	movf	Lcd_Cmd@a,w
  3353  07C2  120A  158A  2767  120A  118A  	fcall	_Lcd_Port
  3354  07C7                     l2048:
  3355                           
  3356                           ;LCD.c: 26:  RE1 = 1;
  3357  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3358  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3359  07C9  1489               	bsf	9,1	;volatile
  3360  07CA                     l2050:
  3361                           
  3362                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3363  07CA  300B               	movlw	11
  3364  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3365  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3366  07CD  00C1               	movwf	??_Lcd_Cmd+1
  3367  07CE  3061               	movlw	97
  3368  07CF  00C0               	movwf	??_Lcd_Cmd
  3369  07D0                     u2037:
  3370  07D0  0BC0               	decfsz	??_Lcd_Cmd,f
  3371  07D1  2FD0               	goto	u2037
  3372  07D2  0BC1               	decfsz	??_Lcd_Cmd+1,f
  3373  07D3  2FD0               	goto	u2037
  3374  07D4  2FD5               	nop2
  3375  07D5                     l2052:
  3376                           
  3377                           ;LCD.c: 28:         RE1 = 0;
  3378  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  3379  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  3380  07D7  1089               	bcf	9,1	;volatile
  3381  07D8                     l164:
  3382  07D8  0008               	return
  3383  07D9                     __end_of_Lcd_Cmd:
  3384                           
  3385                           	psect	text16
  3386  0F67                     __ptext16:	
  3387 ;; *************** function _Lcd_Port *****************
  3388 ;; Defined at:
  3389 ;;		line 17 in file "LCD.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  a               1    wreg     unsigned char 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  a               1    4[COMMON] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         1       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         1       0       0       0       0
  3407 ;;Total ram usage:        1 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_Lcd_Cmd
  3414 ;;		_Lcd_Init
  3415 ;;		_Lcd_Write_Char
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _Lcd_Port
  3421  0F67                     _Lcd_Port:
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _Lcd_Port: [wreg]
  3425                           ;Lcd_Port@a stored from wreg
  3426  0F67  00F4               	movwf	Lcd_Port@a
  3427  0F68                     l1984:
  3428                           
  3429                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  3430  0F68  0874               	movf	Lcd_Port@a,w
  3431  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  3433  0F6B  0088               	movwf	8	;volatile
  3434  0F6C                     l161:
  3435  0F6C  0008               	return
  3436  0F6D                     __end_of_Lcd_Port:
  3437                           
  3438                           	psect	text17
  3439  07F5                     __ptext17:	
  3440 ;; *************** function _I2C_Master_Write *****************
  3441 ;; Defined at:
  3442 ;;		line 65 in file "I2C.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  d               2    4[COMMON] unsigned int 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         2       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         2       0       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		_I2C_Master_Wait
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _I2C_Master_Write
  3472  07F5                     _I2C_Master_Write:
  3473  07F5                     l2244:	
  3474                           ;incstack = 0
  3475                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3476                           
  3477                           
  3478                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3479  07F5  120A  158A  2794  120A  118A  	fcall	_I2C_Master_Wait
  3480  07FA                     l2246:
  3481                           
  3482                           ;I2C.c: 68:     SSPBUF = d;
  3483  07FA  0874               	movf	I2C_Master_Write@d,w
  3484  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  3485  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  3486  07FD  0093               	movwf	19	;volatile
  3487  07FE                     l232:
  3488  07FE  0008               	return
  3489  07FF                     __end_of_I2C_Master_Write:
  3490                           
  3491                           	psect	text18
  3492  0F7F                     __ptext18:	
  3493 ;; *************** function _I2C_Master_Stop *****************
  3494 ;; Defined at:
  3495 ;;		line 55 in file "I2C.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0
  3512 ;;      Totals:         0       0       0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    2
  3516 ;; This function calls:
  3517 ;;		_I2C_Master_Wait
  3518 ;; This function is called by:
  3519 ;;		_main
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _I2C_Master_Stop
  3525  0F7F                     _I2C_Master_Stop:
  3526  0F7F                     l2248:	
  3527                           ;incstack = 0
  3528                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3529                           
  3530                           
  3531                           ;I2C.c: 57:     I2C_Master_Wait();
  3532  0F7F  120A  158A  2794  120A  158A  	fcall	_I2C_Master_Wait
  3533  0F84                     l2250:
  3534                           
  3535                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3536  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3537  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  3538  0F86  1511               	bsf	17,2	;volatile
  3539  0F87                     l229:
  3540  0F87  0008               	return
  3541  0F88                     __end_of_I2C_Master_Stop:
  3542                           
  3543                           	psect	text19
  3544  0F76                     __ptext19:	
  3545 ;; *************** function _I2C_Master_Start *****************
  3546 ;; Defined at:
  3547 ;;		line 39 in file "I2C.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		_I2C_Master_Wait
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _I2C_Master_Start
  3577  0F76                     _I2C_Master_Start:
  3578  0F76                     l2240:	
  3579                           ;incstack = 0
  3580                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3581                           
  3582                           
  3583                           ;I2C.c: 41:     I2C_Master_Wait();
  3584  0F76  120A  158A  2794  120A  158A  	fcall	_I2C_Master_Wait
  3585  0F7B                     l2242:
  3586                           
  3587                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3588  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3589  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3590  0F7D  1411               	bsf	17,0	;volatile
  3591  0F7E                     l223:
  3592  0F7E  0008               	return
  3593  0F7F                     __end_of_I2C_Master_Start:
  3594                           
  3595                           	psect	text20
  3596  0F6D                     __ptext20:	
  3597 ;; *************** function _I2C_Master_RepeatedStart *****************
  3598 ;; Defined at:
  3599 ;;		line 47 in file "I2C.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    2
  3620 ;; This function calls:
  3621 ;;		_I2C_Master_Wait
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function _I2C_Master_RepeatedStart
  3629  0F6D                     _I2C_Master_RepeatedStart:
  3630  0F6D                     l2252:	
  3631                           ;incstack = 0
  3632                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3633                           
  3634                           
  3635                           ;I2C.c: 49:     I2C_Master_Wait();
  3636  0F6D  120A  158A  2794  120A  158A  	fcall	_I2C_Master_Wait
  3637  0F72                     l2254:
  3638                           
  3639                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3640  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  3642  0F74  1491               	bsf	17,1	;volatile
  3643  0F75                     l226:
  3644  0F75  0008               	return
  3645  0F76                     __end_of_I2C_Master_RepeatedStart:
  3646                           
  3647                           	psect	text21
  3648  0700                     __ptext21:	
  3649 ;; *************** function _I2C_Master_Read *****************
  3650 ;; Defined at:
  3651 ;;		line 74 in file "I2C.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  a               2    4[COMMON] unsigned short 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  temp            2    2[BANK0 ] unsigned short 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2    4[COMMON] unsigned short 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         2       0       0       0       0
  3666 ;;      Locals:         0       2       0       0       0
  3667 ;;      Temps:          0       2       0       0       0
  3668 ;;      Totals:         2       4       0       0       0
  3669 ;;Total ram usage:        6 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    2
  3672 ;; This function calls:
  3673 ;;		_I2C_Master_Wait
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           
  3680                           ;psect for function _I2C_Master_Read
  3681  0700                     _I2C_Master_Read:
  3682  0700                     l2256:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3685                           
  3686                           
  3687                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3688  0700  120A  158A  2794  120A  118A  	fcall	_I2C_Master_Wait
  3689  0705                     l2258:
  3690                           
  3691                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3692  0705  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0706  1303               	bcf	3,6	;RP1=0, select bank1
  3694  0707  1591               	bsf	17,3	;volatile
  3695                           
  3696                           ;I2C.c: 79:     I2C_Master_Wait();
  3697  0708  120A  158A  2794  120A  118A  	fcall	_I2C_Master_Wait
  3698  070D                     l2260:
  3699                           
  3700                           ;I2C.c: 80:     temp = SSPBUF;
  3701  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3702  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3703  070F  0813               	movf	19,w	;volatile
  3704  0710  00C0               	movwf	??_I2C_Master_Read
  3705  0711  01C1               	clrf	??_I2C_Master_Read+1
  3706  0712  0840               	movf	??_I2C_Master_Read,w
  3707  0713  00C2               	movwf	I2C_Master_Read@temp
  3708  0714  0841               	movf	??_I2C_Master_Read+1,w
  3709  0715  00C3               	movwf	I2C_Master_Read@temp+1
  3710  0716                     l2262:
  3711                           
  3712                           ;I2C.c: 81:     I2C_Master_Wait();
  3713  0716  120A  158A  2794  120A  118A  	fcall	_I2C_Master_Wait
  3714  071B                     l2264:
  3715                           
  3716                           ;I2C.c: 82:     if(a == 1){
  3717  071B  0374               	decf	I2C_Master_Read@a,w
  3718  071C  0475               	iorwf	I2C_Master_Read@a+1,w
  3719  071D  1D03               	btfss	3,2
  3720  071E  2F20               	goto	u1821
  3721  071F  2F21               	goto	u1820
  3722  0720                     u1821:
  3723  0720  2F25               	goto	l235
  3724  0721                     u1820:
  3725  0721                     l2266:
  3726                           
  3727                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3728  0721  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0722  1303               	bcf	3,6	;RP1=0, select bank1
  3730  0723  1291               	bcf	17,5	;volatile
  3731                           
  3732                           ;I2C.c: 84:     }else{
  3733  0724  2F28               	goto	l236
  3734  0725                     l235:
  3735                           
  3736                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3737  0725  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0726  1303               	bcf	3,6	;RP1=0, select bank1
  3739  0727  1691               	bsf	17,5	;volatile
  3740  0728                     l236:	
  3741                           ;I2C.c: 86:     }
  3742                           
  3743                           
  3744                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3745  0728  1611               	bsf	17,4	;volatile
  3746  0729                     l2268:
  3747                           
  3748                           ;I2C.c: 88:     return temp;
  3749  0729  1283               	bcf	3,5	;RP0=0, select bank0
  3750  072A  1303               	bcf	3,6	;RP1=0, select bank0
  3751  072B  0843               	movf	I2C_Master_Read@temp+1,w
  3752  072C  00F5               	movwf	?_I2C_Master_Read+1
  3753  072D  0842               	movf	I2C_Master_Read@temp,w
  3754  072E  00F4               	movwf	?_I2C_Master_Read
  3755  072F                     l237:
  3756  072F  0008               	return
  3757  0730                     __end_of_I2C_Master_Read:
  3758                           
  3759                           	psect	text22
  3760  0F94                     __ptext22:	
  3761 ;; *************** function _I2C_Master_Wait *****************
  3762 ;; Defined at:
  3763 ;;		line 32 in file "I2C.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_I2C_Master_Start
  3788 ;;		_I2C_Master_RepeatedStart
  3789 ;;		_I2C_Master_Stop
  3790 ;;		_I2C_Master_Write
  3791 ;;		_I2C_Master_Read
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           
  3796                           ;psect for function _I2C_Master_Wait
  3797  0F94                     _I2C_Master_Wait:
  3798  0F94                     l2064:	
  3799                           ;incstack = 0
  3800                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3801                           
  3802  0F94                     l217:	
  3803                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3804                           
  3805  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  3806  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  3807  0F96  1914               	btfsc	20,2	;volatile
  3808  0F97  2F99               	goto	u1511
  3809  0F98  2F9A               	goto	u1510
  3810  0F99                     u1511:
  3811  0F99  2F94               	goto	l217
  3812  0F9A                     u1510:
  3813  0F9A                     l2066:
  3814  0F9A  0811               	movf	17,w	;volatile
  3815  0F9B  391F               	andlw	31
  3816  0F9C  1D03               	btfss	3,2
  3817  0F9D  2F9F               	goto	u1521
  3818  0F9E  2FA0               	goto	u1520
  3819  0F9F                     u1521:
  3820  0F9F  2F94               	goto	l217
  3821  0FA0                     u1520:
  3822  0FA0                     l220:
  3823  0FA0  0008               	return
  3824  0FA1                     __end_of_I2C_Master_Wait:
  3825                           
  3826                           	psect	text23
  3827  0311                     __ptext23:	
  3828 ;; *************** function _DS3231_time *****************
  3829 ;; Defined at:
  3830 ;;		line 225 in file "main.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       2       0       0       0
  3847 ;;      Totals:         0       2       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    3
  3851 ;; This function calls:
  3852 ;;		___awdiv
  3853 ;;		___awmod
  3854 ;;		_bcd_to_decimal
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function _DS3231_time
  3862  0311                     _DS3231_time:
  3863  0311                     l2272:	
  3864                           ;incstack = 0
  3865                           ; Regs used in _DS3231_time: [wreg+status,2+status,0+pclath+cstack]
  3866                           
  3867                           
  3868                           ;main.c: 229:   sec = bcd_to_decimal(sec);
  3869  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0313  0864               	movf	_sec,w
  3872  0314  120A  118A  27D9  120A  118A  	fcall	_bcd_to_decimal
  3873  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3874  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3875  031B  00C8               	movwf	??_DS3231_time
  3876  031C  01C9               	clrf	??_DS3231_time+1
  3877  031D  0848               	movf	??_DS3231_time,w
  3878  031E  00E4               	movwf	_sec
  3879  031F  0849               	movf	??_DS3231_time+1,w
  3880  0320  00E5               	movwf	_sec+1
  3881                           
  3882                           ;main.c: 230:   min = bcd_to_decimal(min);
  3883  0321  0876               	movf	_min,w
  3884  0322  120A  118A  27D9  120A  118A  	fcall	_bcd_to_decimal
  3885  0327  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0328  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0329  00C8               	movwf	??_DS3231_time
  3888  032A  01C9               	clrf	??_DS3231_time+1
  3889  032B  0848               	movf	??_DS3231_time,w
  3890  032C  00F6               	movwf	_min
  3891  032D  0849               	movf	??_DS3231_time+1,w
  3892  032E  00F7               	movwf	_min+1
  3893                           
  3894                           ;main.c: 231:   hour = bcd_to_decimal(hour);
  3895  032F  0862               	movf	_hour,w
  3896  0330  120A  118A  27D9  120A  118A  	fcall	_bcd_to_decimal
  3897  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0337  00C8               	movwf	??_DS3231_time
  3900  0338  01C9               	clrf	??_DS3231_time+1
  3901  0339  0848               	movf	??_DS3231_time,w
  3902  033A  00E2               	movwf	_hour
  3903  033B  0849               	movf	??_DS3231_time+1,w
  3904  033C  00E3               	movwf	_hour+1
  3905                           
  3906                           ;main.c: 232:   date = bcd_to_decimal(date);
  3907  033D  0860               	movf	_date,w
  3908  033E  120A  118A  27D9  120A  118A  	fcall	_bcd_to_decimal
  3909  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0345  00C8               	movwf	??_DS3231_time
  3912  0346  01C9               	clrf	??_DS3231_time+1
  3913  0347  0848               	movf	??_DS3231_time,w
  3914  0348  00E0               	movwf	_date
  3915  0349  0849               	movf	??_DS3231_time+1,w
  3916  034A  00E1               	movwf	_date+1
  3917                           
  3918                           ;main.c: 233:   month = bcd_to_decimal(month);
  3919  034B  085E               	movf	_month,w
  3920  034C  120A  118A  27D9  120A  118A  	fcall	_bcd_to_decimal
  3921  0351  1283               	bcf	3,5	;RP0=0, select bank0
  3922  0352  1303               	bcf	3,6	;RP1=0, select bank0
  3923  0353  00C8               	movwf	??_DS3231_time
  3924  0354  01C9               	clrf	??_DS3231_time+1
  3925  0355  0848               	movf	??_DS3231_time,w
  3926  0356  00DE               	movwf	_month
  3927  0357  0849               	movf	??_DS3231_time+1,w
  3928  0358  00DF               	movwf	_month+1
  3929                           
  3930                           ;main.c: 234:   year = bcd_to_decimal(year);
  3931  0359  085C               	movf	_year,w
  3932  035A  120A  118A  27D9  120A  118A  	fcall	_bcd_to_decimal
  3933  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0361  00C8               	movwf	??_DS3231_time
  3936  0362  01C9               	clrf	??_DS3231_time+1
  3937  0363  0848               	movf	??_DS3231_time,w
  3938  0364  00DC               	movwf	_year
  3939  0365  0849               	movf	??_DS3231_time+1,w
  3940  0366  00DD               	movwf	_year+1
  3941                           
  3942                           ;main.c: 238:   time[6] = hour / 10 + '0';
  3943  0367  300A               	movlw	10
  3944  0368  00C0               	movwf	___awdiv@divisor
  3945  0369  3000               	movlw	0
  3946  036A  00C1               	movwf	___awdiv@divisor+1
  3947  036B  0863               	movf	_hour+1,w
  3948  036C  00C3               	movwf	___awdiv@dividend+1
  3949  036D  0862               	movf	_hour,w
  3950  036E  00C2               	movwf	___awdiv@dividend
  3951  036F  120A  118A  2458  120A  118A  	fcall	___awdiv
  3952  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0376  0840               	movf	?___awdiv,w
  3955  0377  3E30               	addlw	48
  3956  0378  00C8               	movwf	??_DS3231_time
  3957  0379  0848               	movf	??_DS3231_time,w
  3958  037A  00B7               	movwf	_time+6
  3959                           
  3960                           ;main.c: 239:   time[7] = hour % 10 + '0';
  3961  037B  300A               	movlw	10
  3962  037C  00C0               	movwf	___awmod@divisor
  3963  037D  3000               	movlw	0
  3964  037E  00C1               	movwf	___awmod@divisor+1
  3965  037F  0863               	movf	_hour+1,w
  3966  0380  00C3               	movwf	___awmod@dividend+1
  3967  0381  0862               	movf	_hour,w
  3968  0382  00C2               	movwf	___awmod@dividend
  3969  0383  120A  118A  2529  120A  118A  	fcall	___awmod
  3970  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0389  1303               	bcf	3,6	;RP1=0, select bank0
  3972  038A  0840               	movf	?___awmod,w
  3973  038B  3E30               	addlw	48
  3974  038C  00C8               	movwf	??_DS3231_time
  3975  038D  0848               	movf	??_DS3231_time,w
  3976  038E  00B8               	movwf	_time+7
  3977                           
  3978                           ;main.c: 240:   time[9] = min / 10 + '0';
  3979  038F  300A               	movlw	10
  3980  0390  00C0               	movwf	___awdiv@divisor
  3981  0391  3000               	movlw	0
  3982  0392  00C1               	movwf	___awdiv@divisor+1
  3983  0393  0877               	movf	_min+1,w
  3984  0394  00C3               	movwf	___awdiv@dividend+1
  3985  0395  0876               	movf	_min,w
  3986  0396  00C2               	movwf	___awdiv@dividend
  3987  0397  120A  118A  2458  120A  118A  	fcall	___awdiv
  3988  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3989  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3990  039E  0840               	movf	?___awdiv,w
  3991  039F  3E30               	addlw	48
  3992  03A0  00C8               	movwf	??_DS3231_time
  3993  03A1  0848               	movf	??_DS3231_time,w
  3994  03A2  00BA               	movwf	_time+9
  3995                           
  3996                           ;main.c: 241:   time[10] = min % 10 + '0';
  3997  03A3  300A               	movlw	10
  3998  03A4  00C0               	movwf	___awmod@divisor
  3999  03A5  3000               	movlw	0
  4000  03A6  00C1               	movwf	___awmod@divisor+1
  4001  03A7  0877               	movf	_min+1,w
  4002  03A8  00C3               	movwf	___awmod@dividend+1
  4003  03A9  0876               	movf	_min,w
  4004  03AA  00C2               	movwf	___awmod@dividend
  4005  03AB  120A  118A  2529  120A  118A  	fcall	___awmod
  4006  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4007  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4008  03B2  0840               	movf	?___awmod,w
  4009  03B3  3E30               	addlw	48
  4010  03B4  00C8               	movwf	??_DS3231_time
  4011  03B5  0848               	movf	??_DS3231_time,w
  4012  03B6  00BB               	movwf	_time+10
  4013                           
  4014                           ;main.c: 242:   time[12] = sec / 10 + '0';
  4015  03B7  300A               	movlw	10
  4016  03B8  00C0               	movwf	___awdiv@divisor
  4017  03B9  3000               	movlw	0
  4018  03BA  00C1               	movwf	___awdiv@divisor+1
  4019  03BB  0865               	movf	_sec+1,w
  4020  03BC  00C3               	movwf	___awdiv@dividend+1
  4021  03BD  0864               	movf	_sec,w
  4022  03BE  00C2               	movwf	___awdiv@dividend
  4023  03BF  120A  118A  2458  120A  118A  	fcall	___awdiv
  4024  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  4025  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  4026  03C6  0840               	movf	?___awdiv,w
  4027  03C7  3E30               	addlw	48
  4028  03C8  00C8               	movwf	??_DS3231_time
  4029  03C9  0848               	movf	??_DS3231_time,w
  4030  03CA  00BD               	movwf	_time+12
  4031                           
  4032                           ;main.c: 243:   time[13] = sec % 10 + '0';
  4033  03CB  300A               	movlw	10
  4034  03CC  00C0               	movwf	___awmod@divisor
  4035  03CD  3000               	movlw	0
  4036  03CE  00C1               	movwf	___awmod@divisor+1
  4037  03CF  0865               	movf	_sec+1,w
  4038  03D0  00C3               	movwf	___awmod@dividend+1
  4039  03D1  0864               	movf	_sec,w
  4040  03D2  00C2               	movwf	___awmod@dividend
  4041  03D3  120A  118A  2529  120A  118A  	fcall	___awmod
  4042  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  4043  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  4044  03DA  0840               	movf	?___awmod,w
  4045  03DB  3E30               	addlw	48
  4046  03DC  00C8               	movwf	??_DS3231_time
  4047  03DD  0848               	movf	??_DS3231_time,w
  4048  03DE  00BE               	movwf	_time+13
  4049                           
  4050                           ;main.c: 245:   date1[6] = date / 10 + '0';
  4051  03DF  300A               	movlw	10
  4052  03E0  00C0               	movwf	___awdiv@divisor
  4053  03E1  3000               	movlw	0
  4054  03E2  00C1               	movwf	___awdiv@divisor+1
  4055  03E3  0861               	movf	_date+1,w
  4056  03E4  00C3               	movwf	___awdiv@dividend+1
  4057  03E5  0860               	movf	_date,w
  4058  03E6  00C2               	movwf	___awdiv@dividend
  4059  03E7  120A  118A  2458  120A  118A  	fcall	___awdiv
  4060  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  4061  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  4062  03EE  0840               	movf	?___awdiv,w
  4063  03EF  3E30               	addlw	48
  4064  03F0  00C8               	movwf	??_DS3231_time
  4065  03F1  0848               	movf	??_DS3231_time,w
  4066  03F2  00A6               	movwf	_date1+6
  4067                           
  4068                           ;main.c: 246:   date1[7] = date % 10 + '0';
  4069  03F3  300A               	movlw	10
  4070  03F4  00C0               	movwf	___awmod@divisor
  4071  03F5  3000               	movlw	0
  4072  03F6  00C1               	movwf	___awmod@divisor+1
  4073  03F7  0861               	movf	_date+1,w
  4074  03F8  00C3               	movwf	___awmod@dividend+1
  4075  03F9  0860               	movf	_date,w
  4076  03FA  00C2               	movwf	___awmod@dividend
  4077  03FB  120A  118A  2529  120A  118A  	fcall	___awmod
  4078  0400  1283               	bcf	3,5	;RP0=0, select bank0
  4079  0401  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0402  0840               	movf	?___awmod,w
  4081  0403  3E30               	addlw	48
  4082  0404  00C8               	movwf	??_DS3231_time
  4083  0405  0848               	movf	??_DS3231_time,w
  4084  0406  00A7               	movwf	_date1+7
  4085                           
  4086                           ;main.c: 247:   date1[9] = month / 10 + '0';
  4087  0407  300A               	movlw	10
  4088  0408  00C0               	movwf	___awdiv@divisor
  4089  0409  3000               	movlw	0
  4090  040A  00C1               	movwf	___awdiv@divisor+1
  4091  040B  085F               	movf	_month+1,w
  4092  040C  00C3               	movwf	___awdiv@dividend+1
  4093  040D  085E               	movf	_month,w
  4094  040E  00C2               	movwf	___awdiv@dividend
  4095  040F  120A  118A  2458  120A  118A  	fcall	___awdiv
  4096  0414  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0415  1303               	bcf	3,6	;RP1=0, select bank0
  4098  0416  0840               	movf	?___awdiv,w
  4099  0417  3E30               	addlw	48
  4100  0418  00C8               	movwf	??_DS3231_time
  4101  0419  0848               	movf	??_DS3231_time,w
  4102  041A  00A9               	movwf	_date1+9
  4103                           
  4104                           ;main.c: 248:   date1[10] = month % 10 + '0';
  4105  041B  300A               	movlw	10
  4106  041C  00C0               	movwf	___awmod@divisor
  4107  041D  3000               	movlw	0
  4108  041E  00C1               	movwf	___awmod@divisor+1
  4109  041F  085F               	movf	_month+1,w
  4110  0420  00C3               	movwf	___awmod@dividend+1
  4111  0421  085E               	movf	_month,w
  4112  0422  00C2               	movwf	___awmod@dividend
  4113  0423  120A  118A  2529  120A  118A  	fcall	___awmod
  4114  0428  1283               	bcf	3,5	;RP0=0, select bank0
  4115  0429  1303               	bcf	3,6	;RP1=0, select bank0
  4116  042A  0840               	movf	?___awmod,w
  4117  042B  3E30               	addlw	48
  4118  042C  00C8               	movwf	??_DS3231_time
  4119  042D  0848               	movf	??_DS3231_time,w
  4120  042E  00AA               	movwf	_date1+10
  4121                           
  4122                           ;main.c: 249:   date1[14] = year / 10 + '0';
  4123  042F  300A               	movlw	10
  4124  0430  00C0               	movwf	___awdiv@divisor
  4125  0431  3000               	movlw	0
  4126  0432  00C1               	movwf	___awdiv@divisor+1
  4127  0433  085D               	movf	_year+1,w
  4128  0434  00C3               	movwf	___awdiv@dividend+1
  4129  0435  085C               	movf	_year,w
  4130  0436  00C2               	movwf	___awdiv@dividend
  4131  0437  120A  118A  2458  120A  118A  	fcall	___awdiv
  4132  043C  1283               	bcf	3,5	;RP0=0, select bank0
  4133  043D  1303               	bcf	3,6	;RP1=0, select bank0
  4134  043E  0840               	movf	?___awdiv,w
  4135  043F  3E30               	addlw	48
  4136  0440  00C8               	movwf	??_DS3231_time
  4137  0441  0848               	movf	??_DS3231_time,w
  4138  0442  00AE               	movwf	_date1+14
  4139                           
  4140                           ;main.c: 250:   date1[15] = year % 10 + '0';
  4141  0443  300A               	movlw	10
  4142  0444  00C0               	movwf	___awmod@divisor
  4143  0445  3000               	movlw	0
  4144  0446  00C1               	movwf	___awmod@divisor+1
  4145  0447  085D               	movf	_year+1,w
  4146  0448  00C3               	movwf	___awmod@dividend+1
  4147  0449  085C               	movf	_year,w
  4148  044A  00C2               	movwf	___awmod@dividend
  4149  044B  120A  118A  2529  120A  118A  	fcall	___awmod
  4150  0450  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0451  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0452  0840               	movf	?___awmod,w
  4153  0453  3E30               	addlw	48
  4154  0454  00C8               	movwf	??_DS3231_time
  4155  0455  0848               	movf	??_DS3231_time,w
  4156  0456  00AF               	movwf	_date1+15
  4157  0457                     l124:
  4158  0457  0008               	return
  4159  0458                     __end_of_DS3231_time:
  4160                           
  4161                           	psect	text24
  4162  07D9                     __ptext24:	
  4163 ;; *************** function _bcd_to_decimal *****************
  4164 ;; Defined at:
  4165 ;;		line 221 in file "main.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  number          1    wreg     unsigned char 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  number          1    5[BANK0 ] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      unsigned char 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         0       0       0       0       0
  4180 ;;      Locals:         0       1       0       0       0
  4181 ;;      Temps:          0       3       0       0       0
  4182 ;;      Totals:         0       4       0       0       0
  4183 ;;Total ram usage:        4 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    2
  4186 ;; This function calls:
  4187 ;;		___bmul
  4188 ;; This function is called by:
  4189 ;;		_DS3231_time
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _bcd_to_decimal
  4195  07D9                     _bcd_to_decimal:
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4199                           ;bcd_to_decimal@number stored from wreg
  4200  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  4201  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  4202  07DB  00C5               	movwf	bcd_to_decimal@number
  4203  07DC                     l2040:
  4204                           
  4205                           ;main.c: 222:   return((number >> 4) * 10 + (number & 0x0F));
  4206  07DC  300F               	movlw	15
  4207  07DD  0545               	andwf	bcd_to_decimal@number,w
  4208  07DE  00C2               	movwf	??_bcd_to_decimal
  4209  07DF  300A               	movlw	10
  4210  07E0  00C3               	movwf	??_bcd_to_decimal+1
  4211  07E1  0843               	movf	??_bcd_to_decimal+1,w
  4212  07E2  00F4               	movwf	___bmul@multiplicand
  4213  07E3  0845               	movf	bcd_to_decimal@number,w
  4214  07E4  00C4               	movwf	??_bcd_to_decimal+2
  4215  07E5  3004               	movlw	4
  4216  07E6                     u1505:
  4217  07E6  1003               	clrc
  4218  07E7  0CC4               	rrf	??_bcd_to_decimal+2,f
  4219  07E8  3EFF               	addlw	-1
  4220  07E9  1D03               	skipz
  4221  07EA  2FE6               	goto	u1505
  4222  07EB  0844               	movf	??_bcd_to_decimal+2,w
  4223  07EC  120A  158A  27E9  120A  118A  	fcall	___bmul
  4224  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4225  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  4226  07F3  0742               	addwf	??_bcd_to_decimal,w
  4227  07F4                     l121:
  4228  07F4  0008               	return
  4229  07F5                     __end_of_bcd_to_decimal:
  4230                           
  4231                           	psect	text25
  4232  0FE9                     __ptext25:	
  4233 ;; *************** function ___bmul *****************
  4234 ;; Defined at:
  4235 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  multiplier      1    wreg     unsigned char 
  4238 ;;  multiplicand    1    4[COMMON] unsigned char 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  multiplier      1    1[BANK0 ] unsigned char 
  4241 ;;  product         1    0[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      unsigned char 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         1       0       0       0       0
  4252 ;;      Locals:         0       2       0       0       0
  4253 ;;      Temps:          1       0       0       0       0
  4254 ;;      Totals:         2       2       0       0       0
  4255 ;;Total ram usage:        4 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_bcd_to_decimal
  4262 ;;		_sprintf
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function ___bmul
  4268  0FE9                     ___bmul:
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4272                           ;___bmul@multiplier stored from wreg
  4273  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0FEB  00C1               	movwf	___bmul@multiplier
  4276  0FEC                     l1986:
  4277  0FEC  01C0               	clrf	___bmul@product
  4278  0FED                     l1988:
  4279  0FED  1C41               	btfss	___bmul@multiplier,0
  4280  0FEE  2FF0               	goto	u1391
  4281  0FEF  2FF1               	goto	u1390
  4282  0FF0                     u1391:
  4283  0FF0  2FF5               	goto	l1992
  4284  0FF1                     u1390:
  4285  0FF1                     l1990:
  4286  0FF1  0874               	movf	___bmul@multiplicand,w
  4287  0FF2  00F5               	movwf	??___bmul
  4288  0FF3  0875               	movf	??___bmul,w
  4289  0FF4  07C0               	addwf	___bmul@product,f
  4290  0FF5                     l1992:
  4291  0FF5  1003               	clrc
  4292  0FF6  0DF4               	rlf	___bmul@multiplicand,f
  4293  0FF7                     l1994:
  4294  0FF7  1003               	clrc
  4295  0FF8  0CC1               	rrf	___bmul@multiplier,f
  4296  0FF9  0841               	movf	___bmul@multiplier,w
  4297  0FFA  1D03               	btfss	3,2
  4298  0FFB  2FFD               	goto	u1401
  4299  0FFC  2FFE               	goto	u1400
  4300  0FFD                     u1401:
  4301  0FFD  2FED               	goto	l1988
  4302  0FFE                     u1400:
  4303  0FFE                     l1996:
  4304  0FFE  0840               	movf	___bmul@product,w
  4305  0FFF                     l391:
  4306  0FFF  0008               	return
  4307  1000                     __end_of___bmul:
  4308                           
  4309                           	psect	text26
  4310  0529                     __ptext26:	
  4311 ;; *************** function ___awmod *****************
  4312 ;; Defined at:
  4313 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  divisor         2    0[BANK0 ] int 
  4316 ;;  dividend        2    2[BANK0 ] int 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  sign            1    5[BANK0 ] unsigned char 
  4319 ;;  counter         1    4[BANK0 ] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2    0[BANK0 ] int 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4329 ;;      Params:         0       4       0       0       0
  4330 ;;      Locals:         0       2       0       0       0
  4331 ;;      Temps:          1       0       0       0       0
  4332 ;;      Totals:         1       6       0       0       0
  4333 ;;Total ram usage:        7 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_DS3231_time
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function ___awmod
  4345  0529                     ___awmod:
  4346  0529                     l2112:	
  4347                           ;incstack = 0
  4348                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4349                           
  4350  0529  1283               	bcf	3,5	;RP0=0, select bank0
  4351  052A  1303               	bcf	3,6	;RP1=0, select bank0
  4352  052B  01C5               	clrf	___awmod@sign
  4353  052C                     l2114:
  4354  052C  1FC3               	btfss	___awmod@dividend+1,7
  4355  052D  2D2F               	goto	u1631
  4356  052E  2D30               	goto	u1630
  4357  052F                     u1631:
  4358  052F  2D37               	goto	l2120
  4359  0530                     u1630:
  4360  0530                     l2116:
  4361  0530  09C2               	comf	___awmod@dividend,f
  4362  0531  09C3               	comf	___awmod@dividend+1,f
  4363  0532  0AC2               	incf	___awmod@dividend,f
  4364  0533  1903               	skipnz
  4365  0534  0AC3               	incf	___awmod@dividend+1,f
  4366  0535                     l2118:
  4367  0535  01C5               	clrf	___awmod@sign
  4368  0536  0AC5               	incf	___awmod@sign,f
  4369  0537                     l2120:
  4370  0537  1FC1               	btfss	___awmod@divisor+1,7
  4371  0538  2D3A               	goto	u1641
  4372  0539  2D3B               	goto	u1640
  4373  053A                     u1641:
  4374  053A  2D40               	goto	l2124
  4375  053B                     u1640:
  4376  053B                     l2122:
  4377  053B  09C0               	comf	___awmod@divisor,f
  4378  053C  09C1               	comf	___awmod@divisor+1,f
  4379  053D  0AC0               	incf	___awmod@divisor,f
  4380  053E  1903               	skipnz
  4381  053F  0AC1               	incf	___awmod@divisor+1,f
  4382  0540                     l2124:
  4383  0540  0840               	movf	___awmod@divisor,w
  4384  0541  0441               	iorwf	___awmod@divisor+1,w
  4385  0542  1903               	btfsc	3,2
  4386  0543  2D45               	goto	u1651
  4387  0544  2D46               	goto	u1650
  4388  0545                     u1651:
  4389  0545  2D75               	goto	l2142
  4390  0546                     u1650:
  4391  0546                     l2126:
  4392  0546  01C4               	clrf	___awmod@counter
  4393  0547  0AC4               	incf	___awmod@counter,f
  4394  0548  2D54               	goto	l2132
  4395  0549                     l2128:
  4396  0549  3001               	movlw	1
  4397  054A                     u1665:
  4398  054A  1003               	clrc
  4399  054B  0DC0               	rlf	___awmod@divisor,f
  4400  054C  0DC1               	rlf	___awmod@divisor+1,f
  4401  054D  3EFF               	addlw	-1
  4402  054E  1D03               	skipz
  4403  054F  2D4A               	goto	u1665
  4404  0550                     l2130:
  4405  0550  3001               	movlw	1
  4406  0551  00F4               	movwf	??___awmod
  4407  0552  0874               	movf	??___awmod,w
  4408  0553  07C4               	addwf	___awmod@counter,f
  4409  0554                     l2132:
  4410  0554  1FC1               	btfss	___awmod@divisor+1,7
  4411  0555  2D57               	goto	u1671
  4412  0556  2D58               	goto	u1670
  4413  0557                     u1671:
  4414  0557  2D49               	goto	l2128
  4415  0558                     u1670:
  4416  0558                     l2134:
  4417  0558  0841               	movf	___awmod@divisor+1,w
  4418  0559  0243               	subwf	___awmod@dividend+1,w
  4419  055A  1D03               	skipz
  4420  055B  2D5E               	goto	u1685
  4421  055C  0840               	movf	___awmod@divisor,w
  4422  055D  0242               	subwf	___awmod@dividend,w
  4423  055E                     u1685:
  4424  055E  1C03               	skipc
  4425  055F  2D61               	goto	u1681
  4426  0560  2D62               	goto	u1680
  4427  0561                     u1681:
  4428  0561  2D68               	goto	l2138
  4429  0562                     u1680:
  4430  0562                     l2136:
  4431  0562  0840               	movf	___awmod@divisor,w
  4432  0563  02C2               	subwf	___awmod@dividend,f
  4433  0564  0841               	movf	___awmod@divisor+1,w
  4434  0565  1C03               	skipc
  4435  0566  03C3               	decf	___awmod@dividend+1,f
  4436  0567  02C3               	subwf	___awmod@dividend+1,f
  4437  0568                     l2138:
  4438  0568  3001               	movlw	1
  4439  0569                     u1695:
  4440  0569  1003               	clrc
  4441  056A  0CC1               	rrf	___awmod@divisor+1,f
  4442  056B  0CC0               	rrf	___awmod@divisor,f
  4443  056C  3EFF               	addlw	-1
  4444  056D  1D03               	skipz
  4445  056E  2D69               	goto	u1695
  4446  056F                     l2140:
  4447  056F  3001               	movlw	1
  4448  0570  02C4               	subwf	___awmod@counter,f
  4449  0571  1D03               	btfss	3,2
  4450  0572  2D74               	goto	u1701
  4451  0573  2D75               	goto	u1700
  4452  0574                     u1701:
  4453  0574  2D58               	goto	l2134
  4454  0575                     u1700:
  4455  0575                     l2142:
  4456  0575  0845               	movf	___awmod@sign,w
  4457  0576  1903               	btfsc	3,2
  4458  0577  2D79               	goto	u1711
  4459  0578  2D7A               	goto	u1710
  4460  0579                     u1711:
  4461  0579  2D7F               	goto	l2146
  4462  057A                     u1710:
  4463  057A                     l2144:
  4464  057A  09C2               	comf	___awmod@dividend,f
  4465  057B  09C3               	comf	___awmod@dividend+1,f
  4466  057C  0AC2               	incf	___awmod@dividend,f
  4467  057D  1903               	skipnz
  4468  057E  0AC3               	incf	___awmod@dividend+1,f
  4469  057F                     l2146:
  4470  057F  0843               	movf	___awmod@dividend+1,w
  4471  0580  00C1               	movwf	?___awmod+1
  4472  0581  0842               	movf	___awmod@dividend,w
  4473  0582  00C0               	movwf	?___awmod
  4474  0583                     l531:
  4475  0583  0008               	return
  4476  0584                     __end_of___awmod:
  4477                           
  4478                           	psect	text27
  4479  0458                     __ptext27:	
  4480 ;; *************** function ___awdiv *****************
  4481 ;; Defined at:
  4482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  divisor         2    0[BANK0 ] int 
  4485 ;;  dividend        2    2[BANK0 ] int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  quotient        2    6[BANK0 ] int 
  4488 ;;  sign            1    5[BANK0 ] unsigned char 
  4489 ;;  counter         1    4[BANK0 ] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    0[BANK0 ] int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4499 ;;      Params:         0       4       0       0       0
  4500 ;;      Locals:         0       4       0       0       0
  4501 ;;      Temps:          1       0       0       0       0
  4502 ;;      Totals:         1       8       0       0       0
  4503 ;;Total ram usage:        9 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_DS3231_time
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function ___awdiv
  4515  0458                     ___awdiv:
  4516  0458                     l2068:	
  4517                           ;incstack = 0
  4518                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4519                           
  4520  0458  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0459  1303               	bcf	3,6	;RP1=0, select bank0
  4522  045A  01C5               	clrf	___awdiv@sign
  4523  045B                     l2070:
  4524  045B  1FC1               	btfss	___awdiv@divisor+1,7
  4525  045C  2C5E               	goto	u1531
  4526  045D  2C5F               	goto	u1530
  4527  045E                     u1531:
  4528  045E  2C66               	goto	l2076
  4529  045F                     u1530:
  4530  045F                     l2072:
  4531  045F  09C0               	comf	___awdiv@divisor,f
  4532  0460  09C1               	comf	___awdiv@divisor+1,f
  4533  0461  0AC0               	incf	___awdiv@divisor,f
  4534  0462  1903               	skipnz
  4535  0463  0AC1               	incf	___awdiv@divisor+1,f
  4536  0464                     l2074:
  4537  0464  01C5               	clrf	___awdiv@sign
  4538  0465  0AC5               	incf	___awdiv@sign,f
  4539  0466                     l2076:
  4540  0466  1FC3               	btfss	___awdiv@dividend+1,7
  4541  0467  2C69               	goto	u1541
  4542  0468  2C6A               	goto	u1540
  4543  0469                     u1541:
  4544  0469  2C73               	goto	l2082
  4545  046A                     u1540:
  4546  046A                     l2078:
  4547  046A  09C2               	comf	___awdiv@dividend,f
  4548  046B  09C3               	comf	___awdiv@dividend+1,f
  4549  046C  0AC2               	incf	___awdiv@dividend,f
  4550  046D  1903               	skipnz
  4551  046E  0AC3               	incf	___awdiv@dividend+1,f
  4552  046F                     l2080:
  4553  046F  3001               	movlw	1
  4554  0470  00F4               	movwf	??___awdiv
  4555  0471  0874               	movf	??___awdiv,w
  4556  0472  06C5               	xorwf	___awdiv@sign,f
  4557  0473                     l2082:
  4558  0473  01C6               	clrf	___awdiv@quotient
  4559  0474  01C7               	clrf	___awdiv@quotient+1
  4560  0475                     l2084:
  4561  0475  0840               	movf	___awdiv@divisor,w
  4562  0476  0441               	iorwf	___awdiv@divisor+1,w
  4563  0477  1903               	btfsc	3,2
  4564  0478  2C7A               	goto	u1551
  4565  0479  2C7B               	goto	u1550
  4566  047A                     u1551:
  4567  047A  2CB2               	goto	l2104
  4568  047B                     u1550:
  4569  047B                     l2086:
  4570  047B  01C4               	clrf	___awdiv@counter
  4571  047C  0AC4               	incf	___awdiv@counter,f
  4572  047D  2C89               	goto	l2092
  4573  047E                     l2088:
  4574  047E  3001               	movlw	1
  4575  047F                     u1565:
  4576  047F  1003               	clrc
  4577  0480  0DC0               	rlf	___awdiv@divisor,f
  4578  0481  0DC1               	rlf	___awdiv@divisor+1,f
  4579  0482  3EFF               	addlw	-1
  4580  0483  1D03               	skipz
  4581  0484  2C7F               	goto	u1565
  4582  0485                     l2090:
  4583  0485  3001               	movlw	1
  4584  0486  00F4               	movwf	??___awdiv
  4585  0487  0874               	movf	??___awdiv,w
  4586  0488  07C4               	addwf	___awdiv@counter,f
  4587  0489                     l2092:
  4588  0489  1FC1               	btfss	___awdiv@divisor+1,7
  4589  048A  2C8C               	goto	u1571
  4590  048B  2C8D               	goto	u1570
  4591  048C                     u1571:
  4592  048C  2C7E               	goto	l2088
  4593  048D                     u1570:
  4594  048D                     l2094:
  4595  048D  3001               	movlw	1
  4596  048E                     u1585:
  4597  048E  1003               	clrc
  4598  048F  0DC6               	rlf	___awdiv@quotient,f
  4599  0490  0DC7               	rlf	___awdiv@quotient+1,f
  4600  0491  3EFF               	addlw	-1
  4601  0492  1D03               	skipz
  4602  0493  2C8E               	goto	u1585
  4603  0494  0841               	movf	___awdiv@divisor+1,w
  4604  0495  0243               	subwf	___awdiv@dividend+1,w
  4605  0496  1D03               	skipz
  4606  0497  2C9A               	goto	u1595
  4607  0498  0840               	movf	___awdiv@divisor,w
  4608  0499  0242               	subwf	___awdiv@dividend,w
  4609  049A                     u1595:
  4610  049A  1C03               	skipc
  4611  049B  2C9D               	goto	u1591
  4612  049C  2C9E               	goto	u1590
  4613  049D                     u1591:
  4614  049D  2CA5               	goto	l2100
  4615  049E                     u1590:
  4616  049E                     l2096:
  4617  049E  0840               	movf	___awdiv@divisor,w
  4618  049F  02C2               	subwf	___awdiv@dividend,f
  4619  04A0  0841               	movf	___awdiv@divisor+1,w
  4620  04A1  1C03               	skipc
  4621  04A2  03C3               	decf	___awdiv@dividend+1,f
  4622  04A3  02C3               	subwf	___awdiv@dividend+1,f
  4623  04A4                     l2098:
  4624  04A4  1446               	bsf	___awdiv@quotient,0
  4625  04A5                     l2100:
  4626  04A5  3001               	movlw	1
  4627  04A6                     u1605:
  4628  04A6  1003               	clrc
  4629  04A7  0CC1               	rrf	___awdiv@divisor+1,f
  4630  04A8  0CC0               	rrf	___awdiv@divisor,f
  4631  04A9  3EFF               	addlw	-1
  4632  04AA  1D03               	skipz
  4633  04AB  2CA6               	goto	u1605
  4634  04AC                     l2102:
  4635  04AC  3001               	movlw	1
  4636  04AD  02C4               	subwf	___awdiv@counter,f
  4637  04AE  1D03               	btfss	3,2
  4638  04AF  2CB1               	goto	u1611
  4639  04B0  2CB2               	goto	u1610
  4640  04B1                     u1611:
  4641  04B1  2C8D               	goto	l2094
  4642  04B2                     u1610:
  4643  04B2                     l2104:
  4644  04B2  0845               	movf	___awdiv@sign,w
  4645  04B3  1903               	btfsc	3,2
  4646  04B4  2CB6               	goto	u1621
  4647  04B5  2CB7               	goto	u1620
  4648  04B6                     u1621:
  4649  04B6  2CBC               	goto	l2108
  4650  04B7                     u1620:
  4651  04B7                     l2106:
  4652  04B7  09C6               	comf	___awdiv@quotient,f
  4653  04B8  09C7               	comf	___awdiv@quotient+1,f
  4654  04B9  0AC6               	incf	___awdiv@quotient,f
  4655  04BA  1903               	skipnz
  4656  04BB  0AC7               	incf	___awdiv@quotient+1,f
  4657  04BC                     l2108:
  4658  04BC  0847               	movf	___awdiv@quotient+1,w
  4659  04BD  00C1               	movwf	?___awdiv+1
  4660  04BE  0846               	movf	___awdiv@quotient,w
  4661  04BF  00C0               	movwf	?___awdiv
  4662  04C0                     l518:
  4663  04C0  0008               	return
  4664  04C1                     __end_of___awdiv:
  4665                           
  4666                           	psect	text28
  4667  0690                     __ptext28:	
  4668 ;; *************** function _ISR *****************
  4669 ;; Defined at:
  4670 ;;		line 79 in file "main.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4684 ;;      Params:         0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0
  4686 ;;      Temps:          4       0       0       0       0
  4687 ;;      Totals:         4       0       0       0       0
  4688 ;;Total ram usage:        4 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		Interrupt level 1
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _ISR
  4699  0690                     _ISR:
  4700  0690                     i1l1296:
  4701                           
  4702                           ;main.c: 80:     if (PIR1bits.RCIF == 1) {
  4703  0690  1283               	bcf	3,5	;RP0=0, select bank0
  4704  0691  1303               	bcf	3,6	;RP1=0, select bank0
  4705  0692  1E8C               	btfss	12,5	;volatile
  4706  0693  2E95               	goto	u67_21
  4707  0694  2E96               	goto	u67_20
  4708  0695                     u67_21:
  4709  0695  2E9E               	goto	i1l1302
  4710  0696                     u67_20:
  4711  0696                     i1l1298:
  4712                           
  4713                           ;main.c: 81:         PIR1bits.RCIF = 0;
  4714  0696  128C               	bcf	12,5	;volatile
  4715  0697                     i1l1300:
  4716                           
  4717                           ;main.c: 82:         led = RCREG;
  4718  0697  081A               	movf	26,w	;volatile
  4719  0698  00F0               	movwf	??_ISR
  4720  0699  01F1               	clrf	??_ISR+1
  4721  069A  0870               	movf	??_ISR,w
  4722  069B  00F8               	movwf	_led
  4723  069C  0871               	movf	??_ISR+1,w
  4724  069D  00F9               	movwf	_led+1
  4725  069E                     i1l1302:
  4726                           
  4727                           ;main.c: 84:     if (led == 0X0A) {
  4728  069E  300A               	movlw	10
  4729  069F  0678               	xorwf	_led,w
  4730  06A0  0479               	iorwf	_led+1,w
  4731  06A1  1D03               	btfss	3,2
  4732  06A2  2EA4               	goto	u68_21
  4733  06A3  2EA5               	goto	u68_20
  4734  06A4                     u68_21:
  4735  06A4  2EA7               	goto	i1l1306
  4736  06A5                     u68_20:
  4737  06A5                     i1l1304:
  4738                           
  4739                           ;main.c: 85:         PORTE = 0;
  4740  06A5  0189               	clrf	9	;volatile
  4741                           
  4742                           ;main.c: 86:     } else if (led == 0X0B) {
  4743  06A6  2EC3               	goto	i1l107
  4744  06A7                     i1l1306:
  4745  06A7  300B               	movlw	11
  4746  06A8  0678               	xorwf	_led,w
  4747  06A9  0479               	iorwf	_led+1,w
  4748  06AA  1D03               	btfss	3,2
  4749  06AB  2EAD               	goto	u69_21
  4750  06AC  2EAE               	goto	u69_20
  4751  06AD                     u69_21:
  4752  06AD  2EB1               	goto	i1l1310
  4753  06AE                     u69_20:
  4754  06AE                     i1l1308:
  4755                           
  4756                           ;main.c: 87:         PORTE = 1;
  4757  06AE  3001               	movlw	1
  4758  06AF  0089               	movwf	9	;volatile
  4759                           
  4760                           ;main.c: 88:     } else if (led == 0X0C) {
  4761  06B0  2EC3               	goto	i1l107
  4762  06B1                     i1l1310:
  4763  06B1  300C               	movlw	12
  4764  06B2  0678               	xorwf	_led,w
  4765  06B3  0479               	iorwf	_led+1,w
  4766  06B4  1D03               	btfss	3,2
  4767  06B5  2EB7               	goto	u70_21
  4768  06B6  2EB8               	goto	u70_20
  4769  06B7                     u70_21:
  4770  06B7  2EB9               	goto	i1l1314
  4771  06B8                     u70_20:
  4772  06B8  2EA5               	goto	i1l1304
  4773  06B9                     i1l1314:
  4774  06B9  300D               	movlw	13
  4775  06BA  0678               	xorwf	_led,w
  4776  06BB  0479               	iorwf	_led+1,w
  4777  06BC  1D03               	btfss	3,2
  4778  06BD  2EBF               	goto	u71_21
  4779  06BE  2EC0               	goto	u71_20
  4780  06BF                     u71_21:
  4781  06BF  2EC3               	goto	i1l101
  4782  06C0                     u71_20:
  4783  06C0                     i1l1316:
  4784                           
  4785                           ;main.c: 91:         PORTE = 2;
  4786  06C0  3002               	movlw	2
  4787  06C1  0089               	movwf	9	;volatile
  4788  06C2  2EC3               	goto	i1l107
  4789  06C3                     i1l101:
  4790  06C3                     i1l107:
  4791  06C3  0873               	movf	??_ISR+3,w
  4792  06C4  008A               	movwf	10
  4793  06C5  0E72               	swapf	??_ISR+2,w
  4794  06C6  0083               	movwf	3
  4795  06C7  0EFE               	swapf	btemp,f
  4796  06C8  0E7E               	swapf	btemp,w
  4797  06C9  0009               	retfie
  4798  06CA                     __end_of_ISR:
  4799  007E                     btemp	set	126	;btemp
  4800  007E                     wtemp0	set	126
  4801                           
  4802                           	psect	intentry
  4803  0004                     __pintentry:	
  4804                           ;incstack = 0
  4805                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4806                           
  4807  0004                     interrupt_function:
  4808  007E                     saved_w	set	btemp
  4809  0004  00FE               	movwf	btemp
  4810  0005  0E03               	swapf	3,w
  4811  0006  00F2               	movwf	??_ISR+2
  4812  0007  080A               	movf	10,w
  4813  0008  00F3               	movwf	??_ISR+3
  4814  0009  120A  118A  2E90   	ljmp	_ISR
  4815                           
  4816                           	psect	config
  4817                           
  4818                           ;Config register CONFIG1 @ 0x2007
  4819                           ;	Oscillator Selection bits
  4820                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4821                           ;	Watchdog Timer Enable bit
  4822                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4823                           ;	Power-up Timer Enable bit
  4824                           ;	PWRTE = OFF, PWRT disabled
  4825                           ;	RE3/MCLR pin function select bit
  4826                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4827                           ;	Code Protection bit
  4828                           ;	CP = OFF, Program memory code protection is disabled
  4829                           ;	Data Code Protection bit
  4830                           ;	CPD = OFF, Data memory code protection is disabled
  4831                           ;	Brown Out Reset Selection bits
  4832                           ;	BOREN = OFF, BOR disabled
  4833                           ;	Internal External Switchover bit
  4834                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4835                           ;	Fail-Safe Clock Monitor Enabled bit
  4836                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4837                           ;	Low Voltage Programming Enable bit
  4838                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4839                           ;	In-Circuit Debugger Mode bit
  4840                           ;	DEBUG = 0x1, unprogrammed default
  4841  2007                     	org	8199
  4842  2007  20D4               	dw	8404
  4843                           
  4844                           ;Config register CONFIG2 @ 0x2008
  4845                           ;	Brown-out Reset Selection bit
  4846                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4847                           ;	Flash Program Memory Self Write Enable bits
  4848                           ;	WRT = OFF, Write protection off
  4849  2008                     	org	8200
  4850  2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    10
    Data        32
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     28      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> datos(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> date1(BANK0[17]), time(BANK0[15]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 1
		 -> datos(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _main->_I2C_Master_Write
    _main->_USART_STRING
    _sprintf->___bmul
    _sprintf->___lwmod
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _DS3231_time->___awdiv
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9400
                                             25 BANK0      3     3      0
                        _DS3231_time
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2303
                                             12 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     197
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     336
                                              1 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              2 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_time                                          2     2      0    3416
                                              8 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     378
                                              2 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231_time
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      52      12        0.0%
ABS                  0      0      52       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 23:12:33 2021

                                pc 0002                     ___bmul@product 0040  
                     ___awdiv@sign 0045                                 fsr 0004  
                              l121 07F4                                l124 0457  
                              l220 0FA0                                l141 0F89  
                              l150 079C                                l214 068F  
                              l118 06FF                                l223 0F7E  
                              l232 07FE                                l144 0F93  
                              l217 0F94                                l161 0F6C  
                              l401 0528                                l226 0F75  
                              l235 0725                                l236 0728  
                              l164 07D8                                l237 072F  
                              l229 0F87                                l173 0755  
                              l167 0FAD                                l176 05D3  
                              l185 077A                                l361 0310  
                              l531 0583                                l179 0FE8  
                              l518 04C0                                l391 0FFF  
                              l637 0619                                l647 0655  
                              l818 0FBF                                _GIE 005F  
                              _RE0 0048                                _RE1 0049  
                              _ISR 0690                                u870 0FB6  
                              u871 0FB5                                u880 0FBC  
                              u881 0FBB                                _led 0078  
                              _min 0076                                _sec 0064  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0045                               ?_ISR 0070  
                             l2000 04C1                               l2010 04F0  
                             l2002 04D3                               l2100 04A5  
                             l2012 0502                               l2004 04D6  
                             l2020 0520                               l2102 04AC  
                             l2014 0510                               l2006 04E3  
                             l2030 065A                               l2104 04B2  
                             l2120 0537                               l2112 0529  
                             l2040 07DC                               l2024 0F89  
                             l2016 0511                               l2008 04E7  
                             l2032 065D                               l2200 06F7  
                             l2106 04B7                               l2130 0550  
                             l2122 053B                               l2114 052C  
                             l2050 07CA                               l2210 058A  
                             l2026 0F8F                               l2018 051A  
                             l2034 068C                               l2202 06FA  
                             l2108 04BC                               l2140 056F  
                             l2132 0554                               l2124 0540  
                             l2116 0530                               l2052 07D5  
                             l2044 07BE                               l2212 0594  
                             l2220 0733                               l2060 0FE0  
                             l2036 068D                               l2028 0656  
                             l2204 06FB                               l2070 045B  
                             l2134 0558                               l2126 0546  
                             l2142 0575                               l2118 0535  
                             l2046 07C1                               l2214 05A4  
                             l2230 074F                               l2222 0738  
                             l2062 0FE5                               l2054 0FD6  
                             l2038 068E                               l2206 06FE  
                             l2150 05D4                               l2310 023A  
                             l2302 020B                               l2080 046F  
                             l2072 045F                               l2144 057A  
                             l2136 0562                               l2128 0549  
                             l2064 0F94                               l2240 0F76  
                             l2048 07C7                               l2216 05AA  
                             l2208 0584                               l2224 073D  
                             l2056 0FD7                               l2232 0759  
                             l2160 05EC                               l2152 05D8  
                             l2320 0252                               l2312 023E  
                             l2304 022A                               l2400 0092  
                             l2090 0485                               l2082 0473  
                             l2074 0464                               l2146 057F  
                             l2138 0568                               l2066 0F9A  
                             l2242 0F7B                               l2250 0F84  
                             l2218 0FA1                               l2226 0744  
                             l2058 0FDD                               l2234 075C  
                             l2170 060F                               l2162 05F0  
                             l2154 05DE                               l1530 0FAF  
                             l2330 027A                               l2314 0243  
                             l2306 0232                               l2410 00BA  
                             l2402 009A                               l2092 0489  
                             l2084 0475                               l2076 0466  
                             l2068 0458                               l2260 070D  
                             l2252 0F6D                               l2244 07F5  
                             l2228 074A                               l2236 0767  
                             l2180 06D3                               l2164 0601  
                             l2156 05E1                               l2172 0615  
                             l1532 0FB0                               l2340 02AD  
                             l2332 028A                               l2324 0254  
                             l2316 0248                               l2308 0236  
                             l2420 00E4                               l2412 00C9  
                             l2404 00A3                               l2094 048D  
                             l2086 047B                               l2078 046A  
                             l2262 0716                               l2254 0F72  
                             l2246 07FA                               l2238 076F  
                             l2190 06F0                               l2182 06D4  
                             l2166 0607                               l2158 05E8  
                             l1534 0FB6                               l2342 02B4  
                             l2350 02F1                               l2334 028B  
                             l2318 024E                               l2430 0121  
                             l2422 00ED                               l2414 00CE  
                             l2406 00AC                               l2096 049E  
                             l2088 047E                               l2272 0311  
                             l2264 071B                               l2256 0700  
                             l2248 0F7F                               l2192 06F1  
                             l2184 06DE                               l2176 06CA  
                             l2168 0608                               l1536 0FBC  
                             l2344 02B9                               l2336 029F  
                             l2328 0270                               l2280 01C1  
                             l2352 02FA                               l2440 0157  
                             l2432 0130                               l2424 00FC  
                             l2416 00D7                               l2408 00B5  
                             l2098 04A4                               l2266 0721  
                             l2258 0705                               l2370 0791  
                             l2194 06F2                               l2186 06EB  
                             l2178 06D2                               l1650 061A  
                             l1538 0FBE                               l2346 02E9  
                             l2338 02A5                               l2354 030C  
                             l2290 01D9                               l2282 01C6  
                             l2274 01AF                               l2450 0186  
                             l2442 0166                               l2434 013F  
                             l2426 0109                               l2418 00DF  
                             l2268 0729                               l2364 077E  
                             l2196 06F5                               l2188 06EE  
                             l1660 0634                               l1652 0622  
                             l2292 01EA                               l2284 01C7  
                             l2276 01B4                               l2452 0196  
                             l2444 0170                               l2436 014D  
                             l2428 0118                               l2380 0043  
                             l2372 0031                               l2366 0780  
                             l2198 06F6                               l1662 063E  
                             l1654 0625                               l2294 01F5  
                             l2286 01D3                               l2278 01BA  
                             l2454 019C                               l2446 0176  
                             l2438 0152                               l2390 0068  
                             l2382 004D                               l2374 0036  
                             l2368 078B                               l1664 0644  
                             l1656 062C                               l2296 01F9  
                             l2288 01D7                               l2456 01A2  
                             l2448 0180                               l2392 0071  
                             l2384 0053                               l2376 0039  
                             l1666 064B                               l1658 0630  
                             l2298 020A                               l2394 0079  
                             l2386 005D                               l2378 003E  
                             l1668 0651                               l2396 0081  
                             l2388 0063                               l2398 0089  
                             l2488 021F                               l1990 0FF1  
                             l1992 0FF5                               l1984 0F68  
                             l1994 0FF7                               l1986 0FEC  
                             l1996 0FFE                               l1988 0FED  
                             STR_1 0810                               u1200 0651  
                             u1201 0650                               u1150 0622  
                             u2007 0590                               u1151 0621  
                             u1400 0FFE                               u1401 0FFD  
                             u2017 05A0                               u1410 04D3  
                             u1170 0634                               u2027 05B0  
                             u1411 04D2                               u1171 0633  
                             u1180 063E                               u2037 07D0  
                             u1181 063D                               u1165 0626  
                             u1510 0F9A                               u1430 04E7  
                             u1511 0F99                               u1431 04E6  
                             u1520 0FA0                               u1505 07E6  
                             u1521 0F9F                               u1425 04D8  
                             u1185 063A                               u1610 04B2  
                             u1530 045F                               u1450 0502  
                             u1611 04B1                               u1531 045E  
                             u1451 0501                               u1195 0645  
                             u1620 04B7                               u1540 046A  
                             u1700 0575                               u1621 04B6  
                             u1605 04A6                               u1541 0469  
                             u1701 0574                               u1445 04E9  
                             u1550 047B                               u1710 057A  
                             u1630 0530                               u1390 0FF1  
                             u1470 0520                               u1551 047A  
                             u1711 0579                               u1631 052F  
                             u1391 0FF0                               u1471 051F  
                             u1455 04FE                               u1640 053B  
                             u1800 074A                               u1480 0F8F  
                             u1720 05DE                               u1641 053A  
                             u1801 0749                               u1481 0F8E  
                             u1465 0512                               u1721 05DD  
                             u1570 048D                               u1650 0546  
                             u1810 077A                               u1490 066D  
                             u1571 048C                               u1651 0545  
                             u1811 0779                               u1820 0721  
                             u1740 05F0                               u1900 027A  
                             u1565 047F                               u1821 0720  
                             u1741 05EF                               u1901 0279  
                             u1590 049E                               u1670 0558  
                             u1910 028A                               u1830 01BA  
                             u1591 049D                               u1671 0557  
                             u1495 0668                               u1735 05E2  
                             u1911 0289                               u1831 01B9  
                             u1680 0562                               u1760 0601  
                             u1920 029F                               u1840 01D3  
                             u1585 048E                               u1681 0561  
                             u1665 054A                               u1761 0600  
                             u1921 029E                               u1841 01D2  
                             u1930 02AD                               u1850 0209  
                             u1595 049A                               u1755 05F1  
                             u1931 02AC                               u1915 0286  
                             u1851 0208                               u1780 0615  
                             u1940 02FA                               u1860 023A  
                             u1685 055E                               u1781 0614  
                             u1765 05FD                               u1941 02F9  
                             u1925 029B                               u1861 0239  
                             u1790 0738                               u1950 030C  
                             u1870 0248                               u1695 0569  
                             u1791 0737                               u1775 0609  
                             u1951 030B                               u1871 0247  
                             u1960 079C                               u1880 024E  
                             u1961 079B                               u1881 024D  
                             u1890 026F                               u1891 026E  
                             _PEIE 005E                               u1895 026B  
                             u1977 00C2                               u1987 015F  
                             _RCIF 0065                               u1997 0FE2  
                             _TRMT 04C1                  ?_Lcd_Write_String 0070  
                             _date 0060   __end_of_I2C_Master_RepeatedStart 0F76  
                             _main 0031                               _hour 0062  
                             _time 0031                               _year 005C  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 0041                    __end_of_Lcd_Cmd 07D9  
                ___bmul@multiplier 0041                              ??_ISR 0070  
                 ?_I2C_Master_Init 004D                   ?_I2C_Master_Read 0074  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 04C1  
                  __end_of___awmod 0584                              _ANSEL 0188  
                  __end_of___lldiv 0529                    ___awdiv@divisor 0040  
                  __end_of___lwdiv 061A                              i1l101 06C3  
                            i1l107 06C3                    __end_of___lwmod 0656  
                  ___awdiv@counter 0044                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u70_20 06B8                              u70_21 06B7  
                            u71_20 06C0                              u71_21 06BF  
          __size_of_Lcd_Set_Cursor 0026                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              u67_20 0696  
                            u67_21 0695                              u68_20 06A5  
                            u68_21 06A4                              u69_20 06AE  
                            u69_21 06AD                              _TXREG 0019  
                            _date1 0020                              _datos 0067  
                  __end_of_dpowers 0810                    __end_of_isdigit 0FC0  
                            _month 005E                              _setup 06CA  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0311  
                 __end_of_Lcd_Init 05D4                   __end_of_Lcd_Port 0F6D  
                  __initialization 000F                       __end_of_main 01AC  
                 USART_ESCRITURA@a 0074                             ??_main 0059  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0074                 ??_I2C_Master_Start 0074  
               ??_I2C_Master_Write 0076                   ___awdiv@dividend 0042  
                           ?_setup 0070                             _ANSELH 0189  
                           i1l1300 0697                             i1l1310 06B1  
                           i1l1302 069E                             i1l1304 06A5  
                           i1l1314 06B9                             i1l1306 06A7  
                           i1l1316 06C0                             i1l1308 06AE  
                           i1l1296 0690                             i1l1298 0696  
                    USART_STRING@a 0040                      USART_STRING@i 0041  
                        ??_Lcd_Cmd 0040                             _SPBRGH 009A  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0F6D                             ___bmul 0FE9  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___lldiv 0074                          ??___lwdiv 0074  
                        ??___lwmod 0075                   ___awdiv@quotient 0046  
                  ___awmod@divisor 0040                    ___awmod@counter 0044  
                        ??_isdigit 0074                             saved_w 007E  
                        ??_sprintf 004F                    Lcd_Set_Cursor@a 0044  
                  Lcd_Set_Cursor@b 0042            __end_of__initialization 002D  
                __end_of_Lcd_Clear 0FAE                ___bmul@multiplicand 0074  
                   __pcstackCOMMON 0070                       __pidataBANK0 079D  
                    __end_of_setup 0700                     _Lcd_Set_Cursor 0730  
                        ?_Lcd_Init 0070                          ?_Lcd_Port 0070  
                          ??_setup 0075                         __pbssBANK0 005C  
                    ??_DS3231_time 0048                         __pmaintext 0031  
                          ?___bmul 0074                         __pintentry 0004  
        __size_of_Lcd_Write_String 0025             __end_of_Lcd_Set_Cursor 0756  
         __size_of_USART_ESCRITURA 000C            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 0042                         ??_Lcd_Port 0074  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0800                     _Lcd_Write_Char 0FD3  
                          _Lcd_Cmd 07BD                    __size_of___bmul 0017  
                          ___awdiv 0458                            ___awmod 0529  
              __end_of_DS3231_time 0458                            ___lldiv 04C1  
                          ___lwdiv 05D4                            ___lwmod 061A  
                  ?_Lcd_Set_Cursor 0042                            __ptext1 01AC  
                          __ptext2 0FAE                            __ptext3 061A  
                          __ptext4 05D4                            __ptext5 06CA  
                          __ptext6 0656                            __ptext7 04C1  
                          __ptext8 077B                            __ptext9 0F88  
                     __size_of_ISR 003A                            _dpowers 0806  
                          _isdigit 0FAE                   ___awmod@dividend 0042  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          _sprintf 01AC             __end_of_Lcd_Write_Char 0FE9  
             end_of_initialization 002D         ??_I2C_Master_RepeatedStart 0074  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0040                    ___lldiv@counter 004C  
                        _RCSTAbits 0018                   I2C_Master_Init@c 004D  
                 I2C_Master_Read@a 0074                          Lcd_Port@a 0074  
                        _TRISCbits 0087                  ??_USART_ESCRITURA 0074  
                    ?_USART_STRING 0070                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0044                  Lcd_Write_String@i 0042  
                        _TXSTAbits 0098                        _DS3231_time 0311  
                        _Lcd_Clear 0FA1                     __end_of___bmul 1000  
                 _Lcd_Write_String 0756                start_initialization 000F  
                   _bcd_to_decimal 07D9                        __end_of_ISR 06CA  
                   ??_USART_STRING 0075                  __size_of_Lcd_Init 0050  
                __size_of_Lcd_Port 0006                  ??_I2C_Master_Init 0051  
                ??_I2C_Master_Read 0040                  ??_I2C_Master_Wait 0074  
                ??_I2C_Master_Stop 0074                         ?_Lcd_Clear 0070  
                         ??___bmul 0075                         init_fetch0 0FC0  
                      __pdataBANK0 0020                    Lcd_Write_Char@a 0040  
           __end_of_bcd_to_decimal 07F5                        __pbssCOMMON 0076  
                        ___latbits 0002                      __pcstackBANK0 0040  
                         ?_Lcd_Cmd 0070                        sprintf@flag 0053  
                      sprintf@prec 0057                   _I2C_Master_Start 0F76  
                 _I2C_Master_Write 07F5                   ___lwdiv@dividend 0042  
                 ??_Lcd_Set_Cursor 0043                           ?___awdiv 0040  
                         ?___awmod 0040                           ?___lldiv 0040  
                         ?___lwdiv 0040                           ?___lwmod 0047  
                        __pstrings 0800                    ?_bcd_to_decimal 0070  
                         ?_isdigit 0070                   ___lwdiv@quotient 0045  
                         ?_sprintf 004C               bcd_to_decimal@number 0045  
                   __size_of_setup 0036                  interrupt_function 0004  
                         _PIE1bits 008C                           Lcd_Cmd@a 0075  
                         _PIR1bits 000C                        ??_Lcd_Clear 0076  
             __end_of_USART_STRING 079D                    _USART_ESCRITURA 0F88  
                      __stringbase 0805                   ??_Lcd_Write_Char 0075  
                         _Lcd_Init 0584                           _Lcd_Port 0F67  
              I2C_Master_Read@temp 0042           __end_of_Lcd_Write_String 077B  
                 __size_of_Lcd_Cmd 001C                       ?_DS3231_time 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 0806  
                      _isdigit$908 0074                         sprintf@val 0055  
                  _I2C_Master_Init 0656                    _I2C_Master_Read 0700  
                  _I2C_Master_Wait 0F94                    _I2C_Master_Stop 0F7F  
                 __size_of_isdigit 0012                    ___lwdiv@divisor 0040  
                  ___lwdiv@counter 0044                           __ptext10 0756  
                         __ptext11 0FD3                           __ptext20 0F6D  
                         __ptext12 0730                           __ptext21 0700  
                         __ptext13 0584                           __ptext22 0F94  
                         __ptext14 0FA1                           __ptext23 0311  
                         __ptext15 07BD                           __ptext24 07D9  
                         __ptext16 0F67                           __ptext25 0FE9  
                         __ptext17 07F5                           __ptext26 0529  
                         __ptext18 0F7F                           __ptext27 0458  
                         __ptext19 0F76                           __ptext28 0690  
                 __size_of_sprintf 0165                      __size_of_main 017B  
          __end_of_USART_ESCRITURA 0F94           __end_of_I2C_Master_Start 0F7F  
         __end_of_I2C_Master_Write 07FF                         _INTCONbits 000B  
                         init_ram0 0FC4                           isdigit@c 0075  
                         intlevel1 0000                          sprintf@ap 0052  
                        sprintf@sp 0054                   ___lwmod@dividend 0049  
                 ___lldiv@dividend 0044              __size_of_USART_STRING 0022  
                        stringcode 0800                   ??_bcd_to_decimal 0042  
          __end_of_I2C_Master_Init 0690            __end_of_I2C_Master_Read 0730  
          __end_of_I2C_Master_Wait 0FA1            __end_of_I2C_Master_Stop 0F88  
               Lcd_Set_Cursor@temp 0045                           sprintf@c 0058  
                         sprintf@f 004C                   ___lldiv@quotient 0048  
                I2C_Master_Write@d 0074                    ___lwmod@divisor 0047  
                  ___lwmod@counter 004B                           stringdir 0800  
                         stringtab 0800                        _SSPCON2bits 0091  
                     _USART_STRING 077B                         _USART_LEER 0066  
                 ?_USART_ESCRITURA 0070               __size_of_DS3231_time 0147  
