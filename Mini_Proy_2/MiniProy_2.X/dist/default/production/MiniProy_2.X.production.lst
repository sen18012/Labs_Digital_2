

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 21:09:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  008F                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0105                     	;# 
   456  0107                     	;# 
   457  0108                     	;# 
   458  0109                     	;# 
   459  010C                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  0185                     	;# 
   465  0187                     	;# 
   466  0188                     	;# 
   467  0189                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470                           
   471                           	psect	idataBANK0
   472  0768                     __pidataBANK0:
   473                           
   474                           ;initializer for _date1
   475  0768  3444               	retlw	68
   476  0769  3441               	retlw	65
   477  076A  3454               	retlw	84
   478  076B  3445               	retlw	69
   479  076C  343A               	retlw	58
   480  076D  3420               	retlw	32
   481  076E  3420               	retlw	32
   482  076F  3420               	retlw	32
   483  0770  342F               	retlw	47
   484  0771  3420               	retlw	32
   485  0772  3420               	retlw	32
   486  0773  342F               	retlw	47
   487  0774  3432               	retlw	50
   488  0775  3430               	retlw	48
   489  0776  3420               	retlw	32
   490  0777  3420               	retlw	32
   491  0778  3400               	retlw	0
   492                           
   493                           ;initializer for _time
   494  0779  3454               	retlw	84
   495  077A  3449               	retlw	73
   496  077B  344D               	retlw	77
   497  077C  3445               	retlw	69
   498  077D  343A               	retlw	58
   499  077E  3420               	retlw	32
   500  077F  3420               	retlw	32
   501  0780  3420               	retlw	32
   502  0781  343A               	retlw	58
   503  0782  3420               	retlw	32
   504  0783  3420               	retlw	32
   505  0784  343A               	retlw	58
   506  0785  3420               	retlw	32
   507  0786  3420               	retlw	32
   508  0787  3400               	retlw	0
   509                           
   510                           	psect	strings
   511  0800                     __pstrings:
   512  0800                     stringtab:
   513  0800                     __stringtab:
   514  0800                     stringcode:	
   515                           ;	String table - string pointers are 1 byte each
   516                           
   517  0800                     stringdir:
   518  0800  3008               	movlw	high stringdir
   519  0801  008A               	movwf	10
   520  0802  0804               	movf	4,w
   521  0803  0A84               	incf	4,f
   522  0804  0782               	addwf	2,f
   523  0805                     __stringbase:
   524  0805  3400               	retlw	0
   525  0806                     __end_of__stringtab:
   526  0806                     _dpowers:
   527  0806  3401               	retlw	1
   528  0807  3400               	retlw	0
   529  0808  340A               	retlw	10
   530  0809  3400               	retlw	0
   531  080A  3464               	retlw	100
   532  080B  3400               	retlw	0
   533  080C  34E8               	retlw	232
   534  080D  3403               	retlw	3
   535  080E  3410               	retlw	16
   536  080F  3427               	retlw	39
   537  0810                     __end_of_dpowers:
   538  0013                     _SSPBUF	set	19
   539  0014                     _SSPCON	set	20
   540  0019                     _TXREG	set	25
   541  0018                     _RCSTAbits	set	24
   542  000B                     _INTCONbits	set	11
   543  0009                     _PORTE	set	9
   544  0008                     _PORTD	set	8
   545  0007                     _PORTC	set	7
   546  0006                     _PORTB	set	6
   547  0005                     _PORTA	set	5
   548  0006                     _PORTBbits	set	6
   549  001A                     _RCREG	set	26
   550  0063                     _SSPIF	set	99
   551  005E                     _PEIE	set	94
   552  005F                     _GIE	set	95
   553  0049                     _RE1	set	73
   554  0048                     _RE0	set	72
   555  0065                     _RCIF	set	101
   556  0091                     _SSPCON2bits	set	145
   557  0094                     _SSPSTAT	set	148
   558  0093                     _SSPADD	set	147
   559  0091                     _SSPCON2	set	145
   560  0098                     _TXSTAbits	set	152
   561  0099                     _SPBRG	set	153
   562  009A                     _SPBRGH	set	154
   563  008C                     _PIE1bits	set	140
   564  0089                     _TRISE	set	137
   565  0087                     _TRISCbits	set	135
   566  0086                     _TRISB	set	134
   567  0085                     _TRISA	set	133
   568  0088                     _TRISD	set	136
   569  0463                     _SSPIE	set	1123
   570  043C                     _TRISC4	set	1084
   571  043B                     _TRISC3	set	1083
   572  04C1                     _TRMT	set	1217
   573  0189                     _ANSELH	set	393
   574  0188                     _ANSEL	set	392
   575  0810                     STR_1:
   576  0810  3425               	retlw	37	;'%'
   577  0811  342E               	retlw	46	;'.'
   578  0812  3430               	retlw	48	;'0'
   579  0813  3469               	retlw	105	;'i'
   580  0814  3400               	retlw	0
   581                           
   582                           	psect	cinit
   583  000F                     start_initialization:	
   584                           ; #config settings
   585                           
   586  000F                     __initialization:
   587                           
   588                           ; Initialize objects allocated to BANK0
   589  000F  1383               	bcf	3,7	;select IRP bank0
   590  0010  3040               	movlw	low (__pdataBANK0+32)
   591  0011  00FD               	movwf	btemp+-1
   592  0012  3007               	movlw	high __pidataBANK0
   593  0013  00FE               	movwf	btemp
   594  0014  3068               	movlw	low __pidataBANK0
   595  0015  00FF               	movwf	btemp+1
   596  0016  3020               	movlw	low __pdataBANK0
   597  0017  0084               	movwf	4
   598  0018  120A  158A  27DC  120A  118A  	fcall	init_ram0
   599                           
   600                           ; Clear objects allocated to BANK0
   601  001D  01D9               	clrf	__pbssBANK0& (0+127)
   602  001E  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   603  001F  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   604  0020  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   605  0021  01DD               	clrf	(__pbssBANK0+4)& (0+127)
   606  0022  01DE               	clrf	(__pbssBANK0+5)& (0+127)
   607  0023  01DF               	clrf	(__pbssBANK0+6)& (0+127)
   608  0024  01E0               	clrf	(__pbssBANK0+7)& (0+127)
   609  0025  01E1               	clrf	(__pbssBANK0+8)& (0+127)
   610  0026  01E2               	clrf	(__pbssBANK0+9)& (0+127)
   611  0027  01E3               	clrf	(__pbssBANK0+10)& (0+127)
   612  0028  01E4               	clrf	(__pbssBANK0+11)& (0+127)
   613                           
   614                           ; Clear objects allocated to COMMON
   615  0029  01F8               	clrf	__pbssCOMMON& (0+127)
   616  002A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   617  002B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   618  002C                     end_of_initialization:	
   619                           ;End of C runtime variable initialization code
   620                           
   621  002C                     __end_of__initialization:
   622  002C  0183               	clrf	3
   623  002D  120A  118A  2830   	ljmp	_main	;jump to C main() function
   624                           
   625                           	psect	bssCOMMON
   626  0078                     __pbssCOMMON:
   627  0078                     _min:
   628  0078                     	ds	2
   629  007A                     _USART_LEER:
   630  007A                     	ds	1
   631                           
   632                           	psect	bssBANK0
   633  0059                     __pbssBANK0:
   634  0059                     _year:
   635  0059                     	ds	2
   636  005B                     _month:
   637  005B                     	ds	2
   638  005D                     _date:
   639  005D                     	ds	2
   640  005F                     _hour:
   641  005F                     	ds	2
   642  0061                     _sec:
   643  0061                     	ds	2
   644  0063                     _led:
   645  0063                     	ds	1
   646  0064                     _datos:
   647  0064                     	ds	1
   648                           
   649                           	psect	dataBANK0
   650  0020                     __pdataBANK0:
   651  0020                     _date1:
   652  0020                     	ds	17
   653  0031                     _time:
   654  0031                     	ds	15
   655                           
   656                           	psect	inittext
   657  0FD8                     init_fetch0:	
   658                           ;	Called with low address in FSR and high address in W
   659                           
   660  0FD8  087E               	movf	btemp,w
   661  0FD9  008A               	movwf	10
   662  0FDA  087F               	movf	btemp+1,w
   663  0FDB  0082               	movwf	2
   664  0FDC                     init_ram0:	
   665                           ;Called with:
   666                           ;	high address of idata address in btemp 
   667                           ;	low address of idata address in btemp+1 
   668                           ;	low address of data in FSR
   669                           ;	high address + 1 of data in btemp-1
   670                           
   671  0FDC  120A  158A  27D8  120A  158A  	fcall	init_fetch0
   672  0FE1  0080               	movwf	0
   673  0FE2  0A84               	incf	4,f
   674  0FE3  0804               	movf	4,w
   675  0FE4  067D               	xorwf	btemp+-1,w
   676  0FE5  1903               	btfsc	3,2
   677  0FE6  3400               	retlw	0
   678  0FE7  0AFF               	incf	btemp+1,f
   679  0FE8  1903               	btfsc	3,2
   680  0FE9  0AFE               	incf	btemp,f
   681  0FEA  2FDC               	goto	init_ram0
   682                           
   683                           	psect	cstackCOMMON
   684  0070                     __pcstackCOMMON:
   685  0070                     ?_isdigit:
   686  0070                     ?_setup:	
   687                           ; 1 bit 
   688                           
   689  0070                     ?_Lcd_Init:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_Lcd_Clear:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Lcd_Write_String:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_I2C_Master_Start:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Master_Stop:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_I2C_Master_RepeatedStart:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_DS3231_time:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_USART_STRING:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_USART_ESCRITURA:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_ISR:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ??_ISR:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_main:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_bcd_to_decimal:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Lcd_Port:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Cmd:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Lcd_Write_Char:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_I2C_Master_Wait:	
   738                           ; 1 bytes @ 0x0
   739                           
   740                           
   741                           ; 1 bytes @ 0x0
   742  0070                     	ds	3
   743  0073                     ??_I2C_Master_Start:
   744  0073                     ?_I2C_Master_Write:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ??_I2C_Master_Stop:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ??_I2C_Master_RepeatedStart:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ??_USART_ESCRITURA:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ??_isdigit:	
   757                           ; 1 bytes @ 0x3
   758                           
   759  0073                     ??_Lcd_Port:	
   760                           ; 1 bytes @ 0x3
   761                           
   762  0073                     ??_I2C_Master_Wait:	
   763                           ; 1 bytes @ 0x3
   764                           
   765  0073                     ?___bmul:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     ??___lldiv:	
   769                           ; 1 bytes @ 0x3
   770                           
   771  0073                     ?_I2C_Master_Read:	
   772                           ; 1 bytes @ 0x3
   773                           
   774  0073                     ?___awdiv:	
   775                           ; 2 bytes @ 0x3
   776                           
   777  0073                     ?___awmod:	
   778                           ; 2 bytes @ 0x3
   779                           
   780  0073                     ?___lwdiv:	
   781                           ; 2 bytes @ 0x3
   782                           
   783  0073                     USART_ESCRITURA@a:	
   784                           ; 2 bytes @ 0x3
   785                           
   786  0073                     Lcd_Port@a:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     ___bmul@multiplicand:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0073                     _isdigit$912:	
   793                           ; 1 bytes @ 0x3
   794                           
   795  0073                     I2C_Master_Write@d:	
   796                           ; 1 bytes @ 0x3
   797                           
   798  0073                     I2C_Master_Read@a:	
   799                           ; 2 bytes @ 0x3
   800                           
   801  0073                     ___awdiv@divisor:	
   802                           ; 2 bytes @ 0x3
   803                           
   804  0073                     ___awmod@divisor:	
   805                           ; 2 bytes @ 0x3
   806                           
   807  0073                     ___lwdiv@divisor:	
   808                           ; 2 bytes @ 0x3
   809                           
   810                           
   811                           ; 2 bytes @ 0x3
   812  0073                     	ds	1
   813  0074                     ??_USART_STRING:
   814  0074                     ??_I2C_Master_Init:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     ??_Lcd_Cmd:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ??_Lcd_Write_Char:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ??___bmul:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0074                     isdigit@c:	
   827                           ; 1 bytes @ 0x4
   828                           
   829                           
   830                           ; 1 bytes @ 0x4
   831  0074                     	ds	1
   832  0075                     ??_I2C_Master_Write:
   833  0075                     ??_I2C_Master_Read:	
   834                           ; 1 bytes @ 0x5
   835                           
   836  0075                     USART_STRING@a:	
   837                           ; 1 bytes @ 0x5
   838                           
   839  0075                     Lcd_Write_Char@a:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0075                     ___bmul@product:	
   843                           ; 1 bytes @ 0x5
   844                           
   845  0075                     ___awdiv@dividend:	
   846                           ; 1 bytes @ 0x5
   847                           
   848  0075                     ___awmod@dividend:	
   849                           ; 2 bytes @ 0x5
   850                           
   851  0075                     ___lwdiv@dividend:	
   852                           ; 2 bytes @ 0x5
   853                           
   854                           
   855                           ; 2 bytes @ 0x5
   856  0075                     	ds	1
   857  0076                     ??_Lcd_Write_String:
   858  0076                     USART_STRING@i:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0076                     Lcd_Cmd@a:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0076                     ___bmul@multiplier:	
   865                           ; 1 bytes @ 0x6
   866                           
   867                           
   868                           ; 1 bytes @ 0x6
   869  0076                     	ds	1
   870  0077                     ??_Lcd_Clear:
   871  0077                     ?_Lcd_Set_Cursor:	
   872                           ; 1 bytes @ 0x7
   873                           
   874  0077                     ??___awdiv:	
   875                           ; 1 bytes @ 0x7
   876                           
   877  0077                     ??___awmod:	
   878                           ; 1 bytes @ 0x7
   879                           
   880  0077                     ??___lwdiv:	
   881                           ; 1 bytes @ 0x7
   882                           
   883  0077                     bcd_to_decimal@number:	
   884                           ; 1 bytes @ 0x7
   885                           
   886  0077                     Lcd_Set_Cursor@b:	
   887                           ; 1 bytes @ 0x7
   888                           
   889                           
   890                           ; 1 bytes @ 0x7
   891  0077                     	ds	1
   892  0078                     ??_setup:
   893                           
   894                           	psect	cstackBANK0
   895  0040                     __pcstackBANK0:	
   896                           ; 1 bytes @ 0x8
   897                           
   898  0040                     ??_Lcd_Init:
   899  0040                     ??_Lcd_Set_Cursor:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0040                     ??_bcd_to_decimal:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0040                     ?___lldiv:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0040                     ___awdiv@counter:	
   909                           ; 4 bytes @ 0x0
   910                           
   911  0040                     ___awmod@counter:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0040                     ___lwdiv@counter:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0040                     Lcd_Write_String@i:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0040                     I2C_Master_Read@temp:	
   921                           ; 2 bytes @ 0x0
   922                           
   923  0040                     ___lldiv@divisor:	
   924                           ; 2 bytes @ 0x0
   925                           
   926                           
   927                           ; 4 bytes @ 0x0
   928  0040                     	ds	1
   929  0041                     Lcd_Set_Cursor@a:
   930  0041                     ___awdiv@sign:	
   931                           ; 1 bytes @ 0x1
   932                           
   933  0041                     ___awmod@sign:	
   934                           ; 1 bytes @ 0x1
   935                           
   936  0041                     ___lwdiv@quotient:	
   937                           ; 1 bytes @ 0x1
   938                           
   939                           
   940                           ; 2 bytes @ 0x1
   941  0041                     	ds	1
   942  0042                     Lcd_Set_Cursor@temp:
   943  0042                     Lcd_Write_String@a:	
   944                           ; 1 bytes @ 0x2
   945                           
   946  0042                     ___awdiv@quotient:	
   947                           ; 1 bytes @ 0x2
   948                           
   949                           
   950                           ; 2 bytes @ 0x2
   951  0042                     	ds	1
   952  0043                     ?___lwmod:
   953  0043                     ___lwmod@divisor:	
   954                           ; 2 bytes @ 0x3
   955                           
   956                           
   957                           ; 2 bytes @ 0x3
   958  0043                     	ds	1
   959  0044                     ??_DS3231_time:
   960  0044                     ___lldiv@dividend:	
   961                           ; 1 bytes @ 0x4
   962                           
   963                           
   964                           ; 4 bytes @ 0x4
   965  0044                     	ds	1
   966  0045                     ___lwmod@dividend:
   967                           
   968                           ; 2 bytes @ 0x5
   969  0045                     	ds	2
   970  0047                     ??___lwmod:
   971                           
   972                           ; 1 bytes @ 0x7
   973  0047                     	ds	1
   974  0048                     ___lwmod@counter:
   975  0048                     ___lldiv@quotient:	
   976                           ; 1 bytes @ 0x8
   977                           
   978                           
   979                           ; 4 bytes @ 0x8
   980  0048                     	ds	1
   981  0049                     ?_sprintf:
   982  0049                     sprintf@f:	
   983                           ; 2 bytes @ 0x9
   984                           
   985                           
   986                           ; 1 bytes @ 0x9
   987  0049                     	ds	3
   988  004C                     ??_sprintf:
   989  004C                     ___lldiv@counter:	
   990                           ; 1 bytes @ 0xC
   991                           
   992                           
   993                           ; 1 bytes @ 0xC
   994  004C                     	ds	1
   995  004D                     ?_I2C_Master_Init:
   996  004D                     I2C_Master_Init@c:	
   997                           ; 1 bytes @ 0xD
   998                           
   999                           
  1000                           ; 4 bytes @ 0xD
  1001  004D                     	ds	2
  1002  004F                     sprintf@ap:
  1003                           
  1004                           ; 1 bytes @ 0xF
  1005  004F                     	ds	1
  1006  0050                     sprintf@flag:
  1007                           
  1008                           ; 1 bytes @ 0x10
  1009  0050                     	ds	1
  1010  0051                     sprintf@sp:
  1011                           
  1012                           ; 1 bytes @ 0x11
  1013  0051                     	ds	1
  1014  0052                     sprintf@val:
  1015                           
  1016                           ; 2 bytes @ 0x12
  1017  0052                     	ds	2
  1018  0054                     sprintf@prec:
  1019                           
  1020                           ; 1 bytes @ 0x14
  1021  0054                     	ds	1
  1022  0055                     sprintf@c:
  1023                           
  1024                           ; 1 bytes @ 0x15
  1025  0055                     	ds	1
  1026  0056                     ??_main:
  1027                           
  1028                           ; 1 bytes @ 0x16
  1029  0056                     	ds	3
  1030                           
  1031                           	psect	maintext
  1032  0030                     __pmaintext:	
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 118 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : B00/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       3       0       0       0
  1055 ;;      Totals:         0       3       0       0       0
  1056 ;;Total ram usage:        3 bytes
  1057 ;; Hardware stack levels required when called:    4
  1058 ;; This function calls:
  1059 ;;		_DS3231_time
  1060 ;;		_I2C_Master_Read
  1061 ;;		_I2C_Master_RepeatedStart
  1062 ;;		_I2C_Master_Start
  1063 ;;		_I2C_Master_Stop
  1064 ;;		_I2C_Master_Write
  1065 ;;		_Lcd_Clear
  1066 ;;		_Lcd_Init
  1067 ;;		_Lcd_Set_Cursor
  1068 ;;		_Lcd_Write_String
  1069 ;;		_USART_ESCRITURA
  1070 ;;		_USART_STRING
  1071 ;;		_setup
  1072 ;;		_sprintf
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _main
  1080  0030                     _main:
  1081  0030                     l2298:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1084                           
  1085                           
  1086                           ;main.c: 119:     setup();
  1087  0030  120A  118A  26BC  120A  118A  	fcall	_setup
  1088  0035                     l2300:
  1089                           
  1090                           ;main.c: 120:     TRISD = 0x00;
  1091  0035  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0036  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0037  0188               	clrf	8	;volatile
  1094  0038                     l2302:
  1095                           
  1096                           ;main.c: 121:     Lcd_Init();
  1097  0038  120A  118A  257B  120A  118A  	fcall	_Lcd_Init
  1098  003D                     l2304:
  1099                           
  1100                           ;main.c: 122:     Lcd_Clear();
  1101  003D  120A  118A  27F2  120A  118A  	fcall	_Lcd_Clear
  1102  0042                     l2306:
  1103                           
  1104                           ;main.c: 123:     Lcd_Set_Cursor(1, 1);
  1105  0042  01F7               	clrf	Lcd_Set_Cursor@b
  1106  0043  0AF7               	incf	Lcd_Set_Cursor@b,f
  1107  0044  3001               	movlw	1
  1108  0045  120A  118A  271D  120A  118A  	fcall	_Lcd_Set_Cursor
  1109  004A                     l2308:
  1110                           
  1111                           ;main.c: 124:     Lcd_Write_String(time);
  1112  004A  3031               	movlw	(low (_time| 0))& (0+255)
  1113  004B  120A  118A  2743  120A  118A  	fcall	_Lcd_Write_String
  1114  0050                     l2310:
  1115                           
  1116                           ;main.c: 125:     Lcd_Set_Cursor(2, 1);
  1117  0050  01F7               	clrf	Lcd_Set_Cursor@b
  1118  0051  0AF7               	incf	Lcd_Set_Cursor@b,f
  1119  0052  3002               	movlw	2
  1120  0053  120A  118A  271D  120A  118A  	fcall	_Lcd_Set_Cursor
  1121  0058                     l2312:
  1122                           
  1123                           ;main.c: 126:     Lcd_Write_String(date1);
  1124  0058  3020               	movlw	(low (_date1| 0))& (0+255)
  1125  0059  120A  118A  2743  120A  118A  	fcall	_Lcd_Write_String
  1126  005E                     l2314:
  1127                           
  1128                           ;main.c: 128:     I2C_Master_Start();
  1129  005E  120A  158A  2791  120A  118A  	fcall	_I2C_Master_Start
  1130  0063                     l2316:
  1131                           
  1132                           ;main.c: 129:     I2C_Master_Write(0xD0);
  1133  0063  30D0               	movlw	208
  1134  0064  00F3               	movwf	I2C_Master_Write@d
  1135  0065  3000               	movlw	0
  1136  0066  00F4               	movwf	I2C_Master_Write@d+1
  1137  0067  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1138  006C                     l2318:
  1139                           
  1140                           ;main.c: 130:     I2C_Master_Write(0);
  1141  006C  3000               	movlw	0
  1142  006D  00F3               	movwf	I2C_Master_Write@d
  1143  006E  00F4               	movwf	I2C_Master_Write@d+1
  1144  006F  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1145  0074                     l2320:
  1146                           
  1147                           ;main.c: 131:     I2C_Master_Write(0);
  1148  0074  3000               	movlw	0
  1149  0075  00F3               	movwf	I2C_Master_Write@d
  1150  0076  00F4               	movwf	I2C_Master_Write@d+1
  1151  0077  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1152  007C                     l2322:
  1153                           
  1154                           ;main.c: 132:     I2C_Master_Write(0);
  1155  007C  3000               	movlw	0
  1156  007D  00F3               	movwf	I2C_Master_Write@d
  1157  007E  00F4               	movwf	I2C_Master_Write@d+1
  1158  007F  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1159  0084                     l2324:
  1160                           
  1161                           ;main.c: 133:     I2C_Master_Write(1);
  1162  0084  3001               	movlw	1
  1163  0085  00F3               	movwf	I2C_Master_Write@d
  1164  0086  3000               	movlw	0
  1165  0087  00F4               	movwf	I2C_Master_Write@d+1
  1166  0088  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1167  008D                     l2326:
  1168                           
  1169                           ;main.c: 134:     I2C_Master_Write(0);
  1170  008D  3000               	movlw	0
  1171  008E  00F3               	movwf	I2C_Master_Write@d
  1172  008F  00F4               	movwf	I2C_Master_Write@d+1
  1173  0090  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1174  0095                     l2328:
  1175                           
  1176                           ;main.c: 135:     I2C_Master_Write(10);
  1177  0095  300A               	movlw	10
  1178  0096  00F3               	movwf	I2C_Master_Write@d
  1179  0097  3000               	movlw	0
  1180  0098  00F4               	movwf	I2C_Master_Write@d+1
  1181  0099  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1182  009E                     l2330:
  1183                           
  1184                           ;main.c: 136:     I2C_Master_Write(3);
  1185  009E  3003               	movlw	3
  1186  009F  00F3               	movwf	I2C_Master_Write@d
  1187  00A0  3000               	movlw	0
  1188  00A1  00F4               	movwf	I2C_Master_Write@d+1
  1189  00A2  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1190  00A7                     l2332:
  1191                           
  1192                           ;main.c: 137:     I2C_Master_Write(27);
  1193  00A7  301B               	movlw	27
  1194  00A8  00F3               	movwf	I2C_Master_Write@d
  1195  00A9  3000               	movlw	0
  1196  00AA  00F4               	movwf	I2C_Master_Write@d+1
  1197  00AB  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1198  00B0                     l2334:
  1199                           
  1200                           ;main.c: 138:     I2C_Master_Stop();
  1201  00B0  120A  158A  279A  120A  118A  	fcall	_I2C_Master_Stop
  1202  00B5                     l2336:
  1203                           
  1204                           ;main.c: 139:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1205  00B5  3003               	movlw	3
  1206  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1207  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1208  00B8  00D8               	movwf	??_main+2
  1209  00B9  3008               	movlw	8
  1210  00BA  00D7               	movwf	??_main+1
  1211  00BB  3076               	movlw	118
  1212  00BC  00D6               	movwf	??_main
  1213  00BD                     u1857:
  1214  00BD  0BD6               	decfsz	??_main,f
  1215  00BE  28BD               	goto	u1857
  1216  00BF  0BD7               	decfsz	??_main+1,f
  1217  00C0  28BD               	goto	u1857
  1218  00C1  0BD8               	decfsz	??_main+2,f
  1219  00C2  28BD               	goto	u1857
  1220  00C3  0000               	nop
  1221  00C4                     l2338:
  1222                           
  1223                           ;main.c: 142:         I2C_Master_Start();
  1224  00C4  120A  158A  2791  120A  118A  	fcall	_I2C_Master_Start
  1225  00C9                     l2340:
  1226                           
  1227                           ;main.c: 143:         I2C_Master_Write(0xD0);
  1228  00C9  30D0               	movlw	208
  1229  00CA  00F3               	movwf	I2C_Master_Write@d
  1230  00CB  3000               	movlw	0
  1231  00CC  00F4               	movwf	I2C_Master_Write@d+1
  1232  00CD  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1233  00D2                     l2342:
  1234                           
  1235                           ;main.c: 144:         I2C_Master_Write(0);
  1236  00D2  3000               	movlw	0
  1237  00D3  00F3               	movwf	I2C_Master_Write@d
  1238  00D4  00F4               	movwf	I2C_Master_Write@d+1
  1239  00D5  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1240  00DA                     l2344:
  1241                           
  1242                           ;main.c: 145:         I2C_Master_RepeatedStart();
  1243  00DA  120A  158A  2788  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1244  00DF                     l2346:
  1245                           
  1246                           ;main.c: 146:         I2C_Master_Write(0xD1);
  1247  00DF  30D1               	movlw	209
  1248  00E0  00F3               	movwf	I2C_Master_Write@d
  1249  00E1  3000               	movlw	0
  1250  00E2  00F4               	movwf	I2C_Master_Write@d+1
  1251  00E3  120A  158A  27A3  120A  118A  	fcall	_I2C_Master_Write
  1252  00E8                     l2348:
  1253                           
  1254                           ;main.c: 147:         sec = I2C_Master_Read(1);
  1255  00E8  3001               	movlw	1
  1256  00E9  00F3               	movwf	I2C_Master_Read@a
  1257  00EA  3000               	movlw	0
  1258  00EB  00F4               	movwf	I2C_Master_Read@a+1
  1259  00EC  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1260  00F1  0874               	movf	?_I2C_Master_Read+1,w
  1261  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1262  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1263  00F4  00E2               	movwf	_sec+1
  1264  00F5  0873               	movf	?_I2C_Master_Read,w
  1265  00F6  00E1               	movwf	_sec
  1266  00F7                     l2350:
  1267                           
  1268                           ;main.c: 148:         min = I2C_Master_Read(1);
  1269  00F7  3001               	movlw	1
  1270  00F8  00F3               	movwf	I2C_Master_Read@a
  1271  00F9  3000               	movlw	0
  1272  00FA  00F4               	movwf	I2C_Master_Read@a+1
  1273  00FB  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1274  0100  0874               	movf	?_I2C_Master_Read+1,w
  1275  0101  00F9               	movwf	_min+1
  1276  0102  0873               	movf	?_I2C_Master_Read,w
  1277  0103  00F8               	movwf	_min
  1278  0104                     l2352:
  1279                           
  1280                           ;main.c: 149:         hour = I2C_Master_Read(1);
  1281  0104  3001               	movlw	1
  1282  0105  00F3               	movwf	I2C_Master_Read@a
  1283  0106  3000               	movlw	0
  1284  0107  00F4               	movwf	I2C_Master_Read@a+1
  1285  0108  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1286  010D  0874               	movf	?_I2C_Master_Read+1,w
  1287  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1288  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0110  00E0               	movwf	_hour+1
  1290  0111  0873               	movf	?_I2C_Master_Read,w
  1291  0112  00DF               	movwf	_hour
  1292  0113                     l2354:
  1293                           
  1294                           ;main.c: 150:         I2C_Master_Read(1);
  1295  0113  3001               	movlw	1
  1296  0114  00F3               	movwf	I2C_Master_Read@a
  1297  0115  3000               	movlw	0
  1298  0116  00F4               	movwf	I2C_Master_Read@a+1
  1299  0117  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1300  011C                     l2356:
  1301                           
  1302                           ;main.c: 151:         date = I2C_Master_Read(1);
  1303  011C  3001               	movlw	1
  1304  011D  00F3               	movwf	I2C_Master_Read@a
  1305  011E  3000               	movlw	0
  1306  011F  00F4               	movwf	I2C_Master_Read@a+1
  1307  0120  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1308  0125  0874               	movf	?_I2C_Master_Read+1,w
  1309  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0128  00DE               	movwf	_date+1
  1312  0129  0873               	movf	?_I2C_Master_Read,w
  1313  012A  00DD               	movwf	_date
  1314  012B                     l2358:
  1315                           
  1316                           ;main.c: 152:         month = I2C_Master_Read(1);
  1317  012B  3001               	movlw	1
  1318  012C  00F3               	movwf	I2C_Master_Read@a
  1319  012D  3000               	movlw	0
  1320  012E  00F4               	movwf	I2C_Master_Read@a+1
  1321  012F  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1322  0134  0874               	movf	?_I2C_Master_Read+1,w
  1323  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0137  00DC               	movwf	_month+1
  1326  0138  0873               	movf	?_I2C_Master_Read,w
  1327  0139  00DB               	movwf	_month
  1328  013A                     l2360:
  1329                           
  1330                           ;main.c: 153:         year = I2C_Master_Read(0);
  1331  013A  3000               	movlw	0
  1332  013B  00F3               	movwf	I2C_Master_Read@a
  1333  013C  00F4               	movwf	I2C_Master_Read@a+1
  1334  013D  120A  118A  26ED  120A  118A  	fcall	_I2C_Master_Read
  1335  0142  0874               	movf	?_I2C_Master_Read+1,w
  1336  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0145  00DA               	movwf	_year+1
  1339  0146  0873               	movf	?_I2C_Master_Read,w
  1340  0147  00D9               	movwf	_year
  1341  0148                     l2362:
  1342                           
  1343                           ;main.c: 154:         I2C_Master_Stop();
  1344  0148  120A  158A  279A  120A  118A  	fcall	_I2C_Master_Stop
  1345  014D                     l2364:
  1346                           
  1347                           ;main.c: 156:         DS3231_time();
  1348  014D  120A  118A  2308  120A  118A  	fcall	_DS3231_time
  1349  0152                     l2366:
  1350                           
  1351                           ;main.c: 157:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1352  0152  3003               	movlw	3
  1353  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0155  00D8               	movwf	??_main+2
  1356  0156  3008               	movlw	8
  1357  0157  00D7               	movwf	??_main+1
  1358  0158  3076               	movlw	118
  1359  0159  00D6               	movwf	??_main
  1360  015A                     u1867:
  1361  015A  0BD6               	decfsz	??_main,f
  1362  015B  295A               	goto	u1867
  1363  015C  0BD7               	decfsz	??_main+1,f
  1364  015D  295A               	goto	u1867
  1365  015E  0BD8               	decfsz	??_main+2,f
  1366  015F  295A               	goto	u1867
  1367  0160  0000               	nop
  1368  0161                     l2368:
  1369                           
  1370                           ;main.c: 159:         Lcd_Set_Cursor(1, 1);
  1371  0161  01F7               	clrf	Lcd_Set_Cursor@b
  1372  0162  0AF7               	incf	Lcd_Set_Cursor@b,f
  1373  0163  3001               	movlw	1
  1374  0164  120A  118A  271D  120A  118A  	fcall	_Lcd_Set_Cursor
  1375  0169                     l2370:
  1376                           
  1377                           ;main.c: 160:         Lcd_Write_String(time);
  1378  0169  3031               	movlw	(low (_time| 0))& (0+255)
  1379  016A  120A  118A  2743  120A  118A  	fcall	_Lcd_Write_String
  1380  016F                     l2372:
  1381                           
  1382                           ;main.c: 161:         Lcd_Set_Cursor(2, 1);
  1383  016F  01F7               	clrf	Lcd_Set_Cursor@b
  1384  0170  0AF7               	incf	Lcd_Set_Cursor@b,f
  1385  0171  3002               	movlw	2
  1386  0172  120A  118A  271D  120A  118A  	fcall	_Lcd_Set_Cursor
  1387  0177                     l2374:
  1388                           
  1389                           ;main.c: 162:         Lcd_Write_String(date1);
  1390  0177  3020               	movlw	(low (_date1| 0))& (0+255)
  1391  0178  120A  118A  2743  120A  118A  	fcall	_Lcd_Write_String
  1392  017D                     l2376:
  1393                           
  1394                           ;main.c: 164:         sprintf(datos, "%.0i",sec);
  1395  017D  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1396  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1397  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0180  00D6               	movwf	??_main
  1399  0181  0856               	movf	??_main,w
  1400  0182  00C9               	movwf	sprintf@f
  1401  0183  0862               	movf	_sec+1,w
  1402  0184  00CB               	movwf	?_sprintf+2
  1403  0185  0861               	movf	_sec,w
  1404  0186  00CA               	movwf	?_sprintf+1
  1405  0187  3064               	movlw	(low (_datos| 0))& (0+255)
  1406  0188  120A  118A  21A3  120A  118A  	fcall	_sprintf
  1407  018D                     l2378:
  1408                           
  1409                           ;main.c: 167:         USART_STRING(datos);
  1410  018D  3064               	movlw	(low (_datos| 0))& (0+255)
  1411  018E  120A  118A  2788  120A  118A  	fcall	_USART_STRING
  1412  0193                     l2380:
  1413                           
  1414                           ;main.c: 169:         USART_ESCRITURA(13);
  1415  0193  300D               	movlw	13
  1416  0194  120A  158A  27AD  120A  118A  	fcall	_USART_ESCRITURA
  1417  0199                     l2382:
  1418                           
  1419                           ;main.c: 170:         USART_ESCRITURA(10);
  1420  0199  300A               	movlw	10
  1421  019A  120A  158A  27AD  120A  118A  	fcall	_USART_ESCRITURA
  1422  019F  28C4               	goto	l2338
  1423  01A0  120A  118A  280C   	ljmp	start
  1424  01A3                     __end_of_main:
  1425                           
  1426                           	psect	text1
  1427  01A3                     __ptext1:	
  1428 ;; *************** function _sprintf *****************
  1429 ;; Defined at:
  1430 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  sp              1    wreg     PTR unsigned char 
  1433 ;;		 -> datos(1), 
  1434 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1435 ;;		 -> STR_1(5), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1438 ;;		 -> datos(1), 
  1439 ;;  tmpval          4    0        struct .
  1440 ;;  val             2   18[BANK0 ] unsigned int 
  1441 ;;  cp              2    0        PTR const unsigned char 
  1442 ;;  len             2    0        unsigned int 
  1443 ;;  c               1   21[BANK0 ] unsigned char 
  1444 ;;  prec            1   20[BANK0 ] char 
  1445 ;;  flag            1   16[BANK0 ] unsigned char 
  1446 ;;  ap              1   15[BANK0 ] PTR void [1]
  1447 ;;		 -> ?_sprintf(2), 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2    9[BANK0 ] int 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       3       0       0       0
  1458 ;;      Locals:         0       7       0       0       0
  1459 ;;      Temps:          0       3       0       0       0
  1460 ;;      Totals:         0      13       0       0       0
  1461 ;;Total ram usage:       13 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    2
  1464 ;; This function calls:
  1465 ;;		___bmul
  1466 ;;		___lwdiv
  1467 ;;		___lwmod
  1468 ;;		_isdigit
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _sprintf
  1476  01A3                     _sprintf:
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1480                           ;sprintf@sp stored from wreg
  1481  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1482  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1483  01A5  00D1               	movwf	sprintf@sp
  1484  01A6                     l2208:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1487  01A6  304A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1488  01A7  00CC               	movwf	??_sprintf
  1489  01A8  084C               	movf	??_sprintf,w
  1490  01A9  00CF               	movwf	sprintf@ap
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1493  01AA  2AF1               	goto	l2286
  1494  01AB                     l2210:
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1497  01AB  3025               	movlw	37
  1498  01AC  0655               	xorwf	sprintf@c,w
  1499  01AD  1903               	btfsc	3,2
  1500  01AE  29B0               	goto	u1721
  1501  01AF  29B1               	goto	u1720
  1502  01B0                     u1721:
  1503  01B0  29BD               	goto	l2216
  1504  01B1                     u1720:
  1505  01B1                     l2212:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1508  01B1  0855               	movf	sprintf@c,w
  1509  01B2  00CC               	movwf	??_sprintf
  1510  01B3  0851               	movf	sprintf@sp,w
  1511  01B4  0084               	movwf	4
  1512  01B5  084C               	movf	??_sprintf,w
  1513  01B6  1383               	bcf	3,7	;select IRP bank0
  1514  01B7  0080               	movwf	0
  1515  01B8                     l2214:
  1516  01B8  3001               	movlw	1
  1517  01B9  00CC               	movwf	??_sprintf
  1518  01BA  084C               	movf	??_sprintf,w
  1519  01BB  07D1               	addwf	sprintf@sp,f
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1522  01BC  2AF1               	goto	l2286
  1523  01BD                     l2216:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1526  01BD  01D0               	clrf	sprintf@flag
  1527  01BE                     l2218:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1530  01BE  0849               	movf	sprintf@f,w
  1531  01BF  0084               	movwf	4
  1532  01C0  120A  158A  2000  120A  118A  	fcall	stringdir
  1533  01C5  3A2E               	xorlw	46
  1534  01C6  1D03               	skipz
  1535  01C7  29C9               	goto	u1731
  1536  01C8  29CA               	goto	u1730
  1537  01C9                     u1731:
  1538  01C9  2A01               	goto	l2232
  1539  01CA                     u1730:
  1540  01CA                     l2220:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1543  01CA  3001               	movlw	1
  1544  01CB  00CC               	movwf	??_sprintf
  1545  01CC  084C               	movf	??_sprintf,w
  1546  01CD  07C9               	addwf	sprintf@f,f
  1547  01CE                     l2222:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1550  01CE  01D4               	clrf	sprintf@prec
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1553  01CF  29F0               	goto	l2230
  1554  01D0                     l2224:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1557  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1558  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1559  01D2  0854               	movf	sprintf@prec,w
  1560  01D3  00CC               	movwf	??_sprintf
  1561  01D4  084C               	movf	??_sprintf,w
  1562  01D5  00F3               	movwf	___bmul@multiplicand
  1563  01D6  300A               	movlw	10
  1564  01D7  120A  158A  27EB  120A  118A  	fcall	___bmul
  1565  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1566  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1567  01DE  00CD               	movwf	??_sprintf+1
  1568  01DF  084D               	movf	??_sprintf+1,w
  1569  01E0  00D4               	movwf	sprintf@prec
  1570  01E1                     l2226:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1573  01E1  0849               	movf	sprintf@f,w
  1574  01E2  0084               	movwf	4
  1575  01E3  120A  158A  2000  120A  118A  	fcall	stringdir
  1576  01E8  3ED0               	addlw	-48
  1577  01E9  00CC               	movwf	??_sprintf
  1578  01EA  084C               	movf	??_sprintf,w
  1579  01EB  07D4               	addwf	sprintf@prec,f
  1580  01EC                     l2228:
  1581  01EC  3001               	movlw	1
  1582  01ED  00CC               	movwf	??_sprintf
  1583  01EE  084C               	movf	??_sprintf,w
  1584  01EF  07C9               	addwf	sprintf@f,f
  1585  01F0                     l2230:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1588  01F0  0849               	movf	sprintf@f,w
  1589  01F1  0084               	movwf	4
  1590  01F2  120A  158A  2000  120A  118A  	fcall	stringdir
  1591  01F7  120A  158A  27C6  120A  118A  	fcall	_isdigit
  1592  01FC  1803               	btfsc	3,0
  1593  01FD  29FF               	goto	u1741
  1594  01FE  2A00               	goto	u1740
  1595  01FF                     u1741:
  1596  01FF  29D0               	goto	l2224
  1597  0200                     u1740:
  1598  0200  2A02               	goto	l2236
  1599  0201                     l2232:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1602  0201  01D4               	clrf	sprintf@prec
  1603  0202                     l2236:
  1604  0202  3001               	movlw	1
  1605  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0205  07C9               	addwf	sprintf@f,f
  1608  0206  30FF               	movlw	-1
  1609  0207  0749               	addwf	sprintf@f,w
  1610  0208  0084               	movwf	4
  1611  0209  120A  158A  2000  120A  118A  	fcall	stringdir
  1612  020E  00D5               	movwf	sprintf@c
  1613  020F  00CC               	movwf	??_sprintf
  1614  0210  01CD               	clrf	??_sprintf+1
  1615                           
  1616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1617                           ; Switch size 1, requested type "simple"
  1618                           ; Number of cases is 1, Range of values is 0 to 0
  1619                           ; switch strategies available:
  1620                           ; Name         Instructions Cycles
  1621                           ; simple_byte            4     3 (average)
  1622                           ; direct_byte           11     8 (fixed)
  1623                           ; jumptable            260     6 (fixed)
  1624                           ;	Chosen strategy is simple_byte
  1625  0211  084D               	movf	??_sprintf+1,w
  1626  0212  3A00               	xorlw	0	; case 0
  1627  0213  1903               	skipnz
  1628  0214  2A16               	goto	l2414
  1629  0215  2AF1               	goto	l2286
  1630  0216                     l2414:
  1631                           
  1632                           ; Switch size 1, requested type "simple"
  1633                           ; Number of cases is 3, Range of values is 0 to 105
  1634                           ; switch strategies available:
  1635                           ; Name         Instructions Cycles
  1636                           ; simple_byte           10     6 (average)
  1637                           ; jumptable            260     6 (fixed)
  1638                           ;	Chosen strategy is simple_byte
  1639  0216  084C               	movf	??_sprintf,w
  1640  0217  3A00               	xorlw	0	; case 0
  1641  0218  1903               	skipnz
  1642  0219  2B03               	goto	l2288
  1643  021A  3A64               	xorlw	100	; case 100
  1644  021B  1903               	skipnz
  1645  021C  2A21               	goto	l2238
  1646  021D  3A0D               	xorlw	13	; case 105
  1647  021E  1903               	skipnz
  1648  021F  2A21               	goto	l2238
  1649  0220  2AF1               	goto	l2286
  1650  0221                     l2238:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1653  0221  084F               	movf	sprintf@ap,w
  1654  0222  0084               	movwf	4
  1655  0223  1383               	bcf	3,7	;select IRP bank0
  1656  0224  0800               	movf	0,w
  1657  0225  00D2               	movwf	sprintf@val
  1658  0226  0A84               	incf	4,f
  1659  0227  0800               	movf	0,w
  1660  0228  00D3               	movwf	sprintf@val+1
  1661  0229                     l2240:
  1662  0229  3002               	movlw	2
  1663  022A  00CC               	movwf	??_sprintf
  1664  022B  084C               	movf	??_sprintf,w
  1665  022C  07CF               	addwf	sprintf@ap,f
  1666  022D                     l2242:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1669  022D  1FD3               	btfss	sprintf@val+1,7
  1670  022E  2A30               	goto	u1751
  1671  022F  2A31               	goto	u1750
  1672  0230                     u1751:
  1673  0230  2A3A               	goto	l2248
  1674  0231                     u1750:
  1675  0231                     l2244:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1678  0231  3003               	movlw	3
  1679  0232  00CC               	movwf	??_sprintf
  1680  0233  084C               	movf	??_sprintf,w
  1681  0234  04D0               	iorwf	sprintf@flag,f
  1682  0235                     l2246:
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1685  0235  09D2               	comf	sprintf@val,f
  1686  0236  09D3               	comf	sprintf@val+1,f
  1687  0237  0AD2               	incf	sprintf@val,f
  1688  0238  1903               	skipnz
  1689  0239  0AD3               	incf	sprintf@val+1,f
  1690  023A                     l2248:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1693  023A  0854               	movf	sprintf@prec,w
  1694  023B  1D03               	btfss	3,2
  1695  023C  2A3E               	goto	u1761
  1696  023D  2A3F               	goto	u1760
  1697  023E                     u1761:
  1698  023E  2A49               	goto	l2254
  1699  023F                     u1760:
  1700  023F                     l2250:
  1701  023F  0852               	movf	sprintf@val,w
  1702  0240  0453               	iorwf	sprintf@val+1,w
  1703  0241  1D03               	btfss	3,2
  1704  0242  2A44               	goto	u1771
  1705  0243  2A45               	goto	u1770
  1706  0244                     u1771:
  1707  0244  2A49               	goto	l2254
  1708  0245                     u1770:
  1709  0245                     l2252:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1712  0245  3001               	movlw	1
  1713  0246  00CC               	movwf	??_sprintf
  1714  0247  084C               	movf	??_sprintf,w
  1715  0248  07D4               	addwf	sprintf@prec,f
  1716  0249                     l2254:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1719  0249  01D5               	clrf	sprintf@c
  1720  024A  0AD5               	incf	sprintf@c,f
  1721  024B                     l2258:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1724  024B  0855               	movf	sprintf@c,w
  1725  024C  00CC               	movwf	??_sprintf
  1726  024D  074C               	addwf	??_sprintf,w
  1727  024E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1728  024F  0084               	movwf	4
  1729  0250  120A  158A  2000  120A  118A  	fcall	stringdir
  1730  0255  00CD               	movwf	??_sprintf+1
  1731  0256  120A  158A  2000  120A  118A  	fcall	stringdir
  1732  025B  00CE               	movwf	??_sprintf+2
  1733  025C  084E               	movf	??_sprintf+2,w
  1734  025D  0253               	subwf	sprintf@val+1,w
  1735  025E  1D03               	skipz
  1736  025F  2A62               	goto	u1785
  1737  0260  084D               	movf	??_sprintf+1,w
  1738  0261  0252               	subwf	sprintf@val,w
  1739  0262                     u1785:
  1740  0262  1803               	skipnc
  1741  0263  2A65               	goto	u1781
  1742  0264  2A66               	goto	u1780
  1743  0265                     u1781:
  1744  0265  2A67               	goto	l2262
  1745  0266                     u1780:
  1746  0266  2A71               	goto	l2264
  1747  0267                     l2262:
  1748  0267  3001               	movlw	1
  1749  0268  00CC               	movwf	??_sprintf
  1750  0269  084C               	movf	??_sprintf,w
  1751  026A  07D5               	addwf	sprintf@c,f
  1752  026B  3005               	movlw	5
  1753  026C  0655               	xorwf	sprintf@c,w
  1754  026D  1D03               	btfss	3,2
  1755  026E  2A70               	goto	u1791
  1756  026F  2A71               	goto	u1790
  1757  0270                     u1791:
  1758  0270  2A4B               	goto	l2258
  1759  0271                     u1790:
  1760  0271                     l2264:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1763  0271  0854               	movf	sprintf@prec,w
  1764  0272  00CC               	movwf	??_sprintf
  1765  0273  01CD               	clrf	??_sprintf+1
  1766  0274  1BCC               	btfsc	??_sprintf,7
  1767  0275  03CD               	decf	??_sprintf+1,f
  1768  0276  084D               	movf	??_sprintf+1,w
  1769  0277  3A80               	xorlw	128
  1770  0278  3C80               	sublw	128
  1771  0279  1D03               	skipz
  1772  027A  2A7D               	goto	u1805
  1773  027B  084C               	movf	??_sprintf,w
  1774  027C  0255               	subwf	sprintf@c,w
  1775  027D                     u1805:
  1776  027D  1803               	skipnc
  1777  027E  2A80               	goto	u1801
  1778  027F  2A81               	goto	u1800
  1779  0280                     u1801:
  1780  0280  2A82               	goto	l2268
  1781  0281                     u1800:
  1782  0281                     l2266:
  1783  0281  2A9C               	goto	l2272
  1784  0282                     l2268:
  1785  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0284  0854               	movf	sprintf@prec,w
  1788  0285  00CC               	movwf	??_sprintf
  1789  0286  01CD               	clrf	??_sprintf+1
  1790  0287  1BCC               	btfsc	??_sprintf,7
  1791  0288  03CD               	decf	??_sprintf+1,f
  1792  0289  084D               	movf	??_sprintf+1,w
  1793  028A  3A80               	xorlw	128
  1794  028B  00CE               	movwf	??_sprintf+2
  1795  028C  3080               	movlw	128
  1796  028D  024E               	subwf	??_sprintf+2,w
  1797  028E  1D03               	skipz
  1798  028F  2A92               	goto	u1815
  1799  0290  0855               	movf	sprintf@c,w
  1800  0291  024C               	subwf	??_sprintf,w
  1801  0292                     u1815:
  1802  0292  1803               	skipnc
  1803  0293  2A95               	goto	u1811
  1804  0294  2A96               	goto	u1810
  1805  0295                     u1811:
  1806  0295  2A9C               	goto	l2272
  1807  0296                     u1810:
  1808  0296                     l2270:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1811  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0298  0855               	movf	sprintf@c,w
  1814  0299  00CC               	movwf	??_sprintf
  1815  029A  084C               	movf	??_sprintf,w
  1816  029B  00D4               	movwf	sprintf@prec
  1817  029C                     l2272:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1820  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1821  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1822  029E  0850               	movf	sprintf@flag,w
  1823  029F  3903               	andlw	3
  1824  02A0  1903               	btfsc	3,2
  1825  02A1  2AA3               	goto	u1821
  1826  02A2  2AA4               	goto	u1820
  1827  02A3                     u1821:
  1828  02A3  2AE8               	goto	l2284
  1829  02A4                     u1820:
  1830  02A4                     l2274:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1833  02A4  302D               	movlw	45
  1834  02A5  00CC               	movwf	??_sprintf
  1835  02A6  0851               	movf	sprintf@sp,w
  1836  02A7  0084               	movwf	4
  1837  02A8  084C               	movf	??_sprintf,w
  1838  02A9  1383               	bcf	3,7	;select IRP bank0
  1839  02AA  0080               	movwf	0
  1840  02AB                     l2276:
  1841  02AB  3001               	movlw	1
  1842  02AC  00CC               	movwf	??_sprintf
  1843  02AD  084C               	movf	??_sprintf,w
  1844  02AE  07D1               	addwf	sprintf@sp,f
  1845  02AF  2AE8               	goto	l2284
  1846  02B0                     l2278:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1849  02B0  300A               	movlw	10
  1850  02B1  00C3               	movwf	___lwmod@divisor
  1851  02B2  3000               	movlw	0
  1852  02B3  00C4               	movwf	___lwmod@divisor+1
  1853  02B4  0854               	movf	sprintf@prec,w
  1854  02B5  00CC               	movwf	??_sprintf
  1855  02B6  074C               	addwf	??_sprintf,w
  1856  02B7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1857  02B8  0084               	movwf	4
  1858  02B9  120A  158A  2000  120A  118A  	fcall	stringdir
  1859  02BE  00F3               	movwf	___lwdiv@divisor
  1860  02BF  120A  158A  2000  120A  118A  	fcall	stringdir
  1861  02C4  00F4               	movwf	___lwdiv@divisor+1
  1862  02C5  0853               	movf	sprintf@val+1,w
  1863  02C6  00F6               	movwf	___lwdiv@dividend+1
  1864  02C7  0852               	movf	sprintf@val,w
  1865  02C8  00F5               	movwf	___lwdiv@dividend
  1866  02C9  120A  118A  25CB  120A  118A  	fcall	___lwdiv
  1867  02CE  0874               	movf	?___lwdiv+1,w
  1868  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1869  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1870  02D1  00C6               	movwf	___lwmod@dividend+1
  1871  02D2  0873               	movf	?___lwdiv,w
  1872  02D3  00C5               	movwf	___lwmod@dividend
  1873  02D4  120A  118A  2611  120A  118A  	fcall	___lwmod
  1874  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1875  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1876  02DB  0843               	movf	?___lwmod,w
  1877  02DC  3E30               	addlw	48
  1878  02DD  00CD               	movwf	??_sprintf+1
  1879  02DE  084D               	movf	??_sprintf+1,w
  1880  02DF  00D5               	movwf	sprintf@c
  1881  02E0                     l2280:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1884  02E0  0855               	movf	sprintf@c,w
  1885  02E1  00CC               	movwf	??_sprintf
  1886  02E2  0851               	movf	sprintf@sp,w
  1887  02E3  0084               	movwf	4
  1888  02E4  084C               	movf	??_sprintf,w
  1889  02E5  1383               	bcf	3,7	;select IRP bank0
  1890  02E6  0080               	movwf	0
  1891  02E7  2AAB               	goto	l2276
  1892  02E8                     l2284:
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1895  02E8  30FF               	movlw	255
  1896  02E9  00CC               	movwf	??_sprintf
  1897  02EA  084C               	movf	??_sprintf,w
  1898  02EB  07D4               	addwf	sprintf@prec,f
  1899  02EC  0A54               	incf	sprintf@prec,w
  1900  02ED  1D03               	btfss	3,2
  1901  02EE  2AF0               	goto	u1831
  1902  02EF  2AF1               	goto	u1830
  1903  02F0                     u1831:
  1904  02F0  2AB0               	goto	l2278
  1905  02F1                     u1830:
  1906  02F1                     l2286:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1909  02F1  3001               	movlw	1
  1910  02F2  07C9               	addwf	sprintf@f,f
  1911  02F3  30FF               	movlw	-1
  1912  02F4  0749               	addwf	sprintf@f,w
  1913  02F5  0084               	movwf	4
  1914  02F6  120A  158A  2000  120A  118A  	fcall	stringdir
  1915  02FB  00CC               	movwf	??_sprintf
  1916  02FC  084C               	movf	??_sprintf,w
  1917  02FD  00D5               	movwf	sprintf@c
  1918  02FE  0855               	movf	sprintf@c,w
  1919  02FF  1D03               	btfss	3,2
  1920  0300  2B02               	goto	u1841
  1921  0301  2B03               	goto	u1840
  1922  0302                     u1841:
  1923  0302  29AB               	goto	l2210
  1924  0303                     u1840:
  1925  0303                     l2288:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1928  0303  0851               	movf	sprintf@sp,w
  1929  0304  0084               	movwf	4
  1930  0305  1383               	bcf	3,7	;select IRP bank0
  1931  0306  0180               	clrf	0
  1932  0307                     l365:
  1933  0307  0008               	return
  1934  0308                     __end_of_sprintf:
  1935                           
  1936                           	psect	text2
  1937  0FC6                     __ptext2:	
  1938 ;; *************** function _isdigit *****************
  1939 ;; Defined at:
  1940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  c               1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  c               1    4[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;		None               void
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         2       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0
  1957 ;;      Totals:         2       0       0       0       0
  1958 ;;Total ram usage:        2 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_sprintf
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _isdigit
  1970  0FC6                     _isdigit:
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1974                           ;isdigit@c stored from wreg
  1975  0FC6  00F4               	movwf	isdigit@c
  1976  0FC7                     l1530:
  1977  0FC7  01F3               	clrf	_isdigit$912
  1978  0FC8                     l1532:
  1979  0FC8  303A               	movlw	58
  1980  0FC9  0274               	subwf	isdigit@c,w
  1981  0FCA  1803               	skipnc
  1982  0FCB  2FCD               	goto	u891
  1983  0FCC  2FCE               	goto	u890
  1984  0FCD                     u891:
  1985  0FCD  2FD6               	goto	l1538
  1986  0FCE                     u890:
  1987  0FCE                     l1534:
  1988  0FCE  3030               	movlw	48
  1989  0FCF  0274               	subwf	isdigit@c,w
  1990  0FD0  1C03               	skipc
  1991  0FD1  2FD3               	goto	u901
  1992  0FD2  2FD4               	goto	u900
  1993  0FD3                     u901:
  1994  0FD3  2FD6               	goto	l1538
  1995  0FD4                     u900:
  1996  0FD4                     l1536:
  1997  0FD4  01F3               	clrf	_isdigit$912
  1998  0FD5  0AF3               	incf	_isdigit$912,f
  1999  0FD6                     l1538:
  2000  0FD6  0C73               	rrf	_isdigit$912,w
  2001  0FD7                     l822:
  2002  0FD7  0008               	return
  2003  0FD8                     __end_of_isdigit:
  2004                           
  2005                           	psect	text3
  2006  0611                     __ptext3:	
  2007 ;; *************** function ___lwmod *****************
  2008 ;; Defined at:
  2009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  divisor         2    3[BANK0 ] unsigned int 
  2012 ;;  dividend        2    5[BANK0 ] unsigned int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  counter         1    8[BANK0 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2    3[BANK0 ] unsigned int 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       4       0       0       0
  2025 ;;      Locals:         0       1       0       0       0
  2026 ;;      Temps:          0       1       0       0       0
  2027 ;;      Totals:         0       6       0       0       0
  2028 ;;Total ram usage:        6 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_sprintf
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function ___lwmod
  2040  0611                     ___lwmod:
  2041  0611                     l1650:	
  2042                           ;incstack = 0
  2043                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2044                           
  2045  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0613  0843               	movf	___lwmod@divisor,w
  2048  0614  0444               	iorwf	___lwmod@divisor+1,w
  2049  0615  1903               	btfsc	3,2
  2050  0616  2E18               	goto	u1171
  2051  0617  2E19               	goto	u1170
  2052  0618                     u1171:
  2053  0618  2E48               	goto	l1668
  2054  0619                     u1170:
  2055  0619                     l1652:
  2056  0619  01C8               	clrf	___lwmod@counter
  2057  061A  0AC8               	incf	___lwmod@counter,f
  2058  061B  2E27               	goto	l1658
  2059  061C                     l1654:
  2060  061C  3001               	movlw	1
  2061  061D                     u1185:
  2062  061D  1003               	clrc
  2063  061E  0DC3               	rlf	___lwmod@divisor,f
  2064  061F  0DC4               	rlf	___lwmod@divisor+1,f
  2065  0620  3EFF               	addlw	-1
  2066  0621  1D03               	skipz
  2067  0622  2E1D               	goto	u1185
  2068  0623                     l1656:
  2069  0623  3001               	movlw	1
  2070  0624  00C7               	movwf	??___lwmod
  2071  0625  0847               	movf	??___lwmod,w
  2072  0626  07C8               	addwf	___lwmod@counter,f
  2073  0627                     l1658:
  2074  0627  1FC4               	btfss	___lwmod@divisor+1,7
  2075  0628  2E2A               	goto	u1191
  2076  0629  2E2B               	goto	u1190
  2077  062A                     u1191:
  2078  062A  2E1C               	goto	l1654
  2079  062B                     u1190:
  2080  062B                     l1660:
  2081  062B  0844               	movf	___lwmod@divisor+1,w
  2082  062C  0246               	subwf	___lwmod@dividend+1,w
  2083  062D  1D03               	skipz
  2084  062E  2E31               	goto	u1205
  2085  062F  0843               	movf	___lwmod@divisor,w
  2086  0630  0245               	subwf	___lwmod@dividend,w
  2087  0631                     u1205:
  2088  0631  1C03               	skipc
  2089  0632  2E34               	goto	u1201
  2090  0633  2E35               	goto	u1200
  2091  0634                     u1201:
  2092  0634  2E3B               	goto	l1664
  2093  0635                     u1200:
  2094  0635                     l1662:
  2095  0635  0843               	movf	___lwmod@divisor,w
  2096  0636  02C5               	subwf	___lwmod@dividend,f
  2097  0637  0844               	movf	___lwmod@divisor+1,w
  2098  0638  1C03               	skipc
  2099  0639  03C6               	decf	___lwmod@dividend+1,f
  2100  063A  02C6               	subwf	___lwmod@dividend+1,f
  2101  063B                     l1664:
  2102  063B  3001               	movlw	1
  2103  063C                     u1215:
  2104  063C  1003               	clrc
  2105  063D  0CC4               	rrf	___lwmod@divisor+1,f
  2106  063E  0CC3               	rrf	___lwmod@divisor,f
  2107  063F  3EFF               	addlw	-1
  2108  0640  1D03               	skipz
  2109  0641  2E3C               	goto	u1215
  2110  0642                     l1666:
  2111  0642  3001               	movlw	1
  2112  0643  02C8               	subwf	___lwmod@counter,f
  2113  0644  1D03               	btfss	3,2
  2114  0645  2E47               	goto	u1221
  2115  0646  2E48               	goto	u1220
  2116  0647                     u1221:
  2117  0647  2E2B               	goto	l1660
  2118  0648                     u1220:
  2119  0648                     l1668:
  2120  0648  0846               	movf	___lwmod@dividend+1,w
  2121  0649  00C4               	movwf	?___lwmod+1
  2122  064A  0845               	movf	___lwmod@dividend,w
  2123  064B  00C3               	movwf	?___lwmod
  2124  064C                     l651:
  2125  064C  0008               	return
  2126  064D                     __end_of___lwmod:
  2127                           
  2128                           	psect	text4
  2129  05CB                     __ptext4:	
  2130 ;; *************** function ___lwdiv *****************
  2131 ;; Defined at:
  2132 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  divisor         2    3[COMMON] unsigned int 
  2135 ;;  dividend        2    5[COMMON] unsigned int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  quotient        2    1[BANK0 ] unsigned int 
  2138 ;;  counter         1    0[BANK0 ] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    3[COMMON] unsigned int 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         4       0       0       0       0
  2149 ;;      Locals:         0       3       0       0       0
  2150 ;;      Temps:          1       0       0       0       0
  2151 ;;      Totals:         5       3       0       0       0
  2152 ;;Total ram usage:        8 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_sprintf
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function ___lwdiv
  2164  05CB                     ___lwdiv:
  2165  05CB                     l2086:	
  2166                           ;incstack = 0
  2167                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2168                           
  2169  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2170  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2171  05CD  01C1               	clrf	___lwdiv@quotient
  2172  05CE  01C2               	clrf	___lwdiv@quotient+1
  2173  05CF                     l2088:
  2174  05CF  0873               	movf	___lwdiv@divisor,w
  2175  05D0  0474               	iorwf	___lwdiv@divisor+1,w
  2176  05D1  1903               	btfsc	3,2
  2177  05D2  2DD4               	goto	u1611
  2178  05D3  2DD5               	goto	u1610
  2179  05D4                     u1611:
  2180  05D4  2E0C               	goto	l2108
  2181  05D5                     u1610:
  2182  05D5                     l2090:
  2183  05D5  01C0               	clrf	___lwdiv@counter
  2184  05D6  0AC0               	incf	___lwdiv@counter,f
  2185  05D7  2DE3               	goto	l2096
  2186  05D8                     l2092:
  2187  05D8  3001               	movlw	1
  2188  05D9                     u1625:
  2189  05D9  1003               	clrc
  2190  05DA  0DF3               	rlf	___lwdiv@divisor,f
  2191  05DB  0DF4               	rlf	___lwdiv@divisor+1,f
  2192  05DC  3EFF               	addlw	-1
  2193  05DD  1D03               	skipz
  2194  05DE  2DD9               	goto	u1625
  2195  05DF                     l2094:
  2196  05DF  3001               	movlw	1
  2197  05E0  00F7               	movwf	??___lwdiv
  2198  05E1  0877               	movf	??___lwdiv,w
  2199  05E2  07C0               	addwf	___lwdiv@counter,f
  2200  05E3                     l2096:
  2201  05E3  1FF4               	btfss	___lwdiv@divisor+1,7
  2202  05E4  2DE6               	goto	u1631
  2203  05E5  2DE7               	goto	u1630
  2204  05E6                     u1631:
  2205  05E6  2DD8               	goto	l2092
  2206  05E7                     u1630:
  2207  05E7                     l2098:
  2208  05E7  3001               	movlw	1
  2209  05E8                     u1645:
  2210  05E8  1003               	clrc
  2211  05E9  0DC1               	rlf	___lwdiv@quotient,f
  2212  05EA  0DC2               	rlf	___lwdiv@quotient+1,f
  2213  05EB  3EFF               	addlw	-1
  2214  05EC  1D03               	skipz
  2215  05ED  2DE8               	goto	u1645
  2216  05EE  0874               	movf	___lwdiv@divisor+1,w
  2217  05EF  0276               	subwf	___lwdiv@dividend+1,w
  2218  05F0  1D03               	skipz
  2219  05F1  2DF4               	goto	u1655
  2220  05F2  0873               	movf	___lwdiv@divisor,w
  2221  05F3  0275               	subwf	___lwdiv@dividend,w
  2222  05F4                     u1655:
  2223  05F4  1C03               	skipc
  2224  05F5  2DF7               	goto	u1651
  2225  05F6  2DF8               	goto	u1650
  2226  05F7                     u1651:
  2227  05F7  2DFF               	goto	l2104
  2228  05F8                     u1650:
  2229  05F8                     l2100:
  2230  05F8  0873               	movf	___lwdiv@divisor,w
  2231  05F9  02F5               	subwf	___lwdiv@dividend,f
  2232  05FA  0874               	movf	___lwdiv@divisor+1,w
  2233  05FB  1C03               	skipc
  2234  05FC  03F6               	decf	___lwdiv@dividend+1,f
  2235  05FD  02F6               	subwf	___lwdiv@dividend+1,f
  2236  05FE                     l2102:
  2237  05FE  1441               	bsf	___lwdiv@quotient,0
  2238  05FF                     l2104:
  2239  05FF  3001               	movlw	1
  2240  0600                     u1665:
  2241  0600  1003               	clrc
  2242  0601  0CF4               	rrf	___lwdiv@divisor+1,f
  2243  0602  0CF3               	rrf	___lwdiv@divisor,f
  2244  0603  3EFF               	addlw	-1
  2245  0604  1D03               	skipz
  2246  0605  2E00               	goto	u1665
  2247  0606                     l2106:
  2248  0606  3001               	movlw	1
  2249  0607  02C0               	subwf	___lwdiv@counter,f
  2250  0608  1D03               	btfss	3,2
  2251  0609  2E0B               	goto	u1671
  2252  060A  2E0C               	goto	u1670
  2253  060B                     u1671:
  2254  060B  2DE7               	goto	l2098
  2255  060C                     u1670:
  2256  060C                     l2108:
  2257  060C  0842               	movf	___lwdiv@quotient+1,w
  2258  060D  00F4               	movwf	?___lwdiv+1
  2259  060E  0841               	movf	___lwdiv@quotient,w
  2260  060F  00F3               	movwf	?___lwdiv
  2261  0610                     l641:
  2262  0610  0008               	return
  2263  0611                     __end_of___lwdiv:
  2264                           
  2265                           	psect	text5
  2266  06BC                     __ptext5:	
  2267 ;; *************** function _setup *****************
  2268 ;; Defined at:
  2269 ;;		line 179 in file "main.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    3
  2290 ;; This function calls:
  2291 ;;		_I2C_Master_Init
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _setup
  2299  06BC                     _setup:
  2300  06BC                     l2112:	
  2301                           ;incstack = 0
  2302                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2303                           
  2304                           
  2305                           ;main.c: 180:     ANSEL = 0;
  2306  06BC  1683               	bsf	3,5	;RP0=1, select bank3
  2307  06BD  1703               	bsf	3,6	;RP1=1, select bank3
  2308  06BE  0188               	clrf	8	;volatile
  2309                           
  2310                           ;main.c: 181:     ANSELH = 0;
  2311  06BF  0189               	clrf	9	;volatile
  2312                           
  2313                           ;main.c: 182:     TRISA = 0;
  2314  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  2315  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  2316  06C2  0185               	clrf	5	;volatile
  2317                           
  2318                           ;main.c: 183:     TRISB = 0;
  2319  06C3  0186               	clrf	6	;volatile
  2320  06C4                     l2114:
  2321                           
  2322                           ;main.c: 184:     TRISCbits.TRISC3 = 0;
  2323  06C4  1187               	bcf	7,3	;volatile
  2324  06C5                     l2116:
  2325                           
  2326                           ;main.c: 185:     TRISCbits.TRISC6 = 0;
  2327  06C5  1307               	bcf	7,6	;volatile
  2328  06C6                     l2118:
  2329                           
  2330                           ;main.c: 186:     TRISCbits.TRISC7 = 1;
  2331  06C6  1787               	bsf	7,7	;volatile
  2332                           
  2333                           ;main.c: 187:     TRISD = 0;
  2334  06C7  0188               	clrf	8	;volatile
  2335                           
  2336                           ;main.c: 188:     TRISE = 0;
  2337  06C8  0189               	clrf	9	;volatile
  2338                           
  2339                           ;main.c: 189:     PORTA = 0;
  2340  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2341  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2342  06CB  0185               	clrf	5	;volatile
  2343                           
  2344                           ;main.c: 190:     PORTB = 0;
  2345  06CC  0186               	clrf	6	;volatile
  2346                           
  2347                           ;main.c: 191:     PORTC = 0;
  2348  06CD  0187               	clrf	7	;volatile
  2349                           
  2350                           ;main.c: 192:     PORTD = 0;
  2351  06CE  0188               	clrf	8	;volatile
  2352                           
  2353                           ;main.c: 193:     PORTE = 0;
  2354  06CF  0189               	clrf	9	;volatile
  2355  06D0                     l2120:
  2356                           
  2357                           ;main.c: 194:     I2C_Master_Init(100000);
  2358  06D0  3000               	movlw	0
  2359  06D1  00D0               	movwf	I2C_Master_Init@c+3
  2360  06D2  3001               	movlw	1
  2361  06D3  00CF               	movwf	I2C_Master_Init@c+2
  2362  06D4  3086               	movlw	134
  2363  06D5  00CE               	movwf	I2C_Master_Init@c+1
  2364  06D6  30A0               	movlw	160
  2365  06D7  00CD               	movwf	I2C_Master_Init@c
  2366  06D8  120A  118A  264D  120A  118A  	fcall	_I2C_Master_Init
  2367  06DD                     l2122:
  2368                           
  2369                           ;main.c: 199:     INTCONbits.PEIE = 1;
  2370  06DD  170B               	bsf	11,6	;volatile
  2371  06DE                     l2124:
  2372                           
  2373                           ;main.c: 200:     PIE1bits.RCIE = 1;
  2374  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  2375  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  2376  06E0  168C               	bsf	12,5	;volatile
  2377  06E1                     l2126:
  2378                           
  2379                           ;main.c: 201:     INTCONbits.GIE = 1;
  2380  06E1  178B               	bsf	11,7	;volatile
  2381  06E2                     l2128:
  2382                           
  2383                           ;main.c: 204:     SPBRGH = 0;
  2384  06E2  019A               	clrf	26	;volatile
  2385  06E3                     l2130:
  2386                           
  2387                           ;main.c: 205:     SPBRG = 12;
  2388  06E3  300C               	movlw	12
  2389  06E4  0099               	movwf	25	;volatile
  2390  06E5                     l2132:
  2391                           
  2392                           ;main.c: 207:     TXSTAbits.TXEN = 1;
  2393  06E5  1698               	bsf	24,5	;volatile
  2394  06E6                     l2134:
  2395                           
  2396                           ;main.c: 208:     TXSTAbits.SYNC = 0;
  2397  06E6  1218               	bcf	24,4	;volatile
  2398  06E7                     l2136:
  2399                           
  2400                           ;main.c: 210:     RCSTAbits.SPEN = 1;
  2401  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2402  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2403  06E9  1798               	bsf	24,7	;volatile
  2404  06EA                     l2138:
  2405                           
  2406                           ;main.c: 211:     RCSTAbits.CREN = 1;
  2407  06EA  1618               	bsf	24,4	;volatile
  2408  06EB                     l2140:
  2409                           
  2410                           ;main.c: 212:     RCREG = 0;
  2411  06EB  019A               	clrf	26	;volatile
  2412  06EC                     l122:
  2413  06EC  0008               	return
  2414  06ED                     __end_of_setup:
  2415                           
  2416                           	psect	text6
  2417  064D                     __ptext6:	
  2418 ;; *************** function _I2C_Master_Init *****************
  2419 ;; Defined at:
  2420 ;;		line 16 in file "I2C.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  c               4   13[BANK0 ] const unsigned long 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, pclath, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         0       4       0       0       0
  2435 ;;      Locals:         0       0       0       0       0
  2436 ;;      Temps:          4       0       0       0       0
  2437 ;;      Totals:         4       4       0       0       0
  2438 ;;Total ram usage:        8 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    2
  2441 ;; This function calls:
  2442 ;;		___lldiv
  2443 ;; This function is called by:
  2444 ;;		_setup
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _I2C_Master_Init
  2450  064D                     _I2C_Master_Init:
  2451  064D                     l2008:	
  2452                           ;incstack = 0
  2453                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2454                           
  2455                           
  2456                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2457  064D  3028               	movlw	40
  2458  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2459  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0650  0094               	movwf	20	;volatile
  2461  0651                     l2010:
  2462                           
  2463                           ;I2C.c: 19:     SSPCON2 = 0;
  2464  0651  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0652  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0653  0191               	clrf	17	;volatile
  2467  0654                     l2012:
  2468                           
  2469                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2470  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0656  084D               	movf	I2C_Master_Init@c,w
  2473  0657  00F4               	movwf	??_I2C_Master_Init
  2474  0658  084E               	movf	I2C_Master_Init@c+1,w
  2475  0659  00F5               	movwf	??_I2C_Master_Init+1
  2476  065A  084F               	movf	I2C_Master_Init@c+2,w
  2477  065B  00F6               	movwf	??_I2C_Master_Init+2
  2478  065C  0850               	movf	I2C_Master_Init@c+3,w
  2479  065D  00F7               	movwf	??_I2C_Master_Init+3
  2480  065E  3002               	movlw	2
  2481  065F                     u1485:
  2482  065F  1003               	clrc
  2483  0660  0DF4               	rlf	??_I2C_Master_Init,f
  2484  0661  0DF5               	rlf	??_I2C_Master_Init+1,f
  2485  0662  0DF6               	rlf	??_I2C_Master_Init+2,f
  2486  0663  0DF7               	rlf	??_I2C_Master_Init+3,f
  2487  0664                     u1480:
  2488  0664  3EFF               	addlw	-1
  2489  0665  1D03               	skipz
  2490  0666  2E5F               	goto	u1485
  2491  0667  0877               	movf	??_I2C_Master_Init+3,w
  2492  0668  00C3               	movwf	___lldiv@divisor+3
  2493  0669  0876               	movf	??_I2C_Master_Init+2,w
  2494  066A  00C2               	movwf	___lldiv@divisor+2
  2495  066B  0875               	movf	??_I2C_Master_Init+1,w
  2496  066C  00C1               	movwf	___lldiv@divisor+1
  2497  066D  0874               	movf	??_I2C_Master_Init,w
  2498  066E  00C0               	movwf	___lldiv@divisor
  2499  066F  3000               	movlw	0
  2500  0670  00C7               	movwf	___lldiv@dividend+3
  2501  0671  307A               	movlw	122
  2502  0672  00C6               	movwf	___lldiv@dividend+2
  2503  0673  3012               	movlw	18
  2504  0674  00C5               	movwf	___lldiv@dividend+1
  2505  0675  3000               	movlw	0
  2506  0676  00C4               	movwf	___lldiv@dividend
  2507  0677  120A  118A  24B8  120A  118A  	fcall	___lldiv
  2508  067C  1283               	bcf	3,5	;RP0=0, select bank0
  2509  067D  1303               	bcf	3,6	;RP1=0, select bank0
  2510  067E  0840               	movf	?___lldiv,w
  2511  067F  3EFF               	addlw	255
  2512  0680  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0681  1303               	bcf	3,6	;RP1=0, select bank1
  2514  0682  0093               	movwf	19	;volatile
  2515  0683                     l2014:
  2516                           
  2517                           ;I2C.c: 21:     SSPSTAT = 0;
  2518  0683  0194               	clrf	20	;volatile
  2519  0684                     l2016:
  2520                           
  2521                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2522  0684  1587               	bsf	7,3	;volatile
  2523  0685                     l2018:
  2524                           
  2525                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2526  0685  1607               	bsf	7,4	;volatile
  2527  0686                     l218:
  2528  0686  0008               	return
  2529  0687                     __end_of_I2C_Master_Init:
  2530                           
  2531                           	psect	text7
  2532  04B8                     __ptext7:	
  2533 ;; *************** function ___lldiv *****************
  2534 ;; Defined at:
  2535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  divisor         4    0[BANK0 ] unsigned long 
  2538 ;;  dividend        4    4[BANK0 ] unsigned long 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  quotient        4    8[BANK0 ] unsigned long 
  2541 ;;  counter         1   12[BANK0 ] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  4    0[BANK0 ] unsigned long 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       8       0       0       0
  2552 ;;      Locals:         0       5       0       0       0
  2553 ;;      Temps:          1       0       0       0       0
  2554 ;;      Totals:         1      13       0       0       0
  2555 ;;Total ram usage:       14 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    1
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_I2C_Master_Init
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function ___lldiv
  2567  04B8                     ___lldiv:
  2568  04B8                     l1984:	
  2569                           ;incstack = 0
  2570                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2571                           
  2572  04B8  3000               	movlw	0
  2573  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2574  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2575  04BB  00CB               	movwf	___lldiv@quotient+3
  2576  04BC  3000               	movlw	0
  2577  04BD  00CA               	movwf	___lldiv@quotient+2
  2578  04BE  3000               	movlw	0
  2579  04BF  00C9               	movwf	___lldiv@quotient+1
  2580  04C0  3000               	movlw	0
  2581  04C1  00C8               	movwf	___lldiv@quotient
  2582  04C2  0843               	movf	___lldiv@divisor+3,w
  2583  04C3  0442               	iorwf	___lldiv@divisor+2,w
  2584  04C4  0441               	iorwf	___lldiv@divisor+1,w
  2585  04C5  0440               	iorwf	___lldiv@divisor,w
  2586  04C6  1903               	skipnz
  2587  04C7  2CC9               	goto	u1411
  2588  04C8  2CCA               	goto	u1410
  2589  04C9                     u1411:
  2590  04C9  2D17               	goto	l2004
  2591  04CA                     u1410:
  2592  04CA                     l1986:
  2593  04CA  01CC               	clrf	___lldiv@counter
  2594  04CB  0ACC               	incf	___lldiv@counter,f
  2595  04CC  2CDA               	goto	l1990
  2596  04CD                     l1988:
  2597  04CD  3001               	movlw	1
  2598  04CE  00F3               	movwf	??___lldiv
  2599  04CF                     u1425:
  2600  04CF  1003               	clrc
  2601  04D0  0DC0               	rlf	___lldiv@divisor,f
  2602  04D1  0DC1               	rlf	___lldiv@divisor+1,f
  2603  04D2  0DC2               	rlf	___lldiv@divisor+2,f
  2604  04D3  0DC3               	rlf	___lldiv@divisor+3,f
  2605  04D4  0BF3               	decfsz	??___lldiv,f
  2606  04D5  2CCF               	goto	u1425
  2607  04D6  3001               	movlw	1
  2608  04D7  00F3               	movwf	??___lldiv
  2609  04D8  0873               	movf	??___lldiv,w
  2610  04D9  07CC               	addwf	___lldiv@counter,f
  2611  04DA                     l1990:
  2612  04DA  1FC3               	btfss	___lldiv@divisor+3,7
  2613  04DB  2CDD               	goto	u1431
  2614  04DC  2CDE               	goto	u1430
  2615  04DD                     u1431:
  2616  04DD  2CCD               	goto	l1988
  2617  04DE                     u1430:
  2618  04DE                     l1992:
  2619  04DE  3001               	movlw	1
  2620  04DF  00F3               	movwf	??___lldiv
  2621  04E0                     u1445:
  2622  04E0  1003               	clrc
  2623  04E1  0DC8               	rlf	___lldiv@quotient,f
  2624  04E2  0DC9               	rlf	___lldiv@quotient+1,f
  2625  04E3  0DCA               	rlf	___lldiv@quotient+2,f
  2626  04E4  0DCB               	rlf	___lldiv@quotient+3,f
  2627  04E5  0BF3               	decfsz	??___lldiv,f
  2628  04E6  2CE0               	goto	u1445
  2629  04E7                     l1994:
  2630  04E7  0843               	movf	___lldiv@divisor+3,w
  2631  04E8  0247               	subwf	___lldiv@dividend+3,w
  2632  04E9  1D03               	skipz
  2633  04EA  2CF5               	goto	u1455
  2634  04EB  0842               	movf	___lldiv@divisor+2,w
  2635  04EC  0246               	subwf	___lldiv@dividend+2,w
  2636  04ED  1D03               	skipz
  2637  04EE  2CF5               	goto	u1455
  2638  04EF  0841               	movf	___lldiv@divisor+1,w
  2639  04F0  0245               	subwf	___lldiv@dividend+1,w
  2640  04F1  1D03               	skipz
  2641  04F2  2CF5               	goto	u1455
  2642  04F3  0840               	movf	___lldiv@divisor,w
  2643  04F4  0244               	subwf	___lldiv@dividend,w
  2644  04F5                     u1455:
  2645  04F5  1C03               	skipc
  2646  04F6  2CF8               	goto	u1451
  2647  04F7  2CF9               	goto	u1450
  2648  04F8                     u1451:
  2649  04F8  2D08               	goto	l2000
  2650  04F9                     u1450:
  2651  04F9                     l1996:
  2652  04F9  0840               	movf	___lldiv@divisor,w
  2653  04FA  02C4               	subwf	___lldiv@dividend,f
  2654  04FB  0841               	movf	___lldiv@divisor+1,w
  2655  04FC  1C03               	skipc
  2656  04FD  0F41               	incfsz	___lldiv@divisor+1,w
  2657  04FE  02C5               	subwf	___lldiv@dividend+1,f
  2658  04FF  0842               	movf	___lldiv@divisor+2,w
  2659  0500  1C03               	skipc
  2660  0501  0F42               	incfsz	___lldiv@divisor+2,w
  2661  0502  02C6               	subwf	___lldiv@dividend+2,f
  2662  0503  0843               	movf	___lldiv@divisor+3,w
  2663  0504  1C03               	skipc
  2664  0505  0F43               	incfsz	___lldiv@divisor+3,w
  2665  0506  02C7               	subwf	___lldiv@dividend+3,f
  2666  0507                     l1998:
  2667  0507  1448               	bsf	___lldiv@quotient,0
  2668  0508                     l2000:
  2669  0508  3001               	movlw	1
  2670  0509                     u1465:
  2671  0509  1003               	clrc
  2672  050A  0CC3               	rrf	___lldiv@divisor+3,f
  2673  050B  0CC2               	rrf	___lldiv@divisor+2,f
  2674  050C  0CC1               	rrf	___lldiv@divisor+1,f
  2675  050D  0CC0               	rrf	___lldiv@divisor,f
  2676  050E  3EFF               	addlw	-1
  2677  050F  1D03               	skipz
  2678  0510  2D09               	goto	u1465
  2679  0511                     l2002:
  2680  0511  3001               	movlw	1
  2681  0512  02CC               	subwf	___lldiv@counter,f
  2682  0513  1D03               	btfss	3,2
  2683  0514  2D16               	goto	u1471
  2684  0515  2D17               	goto	u1470
  2685  0516                     u1471:
  2686  0516  2CDE               	goto	l1992
  2687  0517                     u1470:
  2688  0517                     l2004:
  2689  0517  084B               	movf	___lldiv@quotient+3,w
  2690  0518  00C3               	movwf	?___lldiv+3
  2691  0519  084A               	movf	___lldiv@quotient+2,w
  2692  051A  00C2               	movwf	?___lldiv+2
  2693  051B  0849               	movf	___lldiv@quotient+1,w
  2694  051C  00C1               	movwf	?___lldiv+1
  2695  051D  0848               	movf	___lldiv@quotient,w
  2696  051E  00C0               	movwf	?___lldiv
  2697  051F                     l405:
  2698  051F  0008               	return
  2699  0520                     __end_of___lldiv:
  2700                           
  2701                           	psect	text8
  2702  0788                     __ptext8:	
  2703 ;; *************** function _USART_STRING *****************
  2704 ;; Defined at:
  2705 ;;		line 17 in file "USART.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  a               1    wreg     PTR unsigned char 
  2708 ;;		 -> datos(1), 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  a               1    5[COMMON] PTR unsigned char 
  2711 ;;		 -> datos(1), 
  2712 ;;  i               1    6[COMMON] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         0       0       0       0       0
  2723 ;;      Locals:         2       0       0       0       0
  2724 ;;      Temps:          1       0       0       0       0
  2725 ;;      Totals:         3       0       0       0       0
  2726 ;;Total ram usage:        3 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    2
  2729 ;; This function calls:
  2730 ;;		_USART_ESCRITURA
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function _USART_STRING
  2738  0788                     _USART_STRING:
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2742                           ;USART_STRING@a stored from wreg
  2743  0788  00F5               	movwf	USART_STRING@a
  2744  0789                     l1858:
  2745                           
  2746                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  2747  0789  01F6               	clrf	USART_STRING@i
  2748  078A  2F9A               	goto	l1864
  2749  078B                     l1860:
  2750                           
  2751                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  2752  078B  0876               	movf	USART_STRING@i,w
  2753  078C  0775               	addwf	USART_STRING@a,w
  2754  078D  00F4               	movwf	??_USART_STRING
  2755  078E  0874               	movf	??_USART_STRING,w
  2756  078F  0084               	movwf	4
  2757  0790  0800               	movf	0,w
  2758  0791  120A  158A  27AD  120A  118A  	fcall	_USART_ESCRITURA
  2759  0796                     l1862:
  2760                           
  2761                           ;USART.c: 21:     }
  2762  0796  3001               	movlw	1
  2763  0797  00F4               	movwf	??_USART_STRING
  2764  0798  0874               	movf	??_USART_STRING,w
  2765  0799  07F6               	addwf	USART_STRING@i,f
  2766  079A                     l1864:
  2767  079A  0876               	movf	USART_STRING@i,w
  2768  079B  0775               	addwf	USART_STRING@a,w
  2769  079C  00F4               	movwf	??_USART_STRING
  2770  079D  0874               	movf	??_USART_STRING,w
  2771  079E  0084               	movwf	4
  2772  079F  1383               	bcf	3,7	;select IRP bank0
  2773  07A0  0800               	movf	0,w
  2774  07A1  1D03               	btfss	3,2
  2775  07A2  2FA4               	goto	u1401
  2776  07A3  2FA5               	goto	u1400
  2777  07A4                     u1401:
  2778  07A4  2F8B               	goto	l1860
  2779  07A5                     u1400:
  2780  07A5                     l154:
  2781  07A5  0008               	return
  2782  07A6                     __end_of_USART_STRING:
  2783                           
  2784                           	psect	text9
  2785  0FAD                     __ptext9:	
  2786 ;; *************** function _USART_ESCRITURA *****************
  2787 ;; Defined at:
  2788 ;;		line 13 in file "USART.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  a               1    wreg     unsigned char 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  a               1    3[COMMON] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       0       0       0       0
  2803 ;;      Locals:         1       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0
  2805 ;;      Totals:         1       0       0       0       0
  2806 ;;Total ram usage:        1 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    1
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;;		_USART_STRING
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           
  2818                           ;psect for function _USART_ESCRITURA
  2819  0FAD                     _USART_ESCRITURA:
  2820                           
  2821                           ;incstack = 0
  2822                           ; Regs used in _USART_ESCRITURA: [wreg]
  2823                           ;USART_ESCRITURA@a stored from wreg
  2824  0FAD  00F3               	movwf	USART_ESCRITURA@a
  2825  0FAE                     l1486:
  2826  0FAE                     l145:	
  2827                           ;USART.c: 14:     while(!TRMT);
  2828                           
  2829  0FAE  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0FAF  1303               	bcf	3,6	;RP1=0, select bank1
  2831  0FB0  1C98               	btfss	24,1	;volatile
  2832  0FB1  2FB3               	goto	u841
  2833  0FB2  2FB4               	goto	u840
  2834  0FB3                     u841:
  2835  0FB3  2FAE               	goto	l145
  2836  0FB4                     u840:
  2837  0FB4                     l1488:
  2838                           
  2839                           ;USART.c: 15:     TXREG = a;
  2840  0FB4  0873               	movf	USART_ESCRITURA@a,w
  2841  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0FB7  0099               	movwf	25	;volatile
  2844  0FB8                     l148:
  2845  0FB8  0008               	return
  2846  0FB9                     __end_of_USART_ESCRITURA:
  2847                           
  2848                           	psect	text10
  2849  0743                     __ptext10:	
  2850 ;; *************** function _Lcd_Write_String *****************
  2851 ;; Defined at:
  2852 ;;		line 94 in file "LCD.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  a               1    wreg     PTR unsigned char 
  2855 ;;		 -> date1(17), time(15), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2858 ;;		 -> date1(17), time(15), 
  2859 ;;  i               2    0[BANK0 ] int 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       3       0       0       0
  2871 ;;      Temps:          1       0       0       0       0
  2872 ;;      Totals:         1       3       0       0       0
  2873 ;;Total ram usage:        4 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    3
  2876 ;; This function calls:
  2877 ;;		_Lcd_Write_Char
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _Lcd_Write_String
  2885  0743                     _Lcd_Write_String:
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2889                           ;Lcd_Write_String@a stored from wreg
  2890  0743  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0744  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0745  00C2               	movwf	Lcd_Write_String@a
  2893  0746                     l2166:
  2894                           
  2895                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  2896  0746  01C0               	clrf	Lcd_Write_String@i
  2897  0747  01C1               	clrf	Lcd_Write_String@i+1
  2898  0748  2F5C               	goto	l2172
  2899  0749                     l2168:
  2900                           
  2901                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  2902  0749  0840               	movf	Lcd_Write_String@i,w
  2903  074A  0742               	addwf	Lcd_Write_String@a,w
  2904  074B  00F6               	movwf	??_Lcd_Write_String
  2905  074C  0876               	movf	??_Lcd_Write_String,w
  2906  074D  0084               	movwf	4
  2907  074E  0800               	movf	0,w
  2908  074F  120A  118A  27DC  120A  118A  	fcall	_Lcd_Write_Char
  2909  0754                     l2170:
  2910  0754  3001               	movlw	1
  2911  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0757  07C0               	addwf	Lcd_Write_String@i,f
  2914  0758  1803               	skipnc
  2915  0759  0AC1               	incf	Lcd_Write_String@i+1,f
  2916  075A  3000               	movlw	0
  2917  075B  07C1               	addwf	Lcd_Write_String@i+1,f
  2918  075C                     l2172:
  2919  075C  0840               	movf	Lcd_Write_String@i,w
  2920  075D  0742               	addwf	Lcd_Write_String@a,w
  2921  075E  00F6               	movwf	??_Lcd_Write_String
  2922  075F  0876               	movf	??_Lcd_Write_String,w
  2923  0760  0084               	movwf	4
  2924  0761  1383               	bcf	3,7	;select IRP bank0
  2925  0762  0800               	movf	0,w
  2926  0763  1D03               	btfss	3,2
  2927  0764  2F66               	goto	u1701
  2928  0765  2F67               	goto	u1700
  2929  0766                     u1701:
  2930  0766  2F49               	goto	l2168
  2931  0767                     u1700:
  2932  0767                     l189:
  2933  0767  0008               	return
  2934  0768                     __end_of_Lcd_Write_String:
  2935                           
  2936                           	psect	text11
  2937  07DC                     __ptext11:	
  2938 ;; *************** function _Lcd_Write_Char *****************
  2939 ;; Defined at:
  2940 ;;		line 77 in file "LCD.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  a               1    wreg     unsigned char 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  a               1    5[COMMON] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, pclath, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         0       0       0       0       0
  2955 ;;      Locals:         1       0       0       0       0
  2956 ;;      Temps:          1       0       0       0       0
  2957 ;;      Totals:         2       0       0       0       0
  2958 ;;Total ram usage:        2 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    2
  2961 ;; This function calls:
  2962 ;;		_Lcd_Port
  2963 ;; This function is called by:
  2964 ;;		_Lcd_Write_String
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function _Lcd_Write_Char
  2970  07DC                     _Lcd_Write_Char:
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2974                           ;Lcd_Write_Char@a stored from wreg
  2975  07DC  00F5               	movwf	Lcd_Write_Char@a
  2976  07DD                     l2034:
  2977                           
  2978                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  2979  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2980  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2981  07DF  1409               	bsf	9,0	;volatile
  2982  07E0                     l2036:
  2983                           
  2984                           ;LCD.c: 88:    Lcd_Port(a);
  2985  07E0  0875               	movf	Lcd_Write_Char@a,w
  2986  07E1  120A  158A  2782  120A  118A  	fcall	_Lcd_Port
  2987  07E6                     l2038:
  2988                           
  2989                           ;LCD.c: 89:    RE1 = 1;
  2990  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  2991  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  2992  07E8  1489               	bsf	9,1	;volatile
  2993  07E9                     l2040:
  2994                           
  2995                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2996  07E9  301A               	movlw	26
  2997  07EA  00F4               	movwf	??_Lcd_Write_Char
  2998  07EB                     u1877:
  2999  07EB  0BF4               	decfsz	??_Lcd_Write_Char,f
  3000  07EC  2FEB               	goto	u1877
  3001  07ED  0000               	nop
  3002  07EE                     l2042:
  3003                           
  3004                           ;LCD.c: 91:    RE1 = 0;
  3005  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3006  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3007  07F0  1089               	bcf	9,1	;volatile
  3008  07F1                     l183:
  3009  07F1  0008               	return
  3010  07F2                     __end_of_Lcd_Write_Char:
  3011                           
  3012                           	psect	text12
  3013  071D                     __ptext12:	
  3014 ;; *************** function _Lcd_Set_Cursor *****************
  3015 ;; Defined at:
  3016 ;;		line 37 in file "LCD.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  a               1    wreg     unsigned char 
  3019 ;;  b               1    7[COMMON] unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  a               1    1[BANK0 ] unsigned char 
  3022 ;;  temp            1    2[BANK0 ] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         1       0       0       0       0
  3033 ;;      Locals:         0       2       0       0       0
  3034 ;;      Temps:          0       1       0       0       0
  3035 ;;      Totals:         1       3       0       0       0
  3036 ;;Total ram usage:        4 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    3
  3039 ;; This function calls:
  3040 ;;		_Lcd_Cmd
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _Lcd_Set_Cursor
  3048  071D                     _Lcd_Set_Cursor:
  3049                           
  3050                           ;incstack = 0
  3051                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3052                           ;Lcd_Set_Cursor@a stored from wreg
  3053  071D  1283               	bcf	3,5	;RP0=0, select bank0
  3054  071E  1303               	bcf	3,6	;RP1=0, select bank0
  3055  071F  00C1               	movwf	Lcd_Set_Cursor@a
  3056  0720                     l2154:
  3057                           
  3058                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  3059  0720  0341               	decf	Lcd_Set_Cursor@a,w
  3060  0721  1D03               	btfss	3,2
  3061  0722  2F24               	goto	u1681
  3062  0723  2F25               	goto	u1680
  3063  0724                     u1681:
  3064  0724  2F31               	goto	l2160
  3065  0725                     u1680:
  3066  0725                     l2156:
  3067                           
  3068                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  3069  0725  0877               	movf	Lcd_Set_Cursor@b,w
  3070  0726  3E7F               	addlw	127
  3071  0727  00C0               	movwf	??_Lcd_Set_Cursor
  3072  0728  0840               	movf	??_Lcd_Set_Cursor,w
  3073  0729  00C2               	movwf	Lcd_Set_Cursor@temp
  3074  072A                     l2158:
  3075                           
  3076                           ;LCD.c: 46:   Lcd_Cmd(temp);
  3077  072A  0842               	movf	Lcd_Set_Cursor@temp,w
  3078  072B  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3079                           
  3080                           ;LCD.c: 47:  }
  3081  0730  2F42               	goto	l177
  3082  0731                     l2160:
  3083  0731  3002               	movlw	2
  3084  0732  0641               	xorwf	Lcd_Set_Cursor@a,w
  3085  0733  1D03               	btfss	3,2
  3086  0734  2F36               	goto	u1691
  3087  0735  2F37               	goto	u1690
  3088  0736                     u1691:
  3089  0736  2F42               	goto	l177
  3090  0737                     u1690:
  3091  0737                     l2162:
  3092                           
  3093                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  3094  0737  0877               	movf	Lcd_Set_Cursor@b,w
  3095  0738  3EBF               	addlw	191
  3096  0739  00C0               	movwf	??_Lcd_Set_Cursor
  3097  073A  0840               	movf	??_Lcd_Set_Cursor,w
  3098  073B  00C2               	movwf	Lcd_Set_Cursor@temp
  3099  073C                     l2164:
  3100                           
  3101                           ;LCD.c: 54:   Lcd_Cmd(temp);
  3102  073C  0842               	movf	Lcd_Set_Cursor@temp,w
  3103  073D  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3104  0742                     l177:
  3105  0742  0008               	return
  3106  0743                     __end_of_Lcd_Set_Cursor:
  3107                           
  3108                           	psect	text13
  3109  057B                     __ptext13:	
  3110 ;; *************** function _Lcd_Init *****************
  3111 ;; Defined at:
  3112 ;;		line 58 in file "LCD.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, pclath, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0
  3128 ;;      Temps:          0       2       0       0       0
  3129 ;;      Totals:         0       2       0       0       0
  3130 ;;Total ram usage:        2 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    3
  3133 ;; This function calls:
  3134 ;;		_Lcd_Cmd
  3135 ;;		_Lcd_Port
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _Lcd_Init
  3143  057B                     _Lcd_Init:
  3144  057B                     l2142:	
  3145                           ;incstack = 0
  3146                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3147                           
  3148                           
  3149                           ;LCD.c: 60:   Lcd_Port(0x00);
  3150  057B  3000               	movlw	0
  3151  057C  120A  158A  2782  120A  118A  	fcall	_Lcd_Port
  3152  0581                     l2144:
  3153                           
  3154                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3155  0581  3034               	movlw	52
  3156  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0584  00C1               	movwf	??_Lcd_Init+1
  3159  0585  30F1               	movlw	241
  3160  0586  00C0               	movwf	??_Lcd_Init
  3161  0587                     u1887:
  3162  0587  0BC0               	decfsz	??_Lcd_Init,f
  3163  0588  2D87               	goto	u1887
  3164  0589  0BC1               	decfsz	??_Lcd_Init+1,f
  3165  058A  2D87               	goto	u1887
  3166  058B                     l2146:
  3167                           
  3168                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  3169  058B  3030               	movlw	48
  3170  058C  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3171                           
  3172                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  3173  0591  300D               	movlw	13
  3174  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0593  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0594  00C1               	movwf	??_Lcd_Init+1
  3177  0595  30FB               	movlw	251
  3178  0596  00C0               	movwf	??_Lcd_Init
  3179  0597                     u1897:
  3180  0597  0BC0               	decfsz	??_Lcd_Init,f
  3181  0598  2D97               	goto	u1897
  3182  0599  0BC1               	decfsz	??_Lcd_Init+1,f
  3183  059A  2D97               	goto	u1897
  3184  059B                     l2148:
  3185                           
  3186                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  3187  059B  3030               	movlw	48
  3188  059C  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3189  05A1                     l2150:
  3190                           
  3191                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  3192  05A1  301D               	movlw	29
  3193  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3194  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3195  05A4  00C1               	movwf	??_Lcd_Init+1
  3196  05A5  3090               	movlw	144
  3197  05A6  00C0               	movwf	??_Lcd_Init
  3198  05A7                     u1907:
  3199  05A7  0BC0               	decfsz	??_Lcd_Init,f
  3200  05A8  2DA7               	goto	u1907
  3201  05A9  0BC1               	decfsz	??_Lcd_Init+1,f
  3202  05AA  2DA7               	goto	u1907
  3203  05AB  0000               	nop
  3204                           
  3205                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  3206  05AC  3030               	movlw	48
  3207  05AD  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3208                           
  3209                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  3210  05B2  3038               	movlw	56
  3211  05B3  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3212                           
  3213                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  3214  05B8  300C               	movlw	12
  3215  05B9  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3216                           
  3217                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  3218  05BE  3001               	movlw	1
  3219  05BF  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3220                           
  3221                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  3222  05C4  3006               	movlw	6
  3223  05C5  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3224  05CA                     l180:
  3225  05CA  0008               	return
  3226  05CB                     __end_of_Lcd_Init:
  3227                           
  3228                           	psect	text14
  3229  07F2                     __ptext14:	
  3230 ;; *************** function _Lcd_Clear *****************
  3231 ;; Defined at:
  3232 ;;		line 31 in file "LCD.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0
  3248 ;;      Temps:          0       0       0       0       0
  3249 ;;      Totals:         0       0       0       0       0
  3250 ;;Total ram usage:        0 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    3
  3253 ;; This function calls:
  3254 ;;		_Lcd_Cmd
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _Lcd_Clear
  3262  07F2                     _Lcd_Clear:
  3263  07F2                     l2152:	
  3264                           ;incstack = 0
  3265                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3266                           
  3267                           
  3268                           ;LCD.c: 33:  Lcd_Cmd(0);
  3269  07F2  3000               	movlw	0
  3270  07F3  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3271                           
  3272                           ;LCD.c: 34:  Lcd_Cmd(1);
  3273  07F8  3001               	movlw	1
  3274  07F9  120A  118A  27C2  120A  118A  	fcall	_Lcd_Cmd
  3275  07FE                     l171:
  3276  07FE  0008               	return
  3277  07FF                     __end_of_Lcd_Clear:
  3278                           
  3279                           	psect	text15
  3280  07C2                     __ptext15:	
  3281 ;; *************** function _Lcd_Cmd *****************
  3282 ;; Defined at:
  3283 ;;		line 22 in file "LCD.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  a               1    wreg     unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  a               1    6[COMMON] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         1       0       0       0       0
  3299 ;;      Temps:          2       0       0       0       0
  3300 ;;      Totals:         3       0       0       0       0
  3301 ;;Total ram usage:        3 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    2
  3304 ;; This function calls:
  3305 ;;		_Lcd_Port
  3306 ;; This function is called by:
  3307 ;;		_Lcd_Clear
  3308 ;;		_Lcd_Set_Cursor
  3309 ;;		_Lcd_Init
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _Lcd_Cmd
  3315  07C2                     _Lcd_Cmd:
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3319                           ;Lcd_Cmd@a stored from wreg
  3320  07C2  00F6               	movwf	Lcd_Cmd@a
  3321  07C3                     l2024:
  3322                           
  3323                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  3324  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3325  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3326  07C5  1009               	bcf	9,0	;volatile
  3327  07C6                     l2026:
  3328                           
  3329                           ;LCD.c: 25:  Lcd_Port(a);
  3330  07C6  0876               	movf	Lcd_Cmd@a,w
  3331  07C7  120A  158A  2782  120A  118A  	fcall	_Lcd_Port
  3332  07CC                     l2028:
  3333                           
  3334                           ;LCD.c: 26:  RE1 = 1;
  3335  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3336  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3337  07CE  1489               	bsf	9,1	;volatile
  3338  07CF                     l2030:
  3339                           
  3340                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3341  07CF  300B               	movlw	11
  3342  07D0  00F5               	movwf	??_Lcd_Cmd+1
  3343  07D1  3062               	movlw	98
  3344  07D2  00F4               	movwf	??_Lcd_Cmd
  3345  07D3                     u1917:
  3346  07D3  0BF4               	decfsz	??_Lcd_Cmd,f
  3347  07D4  2FD3               	goto	u1917
  3348  07D5  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3349  07D6  2FD3               	goto	u1917
  3350  07D7  0000               	nop
  3351  07D8                     l2032:
  3352                           
  3353                           ;LCD.c: 28:         RE1 = 0;
  3354  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3355  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3356  07DA  1089               	bcf	9,1	;volatile
  3357  07DB                     l168:
  3358  07DB  0008               	return
  3359  07DC                     __end_of_Lcd_Cmd:
  3360                           
  3361                           	psect	text16
  3362  0F82                     __ptext16:	
  3363 ;; *************** function _Lcd_Port *****************
  3364 ;; Defined at:
  3365 ;;		line 17 in file "LCD.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  a               1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  a               1    3[COMMON] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         1       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         1       0       0       0       0
  3383 ;;Total ram usage:        1 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_Lcd_Cmd
  3390 ;;		_Lcd_Init
  3391 ;;		_Lcd_Write_Char
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _Lcd_Port
  3397  0F82                     _Lcd_Port:
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in _Lcd_Port: [wreg]
  3401                           ;Lcd_Port@a stored from wreg
  3402  0F82  00F3               	movwf	Lcd_Port@a
  3403  0F83                     l1982:
  3404                           
  3405                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  3406  0F83  0873               	movf	Lcd_Port@a,w
  3407  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0F86  0088               	movwf	8	;volatile
  3410  0F87                     l165:
  3411  0F87  0008               	return
  3412  0F88                     __end_of_Lcd_Port:
  3413                           
  3414                           	psect	text17
  3415  0FA3                     __ptext17:	
  3416 ;; *************** function _I2C_Master_Write *****************
  3417 ;; Defined at:
  3418 ;;		line 65 in file "I2C.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  d               2    3[COMMON] unsigned int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         2       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0
  3435 ;;      Totals:         2       0       0       0       0
  3436 ;;Total ram usage:        2 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    2
  3439 ;; This function calls:
  3440 ;;		_I2C_Master_Wait
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _I2C_Master_Write
  3448  0FA3                     _I2C_Master_Write:
  3449  0FA3                     l2178:	
  3450                           ;incstack = 0
  3451                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3452                           
  3453                           
  3454                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3455  0FA3  120A  158A  27B9  120A  158A  	fcall	_I2C_Master_Wait
  3456  0FA8                     l2180:
  3457                           
  3458                           ;I2C.c: 68:     SSPBUF = d;
  3459  0FA8  0873               	movf	I2C_Master_Write@d,w
  3460  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  3462  0FAB  0093               	movwf	19	;volatile
  3463  0FAC                     l236:
  3464  0FAC  0008               	return
  3465  0FAD                     __end_of_I2C_Master_Write:
  3466                           
  3467                           	psect	text18
  3468  0F9A                     __ptext18:	
  3469 ;; *************** function _I2C_Master_Stop *****************
  3470 ;; Defined at:
  3471 ;;		line 55 in file "I2C.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, pclath, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    2
  3492 ;; This function calls:
  3493 ;;		_I2C_Master_Wait
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           
  3500                           ;psect for function _I2C_Master_Stop
  3501  0F9A                     _I2C_Master_Stop:
  3502  0F9A                     l2182:	
  3503                           ;incstack = 0
  3504                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3505                           
  3506                           
  3507                           ;I2C.c: 57:     I2C_Master_Wait();
  3508  0F9A  120A  158A  27B9  120A  158A  	fcall	_I2C_Master_Wait
  3509  0F9F                     l2184:
  3510                           
  3511                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3512  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  3513  0FA0  1303               	bcf	3,6	;RP1=0, select bank1
  3514  0FA1  1511               	bsf	17,2	;volatile
  3515  0FA2                     l233:
  3516  0FA2  0008               	return
  3517  0FA3                     __end_of_I2C_Master_Stop:
  3518                           
  3519                           	psect	text19
  3520  0F91                     __ptext19:	
  3521 ;; *************** function _I2C_Master_Start *****************
  3522 ;; Defined at:
  3523 ;;		line 39 in file "I2C.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3537 ;;      Params:         0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    2
  3544 ;; This function calls:
  3545 ;;		_I2C_Master_Wait
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function _I2C_Master_Start
  3553  0F91                     _I2C_Master_Start:
  3554  0F91                     l2174:	
  3555                           ;incstack = 0
  3556                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3557                           
  3558                           
  3559                           ;I2C.c: 41:     I2C_Master_Wait();
  3560  0F91  120A  158A  27B9  120A  158A  	fcall	_I2C_Master_Wait
  3561  0F96                     l2176:
  3562                           
  3563                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3564  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3565  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  3566  0F98  1411               	bsf	17,0	;volatile
  3567  0F99                     l227:
  3568  0F99  0008               	return
  3569  0F9A                     __end_of_I2C_Master_Start:
  3570                           
  3571                           	psect	text20
  3572  0F88                     __ptext20:	
  3573 ;; *************** function _I2C_Master_RepeatedStart *****************
  3574 ;; Defined at:
  3575 ;;		line 47 in file "I2C.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3589 ;;      Params:         0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    2
  3596 ;; This function calls:
  3597 ;;		_I2C_Master_Wait
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _I2C_Master_RepeatedStart
  3605  0F88                     _I2C_Master_RepeatedStart:
  3606  0F88                     l2186:	
  3607                           ;incstack = 0
  3608                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3609                           
  3610                           
  3611                           ;I2C.c: 49:     I2C_Master_Wait();
  3612  0F88  120A  158A  27B9  120A  158A  	fcall	_I2C_Master_Wait
  3613  0F8D                     l2188:
  3614                           
  3615                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3616  0F8D  1683               	bsf	3,5	;RP0=1, select bank1
  3617  0F8E  1303               	bcf	3,6	;RP1=0, select bank1
  3618  0F8F  1491               	bsf	17,1	;volatile
  3619  0F90                     l230:
  3620  0F90  0008               	return
  3621  0F91                     __end_of_I2C_Master_RepeatedStart:
  3622                           
  3623                           	psect	text21
  3624  06ED                     __ptext21:	
  3625 ;; *************** function _I2C_Master_Read *****************
  3626 ;; Defined at:
  3627 ;;		line 74 in file "I2C.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  a               2    3[COMMON] unsigned short 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  temp            2    0[BANK0 ] unsigned short 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2    3[COMMON] unsigned short 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, pclath, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3641 ;;      Params:         2       0       0       0       0
  3642 ;;      Locals:         0       2       0       0       0
  3643 ;;      Temps:          2       0       0       0       0
  3644 ;;      Totals:         4       2       0       0       0
  3645 ;;Total ram usage:        6 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    2
  3648 ;; This function calls:
  3649 ;;		_I2C_Master_Wait
  3650 ;; This function is called by:
  3651 ;;		_main
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _I2C_Master_Read
  3657  06ED                     _I2C_Master_Read:
  3658  06ED                     l2190:	
  3659                           ;incstack = 0
  3660                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3661                           
  3662                           
  3663                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3664  06ED  120A  158A  27B9  120A  118A  	fcall	_I2C_Master_Wait
  3665  06F2                     l2192:
  3666                           
  3667                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3668  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  3669  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  3670  06F4  1591               	bsf	17,3	;volatile
  3671                           
  3672                           ;I2C.c: 79:     I2C_Master_Wait();
  3673  06F5  120A  158A  27B9  120A  118A  	fcall	_I2C_Master_Wait
  3674  06FA                     l2194:
  3675                           
  3676                           ;I2C.c: 80:     temp = SSPBUF;
  3677  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3678  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3679  06FC  0813               	movf	19,w	;volatile
  3680  06FD  00F5               	movwf	??_I2C_Master_Read
  3681  06FE  01F6               	clrf	??_I2C_Master_Read+1
  3682  06FF  0875               	movf	??_I2C_Master_Read,w
  3683  0700  00C0               	movwf	I2C_Master_Read@temp
  3684  0701  0876               	movf	??_I2C_Master_Read+1,w
  3685  0702  00C1               	movwf	I2C_Master_Read@temp+1
  3686  0703                     l2196:
  3687                           
  3688                           ;I2C.c: 81:     I2C_Master_Wait();
  3689  0703  120A  158A  27B9  120A  118A  	fcall	_I2C_Master_Wait
  3690  0708                     l2198:
  3691                           
  3692                           ;I2C.c: 82:     if(a == 1){
  3693  0708  0373               	decf	I2C_Master_Read@a,w
  3694  0709  0474               	iorwf	I2C_Master_Read@a+1,w
  3695  070A  1D03               	btfss	3,2
  3696  070B  2F0D               	goto	u1711
  3697  070C  2F0E               	goto	u1710
  3698  070D                     u1711:
  3699  070D  2F12               	goto	l239
  3700  070E                     u1710:
  3701  070E                     l2200:
  3702                           
  3703                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3704  070E  1683               	bsf	3,5	;RP0=1, select bank1
  3705  070F  1303               	bcf	3,6	;RP1=0, select bank1
  3706  0710  1291               	bcf	17,5	;volatile
  3707                           
  3708                           ;I2C.c: 84:     }else{
  3709  0711  2F15               	goto	l240
  3710  0712                     l239:
  3711                           
  3712                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3713  0712  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0713  1303               	bcf	3,6	;RP1=0, select bank1
  3715  0714  1691               	bsf	17,5	;volatile
  3716  0715                     l240:	
  3717                           ;I2C.c: 86:     }
  3718                           
  3719                           
  3720                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3721  0715  1611               	bsf	17,4	;volatile
  3722  0716                     l2202:
  3723                           
  3724                           ;I2C.c: 88:     return temp;
  3725  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3727  0718  0841               	movf	I2C_Master_Read@temp+1,w
  3728  0719  00F4               	movwf	?_I2C_Master_Read+1
  3729  071A  0840               	movf	I2C_Master_Read@temp,w
  3730  071B  00F3               	movwf	?_I2C_Master_Read
  3731  071C                     l241:
  3732  071C  0008               	return
  3733  071D                     __end_of_I2C_Master_Read:
  3734                           
  3735                           	psect	text22
  3736  0FB9                     __ptext22:	
  3737 ;; *************** function _I2C_Master_Wait *****************
  3738 ;; Defined at:
  3739 ;;		line 32 in file "I2C.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         0       0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         0       0       0       0       0
  3757 ;;Total ram usage:        0 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_I2C_Master_Start
  3764 ;;		_I2C_Master_RepeatedStart
  3765 ;;		_I2C_Master_Stop
  3766 ;;		_I2C_Master_Write
  3767 ;;		_I2C_Master_Read
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           
  3772                           ;psect for function _I2C_Master_Wait
  3773  0FB9                     _I2C_Master_Wait:
  3774  0FB9                     l2044:	
  3775                           ;incstack = 0
  3776                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3777                           
  3778  0FB9                     l221:	
  3779                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3780                           
  3781  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  3782  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  3783  0FBB  1914               	btfsc	20,2	;volatile
  3784  0FBC  2FBE               	goto	u1501
  3785  0FBD  2FBF               	goto	u1500
  3786  0FBE                     u1501:
  3787  0FBE  2FB9               	goto	l221
  3788  0FBF                     u1500:
  3789  0FBF                     l2046:
  3790  0FBF  0811               	movf	17,w	;volatile
  3791  0FC0  391F               	andlw	31
  3792  0FC1  1D03               	btfss	3,2
  3793  0FC2  2FC4               	goto	u1511
  3794  0FC3  2FC5               	goto	u1510
  3795  0FC4                     u1511:
  3796  0FC4  2FB9               	goto	l221
  3797  0FC5                     u1510:
  3798  0FC5                     l224:
  3799  0FC5  0008               	return
  3800  0FC6                     __end_of_I2C_Master_Wait:
  3801                           
  3802                           	psect	text23
  3803  0308                     __ptext23:	
  3804 ;; *************** function _DS3231_time *****************
  3805 ;; Defined at:
  3806 ;;		line 222 in file "main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3820 ;;      Params:         0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0
  3822 ;;      Temps:          0       2       0       0       0
  3823 ;;      Totals:         0       2       0       0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    3
  3827 ;; This function calls:
  3828 ;;		___awdiv
  3829 ;;		___awmod
  3830 ;;		_bcd_to_decimal
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function _DS3231_time
  3838  0308                     _DS3231_time:
  3839  0308                     l2206:	
  3840                           ;incstack = 0
  3841                           ; Regs used in _DS3231_time: [wreg+status,2+status,0+pclath+cstack]
  3842                           
  3843                           
  3844                           ;main.c: 226:   sec = bcd_to_decimal(sec);
  3845  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3847  030A  0861               	movf	_sec,w
  3848  030B  120A  118A  27A6  120A  118A  	fcall	_bcd_to_decimal
  3849  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0312  00C4               	movwf	??_DS3231_time
  3852  0313  01C5               	clrf	??_DS3231_time+1
  3853  0314  0844               	movf	??_DS3231_time,w
  3854  0315  00E1               	movwf	_sec
  3855  0316  0845               	movf	??_DS3231_time+1,w
  3856  0317  00E2               	movwf	_sec+1
  3857                           
  3858                           ;main.c: 227:   min = bcd_to_decimal(min);
  3859  0318  0878               	movf	_min,w
  3860  0319  120A  118A  27A6  120A  118A  	fcall	_bcd_to_decimal
  3861  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3862  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3863  0320  00C4               	movwf	??_DS3231_time
  3864  0321  01C5               	clrf	??_DS3231_time+1
  3865  0322  0844               	movf	??_DS3231_time,w
  3866  0323  00F8               	movwf	_min
  3867  0324  0845               	movf	??_DS3231_time+1,w
  3868  0325  00F9               	movwf	_min+1
  3869                           
  3870                           ;main.c: 228:   hour = bcd_to_decimal(hour);
  3871  0326  085F               	movf	_hour,w
  3872  0327  120A  118A  27A6  120A  118A  	fcall	_bcd_to_decimal
  3873  032C  1283               	bcf	3,5	;RP0=0, select bank0
  3874  032D  1303               	bcf	3,6	;RP1=0, select bank0
  3875  032E  00C4               	movwf	??_DS3231_time
  3876  032F  01C5               	clrf	??_DS3231_time+1
  3877  0330  0844               	movf	??_DS3231_time,w
  3878  0331  00DF               	movwf	_hour
  3879  0332  0845               	movf	??_DS3231_time+1,w
  3880  0333  00E0               	movwf	_hour+1
  3881                           
  3882                           ;main.c: 229:   date = bcd_to_decimal(date);
  3883  0334  085D               	movf	_date,w
  3884  0335  120A  118A  27A6  120A  118A  	fcall	_bcd_to_decimal
  3885  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3886  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3887  033C  00C4               	movwf	??_DS3231_time
  3888  033D  01C5               	clrf	??_DS3231_time+1
  3889  033E  0844               	movf	??_DS3231_time,w
  3890  033F  00DD               	movwf	_date
  3891  0340  0845               	movf	??_DS3231_time+1,w
  3892  0341  00DE               	movwf	_date+1
  3893                           
  3894                           ;main.c: 230:   month = bcd_to_decimal(month);
  3895  0342  085B               	movf	_month,w
  3896  0343  120A  118A  27A6  120A  118A  	fcall	_bcd_to_decimal
  3897  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3899  034A  00C4               	movwf	??_DS3231_time
  3900  034B  01C5               	clrf	??_DS3231_time+1
  3901  034C  0844               	movf	??_DS3231_time,w
  3902  034D  00DB               	movwf	_month
  3903  034E  0845               	movf	??_DS3231_time+1,w
  3904  034F  00DC               	movwf	_month+1
  3905                           
  3906                           ;main.c: 231:   year = bcd_to_decimal(year);
  3907  0350  0859               	movf	_year,w
  3908  0351  120A  118A  27A6  120A  118A  	fcall	_bcd_to_decimal
  3909  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0358  00C4               	movwf	??_DS3231_time
  3912  0359  01C5               	clrf	??_DS3231_time+1
  3913  035A  0844               	movf	??_DS3231_time,w
  3914  035B  00D9               	movwf	_year
  3915  035C  0845               	movf	??_DS3231_time+1,w
  3916  035D  00DA               	movwf	_year+1
  3917                           
  3918                           ;main.c: 235:   time[6] = hour / 10 + '0';
  3919  035E  300A               	movlw	10
  3920  035F  00F3               	movwf	___awdiv@divisor
  3921  0360  3000               	movlw	0
  3922  0361  00F4               	movwf	___awdiv@divisor+1
  3923  0362  0860               	movf	_hour+1,w
  3924  0363  00F6               	movwf	___awdiv@dividend+1
  3925  0364  085F               	movf	_hour,w
  3926  0365  00F5               	movwf	___awdiv@dividend
  3927  0366  120A  118A  244F  120A  118A  	fcall	___awdiv
  3928  036B  0873               	movf	?___awdiv,w
  3929  036C  3E30               	addlw	48
  3930  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3931  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3932  036F  00C4               	movwf	??_DS3231_time
  3933  0370  0844               	movf	??_DS3231_time,w
  3934  0371  00B7               	movwf	_time+6
  3935                           
  3936                           ;main.c: 236:   time[7] = hour % 10 + '0';
  3937  0372  300A               	movlw	10
  3938  0373  00F3               	movwf	___awmod@divisor
  3939  0374  3000               	movlw	0
  3940  0375  00F4               	movwf	___awmod@divisor+1
  3941  0376  0860               	movf	_hour+1,w
  3942  0377  00F6               	movwf	___awmod@dividend+1
  3943  0378  085F               	movf	_hour,w
  3944  0379  00F5               	movwf	___awmod@dividend
  3945  037A  120A  118A  2520  120A  118A  	fcall	___awmod
  3946  037F  0873               	movf	?___awmod,w
  3947  0380  3E30               	addlw	48
  3948  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0383  00C4               	movwf	??_DS3231_time
  3951  0384  0844               	movf	??_DS3231_time,w
  3952  0385  00B8               	movwf	_time+7
  3953                           
  3954                           ;main.c: 237:   time[9] = min / 10 + '0';
  3955  0386  300A               	movlw	10
  3956  0387  00F3               	movwf	___awdiv@divisor
  3957  0388  3000               	movlw	0
  3958  0389  00F4               	movwf	___awdiv@divisor+1
  3959  038A  0879               	movf	_min+1,w
  3960  038B  00F6               	movwf	___awdiv@dividend+1
  3961  038C  0878               	movf	_min,w
  3962  038D  00F5               	movwf	___awdiv@dividend
  3963  038E  120A  118A  244F  120A  118A  	fcall	___awdiv
  3964  0393  0873               	movf	?___awdiv,w
  3965  0394  3E30               	addlw	48
  3966  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3967  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3968  0397  00C4               	movwf	??_DS3231_time
  3969  0398  0844               	movf	??_DS3231_time,w
  3970  0399  00BA               	movwf	_time+9
  3971                           
  3972                           ;main.c: 238:   time[10] = min % 10 + '0';
  3973  039A  300A               	movlw	10
  3974  039B  00F3               	movwf	___awmod@divisor
  3975  039C  3000               	movlw	0
  3976  039D  00F4               	movwf	___awmod@divisor+1
  3977  039E  0879               	movf	_min+1,w
  3978  039F  00F6               	movwf	___awmod@dividend+1
  3979  03A0  0878               	movf	_min,w
  3980  03A1  00F5               	movwf	___awmod@dividend
  3981  03A2  120A  118A  2520  120A  118A  	fcall	___awmod
  3982  03A7  0873               	movf	?___awmod,w
  3983  03A8  3E30               	addlw	48
  3984  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3985  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3986  03AB  00C4               	movwf	??_DS3231_time
  3987  03AC  0844               	movf	??_DS3231_time,w
  3988  03AD  00BB               	movwf	_time+10
  3989                           
  3990                           ;main.c: 239:   time[12] = sec / 10 + '0';
  3991  03AE  300A               	movlw	10
  3992  03AF  00F3               	movwf	___awdiv@divisor
  3993  03B0  3000               	movlw	0
  3994  03B1  00F4               	movwf	___awdiv@divisor+1
  3995  03B2  0862               	movf	_sec+1,w
  3996  03B3  00F6               	movwf	___awdiv@dividend+1
  3997  03B4  0861               	movf	_sec,w
  3998  03B5  00F5               	movwf	___awdiv@dividend
  3999  03B6  120A  118A  244F  120A  118A  	fcall	___awdiv
  4000  03BB  0873               	movf	?___awdiv,w
  4001  03BC  3E30               	addlw	48
  4002  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  4003  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  4004  03BF  00C4               	movwf	??_DS3231_time
  4005  03C0  0844               	movf	??_DS3231_time,w
  4006  03C1  00BD               	movwf	_time+12
  4007                           
  4008                           ;main.c: 240:   time[13] = sec % 10 + '0';
  4009  03C2  300A               	movlw	10
  4010  03C3  00F3               	movwf	___awmod@divisor
  4011  03C4  3000               	movlw	0
  4012  03C5  00F4               	movwf	___awmod@divisor+1
  4013  03C6  0862               	movf	_sec+1,w
  4014  03C7  00F6               	movwf	___awmod@dividend+1
  4015  03C8  0861               	movf	_sec,w
  4016  03C9  00F5               	movwf	___awmod@dividend
  4017  03CA  120A  118A  2520  120A  118A  	fcall	___awmod
  4018  03CF  0873               	movf	?___awmod,w
  4019  03D0  3E30               	addlw	48
  4020  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  4021  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  4022  03D3  00C4               	movwf	??_DS3231_time
  4023  03D4  0844               	movf	??_DS3231_time,w
  4024  03D5  00BE               	movwf	_time+13
  4025                           
  4026                           ;main.c: 242:   date1[6] = date / 10 + '0';
  4027  03D6  300A               	movlw	10
  4028  03D7  00F3               	movwf	___awdiv@divisor
  4029  03D8  3000               	movlw	0
  4030  03D9  00F4               	movwf	___awdiv@divisor+1
  4031  03DA  085E               	movf	_date+1,w
  4032  03DB  00F6               	movwf	___awdiv@dividend+1
  4033  03DC  085D               	movf	_date,w
  4034  03DD  00F5               	movwf	___awdiv@dividend
  4035  03DE  120A  118A  244F  120A  118A  	fcall	___awdiv
  4036  03E3  0873               	movf	?___awdiv,w
  4037  03E4  3E30               	addlw	48
  4038  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  4039  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  4040  03E7  00C4               	movwf	??_DS3231_time
  4041  03E8  0844               	movf	??_DS3231_time,w
  4042  03E9  00A6               	movwf	_date1+6
  4043                           
  4044                           ;main.c: 243:   date1[7] = date % 10 + '0';
  4045  03EA  300A               	movlw	10
  4046  03EB  00F3               	movwf	___awmod@divisor
  4047  03EC  3000               	movlw	0
  4048  03ED  00F4               	movwf	___awmod@divisor+1
  4049  03EE  085E               	movf	_date+1,w
  4050  03EF  00F6               	movwf	___awmod@dividend+1
  4051  03F0  085D               	movf	_date,w
  4052  03F1  00F5               	movwf	___awmod@dividend
  4053  03F2  120A  118A  2520  120A  118A  	fcall	___awmod
  4054  03F7  0873               	movf	?___awmod,w
  4055  03F8  3E30               	addlw	48
  4056  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  4057  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  4058  03FB  00C4               	movwf	??_DS3231_time
  4059  03FC  0844               	movf	??_DS3231_time,w
  4060  03FD  00A7               	movwf	_date1+7
  4061                           
  4062                           ;main.c: 244:   date1[9] = month / 10 + '0';
  4063  03FE  300A               	movlw	10
  4064  03FF  00F3               	movwf	___awdiv@divisor
  4065  0400  3000               	movlw	0
  4066  0401  00F4               	movwf	___awdiv@divisor+1
  4067  0402  085C               	movf	_month+1,w
  4068  0403  00F6               	movwf	___awdiv@dividend+1
  4069  0404  085B               	movf	_month,w
  4070  0405  00F5               	movwf	___awdiv@dividend
  4071  0406  120A  118A  244F  120A  118A  	fcall	___awdiv
  4072  040B  0873               	movf	?___awdiv,w
  4073  040C  3E30               	addlw	48
  4074  040D  1283               	bcf	3,5	;RP0=0, select bank0
  4075  040E  1303               	bcf	3,6	;RP1=0, select bank0
  4076  040F  00C4               	movwf	??_DS3231_time
  4077  0410  0844               	movf	??_DS3231_time,w
  4078  0411  00A9               	movwf	_date1+9
  4079                           
  4080                           ;main.c: 245:   date1[10] = month % 10 + '0';
  4081  0412  300A               	movlw	10
  4082  0413  00F3               	movwf	___awmod@divisor
  4083  0414  3000               	movlw	0
  4084  0415  00F4               	movwf	___awmod@divisor+1
  4085  0416  085C               	movf	_month+1,w
  4086  0417  00F6               	movwf	___awmod@dividend+1
  4087  0418  085B               	movf	_month,w
  4088  0419  00F5               	movwf	___awmod@dividend
  4089  041A  120A  118A  2520  120A  118A  	fcall	___awmod
  4090  041F  0873               	movf	?___awmod,w
  4091  0420  3E30               	addlw	48
  4092  0421  1283               	bcf	3,5	;RP0=0, select bank0
  4093  0422  1303               	bcf	3,6	;RP1=0, select bank0
  4094  0423  00C4               	movwf	??_DS3231_time
  4095  0424  0844               	movf	??_DS3231_time,w
  4096  0425  00AA               	movwf	_date1+10
  4097                           
  4098                           ;main.c: 246:   date1[14] = year / 10 + '0';
  4099  0426  300A               	movlw	10
  4100  0427  00F3               	movwf	___awdiv@divisor
  4101  0428  3000               	movlw	0
  4102  0429  00F4               	movwf	___awdiv@divisor+1
  4103  042A  085A               	movf	_year+1,w
  4104  042B  00F6               	movwf	___awdiv@dividend+1
  4105  042C  0859               	movf	_year,w
  4106  042D  00F5               	movwf	___awdiv@dividend
  4107  042E  120A  118A  244F  120A  118A  	fcall	___awdiv
  4108  0433  0873               	movf	?___awdiv,w
  4109  0434  3E30               	addlw	48
  4110  0435  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0436  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0437  00C4               	movwf	??_DS3231_time
  4113  0438  0844               	movf	??_DS3231_time,w
  4114  0439  00AE               	movwf	_date1+14
  4115                           
  4116                           ;main.c: 247:   date1[15] = year % 10 + '0';
  4117  043A  300A               	movlw	10
  4118  043B  00F3               	movwf	___awmod@divisor
  4119  043C  3000               	movlw	0
  4120  043D  00F4               	movwf	___awmod@divisor+1
  4121  043E  085A               	movf	_year+1,w
  4122  043F  00F6               	movwf	___awmod@dividend+1
  4123  0440  0859               	movf	_year,w
  4124  0441  00F5               	movwf	___awmod@dividend
  4125  0442  120A  118A  2520  120A  118A  	fcall	___awmod
  4126  0447  0873               	movf	?___awmod,w
  4127  0448  3E30               	addlw	48
  4128  0449  1283               	bcf	3,5	;RP0=0, select bank0
  4129  044A  1303               	bcf	3,6	;RP1=0, select bank0
  4130  044B  00C4               	movwf	??_DS3231_time
  4131  044C  0844               	movf	??_DS3231_time,w
  4132  044D  00AF               	movwf	_date1+15
  4133  044E                     l128:
  4134  044E  0008               	return
  4135  044F                     __end_of_DS3231_time:
  4136                           
  4137                           	psect	text24
  4138  07A6                     __ptext24:	
  4139 ;; *************** function _bcd_to_decimal *****************
  4140 ;; Defined at:
  4141 ;;		line 218 in file "main.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  number          1    wreg     unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  number          1    7[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      unsigned char 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, pclath, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0
  4157 ;;      Temps:          0       3       0       0       0
  4158 ;;      Totals:         1       3       0       0       0
  4159 ;;Total ram usage:        4 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		___bmul
  4164 ;; This function is called by:
  4165 ;;		_DS3231_time
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _bcd_to_decimal
  4171  07A6                     _bcd_to_decimal:
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4175                           ;bcd_to_decimal@number stored from wreg
  4176  07A6  00F7               	movwf	bcd_to_decimal@number
  4177  07A7                     l2020:
  4178                           
  4179                           ;main.c: 219:   return((number >> 4) * 10 + (number & 0x0F));
  4180  07A7  300F               	movlw	15
  4181  07A8  0577               	andwf	bcd_to_decimal@number,w
  4182  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  4183  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  4184  07AB  00C0               	movwf	??_bcd_to_decimal
  4185  07AC  300A               	movlw	10
  4186  07AD  00C1               	movwf	??_bcd_to_decimal+1
  4187  07AE  0841               	movf	??_bcd_to_decimal+1,w
  4188  07AF  00F3               	movwf	___bmul@multiplicand
  4189  07B0  0877               	movf	bcd_to_decimal@number,w
  4190  07B1  00C2               	movwf	??_bcd_to_decimal+2
  4191  07B2  3004               	movlw	4
  4192  07B3                     u1495:
  4193  07B3  1003               	clrc
  4194  07B4  0CC2               	rrf	??_bcd_to_decimal+2,f
  4195  07B5  3EFF               	addlw	-1
  4196  07B6  1D03               	skipz
  4197  07B7  2FB3               	goto	u1495
  4198  07B8  0842               	movf	??_bcd_to_decimal+2,w
  4199  07B9  120A  158A  27EB  120A  118A  	fcall	___bmul
  4200  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  4201  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  4202  07C0  0740               	addwf	??_bcd_to_decimal,w
  4203  07C1                     l125:
  4204  07C1  0008               	return
  4205  07C2                     __end_of_bcd_to_decimal:
  4206                           
  4207                           	psect	text25
  4208  0FEB                     __ptext25:	
  4209 ;; *************** function ___bmul *****************
  4210 ;; Defined at:
  4211 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  multiplier      1    wreg     unsigned char 
  4214 ;;  multiplicand    1    3[COMMON] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  multiplier      1    6[COMMON] unsigned char 
  4217 ;;  product         1    5[COMMON] unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      unsigned char 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2, status,0
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4227 ;;      Params:         1       0       0       0       0
  4228 ;;      Locals:         2       0       0       0       0
  4229 ;;      Temps:          1       0       0       0       0
  4230 ;;      Totals:         4       0       0       0       0
  4231 ;;Total ram usage:        4 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_bcd_to_decimal
  4238 ;;		_sprintf
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           
  4243                           ;psect for function ___bmul
  4244  0FEB                     ___bmul:
  4245                           
  4246                           ;incstack = 0
  4247                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4248                           ;___bmul@multiplier stored from wreg
  4249  0FEB  00F6               	movwf	___bmul@multiplier
  4250  0FEC                     l1448:
  4251  0FEC  01F5               	clrf	___bmul@product
  4252  0FED                     l1450:
  4253  0FED  1C76               	btfss	___bmul@multiplier,0
  4254  0FEE  2FF0               	goto	u751
  4255  0FEF  2FF1               	goto	u750
  4256  0FF0                     u751:
  4257  0FF0  2FF5               	goto	l1454
  4258  0FF1                     u750:
  4259  0FF1                     l1452:
  4260  0FF1  0873               	movf	___bmul@multiplicand,w
  4261  0FF2  00F4               	movwf	??___bmul
  4262  0FF3  0874               	movf	??___bmul,w
  4263  0FF4  07F5               	addwf	___bmul@product,f
  4264  0FF5                     l1454:
  4265  0FF5  1003               	clrc
  4266  0FF6  0DF3               	rlf	___bmul@multiplicand,f
  4267  0FF7                     l1456:
  4268  0FF7  1003               	clrc
  4269  0FF8  0CF6               	rrf	___bmul@multiplier,f
  4270  0FF9  0876               	movf	___bmul@multiplier,w
  4271  0FFA  1D03               	btfss	3,2
  4272  0FFB  2FFD               	goto	u761
  4273  0FFC  2FFE               	goto	u760
  4274  0FFD                     u761:
  4275  0FFD  2FED               	goto	l1450
  4276  0FFE                     u760:
  4277  0FFE                     l1458:
  4278  0FFE  0875               	movf	___bmul@product,w
  4279  0FFF                     l395:
  4280  0FFF  0008               	return
  4281  1000                     __end_of___bmul:
  4282                           
  4283                           	psect	text26
  4284  0520                     __ptext26:	
  4285 ;; *************** function ___awmod *****************
  4286 ;; Defined at:
  4287 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  divisor         2    3[COMMON] int 
  4290 ;;  dividend        2    5[COMMON] int 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  sign            1    1[BANK0 ] unsigned char 
  4293 ;;  counter         1    0[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2    3[COMMON] int 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         4       0       0       0       0
  4304 ;;      Locals:         0       2       0       0       0
  4305 ;;      Temps:          1       0       0       0       0
  4306 ;;      Totals:         5       2       0       0       0
  4307 ;;Total ram usage:        7 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_DS3231_time
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           
  4318                           ;psect for function ___awmod
  4319  0520                     ___awmod:
  4320  0520                     l2048:	
  4321                           ;incstack = 0
  4322                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4323                           
  4324  0520  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0521  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0522  01C1               	clrf	___awmod@sign
  4327  0523                     l2050:
  4328  0523  1FF6               	btfss	___awmod@dividend+1,7
  4329  0524  2D26               	goto	u1521
  4330  0525  2D27               	goto	u1520
  4331  0526                     u1521:
  4332  0526  2D2E               	goto	l2056
  4333  0527                     u1520:
  4334  0527                     l2052:
  4335  0527  09F5               	comf	___awmod@dividend,f
  4336  0528  09F6               	comf	___awmod@dividend+1,f
  4337  0529  0AF5               	incf	___awmod@dividend,f
  4338  052A  1903               	skipnz
  4339  052B  0AF6               	incf	___awmod@dividend+1,f
  4340  052C                     l2054:
  4341  052C  01C1               	clrf	___awmod@sign
  4342  052D  0AC1               	incf	___awmod@sign,f
  4343  052E                     l2056:
  4344  052E  1FF4               	btfss	___awmod@divisor+1,7
  4345  052F  2D31               	goto	u1531
  4346  0530  2D32               	goto	u1530
  4347  0531                     u1531:
  4348  0531  2D37               	goto	l2060
  4349  0532                     u1530:
  4350  0532                     l2058:
  4351  0532  09F3               	comf	___awmod@divisor,f
  4352  0533  09F4               	comf	___awmod@divisor+1,f
  4353  0534  0AF3               	incf	___awmod@divisor,f
  4354  0535  1903               	skipnz
  4355  0536  0AF4               	incf	___awmod@divisor+1,f
  4356  0537                     l2060:
  4357  0537  0873               	movf	___awmod@divisor,w
  4358  0538  0474               	iorwf	___awmod@divisor+1,w
  4359  0539  1903               	btfsc	3,2
  4360  053A  2D3C               	goto	u1541
  4361  053B  2D3D               	goto	u1540
  4362  053C                     u1541:
  4363  053C  2D6C               	goto	l2078
  4364  053D                     u1540:
  4365  053D                     l2062:
  4366  053D  01C0               	clrf	___awmod@counter
  4367  053E  0AC0               	incf	___awmod@counter,f
  4368  053F  2D4B               	goto	l2068
  4369  0540                     l2064:
  4370  0540  3001               	movlw	1
  4371  0541                     u1555:
  4372  0541  1003               	clrc
  4373  0542  0DF3               	rlf	___awmod@divisor,f
  4374  0543  0DF4               	rlf	___awmod@divisor+1,f
  4375  0544  3EFF               	addlw	-1
  4376  0545  1D03               	skipz
  4377  0546  2D41               	goto	u1555
  4378  0547                     l2066:
  4379  0547  3001               	movlw	1
  4380  0548  00F7               	movwf	??___awmod
  4381  0549  0877               	movf	??___awmod,w
  4382  054A  07C0               	addwf	___awmod@counter,f
  4383  054B                     l2068:
  4384  054B  1FF4               	btfss	___awmod@divisor+1,7
  4385  054C  2D4E               	goto	u1561
  4386  054D  2D4F               	goto	u1560
  4387  054E                     u1561:
  4388  054E  2D40               	goto	l2064
  4389  054F                     u1560:
  4390  054F                     l2070:
  4391  054F  0874               	movf	___awmod@divisor+1,w
  4392  0550  0276               	subwf	___awmod@dividend+1,w
  4393  0551  1D03               	skipz
  4394  0552  2D55               	goto	u1575
  4395  0553  0873               	movf	___awmod@divisor,w
  4396  0554  0275               	subwf	___awmod@dividend,w
  4397  0555                     u1575:
  4398  0555  1C03               	skipc
  4399  0556  2D58               	goto	u1571
  4400  0557  2D59               	goto	u1570
  4401  0558                     u1571:
  4402  0558  2D5F               	goto	l2074
  4403  0559                     u1570:
  4404  0559                     l2072:
  4405  0559  0873               	movf	___awmod@divisor,w
  4406  055A  02F5               	subwf	___awmod@dividend,f
  4407  055B  0874               	movf	___awmod@divisor+1,w
  4408  055C  1C03               	skipc
  4409  055D  03F6               	decf	___awmod@dividend+1,f
  4410  055E  02F6               	subwf	___awmod@dividend+1,f
  4411  055F                     l2074:
  4412  055F  3001               	movlw	1
  4413  0560                     u1585:
  4414  0560  1003               	clrc
  4415  0561  0CF4               	rrf	___awmod@divisor+1,f
  4416  0562  0CF3               	rrf	___awmod@divisor,f
  4417  0563  3EFF               	addlw	-1
  4418  0564  1D03               	skipz
  4419  0565  2D60               	goto	u1585
  4420  0566                     l2076:
  4421  0566  3001               	movlw	1
  4422  0567  02C0               	subwf	___awmod@counter,f
  4423  0568  1D03               	btfss	3,2
  4424  0569  2D6B               	goto	u1591
  4425  056A  2D6C               	goto	u1590
  4426  056B                     u1591:
  4427  056B  2D4F               	goto	l2070
  4428  056C                     u1590:
  4429  056C                     l2078:
  4430  056C  0841               	movf	___awmod@sign,w
  4431  056D  1903               	btfsc	3,2
  4432  056E  2D70               	goto	u1601
  4433  056F  2D71               	goto	u1600
  4434  0570                     u1601:
  4435  0570  2D76               	goto	l2082
  4436  0571                     u1600:
  4437  0571                     l2080:
  4438  0571  09F5               	comf	___awmod@dividend,f
  4439  0572  09F6               	comf	___awmod@dividend+1,f
  4440  0573  0AF5               	incf	___awmod@dividend,f
  4441  0574  1903               	skipnz
  4442  0575  0AF6               	incf	___awmod@dividend+1,f
  4443  0576                     l2082:
  4444  0576  0876               	movf	___awmod@dividend+1,w
  4445  0577  00F4               	movwf	?___awmod+1
  4446  0578  0875               	movf	___awmod@dividend,w
  4447  0579  00F3               	movwf	?___awmod
  4448  057A                     l535:
  4449  057A  0008               	return
  4450  057B                     __end_of___awmod:
  4451                           
  4452                           	psect	text27
  4453  044F                     __ptext27:	
  4454 ;; *************** function ___awdiv *****************
  4455 ;; Defined at:
  4456 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  divisor         2    3[COMMON] int 
  4459 ;;  dividend        2    5[COMMON] int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  quotient        2    2[BANK0 ] int 
  4462 ;;  sign            1    1[BANK0 ] unsigned char 
  4463 ;;  counter         1    0[BANK0 ] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    3[COMMON] int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         4       0       0       0       0
  4474 ;;      Locals:         0       4       0       0       0
  4475 ;;      Temps:          1       0       0       0       0
  4476 ;;      Totals:         5       4       0       0       0
  4477 ;;Total ram usage:        9 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_DS3231_time
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function ___awdiv
  4489  044F                     ___awdiv:
  4490  044F                     l1542:	
  4491                           ;incstack = 0
  4492                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4493                           
  4494  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0450  1303               	bcf	3,6	;RP1=0, select bank0
  4496  0451  01C1               	clrf	___awdiv@sign
  4497  0452                     l1544:
  4498  0452  1FF4               	btfss	___awdiv@divisor+1,7
  4499  0453  2C55               	goto	u911
  4500  0454  2C56               	goto	u910
  4501  0455                     u911:
  4502  0455  2C5D               	goto	l1550
  4503  0456                     u910:
  4504  0456                     l1546:
  4505  0456  09F3               	comf	___awdiv@divisor,f
  4506  0457  09F4               	comf	___awdiv@divisor+1,f
  4507  0458  0AF3               	incf	___awdiv@divisor,f
  4508  0459  1903               	skipnz
  4509  045A  0AF4               	incf	___awdiv@divisor+1,f
  4510  045B                     l1548:
  4511  045B  01C1               	clrf	___awdiv@sign
  4512  045C  0AC1               	incf	___awdiv@sign,f
  4513  045D                     l1550:
  4514  045D  1FF6               	btfss	___awdiv@dividend+1,7
  4515  045E  2C60               	goto	u921
  4516  045F  2C61               	goto	u920
  4517  0460                     u921:
  4518  0460  2C6A               	goto	l1556
  4519  0461                     u920:
  4520  0461                     l1552:
  4521  0461  09F5               	comf	___awdiv@dividend,f
  4522  0462  09F6               	comf	___awdiv@dividend+1,f
  4523  0463  0AF5               	incf	___awdiv@dividend,f
  4524  0464  1903               	skipnz
  4525  0465  0AF6               	incf	___awdiv@dividend+1,f
  4526  0466                     l1554:
  4527  0466  3001               	movlw	1
  4528  0467  00F7               	movwf	??___awdiv
  4529  0468  0877               	movf	??___awdiv,w
  4530  0469  06C1               	xorwf	___awdiv@sign,f
  4531  046A                     l1556:
  4532  046A  01C2               	clrf	___awdiv@quotient
  4533  046B  01C3               	clrf	___awdiv@quotient+1
  4534  046C                     l1558:
  4535  046C  0873               	movf	___awdiv@divisor,w
  4536  046D  0474               	iorwf	___awdiv@divisor+1,w
  4537  046E  1903               	btfsc	3,2
  4538  046F  2C71               	goto	u931
  4539  0470  2C72               	goto	u930
  4540  0471                     u931:
  4541  0471  2CA9               	goto	l1578
  4542  0472                     u930:
  4543  0472                     l1560:
  4544  0472  01C0               	clrf	___awdiv@counter
  4545  0473  0AC0               	incf	___awdiv@counter,f
  4546  0474  2C80               	goto	l1566
  4547  0475                     l1562:
  4548  0475  3001               	movlw	1
  4549  0476                     u945:
  4550  0476  1003               	clrc
  4551  0477  0DF3               	rlf	___awdiv@divisor,f
  4552  0478  0DF4               	rlf	___awdiv@divisor+1,f
  4553  0479  3EFF               	addlw	-1
  4554  047A  1D03               	skipz
  4555  047B  2C76               	goto	u945
  4556  047C                     l1564:
  4557  047C  3001               	movlw	1
  4558  047D  00F7               	movwf	??___awdiv
  4559  047E  0877               	movf	??___awdiv,w
  4560  047F  07C0               	addwf	___awdiv@counter,f
  4561  0480                     l1566:
  4562  0480  1FF4               	btfss	___awdiv@divisor+1,7
  4563  0481  2C83               	goto	u951
  4564  0482  2C84               	goto	u950
  4565  0483                     u951:
  4566  0483  2C75               	goto	l1562
  4567  0484                     u950:
  4568  0484                     l1568:
  4569  0484  3001               	movlw	1
  4570  0485                     u965:
  4571  0485  1003               	clrc
  4572  0486  0DC2               	rlf	___awdiv@quotient,f
  4573  0487  0DC3               	rlf	___awdiv@quotient+1,f
  4574  0488  3EFF               	addlw	-1
  4575  0489  1D03               	skipz
  4576  048A  2C85               	goto	u965
  4577  048B  0874               	movf	___awdiv@divisor+1,w
  4578  048C  0276               	subwf	___awdiv@dividend+1,w
  4579  048D  1D03               	skipz
  4580  048E  2C91               	goto	u975
  4581  048F  0873               	movf	___awdiv@divisor,w
  4582  0490  0275               	subwf	___awdiv@dividend,w
  4583  0491                     u975:
  4584  0491  1C03               	skipc
  4585  0492  2C94               	goto	u971
  4586  0493  2C95               	goto	u970
  4587  0494                     u971:
  4588  0494  2C9C               	goto	l1574
  4589  0495                     u970:
  4590  0495                     l1570:
  4591  0495  0873               	movf	___awdiv@divisor,w
  4592  0496  02F5               	subwf	___awdiv@dividend,f
  4593  0497  0874               	movf	___awdiv@divisor+1,w
  4594  0498  1C03               	skipc
  4595  0499  03F6               	decf	___awdiv@dividend+1,f
  4596  049A  02F6               	subwf	___awdiv@dividend+1,f
  4597  049B                     l1572:
  4598  049B  1442               	bsf	___awdiv@quotient,0
  4599  049C                     l1574:
  4600  049C  3001               	movlw	1
  4601  049D                     u985:
  4602  049D  1003               	clrc
  4603  049E  0CF4               	rrf	___awdiv@divisor+1,f
  4604  049F  0CF3               	rrf	___awdiv@divisor,f
  4605  04A0  3EFF               	addlw	-1
  4606  04A1  1D03               	skipz
  4607  04A2  2C9D               	goto	u985
  4608  04A3                     l1576:
  4609  04A3  3001               	movlw	1
  4610  04A4  02C0               	subwf	___awdiv@counter,f
  4611  04A5  1D03               	btfss	3,2
  4612  04A6  2CA8               	goto	u991
  4613  04A7  2CA9               	goto	u990
  4614  04A8                     u991:
  4615  04A8  2C84               	goto	l1568
  4616  04A9                     u990:
  4617  04A9                     l1578:
  4618  04A9  0841               	movf	___awdiv@sign,w
  4619  04AA  1903               	btfsc	3,2
  4620  04AB  2CAD               	goto	u1001
  4621  04AC  2CAE               	goto	u1000
  4622  04AD                     u1001:
  4623  04AD  2CB3               	goto	l1582
  4624  04AE                     u1000:
  4625  04AE                     l1580:
  4626  04AE  09C2               	comf	___awdiv@quotient,f
  4627  04AF  09C3               	comf	___awdiv@quotient+1,f
  4628  04B0  0AC2               	incf	___awdiv@quotient,f
  4629  04B1  1903               	skipnz
  4630  04B2  0AC3               	incf	___awdiv@quotient+1,f
  4631  04B3                     l1582:
  4632  04B3  0843               	movf	___awdiv@quotient+1,w
  4633  04B4  00F4               	movwf	?___awdiv+1
  4634  04B5  0842               	movf	___awdiv@quotient,w
  4635  04B6  00F3               	movwf	?___awdiv
  4636  04B7                     l522:
  4637  04B7  0008               	return
  4638  04B8                     __end_of___awdiv:
  4639                           
  4640                           	psect	text28
  4641  0687                     __ptext28:	
  4642 ;; *************** function _ISR *****************
  4643 ;; Defined at:
  4644 ;;		line 85 in file "main.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4658 ;;      Params:         0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0
  4660 ;;      Temps:          3       0       0       0       0
  4661 ;;      Totals:         3       0       0       0       0
  4662 ;;Total ram usage:        3 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		Interrupt level 1
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _ISR
  4673  0687                     _ISR:
  4674  0687                     i1l1298:
  4675                           
  4676                           ;main.c: 86:     if (RCIF == 1) {
  4677  0687  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0688  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0689  1E8C               	btfss	12,5	;volatile
  4680  068A  2E8C               	goto	u67_21
  4681  068B  2E8D               	goto	u67_20
  4682  068C                     u67_21:
  4683  068C  2EB5               	goto	i1l111
  4684  068D                     u67_20:
  4685  068D                     i1l1300:
  4686                           
  4687                           ;main.c: 87:         USART_LEER = RCREG;
  4688  068D  081A               	movf	26,w	;volatile
  4689  068E  00F0               	movwf	??_ISR
  4690  068F  0870               	movf	??_ISR,w
  4691  0690  00FA               	movwf	_USART_LEER
  4692  0691                     i1l1302:
  4693                           
  4694                           ;main.c: 88:         if (USART_LEER == '1') {
  4695  0691  3031               	movlw	49
  4696  0692  067A               	xorwf	_USART_LEER,w
  4697  0693  1D03               	btfss	3,2
  4698  0694  2E96               	goto	u68_21
  4699  0695  2E97               	goto	u68_20
  4700  0696                     u68_21:
  4701  0696  2EA3               	goto	i1l1310
  4702  0697                     u68_20:
  4703  0697                     i1l1304:
  4704                           
  4705                           ;main.c: 89:             if (PORTBbits.RB0 == 0){
  4706  0697  1806               	btfsc	6,0	;volatile
  4707  0698  2E9A               	goto	u69_21
  4708  0699  2E9B               	goto	u69_20
  4709  069A                     u69_21:
  4710  069A  2E9D               	goto	i1l103
  4711  069B                     u69_20:
  4712  069B                     i1l1306:
  4713                           
  4714                           ;main.c: 90:                PORTBbits.RB0 = 1;
  4715  069B  1406               	bsf	6,0	;volatile
  4716                           
  4717                           ;main.c: 91:             }
  4718  069C  2EB4               	goto	i1l1318
  4719  069D                     i1l103:	
  4720                           ;main.c: 92:             else if (PORTBbits.RB0 == 1){
  4721                           
  4722  069D  1C06               	btfss	6,0	;volatile
  4723  069E  2EA0               	goto	u70_21
  4724  069F  2EA1               	goto	u70_20
  4725  06A0                     u70_21:
  4726  06A0  2EB4               	goto	i1l1318
  4727  06A1                     u70_20:
  4728  06A1                     i1l1308:
  4729                           
  4730                           ;main.c: 93:                 PORTBbits.RB0 = 0;
  4731  06A1  1006               	bcf	6,0	;volatile
  4732  06A2  2EB4               	goto	i1l1318
  4733  06A3                     i1l1310:
  4734  06A3  3032               	movlw	50
  4735  06A4  067A               	xorwf	_USART_LEER,w
  4736  06A5  1D03               	btfss	3,2
  4737  06A6  2EA8               	goto	u71_21
  4738  06A7  2EA9               	goto	u71_20
  4739  06A8                     u71_21:
  4740  06A8  2EB4               	goto	i1l1318
  4741  06A9                     u71_20:
  4742  06A9                     i1l1312:
  4743                           
  4744                           ;main.c: 97:             if (PORTBbits.RB1 == 0){
  4745  06A9  1886               	btfsc	6,1	;volatile
  4746  06AA  2EAC               	goto	u72_21
  4747  06AB  2EAD               	goto	u72_20
  4748  06AC                     u72_21:
  4749  06AC  2EAF               	goto	i1l108
  4750  06AD                     u72_20:
  4751  06AD                     i1l1314:
  4752                           
  4753                           ;main.c: 98:                PORTBbits.RB1 = 1;
  4754  06AD  1486               	bsf	6,1	;volatile
  4755                           
  4756                           ;main.c: 99:             }
  4757  06AE  2EB4               	goto	i1l1318
  4758  06AF                     i1l108:	
  4759                           ;main.c: 100:             else if (PORTBbits.RB1 == 1){
  4760                           
  4761  06AF  1C86               	btfss	6,1	;volatile
  4762  06B0  2EB2               	goto	u73_21
  4763  06B1  2EB3               	goto	u73_20
  4764  06B2                     u73_21:
  4765  06B2  2EB4               	goto	i1l1318
  4766  06B3                     u73_20:
  4767  06B3                     i1l1316:
  4768                           
  4769                           ;main.c: 101:                 PORTBbits.RB1 = 0;
  4770  06B3  1086               	bcf	6,1	;volatile
  4771  06B4                     i1l1318:
  4772                           
  4773                           ;main.c: 104:         USART_LEER = 0;
  4774  06B4  01FA               	clrf	_USART_LEER
  4775  06B5                     i1l111:
  4776  06B5  0872               	movf	??_ISR+2,w
  4777  06B6  008A               	movwf	10
  4778  06B7  0E71               	swapf	??_ISR+1,w
  4779  06B8  0083               	movwf	3
  4780  06B9  0EFE               	swapf	btemp,f
  4781  06BA  0E7E               	swapf	btemp,w
  4782  06BB  0009               	retfie
  4783  06BC                     __end_of_ISR:
  4784  007E                     btemp	set	126	;btemp
  4785  007E                     wtemp0	set	126
  4786                           
  4787                           	psect	intentry
  4788  0004                     __pintentry:	
  4789                           ;incstack = 0
  4790                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4791                           
  4792  0004                     interrupt_function:
  4793  007E                     saved_w	set	btemp
  4794  0004  00FE               	movwf	btemp
  4795  0005  0E03               	swapf	3,w
  4796  0006  00F1               	movwf	??_ISR+1
  4797  0007  080A               	movf	10,w
  4798  0008  00F2               	movwf	??_ISR+2
  4799  0009  120A  118A  2E87   	ljmp	_ISR
  4800                           
  4801                           	psect	config
  4802                           
  4803                           ;Config register CONFIG1 @ 0x2007
  4804                           ;	Oscillator Selection bits
  4805                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4806                           ;	Watchdog Timer Enable bit
  4807                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4808                           ;	Power-up Timer Enable bit
  4809                           ;	PWRTE = OFF, PWRT disabled
  4810                           ;	RE3/MCLR pin function select bit
  4811                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4812                           ;	Code Protection bit
  4813                           ;	CP = OFF, Program memory code protection is disabled
  4814                           ;	Data Code Protection bit
  4815                           ;	CPD = OFF, Data memory code protection is disabled
  4816                           ;	Brown Out Reset Selection bits
  4817                           ;	BOREN = OFF, BOR disabled
  4818                           ;	Internal External Switchover bit
  4819                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4820                           ;	Fail-Safe Clock Monitor Enabled bit
  4821                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4822                           ;	Low Voltage Programming Enable bit
  4823                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4824                           ;	In-Circuit Debugger Mode bit
  4825                           ;	DEBUG = 0x1, unprogrammed default
  4826  2007                     	org	8199
  4827  2007  20D4               	dw	8404
  4828                           
  4829                           ;Config register CONFIG2 @ 0x2008
  4830                           ;	Brown-out Reset Selection bit
  4831                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4832                           ;	Flash Program Memory Self Write Enable bits
  4833                           ;	WRT = OFF, Write protection off
  4834  2008                     	org	8200
  4835  2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    10
    Data        32
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> datos(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> date1(BANK0[17]), time(BANK0[15]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 1
		 -> datos(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DS3231_time->___awdiv
    _DS3231_time->___awmod
    _DS3231_time->_bcd_to_decimal
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _DS3231_time->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8882
                                             22 BANK0      3     3      0
                        _DS3231_time
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2231
                                              9 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     145
                                              4 COMMON     3     3      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     336
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_time                                          2     2      0    3031
                                              4 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     306
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231_time
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      50      12        0.0%
ABS                  0      0      50       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 21:09:14 2021

                                pc 0002                     ___bmul@product 0075  
                     ___awdiv@sign 0041                                 fsr 0004  
                              l122 06EC                                l125 07C1  
                              l221 0FB9                                l230 0F90  
                              l128 044E                                l224 0FC5  
                              l240 0715                                l241 071C  
                              l233 0FA2                                l145 0FAE  
                              l154 07A5                                l218 0686  
                              l227 0F99                                l171 07FE  
                              l236 0FAC                                l180 05CA  
                              l148 0FB8                                l165 0F87  
                              l405 051F                                l239 0712  
                              l183 07F1                                l168 07DB  
                              l177 0742                                l522 04B7  
                              l189 0767                                l365 0307  
                              l535 057A                                l641 0610  
                              l395 0FFF                                l651 064C  
                              l822 0FD7                                _GIE 005F  
                              _RE0 0048                                _RE1 0049  
                              _ISR 0687                                u900 0FD4  
                              u901 0FD3                                u910 0456  
                              u750 0FF1                                u911 0455  
                              u751 0FF0                                u920 0461  
                              u760 0FFE                                u840 0FB4  
                              u921 0460                                u761 0FFD  
                              u841 0FB3                                u930 0472  
                              u931 0471                                u950 0484  
                              u951 0483                                u945 0476  
                              u970 0495                                u890 0FCE  
                              u971 0494                                u891 0FCD  
                              u965 0485                                u990 04A9  
                              u991 04A8                                u975 0491  
                              u985 049D                                _led 0063  
                              _min 0078                                _sec 0061  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0041                               ?_ISR 0070  
                             l2000 0508                               l2002 0511  
                             l2010 0651                               l2020 07A7  
                             l2004 0517                               l2012 0654  
                             l2100 05F8                               l2030 07CF  
                             l2014 0683                               l2102 05FE  
                             l2200 070E                               l2032 07D8  
                             l2024 07C3                               l2040 07E9  
                             l2016 0684                               l2008 064D  
                             l2120 06D0                               l2112 06BC  
                             l2104 05FF                               l2050 0523  
                             l2202 0716                               l2026 07C6  
                             l2042 07EE                               l2034 07DD  
                             l2018 0685                               l2130 06E3  
                             l2122 06DD                               l2114 06C4  
                             l2106 0606                               l2210 01AB  
                             l2060 0537                               l2052 0527  
                             l2044 0FB9                               l2028 07CC  
                             l2036 07E0                               l2140 06EB  
                             l2132 06E5                               l2124 06DE  
                             l2116 06C5                               l2108 060C  
                             l2220 01CA                               l2212 01B1  
                             l2300 0035                               l2070 054F  
                             l2062 053D                               l2054 052C  
                             l2206 0308                               l2046 0FBF  
                             l2150 05A1                               l2142 057B  
                             l2038 07E6                               l2134 06E6  
                             l2126 06E1                               l2118 06C6  
                             l2230 01F0                               l2222 01CE  
                             l2214 01B8                               l2310 0050  
                             l2302 0038                               l2080 0571  
                             l2072 0559                               l2064 0540  
                             l2056 052E                               l2048 0520  
                             l2152 07F2                               l2144 0581  
                             l2160 0731                               l2136 06E7  
                             l2128 06E2                               l2240 0229  
                             l2224 01D0                               l2232 0201  
                             l2216 01BD                               l2208 01A6  
                             l2320 0074                               l2312 0058  
                             l2304 003D                               l2082 0576  
                             l2074 055F                               l2066 0547  
                             l2058 0532                               l1450 0FED  
                             l2146 058B                               l2162 0737  
                             l2154 0720                               l2170 0754  
                             l2138 06EA                               l2090 05D5  
                             l1530 0FC7                               l2250 023F  
                             l2242 022D                               l2226 01E1  
                             l2218 01BE                               l2330 009E  
                             l2322 007C                               l2314 005E  
                             l2306 0042                               l2076 0566  
                             l2068 054B                               l1452 0FF1  
                             l2180 0FA8                               l2148 059B  
                             l2164 073C                               l2156 0725  
                             l2172 075C                               l2092 05D8  
                             l1532 0FC8                               l2252 0245  
                             l2244 0231                               l2236 0202  
                             l2228 01EC                               l2340 00C9  
                             l2332 00A7                               l2324 0084  
                             l2316 0063                               l2308 004A  
                             l1550 045D                               l1542 044F  
                             l2078 056C                               l1454 0FF5  
                             l2190 06ED                               l2174 0F91  
                             l2182 0F9A                               l2158 072A  
                             l2166 0746                               l2094 05DF  
                             l2086 05CB                               l1534 0FCE  
                             l2270 0296                               l2262 0267  
                             l2254 0249                               l2246 0235  
                             l2238 0221                               l2414 0216  
                             l2350 00F7                               l2342 00D2  
                             l2334 00B0                               l2326 008D  
                             l2318 006C                               l1560 0472  
                             l1552 0461                               l1544 0452  
                             l1456 0FF7                               l1448 0FEC  
                             l2192 06F2                               l2176 0F96  
                             l2184 0F9F                               l2168 0749  
                             l2096 05E3                               l2088 05CF  
                             l1536 0FD4                               l2280 02E0  
                             l2272 029C                               l2264 0271  
                             l2248 023A                               l2360 013A  
                             l2352 0104                               l2344 00DA  
                             l2336 00B5                               l2328 0095  
                             l1570 0495                               l1562 0475  
                             l1554 0466                               l1546 0456  
                             l1458 0FFE                               l2194 06FA  
                             l2186 0F88                               l2178 0FA3  
                             l2098 05E7                               l1650 0611  
                             l1538 0FD6                               l2274 02A4  
                             l2266 0281                               l2258 024B  
                             l2370 0169                               l2362 0148  
                             l2354 0113                               l2346 00DF  
                             l2338 00C4                               l1580 04AE  
                             l1572 049B                               l1564 047C  
                             l1556 046A                               l1548 045B  
                             l2196 0703                               l2188 0F8D  
                             l1660 062B                               l1652 0619  
                             l2276 02AB                               l2284 02E8  
                             l2268 0282                               l2380 0193  
                             l2372 016F                               l2364 014D  
                             l2356 011C                               l2348 00E8  
                             l1582 04B3                               l1574 049C  
                             l1566 0480                               l1558 046C  
                             l2198 0708                               l1486 0FAE  
                             l1662 0635                               l1654 061C  
                             l2278 02B0                               l2286 02F1  
                             l2382 0199                               l2374 0177  
                             l2366 0152                               l2358 012B  
                             l1576 04A3                               l1568 0484  
                             l1488 0FB4                               l1664 063B  
                             l1656 0623                               l2288 0303  
                             l2376 017D                               l2368 0161  
                             l1578 04A9                               l1666 0642  
                             l1658 0627                               l2378 018D  
                             l2298 0030                               l1860 078B  
                             l1668 0648                               l1862 0796  
                             l1864 079A                               l1858 0789  
                             l1982 0F83                               l1990 04DA  
                             l1992 04DE                               l1984 04B8  
                             l1994 04E7                               l1986 04CA  
                             l1996 04F9                               l1988 04CD  
                             l1998 0507                               STR_1 0810  
                             u1000 04AE                               u1001 04AD  
                             u1200 0635                               u1201 0634  
                             u1220 0648                               u1221 0647  
                             u1205 0631                               u1215 063C  
                             u1400 07A5                               u1401 07A4  
                             u1410 04CA                               u1170 0619  
                             u1411 04C9                               u1171 0618  
                             u1500 0FBF                               u1501 0FBE  
                             u1510 0FC5                               u1430 04DE  
                             u1190 062B                               u1511 0FC4  
                             u1431 04DD                               u1191 062A  
                             u1600 0571                               u1520 0527  
                             u1601 0570                               u1521 0526  
                             u1425 04CF                               u1185 061D  
                             u1530 0532                               u1450 04F9  
                             u1610 05D5                               u1531 0531  
                             u1451 04F8                               u1611 05D4  
                             u1540 053D                               u1700 0767  
                             u1541 053C                               u1701 0766  
                             u1445 04E0                               u1710 070E  
                             u1470 0517                               u1630 05E7  
                             u1711 070D                               u1471 0516  
                             u1455 04F5                               u1631 05E6  
                             u1560 054F                               u1480 0664  
                             u1800 0281                               u1720 01B1  
                             u1561 054E                               u1465 0509  
                             u1625 05D9                               u1801 0280  
                             u1721 01B0                               u1570 0559  
                             u1650 05F8                               u1810 0296  
                             u1730 01CA                               u1571 0558  
                             u1555 0541                               u1651 05F7  
                             u1811 0295                               u1731 01C9  
                             u1820 02A4                               u1740 0200  
                             u1485 065F                               u1645 05E8  
                             u1821 02A3                               u1805 027D  
                             u1741 01FF                               u1590 056C  
                             u1670 060C                               u1830 02F1  
                             u1750 0231                               u1591 056B  
                             u1575 0555                               u1495 07B3  
                             u1671 060B                               u1655 05F4  
                             u1831 02F0                               u1815 0292  
                             u1751 0230                               u1680 0725  
                             u1840 0303                               u1760 023F  
                             u1585 0560                               u1681 0724  
                             u1665 0600                               u1841 0302  
                             u1761 023E                               u1690 0737  
                             u1770 0245                               u1907 05A7  
                             u1691 0736                               u1771 0244  
                             u1780 0266                               u1917 07D3  
                             u1781 0265                               u1790 0271  
                             u1791 0270                               u1785 0262  
                             u1857 00BD                               u1867 015A  
                             _PEIE 005E                               u1877 07EB  
                             u1887 0587                               u1897 0597  
                             _RCIF 0065                               _TRMT 04C1  
                ?_Lcd_Write_String 0070                               _date 005D  
 __end_of_I2C_Master_RepeatedStart 0F91                               _main 0030  
                             _hour 005F                               _time 0031  
                             _year 0059                               btemp 007E  
                             start 000C                 ??_Lcd_Write_String 0076  
                  __end_of_Lcd_Cmd 07DC                  ___bmul@multiplier 0076  
                            ??_ISR 0070                   ?_I2C_Master_Init 004D  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 04B8                    __end_of___awmod 057B  
                            _ANSEL 0188                    __end_of___lldiv 0520  
                  ___awdiv@divisor 0073                    __end_of___lwdiv 0611  
                            i1l103 069D                              i1l111 06B5  
                            i1l108 06AF                    __end_of___lwmod 064D  
                  ___awdiv@counter 0040                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u70_20 06A1                              u70_21 06A0  
                            u71_20 06A9                              u71_21 06A8  
                            u72_20 06AD                              u72_21 06AC  
                            u73_20 06B3                              u73_21 06B2  
          __size_of_Lcd_Set_Cursor 0026                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              u67_20 068D  
                            u67_21 068C                              u68_20 0697  
                            u68_21 0696                              u69_20 069B  
                            u69_21 069A                              _TXREG 0019  
                            _date1 0020                              _datos 0064  
                  __end_of_dpowers 0810                    __end_of_isdigit 0FD8  
                            _month 005B                              _setup 06BC  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0308  
                 __end_of_Lcd_Init 05CB                   __end_of_Lcd_Port 0F88  
                  __initialization 000F                       __end_of_main 01A3  
                 USART_ESCRITURA@a 0073                             ??_main 0056  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
                           ?_setup 0070                             _ANSELH 0189  
                           i1l1300 068D                             i1l1310 06A3  
                           i1l1302 0691                             i1l1312 06A9  
                           i1l1304 0697                             i1l1314 06AD  
                           i1l1306 069B                             i1l1316 06B3  
                           i1l1308 06A1                             i1l1318 06B4  
                           i1l1298 0687                      USART_STRING@a 0075  
                    USART_STRING@i 0076                          ??_Lcd_Cmd 0074  
                           _SPBRGH 009A            __size_of_Lcd_Write_Char 0016  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0F88  
                           ___bmul 0FEB                          ??___awdiv 0077  
                        ??___awmod 0077                          ??___lldiv 0073  
                        ??___lwdiv 0077                          ??___lwmod 0047  
                 ___awdiv@quotient 0042                    ___awmod@divisor 0073  
                  ___awmod@counter 0040                          ??_isdigit 0073  
                           saved_w 007E                          ??_sprintf 004C  
                  Lcd_Set_Cursor@a 0041                    Lcd_Set_Cursor@b 0077  
          __end_of__initialization 002C                  __end_of_Lcd_Clear 07FF  
              ___bmul@multiplicand 0073                     __pcstackCOMMON 0070  
                     __pidataBANK0 0768                      __end_of_setup 06ED  
                   _Lcd_Set_Cursor 071D                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                       __pbssBANK0 0059                      ??_DS3231_time 0044  
                       __pmaintext 0030                            ?___bmul 0073  
                       __pintentry 0004          __size_of_Lcd_Write_String 0025  
           __end_of_Lcd_Set_Cursor 0743           __size_of_USART_ESCRITURA 000C  
          __size_of_bcd_to_decimal 001C                         ??_Lcd_Init 0040  
                       ??_Lcd_Port 0073                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0800  
                   _Lcd_Write_Char 07DC                            _Lcd_Cmd 07C2  
                  __size_of___bmul 0015                            ___awdiv 044F  
                          ___awmod 0520                __end_of_DS3231_time 044F  
                          ___lldiv 04B8                            ___lwdiv 05CB  
                          ___lwmod 0611                    ?_Lcd_Set_Cursor 0077  
                          __ptext1 01A3                            __ptext2 0FC6  
                          __ptext3 0611                            __ptext4 05CB  
                          __ptext5 06BC                            __ptext6 064D  
                          __ptext7 04B8                            __ptext8 0788  
                          __ptext9 0FAD                       __size_of_ISR 0035  
                          _dpowers 0806                            _isdigit 0FC6  
                 ___awmod@dividend 0075           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            _sprintf 01A3  
           __end_of_Lcd_Write_Char 07F2               end_of_initialization 002C  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0040  
                  ___lldiv@counter 004C                          _RCSTAbits 0018  
                 I2C_Master_Init@c 004D                   I2C_Master_Read@a 0073  
                        Lcd_Port@a 0073                          _PORTBbits 0006  
                        _TRISCbits 0087                  ??_USART_ESCRITURA 0073  
                    ?_USART_STRING 0070                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0042                  Lcd_Write_String@i 0040  
                        _TXSTAbits 0098                        _DS3231_time 0308  
                        _Lcd_Clear 07F2                     __end_of___bmul 1000  
                 _Lcd_Write_String 0743                start_initialization 000F  
                   _bcd_to_decimal 07A6                        __end_of_ISR 06BC  
                   ??_USART_STRING 0074                  __size_of_Lcd_Init 0050  
                __size_of_Lcd_Port 0006                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073                         ?_Lcd_Clear 0070  
                         ??___bmul 0074                         init_fetch0 0FD8  
                      __pdataBANK0 0020                    Lcd_Write_Char@a 0075  
           __end_of_bcd_to_decimal 07C2                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 0040  
                         ?_Lcd_Cmd 0070                        sprintf@flag 0050  
                      sprintf@prec 0054                   _I2C_Master_Start 0F91  
                 _I2C_Master_Write 0FA3                   ___lwdiv@dividend 0075  
                 ??_Lcd_Set_Cursor 0040                           ?___awdiv 0073  
                         ?___awmod 0073                           ?___lldiv 0040  
                         ?___lwdiv 0073                           ?___lwmod 0043  
                        __pstrings 0800                    ?_bcd_to_decimal 0070  
                         ?_isdigit 0070                   ___lwdiv@quotient 0041  
                         ?_sprintf 0049               bcd_to_decimal@number 0077  
                   __size_of_setup 0031                  interrupt_function 0004  
                         _PIE1bits 008C                           Lcd_Cmd@a 0076  
                      ??_Lcd_Clear 0077               __end_of_USART_STRING 07A6  
                  _USART_ESCRITURA 0FAD                        __stringbase 0805  
                 ??_Lcd_Write_Char 0074                           _Lcd_Init 057B  
                         _Lcd_Port 0F82                I2C_Master_Read@temp 0040  
         __end_of_Lcd_Write_String 0768                   __size_of_Lcd_Cmd 001A  
                     ?_DS3231_time 0070  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 0806                        _isdigit$912 0073  
                       sprintf@val 0052                    _I2C_Master_Init 064D  
                  _I2C_Master_Read 06ED                    _I2C_Master_Wait 0FB9  
                  _I2C_Master_Stop 0F9A                   __size_of_isdigit 0012  
                  ___lwdiv@divisor 0073                    ___lwdiv@counter 0040  
                         __ptext10 0743                           __ptext11 07DC  
                         __ptext20 0F88                           __ptext12 071D  
                         __ptext21 06ED                           __ptext13 057B  
                         __ptext22 0FB9                           __ptext14 07F2  
                         __ptext23 0308                           __ptext15 07C2  
                         __ptext24 07A6                           __ptext16 0F82  
                         __ptext25 0FEB                           __ptext17 0FA3  
                         __ptext26 0520                           __ptext18 0F9A  
                         __ptext27 044F                           __ptext19 0F91  
                         __ptext28 0687                   __size_of_sprintf 0165  
                    __size_of_main 0173            __end_of_USART_ESCRITURA 0FB9  
         __end_of_I2C_Master_Start 0F9A           __end_of_I2C_Master_Write 0FAD  
                       _INTCONbits 000B                           init_ram0 0FDC  
                         isdigit@c 0074                           intlevel1 0000  
                        sprintf@ap 004F                          sprintf@sp 0051  
                 ___lwmod@dividend 0045                   ___lldiv@dividend 0044  
            __size_of_USART_STRING 001E                          stringcode 0800  
                 ??_bcd_to_decimal 0040            __end_of_I2C_Master_Init 0687  
          __end_of_I2C_Master_Read 071D            __end_of_I2C_Master_Wait 0FC6  
          __end_of_I2C_Master_Stop 0FA3                 Lcd_Set_Cursor@temp 0042  
                         sprintf@c 0055                           sprintf@f 0049  
                 ___lldiv@quotient 0048                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0043                    ___lwmod@counter 0048  
                         stringdir 0800                           stringtab 0800  
                      _SSPCON2bits 0091                       _USART_STRING 0788  
                       _USART_LEER 007A                   ?_USART_ESCRITURA 0070  
             __size_of_DS3231_time 0147  
