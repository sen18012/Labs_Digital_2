

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 21:46:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462                           
   463                           	psect	idataBANK0
   464  02C5                     __pidataBANK0:
   465                           
   466                           ;initializer for _date1
   467  02C5  3444               	retlw	68
   468  02C6  3441               	retlw	65
   469  02C7  3454               	retlw	84
   470  02C8  3445               	retlw	69
   471  02C9  343A               	retlw	58
   472  02CA  3420               	retlw	32
   473  02CB  3420               	retlw	32
   474  02CC  3420               	retlw	32
   475  02CD  342F               	retlw	47
   476  02CE  3420               	retlw	32
   477  02CF  3420               	retlw	32
   478  02D0  342F               	retlw	47
   479  02D1  3432               	retlw	50
   480  02D2  3430               	retlw	48
   481  02D3  3420               	retlw	32
   482  02D4  3420               	retlw	32
   483  02D5  3400               	retlw	0
   484                           
   485                           ;initializer for _time
   486  02D6  3454               	retlw	84
   487  02D7  3449               	retlw	73
   488  02D8  344D               	retlw	77
   489  02D9  3445               	retlw	69
   490  02DA  343A               	retlw	58
   491  02DB  3420               	retlw	32
   492  02DC  3420               	retlw	32
   493  02DD  3420               	retlw	32
   494  02DE  343A               	retlw	58
   495  02DF  3420               	retlw	32
   496  02E0  3420               	retlw	32
   497  02E1  343A               	retlw	58
   498  02E2  3420               	retlw	32
   499  02E3  3420               	retlw	32
   500  02E4  3400               	retlw	0
   501  0013                     _SSPBUF	set	19
   502  0014                     _SSPCON	set	20
   503  0019                     _TXREG	set	25
   504  001A                     _RCREG	set	26
   505  0018                     _RCSTAbits	set	24
   506  0009                     _PORTE	set	9
   507  0008                     _PORTD	set	8
   508  0007                     _PORTC	set	7
   509  0006                     _PORTB	set	6
   510  0005                     _PORTA	set	5
   511  0063                     _SSPIF	set	99
   512  005E                     _PEIE	set	94
   513  005F                     _GIE	set	95
   514  0049                     _RE1	set	73
   515  0048                     _RE0	set	72
   516  0065                     _RCIF	set	101
   517  0091                     _SSPCON2bits	set	145
   518  0094                     _SSPSTAT	set	148
   519  0093                     _SSPADD	set	147
   520  0091                     _SSPCON2	set	145
   521  0098                     _TXSTAbits	set	152
   522  0099                     _SPBRG	set	153
   523  009A                     _SPBRGH	set	154
   524  0089                     _TRISE	set	137
   525  0087                     _TRISCbits	set	135
   526  0086                     _TRISB	set	134
   527  0085                     _TRISA	set	133
   528  0088                     _TRISD	set	136
   529  0463                     _SSPIE	set	1123
   530  043C                     _TRISC4	set	1084
   531  043B                     _TRISC3	set	1083
   532  04C1                     _TRMT	set	1217
   533  0189                     _ANSELH	set	393
   534  0188                     _ANSEL	set	392
   535                           
   536                           	psect	cinit
   537  07E1                     start_initialization:	
   538                           ; #config settings
   539                           
   540  07E1                     __initialization:
   541                           
   542                           ; Initialize objects allocated to BANK0
   543  07E1  1383               	bcf	3,7	;select IRP bank0
   544  07E2  3040               	movlw	low (__pdataBANK0+32)
   545  07E3  00FD               	movwf	btemp+-1
   546  07E4  3002               	movlw	high __pidataBANK0
   547  07E5  00FE               	movwf	btemp
   548  07E6  30C5               	movlw	low __pidataBANK0
   549  07E7  00FF               	movwf	btemp+1
   550  07E8  3020               	movlw	low __pdataBANK0
   551  07E9  0084               	movwf	4
   552  07EA  120A  118A  223B  120A  118A  	fcall	init_ram0
   553                           
   554                           ; Clear objects allocated to BANK0
   555  07EF  01C0               	clrf	__pbssBANK0& (0+127)
   556  07F0  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   557  07F1  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   558  07F2  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   559  07F3  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   560  07F4  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   561  07F5  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   562  07F6  01C7               	clrf	(__pbssBANK0+7)& (0+127)
   563  07F7  01C8               	clrf	(__pbssBANK0+8)& (0+127)
   564  07F8  01C9               	clrf	(__pbssBANK0+9)& (0+127)
   565  07F9  01CA               	clrf	(__pbssBANK0+10)& (0+127)
   566  07FA  01CB               	clrf	(__pbssBANK0+11)& (0+127)
   567  07FB  01CC               	clrf	(__pbssBANK0+12)& (0+127)
   568  07FC                     end_of_initialization:	
   569                           ;End of C runtime variable initialization code
   570                           
   571  07FC                     __end_of__initialization:
   572  07FC  0183               	clrf	3
   573  07FD  120A  118A  2E76   	ljmp	_main	;jump to C main() function
   574                           
   575                           	psect	bssBANK0
   576  0040                     __pbssBANK0:
   577  0040                     _year:
   578  0040                     	ds	2
   579  0042                     _month:
   580  0042                     	ds	2
   581  0044                     _date:
   582  0044                     	ds	2
   583  0046                     _hour:
   584  0046                     	ds	2
   585  0048                     _min:
   586  0048                     	ds	2
   587  004A                     _sec:
   588  004A                     	ds	2
   589  004C                     _USART_LEER:
   590  004C                     	ds	1
   591                           
   592                           	psect	dataBANK0
   593  0020                     __pdataBANK0:
   594  0020                     _date1:
   595  0020                     	ds	17
   596  0031                     _time:
   597  0031                     	ds	15
   598                           
   599                           	psect	inittext
   600  0237                     init_fetch0:	
   601                           ;	Called with low address in FSR and high address in W
   602                           
   603  0237  087E               	movf	btemp,w
   604  0238  008A               	movwf	10
   605  0239  087F               	movf	btemp+1,w
   606  023A  0082               	movwf	2
   607  023B                     init_ram0:	
   608                           ;Called with:
   609                           ;	high address of idata address in btemp 
   610                           ;	low address of idata address in btemp+1 
   611                           ;	low address of data in FSR
   612                           ;	high address + 1 of data in btemp-1
   613                           
   614  023B  120A  118A  2237  120A  118A  	fcall	init_fetch0
   615  0240  0080               	movwf	0
   616  0241  0A84               	incf	4,f
   617  0242  0804               	movf	4,w
   618  0243  067D               	xorwf	btemp+-1,w
   619  0244  1903               	btfsc	3,2
   620  0245  3400               	retlw	0
   621  0246  0AFF               	incf	btemp+1,f
   622  0247  1903               	btfsc	3,2
   623  0248  0AFE               	incf	btemp,f
   624  0249  2A3B               	goto	init_ram0
   625                           
   626                           	psect	cstackCOMMON
   627  0070                     __pcstackCOMMON:
   628  0070                     ?_setup:
   629  0070                     ?_Lcd_Init:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_Lcd_Clear:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_Lcd_Write_String:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Start:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_I2C_Master_Start:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Master_Write:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Stop:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_I2C_Master_Stop:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_I2C_Master_RepeatedStart:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_I2C_Master_RepeatedStart:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_DS3231_time:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_USART_STRING:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_USART_ESCRITURA:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_USART_ESCRITURA:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_main:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_bcd_to_decimal:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_Lcd_Port:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_Lcd_Port:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_Lcd_Cmd:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_Lcd_Write_Char:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_I2C_Master_Wait:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_I2C_Master_Wait:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?___bmul:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_I2C_Master_Read:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?___awdiv:	
   702                           ; 2 bytes @ 0x0
   703                           
   704  0070                     ?___awmod:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0070                     ?___lldiv:	
   708                           ; 2 bytes @ 0x0
   709                           
   710  0070                     USART_ESCRITURA@a:	
   711                           ; 4 bytes @ 0x0
   712                           
   713  0070                     Lcd_Port@a:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ___bmul@multiplicand:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     I2C_Master_Write@d:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     I2C_Master_Read@a:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0070                     ___awdiv@divisor:	
   726                           ; 2 bytes @ 0x0
   727                           
   728  0070                     ___awmod@divisor:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0070                     ___lldiv@divisor:	
   732                           ; 2 bytes @ 0x0
   733                           
   734                           
   735                           ; 4 bytes @ 0x0
   736  0070                     	ds	1
   737  0071                     ??_USART_STRING:
   738  0071                     ??_Lcd_Cmd:	
   739                           ; 1 bytes @ 0x1
   740                           
   741  0071                     ??_Lcd_Write_Char:	
   742                           ; 1 bytes @ 0x1
   743                           
   744  0071                     ??___bmul:	
   745                           ; 1 bytes @ 0x1
   746                           
   747                           
   748                           ; 1 bytes @ 0x1
   749  0071                     	ds	1
   750  0072                     ??_I2C_Master_Write:
   751  0072                     ??_I2C_Master_Read:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     USART_STRING@i:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     Lcd_Write_Char@a:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ___bmul@product:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ___awdiv@dividend:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ___awmod@dividend:	
   767                           ; 2 bytes @ 0x2
   768                           
   769                           
   770                           ; 2 bytes @ 0x2
   771  0072                     	ds	1
   772  0073                     ??_Lcd_Write_String:
   773  0073                     USART_STRING@a:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     Lcd_Cmd@a:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ___bmul@multiplier:	
   780                           ; 1 bytes @ 0x3
   781                           
   782                           
   783                           ; 1 bytes @ 0x3
   784  0073                     	ds	1
   785  0074                     ??_Lcd_Init:
   786  0074                     ??_Lcd_Clear:	
   787                           ; 1 bytes @ 0x4
   788                           
   789  0074                     ?_Lcd_Set_Cursor:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ??_bcd_to_decimal:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0074                     ??___awdiv:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     ??___awmod:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0074                     Lcd_Set_Cursor@b:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0074                     Lcd_Write_String@i:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     I2C_Master_Read@temp:	
   808                           ; 2 bytes @ 0x4
   809                           
   810  0074                     ___lldiv@dividend:	
   811                           ; 2 bytes @ 0x4
   812                           
   813                           
   814                           ; 4 bytes @ 0x4
   815  0074                     	ds	1
   816  0075                     ??_Lcd_Set_Cursor:
   817  0075                     ___awdiv@counter:	
   818                           ; 1 bytes @ 0x5
   819                           
   820  0075                     ___awmod@counter:	
   821                           ; 1 bytes @ 0x5
   822                           
   823                           
   824                           ; 1 bytes @ 0x5
   825  0075                     	ds	1
   826  0076                     Lcd_Set_Cursor@a:
   827  0076                     Lcd_Write_String@a:	
   828                           ; 1 bytes @ 0x6
   829                           
   830  0076                     ___awdiv@sign:	
   831                           ; 1 bytes @ 0x6
   832                           
   833  0076                     ___awmod@sign:	
   834                           ; 1 bytes @ 0x6
   835                           
   836                           
   837                           ; 1 bytes @ 0x6
   838  0076                     	ds	1
   839  0077                     bcd_to_decimal@number:
   840  0077                     Lcd_Set_Cursor@temp:	
   841                           ; 1 bytes @ 0x7
   842                           
   843  0077                     ___awdiv@quotient:	
   844                           ; 1 bytes @ 0x7
   845                           
   846                           
   847                           ; 2 bytes @ 0x7
   848  0077                     	ds	1
   849  0078                     ??___lldiv:
   850                           
   851                           ; 1 bytes @ 0x8
   852  0078                     	ds	1
   853  0079                     ??_DS3231_time:
   854  0079                     ___lldiv@quotient:	
   855                           ; 1 bytes @ 0x9
   856                           
   857                           
   858                           ; 4 bytes @ 0x9
   859  0079                     	ds	4
   860  007D                     ___lldiv@counter:
   861                           
   862                           ; 1 bytes @ 0xD
   863  007D                     	ds	1
   864  007E                     ??_setup:
   865                           
   866                           	psect	cstackBANK0
   867  004D                     __pcstackBANK0:	
   868                           ; 1 bytes @ 0xE
   869                           
   870  004D                     ?_I2C_Master_Init:
   871  004D                     I2C_Master_Init@c:	
   872                           ; 1 bytes @ 0x0
   873                           
   874                           
   875                           ; 4 bytes @ 0x0
   876  004D                     	ds	4
   877  0051                     ??_I2C_Master_Init:
   878                           
   879                           ; 1 bytes @ 0x4
   880  0051                     	ds	4
   881  0055                     ??_main:
   882                           
   883                           ; 1 bytes @ 0x8
   884  0055                     	ds	3
   885                           
   886                           	psect	maintext
   887  0676                     __pmaintext:	
   888 ;;
   889 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   890 ;;
   891 ;; *************** function _main *****************
   892 ;; Defined at:
   893 ;;		line 88 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : B00/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       3       0       0       0
   910 ;;      Totals:         0       3       0       0       0
   911 ;;Total ram usage:        3 bytes
   912 ;; Hardware stack levels required when called:    3
   913 ;; This function calls:
   914 ;;		_DS3231_time
   915 ;;		_I2C_Master_Read
   916 ;;		_I2C_Master_RepeatedStart
   917 ;;		_I2C_Master_Start
   918 ;;		_I2C_Master_Stop
   919 ;;		_I2C_Master_Write
   920 ;;		_Lcd_Clear
   921 ;;		_Lcd_Init
   922 ;;		_Lcd_Set_Cursor
   923 ;;		_Lcd_Write_String
   924 ;;		_USART_ESCRITURA
   925 ;;		_USART_STRING
   926 ;;		_setup
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  0676                     _main:
   935  0676                     l1441:	
   936                           ;incstack = 0
   937                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   938                           
   939                           
   940                           ;main.c: 89:     setup();
   941  0676  120A  118A  2358  120A  118A  	fcall	_setup
   942  067B                     l1443:
   943                           
   944                           ;main.c: 90:     TRISD = 0x00;
   945  067B  1683               	bsf	3,5	;RP0=1, select bank1
   946  067C  1303               	bcf	3,6	;RP1=0, select bank1
   947  067D  0188               	clrf	8	;volatile
   948  067E                     l1445:
   949                           
   950                           ;main.c: 91:     Lcd_Init();
   951  067E  120A  118A  23BE  120A  118A  	fcall	_Lcd_Init
   952  0683                     l1447:
   953                           
   954                           ;main.c: 92:     Lcd_Clear();
   955  0683  120A  118A  222A  120A  118A  	fcall	_Lcd_Clear
   956  0688                     l1449:
   957                           
   958                           ;main.c: 93:     Lcd_Set_Cursor(1, 1);
   959  0688  01F4               	clrf	Lcd_Set_Cursor@b
   960  0689  0AF4               	incf	Lcd_Set_Cursor@b,f
   961  068A  3001               	movlw	1
   962  068B  120A  118A  2306  120A  118A  	fcall	_Lcd_Set_Cursor
   963  0690                     l1451:
   964                           
   965                           ;main.c: 94:     Lcd_Write_String(time);
   966  0690  3031               	movlw	(low (_time| 0))& (0+255)
   967  0691  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
   968  0696                     l1453:
   969                           
   970                           ;main.c: 95:     Lcd_Set_Cursor(2, 1);
   971  0696  01F4               	clrf	Lcd_Set_Cursor@b
   972  0697  0AF4               	incf	Lcd_Set_Cursor@b,f
   973  0698  3002               	movlw	2
   974  0699  120A  118A  2306  120A  118A  	fcall	_Lcd_Set_Cursor
   975  069E                     l1455:
   976                           
   977                           ;main.c: 96:     Lcd_Write_String(date1);
   978  069E  3020               	movlw	(low (_date1| 0))& (0+255)
   979  069F  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
   980  06A4                     l1457:
   981                           
   982                           ;main.c: 98:     I2C_Master_Start();
   983  06A4  120A  118A  21F5  120A  118A  	fcall	_I2C_Master_Start
   984  06A9                     l1459:
   985                           
   986                           ;main.c: 99:     I2C_Master_Write(0xD0);
   987  06A9  30D0               	movlw	208
   988  06AA  00F0               	movwf	I2C_Master_Write@d
   989  06AB  3000               	movlw	0
   990  06AC  00F1               	movwf	I2C_Master_Write@d+1
   991  06AD  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
   992  06B2                     l1461:
   993                           
   994                           ;main.c: 100:     I2C_Master_Write(0);
   995  06B2  3000               	movlw	0
   996  06B3  00F0               	movwf	I2C_Master_Write@d
   997  06B4  00F1               	movwf	I2C_Master_Write@d+1
   998  06B5  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
   999  06BA                     l1463:
  1000                           
  1001                           ;main.c: 101:     I2C_Master_Write(0);
  1002  06BA  3000               	movlw	0
  1003  06BB  00F0               	movwf	I2C_Master_Write@d
  1004  06BC  00F1               	movwf	I2C_Master_Write@d+1
  1005  06BD  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1006  06C2                     l1465:
  1007                           
  1008                           ;main.c: 102:     I2C_Master_Write(0);
  1009  06C2  3000               	movlw	0
  1010  06C3  00F0               	movwf	I2C_Master_Write@d
  1011  06C4  00F1               	movwf	I2C_Master_Write@d+1
  1012  06C5  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1013  06CA                     l1467:
  1014                           
  1015                           ;main.c: 103:     I2C_Master_Write(1);
  1016  06CA  3001               	movlw	1
  1017  06CB  00F0               	movwf	I2C_Master_Write@d
  1018  06CC  3000               	movlw	0
  1019  06CD  00F1               	movwf	I2C_Master_Write@d+1
  1020  06CE  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1021  06D3                     l1469:
  1022                           
  1023                           ;main.c: 104:     I2C_Master_Write(0);
  1024  06D3  3000               	movlw	0
  1025  06D4  00F0               	movwf	I2C_Master_Write@d
  1026  06D5  00F1               	movwf	I2C_Master_Write@d+1
  1027  06D6  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1028  06DB                     l1471:
  1029                           
  1030                           ;main.c: 105:     I2C_Master_Write(10);
  1031  06DB  300A               	movlw	10
  1032  06DC  00F0               	movwf	I2C_Master_Write@d
  1033  06DD  3000               	movlw	0
  1034  06DE  00F1               	movwf	I2C_Master_Write@d+1
  1035  06DF  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1036  06E4                     l1473:
  1037                           
  1038                           ;main.c: 106:     I2C_Master_Write(3);
  1039  06E4  3003               	movlw	3
  1040  06E5  00F0               	movwf	I2C_Master_Write@d
  1041  06E6  3000               	movlw	0
  1042  06E7  00F1               	movwf	I2C_Master_Write@d+1
  1043  06E8  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1044  06ED                     l1475:
  1045                           
  1046                           ;main.c: 107:     I2C_Master_Write(27);
  1047  06ED  301B               	movlw	27
  1048  06EE  00F0               	movwf	I2C_Master_Write@d
  1049  06EF  3000               	movlw	0
  1050  06F0  00F1               	movwf	I2C_Master_Write@d+1
  1051  06F1  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1052  06F6                     l1477:
  1053                           
  1054                           ;main.c: 108:     I2C_Master_Stop();
  1055  06F6  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Stop
  1056  06FB                     l1479:
  1057                           
  1058                           ;main.c: 109:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1059  06FB  3003               	movlw	3
  1060  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1061  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1062  06FE  00D7               	movwf	??_main+2
  1063  06FF  3008               	movlw	8
  1064  0700  00D6               	movwf	??_main+1
  1065  0701  3076               	movlw	118
  1066  0702  00D5               	movwf	??_main
  1067  0703                     u787:
  1068  0703  0BD5               	decfsz	??_main,f
  1069  0704  2F03               	goto	u787
  1070  0705  0BD6               	decfsz	??_main+1,f
  1071  0706  2F03               	goto	u787
  1072  0707  0BD7               	decfsz	??_main+2,f
  1073  0708  2F03               	goto	u787
  1074  0709  0000               	nop
  1075  070A                     l1481:
  1076                           
  1077                           ;main.c: 112:         I2C_Master_Start();
  1078  070A  120A  118A  21F5  120A  118A  	fcall	_I2C_Master_Start
  1079  070F                     l1483:
  1080                           
  1081                           ;main.c: 113:         I2C_Master_Write(0xD0);
  1082  070F  30D0               	movlw	208
  1083  0710  00F0               	movwf	I2C_Master_Write@d
  1084  0711  3000               	movlw	0
  1085  0712  00F1               	movwf	I2C_Master_Write@d+1
  1086  0713  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1087  0718                     l1485:
  1088                           
  1089                           ;main.c: 114:         I2C_Master_Write(0);
  1090  0718  3000               	movlw	0
  1091  0719  00F0               	movwf	I2C_Master_Write@d
  1092  071A  00F1               	movwf	I2C_Master_Write@d+1
  1093  071B  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1094  0720                     l1487:
  1095                           
  1096                           ;main.c: 115:         I2C_Master_RepeatedStart();
  1097  0720  120A  118A  21EC  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1098  0725                     l1489:
  1099                           
  1100                           ;main.c: 116:         I2C_Master_Write(0xD1);
  1101  0725  30D1               	movlw	209
  1102  0726  00F0               	movwf	I2C_Master_Write@d
  1103  0727  3000               	movlw	0
  1104  0728  00F1               	movwf	I2C_Master_Write@d+1
  1105  0729  120A  118A  2207  120A  118A  	fcall	_I2C_Master_Write
  1106  072E                     l1491:
  1107                           
  1108                           ;main.c: 117:         sec = I2C_Master_Read(1);
  1109  072E  3001               	movlw	1
  1110  072F  00F0               	movwf	I2C_Master_Read@a
  1111  0730  3000               	movlw	0
  1112  0731  00F1               	movwf	I2C_Master_Read@a+1
  1113  0732  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1114  0737  0871               	movf	?_I2C_Master_Read+1,w
  1115  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1117  073A  00CB               	movwf	_sec+1
  1118  073B  0870               	movf	?_I2C_Master_Read,w
  1119  073C  00CA               	movwf	_sec
  1120  073D                     l1493:
  1121                           
  1122                           ;main.c: 118:         min = I2C_Master_Read(1);
  1123  073D  3001               	movlw	1
  1124  073E  00F0               	movwf	I2C_Master_Read@a
  1125  073F  3000               	movlw	0
  1126  0740  00F1               	movwf	I2C_Master_Read@a+1
  1127  0741  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1128  0746  0871               	movf	?_I2C_Master_Read+1,w
  1129  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0749  00C9               	movwf	_min+1
  1132  074A  0870               	movf	?_I2C_Master_Read,w
  1133  074B  00C8               	movwf	_min
  1134  074C                     l1495:
  1135                           
  1136                           ;main.c: 119:         hour = I2C_Master_Read(1);
  1137  074C  3001               	movlw	1
  1138  074D  00F0               	movwf	I2C_Master_Read@a
  1139  074E  3000               	movlw	0
  1140  074F  00F1               	movwf	I2C_Master_Read@a+1
  1141  0750  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1142  0755  0871               	movf	?_I2C_Master_Read+1,w
  1143  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0758  00C7               	movwf	_hour+1
  1146  0759  0870               	movf	?_I2C_Master_Read,w
  1147  075A  00C6               	movwf	_hour
  1148  075B                     l1497:
  1149                           
  1150                           ;main.c: 120:         I2C_Master_Read(1);
  1151  075B  3001               	movlw	1
  1152  075C  00F0               	movwf	I2C_Master_Read@a
  1153  075D  3000               	movlw	0
  1154  075E  00F1               	movwf	I2C_Master_Read@a+1
  1155  075F  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1156  0764                     l1499:
  1157                           
  1158                           ;main.c: 121:         date = I2C_Master_Read(1);
  1159  0764  3001               	movlw	1
  1160  0765  00F0               	movwf	I2C_Master_Read@a
  1161  0766  3000               	movlw	0
  1162  0767  00F1               	movwf	I2C_Master_Read@a+1
  1163  0768  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1164  076D  0871               	movf	?_I2C_Master_Read+1,w
  1165  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1166  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0770  00C5               	movwf	_date+1
  1168  0771  0870               	movf	?_I2C_Master_Read,w
  1169  0772  00C4               	movwf	_date
  1170  0773                     l1501:
  1171                           
  1172                           ;main.c: 122:         month = I2C_Master_Read(1);
  1173  0773  3001               	movlw	1
  1174  0774  00F0               	movwf	I2C_Master_Read@a
  1175  0775  3000               	movlw	0
  1176  0776  00F1               	movwf	I2C_Master_Read@a+1
  1177  0777  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1178  077C  0871               	movf	?_I2C_Master_Read+1,w
  1179  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1180  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1181  077F  00C3               	movwf	_month+1
  1182  0780  0870               	movf	?_I2C_Master_Read,w
  1183  0781  00C2               	movwf	_month
  1184  0782                     l1503:
  1185                           
  1186                           ;main.c: 123:         year = I2C_Master_Read(0);
  1187  0782  3000               	movlw	0
  1188  0783  00F0               	movwf	I2C_Master_Read@a
  1189  0784  00F1               	movwf	I2C_Master_Read@a+1
  1190  0785  120A  118A  232A  120A  118A  	fcall	_I2C_Master_Read
  1191  078A  0871               	movf	?_I2C_Master_Read+1,w
  1192  078B  1283               	bcf	3,5	;RP0=0, select bank0
  1193  078C  1303               	bcf	3,6	;RP1=0, select bank0
  1194  078D  00C1               	movwf	_year+1
  1195  078E  0870               	movf	?_I2C_Master_Read,w
  1196  078F  00C0               	movwf	_year
  1197  0790                     l1505:
  1198                           
  1199                           ;main.c: 124:         I2C_Master_Stop();
  1200  0790  120A  118A  21FE  120A  118A  	fcall	_I2C_Master_Stop
  1201  0795                     l1507:
  1202                           
  1203                           ;main.c: 126:         DS3231_time();
  1204  0795  120A  118A  252F  120A  118A  	fcall	_DS3231_time
  1205  079A                     l1509:
  1206                           
  1207                           ;main.c: 127:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1208  079A  3003               	movlw	3
  1209  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1210  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1211  079D  00D7               	movwf	??_main+2
  1212  079E  3008               	movlw	8
  1213  079F  00D6               	movwf	??_main+1
  1214  07A0  3076               	movlw	118
  1215  07A1  00D5               	movwf	??_main
  1216  07A2                     u797:
  1217  07A2  0BD5               	decfsz	??_main,f
  1218  07A3  2FA2               	goto	u797
  1219  07A4  0BD6               	decfsz	??_main+1,f
  1220  07A5  2FA2               	goto	u797
  1221  07A6  0BD7               	decfsz	??_main+2,f
  1222  07A7  2FA2               	goto	u797
  1223  07A8  0000               	nop
  1224  07A9                     l1511:
  1225                           
  1226                           ;main.c: 129:         Lcd_Set_Cursor(1, 1);
  1227  07A9  01F4               	clrf	Lcd_Set_Cursor@b
  1228  07AA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1229  07AB  3001               	movlw	1
  1230  07AC  120A  118A  2306  120A  118A  	fcall	_Lcd_Set_Cursor
  1231  07B1                     l1513:
  1232                           
  1233                           ;main.c: 130:         Lcd_Write_String(time);
  1234  07B1  3031               	movlw	(low (_time| 0))& (0+255)
  1235  07B2  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
  1236  07B7                     l1515:
  1237                           
  1238                           ;main.c: 131:         Lcd_Set_Cursor(2, 1);
  1239  07B7  01F4               	clrf	Lcd_Set_Cursor@b
  1240  07B8  0AF4               	incf	Lcd_Set_Cursor@b,f
  1241  07B9  3002               	movlw	2
  1242  07BA  120A  118A  2306  120A  118A  	fcall	_Lcd_Set_Cursor
  1243  07BF                     l1517:
  1244                           
  1245                           ;main.c: 132:         Lcd_Write_String(date1);
  1246  07BF  3020               	movlw	(low (_date1| 0))& (0+255)
  1247  07C0  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
  1248  07C5                     l1519:
  1249                           
  1250                           ;main.c: 134:         USART_STRING(time);
  1251  07C5  3031               	movlw	(low (_time| 0))& (0+255)
  1252  07C6  120A  118A  22A7  120A  118A  	fcall	_USART_STRING
  1253  07CB                     l1521:
  1254                           
  1255                           ;main.c: 135:         USART_STRING(date1);
  1256  07CB  3020               	movlw	(low (_date1| 0))& (0+255)
  1257  07CC  120A  118A  22A7  120A  118A  	fcall	_USART_STRING
  1258  07D1                     l1523:
  1259                           
  1260                           ;main.c: 137:         USART_ESCRITURA(13);
  1261  07D1  300D               	movlw	13
  1262  07D2  120A  118A  2211  120A  118A  	fcall	_USART_ESCRITURA
  1263  07D7                     l1525:
  1264                           
  1265                           ;main.c: 138:         USART_ESCRITURA(10);
  1266  07D7  300A               	movlw	10
  1267  07D8  120A  118A  2211  120A  118A  	fcall	_USART_ESCRITURA
  1268  07DD  2F0A               	goto	l1481
  1269  07DE  120A  118A  2800   	ljmp	start
  1270  07E1                     __end_of_main:
  1271                           
  1272                           	psect	text1
  1273  0358                     __ptext1:	
  1274 ;; *************** function _setup *****************
  1275 ;; Defined at:
  1276 ;;		line 147 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    2
  1297 ;; This function calls:
  1298 ;;		_I2C_Master_Init
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _setup
  1306  0358                     _setup:
  1307  0358                     l1343:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1310                           
  1311                           
  1312                           ;main.c: 148:     ANSEL = 0;
  1313  0358  1683               	bsf	3,5	;RP0=1, select bank3
  1314  0359  1703               	bsf	3,6	;RP1=1, select bank3
  1315  035A  0188               	clrf	8	;volatile
  1316                           
  1317                           ;main.c: 149:     ANSELH = 0;
  1318  035B  0189               	clrf	9	;volatile
  1319                           
  1320                           ;main.c: 150:     TRISA = 0;
  1321  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1322  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1323  035E  0185               	clrf	5	;volatile
  1324                           
  1325                           ;main.c: 151:     TRISB = 0;
  1326  035F  0186               	clrf	6	;volatile
  1327  0360                     l1345:
  1328                           
  1329                           ;main.c: 152:     TRISCbits.TRISC3 = 0;
  1330  0360  1187               	bcf	7,3	;volatile
  1331  0361                     l1347:
  1332                           
  1333                           ;main.c: 153:     TRISCbits.TRISC6 = 0;
  1334  0361  1307               	bcf	7,6	;volatile
  1335  0362                     l1349:
  1336                           
  1337                           ;main.c: 154:     TRISCbits.TRISC7 = 1;
  1338  0362  1787               	bsf	7,7	;volatile
  1339                           
  1340                           ;main.c: 155:     TRISD = 0;
  1341  0363  0188               	clrf	8	;volatile
  1342                           
  1343                           ;main.c: 156:     TRISE = 0;
  1344  0364  0189               	clrf	9	;volatile
  1345                           
  1346                           ;main.c: 157:     PORTA = 0;
  1347  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0367  0185               	clrf	5	;volatile
  1350                           
  1351                           ;main.c: 158:     PORTB = 0;
  1352  0368  0186               	clrf	6	;volatile
  1353                           
  1354                           ;main.c: 159:     PORTC = 0;
  1355  0369  0187               	clrf	7	;volatile
  1356                           
  1357                           ;main.c: 160:     PORTD = 0;
  1358  036A  0188               	clrf	8	;volatile
  1359                           
  1360                           ;main.c: 161:     PORTE = 0;
  1361  036B  0189               	clrf	9	;volatile
  1362  036C                     l1351:
  1363                           
  1364                           ;main.c: 162:     I2C_Master_Init(100000);
  1365  036C  3000               	movlw	0
  1366  036D  00D0               	movwf	I2C_Master_Init@c+3
  1367  036E  3001               	movlw	1
  1368  036F  00CF               	movwf	I2C_Master_Init@c+2
  1369  0370  3086               	movlw	134
  1370  0371  00CE               	movwf	I2C_Master_Init@c+1
  1371  0372  30A0               	movlw	160
  1372  0373  00CD               	movwf	I2C_Master_Init@c
  1373  0374  120A  118A  2386  120A  118A  	fcall	_I2C_Master_Init
  1374  0379                     l1353:
  1375                           
  1376                           ;main.c: 165:     SPBRGH = 0;
  1377  0379  1683               	bsf	3,5	;RP0=1, select bank1
  1378  037A  1303               	bcf	3,6	;RP1=0, select bank1
  1379  037B  019A               	clrf	26	;volatile
  1380  037C                     l1355:
  1381                           
  1382                           ;main.c: 166:     SPBRG = 12;
  1383  037C  300C               	movlw	12
  1384  037D  0099               	movwf	25	;volatile
  1385  037E                     l1357:
  1386                           
  1387                           ;main.c: 168:     TXSTAbits.TXEN = 1;
  1388  037E  1698               	bsf	24,5	;volatile
  1389  037F                     l1359:
  1390                           
  1391                           ;main.c: 169:     TXSTAbits.SYNC = 0;
  1392  037F  1218               	bcf	24,4	;volatile
  1393  0380                     l1361:
  1394                           
  1395                           ;main.c: 171:     RCSTAbits.SPEN = 1;
  1396  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0382  1798               	bsf	24,7	;volatile
  1399  0383                     l1363:
  1400                           
  1401                           ;main.c: 172:     RCSTAbits.CREN = 1;
  1402  0383  1618               	bsf	24,4	;volatile
  1403  0384                     l1365:
  1404                           
  1405                           ;main.c: 173:     RCREG = 0;
  1406  0384  019A               	clrf	26	;volatile
  1407  0385                     l93:
  1408  0385  0008               	return
  1409  0386                     __end_of_setup:
  1410                           
  1411                           	psect	text2
  1412  0386                     __ptext2:	
  1413 ;; *************** function _I2C_Master_Init *****************
  1414 ;; Defined at:
  1415 ;;		line 16 in file "I2C.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  c               4    0[BANK0 ] const unsigned long 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       4       0       0       0
  1430 ;;      Locals:         0       0       0       0       0
  1431 ;;      Temps:          0       4       0       0       0
  1432 ;;      Totals:         0       8       0       0       0
  1433 ;;Total ram usage:        8 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    1
  1436 ;; This function calls:
  1437 ;;		___lldiv
  1438 ;; This function is called by:
  1439 ;;		_setup
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _I2C_Master_Init
  1445  0386                     _I2C_Master_Init:
  1446  0386                     l1221:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1449                           
  1450                           
  1451                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1452  0386  3028               	movlw	40
  1453  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0389  0094               	movwf	20	;volatile
  1456  038A                     l1223:
  1457                           
  1458                           ;I2C.c: 19:     SSPCON2 = 0;
  1459  038A  1683               	bsf	3,5	;RP0=1, select bank1
  1460  038B  1303               	bcf	3,6	;RP1=0, select bank1
  1461  038C  0191               	clrf	17	;volatile
  1462  038D                     l1225:
  1463                           
  1464                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1465  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1466  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1467  038F  084D               	movf	I2C_Master_Init@c,w
  1468  0390  00D1               	movwf	??_I2C_Master_Init
  1469  0391  084E               	movf	I2C_Master_Init@c+1,w
  1470  0392  00D2               	movwf	??_I2C_Master_Init+1
  1471  0393  084F               	movf	I2C_Master_Init@c+2,w
  1472  0394  00D3               	movwf	??_I2C_Master_Init+2
  1473  0395  0850               	movf	I2C_Master_Init@c+3,w
  1474  0396  00D4               	movwf	??_I2C_Master_Init+3
  1475  0397  3002               	movlw	2
  1476  0398                     u505:
  1477  0398  1003               	clrc
  1478  0399  0DD1               	rlf	??_I2C_Master_Init,f
  1479  039A  0DD2               	rlf	??_I2C_Master_Init+1,f
  1480  039B  0DD3               	rlf	??_I2C_Master_Init+2,f
  1481  039C  0DD4               	rlf	??_I2C_Master_Init+3,f
  1482  039D                     u500:
  1483  039D  3EFF               	addlw	-1
  1484  039E  1D03               	skipz
  1485  039F  2B98               	goto	u505
  1486  03A0  0854               	movf	??_I2C_Master_Init+3,w
  1487  03A1  00F3               	movwf	___lldiv@divisor+3
  1488  03A2  0853               	movf	??_I2C_Master_Init+2,w
  1489  03A3  00F2               	movwf	___lldiv@divisor+2
  1490  03A4  0852               	movf	??_I2C_Master_Init+1,w
  1491  03A5  00F1               	movwf	___lldiv@divisor+1
  1492  03A6  0851               	movf	??_I2C_Master_Init,w
  1493  03A7  00F0               	movwf	___lldiv@divisor
  1494  03A8  3000               	movlw	0
  1495  03A9  00F7               	movwf	___lldiv@dividend+3
  1496  03AA  307A               	movlw	122
  1497  03AB  00F6               	movwf	___lldiv@dividend+2
  1498  03AC  3012               	movlw	18
  1499  03AD  00F5               	movwf	___lldiv@dividend+1
  1500  03AE  3000               	movlw	0
  1501  03AF  00F4               	movwf	___lldiv@dividend
  1502  03B0  120A  118A  2462  120A  118A  	fcall	___lldiv
  1503  03B5  0870               	movf	?___lldiv,w
  1504  03B6  3EFF               	addlw	255
  1505  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  1506  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  1507  03B9  0093               	movwf	19	;volatile
  1508  03BA                     l1227:
  1509                           
  1510                           ;I2C.c: 21:     SSPSTAT = 0;
  1511  03BA  0194               	clrf	20	;volatile
  1512  03BB                     l1229:
  1513                           
  1514                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1515  03BB  1587               	bsf	7,3	;volatile
  1516  03BC                     l1231:
  1517                           
  1518                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1519  03BC  1607               	bsf	7,4	;volatile
  1520  03BD                     l189:
  1521  03BD  0008               	return
  1522  03BE                     __end_of_I2C_Master_Init:
  1523                           
  1524                           	psect	text3
  1525  0462                     __ptext3:	
  1526 ;; *************** function ___lldiv *****************
  1527 ;; Defined at:
  1528 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  divisor         4    0[COMMON] unsigned long 
  1531 ;;  dividend        4    4[COMMON] unsigned long 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  quotient        4    9[COMMON] unsigned long 
  1534 ;;  counter         1   13[COMMON] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  4    0[COMMON] unsigned long 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         8       0       0       0       0
  1545 ;;      Locals:         5       0       0       0       0
  1546 ;;      Temps:          1       0       0       0       0
  1547 ;;      Totals:        14       0       0       0       0
  1548 ;;Total ram usage:       14 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_I2C_Master_Init
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function ___lldiv
  1559  0462                     ___lldiv:
  1560  0462                     l1193:	
  1561                           ;incstack = 0
  1562                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1563                           
  1564  0462  3000               	movlw	0
  1565  0463  00FC               	movwf	___lldiv@quotient+3
  1566  0464  3000               	movlw	0
  1567  0465  00FB               	movwf	___lldiv@quotient+2
  1568  0466  3000               	movlw	0
  1569  0467  00FA               	movwf	___lldiv@quotient+1
  1570  0468  3000               	movlw	0
  1571  0469  00F9               	movwf	___lldiv@quotient
  1572  046A  0873               	movf	___lldiv@divisor+3,w
  1573  046B  0472               	iorwf	___lldiv@divisor+2,w
  1574  046C  0471               	iorwf	___lldiv@divisor+1,w
  1575  046D  0470               	iorwf	___lldiv@divisor,w
  1576  046E  1903               	skipnz
  1577  046F  2C71               	goto	u421
  1578  0470  2C72               	goto	u420
  1579  0471                     u421:
  1580  0471  2CBF               	goto	l1213
  1581  0472                     u420:
  1582  0472                     l1195:
  1583  0472  01FD               	clrf	___lldiv@counter
  1584  0473  0AFD               	incf	___lldiv@counter,f
  1585  0474  2C82               	goto	l1199
  1586  0475                     l1197:
  1587  0475  3001               	movlw	1
  1588  0476  00F8               	movwf	??___lldiv
  1589  0477                     u435:
  1590  0477  1003               	clrc
  1591  0478  0DF0               	rlf	___lldiv@divisor,f
  1592  0479  0DF1               	rlf	___lldiv@divisor+1,f
  1593  047A  0DF2               	rlf	___lldiv@divisor+2,f
  1594  047B  0DF3               	rlf	___lldiv@divisor+3,f
  1595  047C  0BF8               	decfsz	??___lldiv,f
  1596  047D  2C77               	goto	u435
  1597  047E  3001               	movlw	1
  1598  047F  00F8               	movwf	??___lldiv
  1599  0480  0878               	movf	??___lldiv,w
  1600  0481  07FD               	addwf	___lldiv@counter,f
  1601  0482                     l1199:
  1602  0482  1FF3               	btfss	___lldiv@divisor+3,7
  1603  0483  2C85               	goto	u441
  1604  0484  2C86               	goto	u440
  1605  0485                     u441:
  1606  0485  2C75               	goto	l1197
  1607  0486                     u440:
  1608  0486                     l1201:
  1609  0486  3001               	movlw	1
  1610  0487  00F8               	movwf	??___lldiv
  1611  0488                     u455:
  1612  0488  1003               	clrc
  1613  0489  0DF9               	rlf	___lldiv@quotient,f
  1614  048A  0DFA               	rlf	___lldiv@quotient+1,f
  1615  048B  0DFB               	rlf	___lldiv@quotient+2,f
  1616  048C  0DFC               	rlf	___lldiv@quotient+3,f
  1617  048D  0BF8               	decfsz	??___lldiv,f
  1618  048E  2C88               	goto	u455
  1619  048F                     l1203:
  1620  048F  0873               	movf	___lldiv@divisor+3,w
  1621  0490  0277               	subwf	___lldiv@dividend+3,w
  1622  0491  1D03               	skipz
  1623  0492  2C9D               	goto	u465
  1624  0493  0872               	movf	___lldiv@divisor+2,w
  1625  0494  0276               	subwf	___lldiv@dividend+2,w
  1626  0495  1D03               	skipz
  1627  0496  2C9D               	goto	u465
  1628  0497  0871               	movf	___lldiv@divisor+1,w
  1629  0498  0275               	subwf	___lldiv@dividend+1,w
  1630  0499  1D03               	skipz
  1631  049A  2C9D               	goto	u465
  1632  049B  0870               	movf	___lldiv@divisor,w
  1633  049C  0274               	subwf	___lldiv@dividend,w
  1634  049D                     u465:
  1635  049D  1C03               	skipc
  1636  049E  2CA0               	goto	u461
  1637  049F  2CA1               	goto	u460
  1638  04A0                     u461:
  1639  04A0  2CB0               	goto	l1209
  1640  04A1                     u460:
  1641  04A1                     l1205:
  1642  04A1  0870               	movf	___lldiv@divisor,w
  1643  04A2  02F4               	subwf	___lldiv@dividend,f
  1644  04A3  0871               	movf	___lldiv@divisor+1,w
  1645  04A4  1C03               	skipc
  1646  04A5  0F71               	incfsz	___lldiv@divisor+1,w
  1647  04A6  02F5               	subwf	___lldiv@dividend+1,f
  1648  04A7  0872               	movf	___lldiv@divisor+2,w
  1649  04A8  1C03               	skipc
  1650  04A9  0F72               	incfsz	___lldiv@divisor+2,w
  1651  04AA  02F6               	subwf	___lldiv@dividend+2,f
  1652  04AB  0873               	movf	___lldiv@divisor+3,w
  1653  04AC  1C03               	skipc
  1654  04AD  0F73               	incfsz	___lldiv@divisor+3,w
  1655  04AE  02F7               	subwf	___lldiv@dividend+3,f
  1656  04AF                     l1207:
  1657  04AF  1479               	bsf	___lldiv@quotient,0
  1658  04B0                     l1209:
  1659  04B0  3001               	movlw	1
  1660  04B1                     u475:
  1661  04B1  1003               	clrc
  1662  04B2  0CF3               	rrf	___lldiv@divisor+3,f
  1663  04B3  0CF2               	rrf	___lldiv@divisor+2,f
  1664  04B4  0CF1               	rrf	___lldiv@divisor+1,f
  1665  04B5  0CF0               	rrf	___lldiv@divisor,f
  1666  04B6  3EFF               	addlw	-1
  1667  04B7  1D03               	skipz
  1668  04B8  2CB1               	goto	u475
  1669  04B9                     l1211:
  1670  04B9  3001               	movlw	1
  1671  04BA  02FD               	subwf	___lldiv@counter,f
  1672  04BB  1D03               	btfss	3,2
  1673  04BC  2CBE               	goto	u481
  1674  04BD  2CBF               	goto	u480
  1675  04BE                     u481:
  1676  04BE  2C86               	goto	l1201
  1677  04BF                     u480:
  1678  04BF                     l1213:
  1679  04BF  087C               	movf	___lldiv@quotient+3,w
  1680  04C0  00F3               	movwf	?___lldiv+3
  1681  04C1  087B               	movf	___lldiv@quotient+2,w
  1682  04C2  00F2               	movwf	?___lldiv+2
  1683  04C3  087A               	movf	___lldiv@quotient+1,w
  1684  04C4  00F1               	movwf	?___lldiv+1
  1685  04C5  0879               	movf	___lldiv@quotient,w
  1686  04C6  00F0               	movwf	?___lldiv
  1687  04C7                     l337:
  1688  04C7  0008               	return
  1689  04C8                     __end_of___lldiv:
  1690                           
  1691                           	psect	text4
  1692  02A7                     __ptext4:	
  1693 ;; *************** function _USART_STRING *****************
  1694 ;; Defined at:
  1695 ;;		line 17 in file "USART.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  a               1    wreg     PTR unsigned char 
  1698 ;;		 -> date1(17), time(15), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  a               1    3[COMMON] PTR unsigned char 
  1701 ;;		 -> date1(17), time(15), 
  1702 ;;  i               1    2[COMMON] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         2       0       0       0       0
  1714 ;;      Temps:          1       0       0       0       0
  1715 ;;      Totals:         3       0       0       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    1
  1719 ;; This function calls:
  1720 ;;		_USART_ESCRITURA
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _USART_STRING
  1728  02A7                     _USART_STRING:
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1732                           ;USART_STRING@a stored from wreg
  1733  02A7  00F3               	movwf	USART_STRING@a
  1734  02A8                     l1433:
  1735                           
  1736                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  1737  02A8  01F2               	clrf	USART_STRING@i
  1738  02A9  2AB9               	goto	l1439
  1739  02AA                     l1435:
  1740                           
  1741                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  1742  02AA  0872               	movf	USART_STRING@i,w
  1743  02AB  0773               	addwf	USART_STRING@a,w
  1744  02AC  00F1               	movwf	??_USART_STRING
  1745  02AD  0871               	movf	??_USART_STRING,w
  1746  02AE  0084               	movwf	4
  1747  02AF  0800               	movf	0,w
  1748  02B0  120A  118A  2211  120A  118A  	fcall	_USART_ESCRITURA
  1749  02B5                     l1437:
  1750                           
  1751                           ;USART.c: 21:     }
  1752  02B5  3001               	movlw	1
  1753  02B6  00F1               	movwf	??_USART_STRING
  1754  02B7  0871               	movf	??_USART_STRING,w
  1755  02B8  07F2               	addwf	USART_STRING@i,f
  1756  02B9                     l1439:
  1757  02B9  0872               	movf	USART_STRING@i,w
  1758  02BA  0773               	addwf	USART_STRING@a,w
  1759  02BB  00F1               	movwf	??_USART_STRING
  1760  02BC  0871               	movf	??_USART_STRING,w
  1761  02BD  0084               	movwf	4
  1762  02BE  1383               	bcf	3,7	;select IRP bank0
  1763  02BF  0800               	movf	0,w
  1764  02C0  1D03               	btfss	3,2
  1765  02C1  2AC3               	goto	u771
  1766  02C2  2AC4               	goto	u770
  1767  02C3                     u771:
  1768  02C3  2AAA               	goto	l1435
  1769  02C4                     u770:
  1770  02C4                     l125:
  1771  02C4  0008               	return
  1772  02C5                     __end_of_USART_STRING:
  1773                           
  1774                           	psect	text5
  1775  0211                     __ptext5:	
  1776 ;; *************** function _USART_ESCRITURA *****************
  1777 ;; Defined at:
  1778 ;;		line 13 in file "USART.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  a               1    wreg     unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  a               1    0[COMMON] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         1       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         1       0       0       0       0
  1796 ;;Total ram usage:        1 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;;		_USART_STRING
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _USART_ESCRITURA
  1808  0211                     _USART_ESCRITURA:
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _USART_ESCRITURA: [wreg]
  1812                           ;USART_ESCRITURA@a stored from wreg
  1813  0211  00F0               	movwf	USART_ESCRITURA@a
  1814  0212                     l1217:
  1815  0212                     l116:	
  1816                           ;USART.c: 14:     while(!TRMT);
  1817                           
  1818  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0214  1C98               	btfss	24,1	;volatile
  1821  0215  2A17               	goto	u491
  1822  0216  2A18               	goto	u490
  1823  0217                     u491:
  1824  0217  2A12               	goto	l116
  1825  0218                     u490:
  1826  0218                     l1219:
  1827                           
  1828                           ;USART.c: 15:     TXREG = a;
  1829  0218  0870               	movf	USART_ESCRITURA@a,w
  1830  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1831  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1832  021B  0099               	movwf	25	;volatile
  1833  021C                     l119:
  1834  021C  0008               	return
  1835  021D                     __end_of_USART_ESCRITURA:
  1836                           
  1837                           	psect	text6
  1838  02E5                     __ptext6:	
  1839 ;; *************** function _Lcd_Write_String *****************
  1840 ;; Defined at:
  1841 ;;		line 94 in file "LCD.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  a               1    wreg     PTR unsigned char 
  1844 ;;		 -> date1(17), time(15), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  a               1    6[COMMON] PTR unsigned char 
  1847 ;;		 -> date1(17), time(15), 
  1848 ;;  i               2    4[COMMON] int 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       0       0       0       0
  1859 ;;      Locals:         3       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0
  1861 ;;      Totals:         4       0       0       0       0
  1862 ;;Total ram usage:        4 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    2
  1865 ;; This function calls:
  1866 ;;		_Lcd_Write_Char
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _Lcd_Write_String
  1874  02E5                     _Lcd_Write_String:
  1875                           
  1876                           ;incstack = 0
  1877                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1878                           ;Lcd_Write_String@a stored from wreg
  1879  02E5  00F6               	movwf	Lcd_Write_String@a
  1880  02E6                     l1391:
  1881                           
  1882                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  1883  02E6  01F4               	clrf	Lcd_Write_String@i
  1884  02E7  01F5               	clrf	Lcd_Write_String@i+1
  1885  02E8  2AFA               	goto	l1397
  1886  02E9                     l1393:
  1887                           
  1888                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  1889  02E9  0874               	movf	Lcd_Write_String@i,w
  1890  02EA  0776               	addwf	Lcd_Write_String@a,w
  1891  02EB  00F3               	movwf	??_Lcd_Write_String
  1892  02EC  0873               	movf	??_Lcd_Write_String,w
  1893  02ED  0084               	movwf	4
  1894  02EE  0800               	movf	0,w
  1895  02EF  120A  118A  225F  120A  118A  	fcall	_Lcd_Write_Char
  1896  02F4                     l1395:
  1897  02F4  3001               	movlw	1
  1898  02F5  07F4               	addwf	Lcd_Write_String@i,f
  1899  02F6  1803               	skipnc
  1900  02F7  0AF5               	incf	Lcd_Write_String@i+1,f
  1901  02F8  3000               	movlw	0
  1902  02F9  07F5               	addwf	Lcd_Write_String@i+1,f
  1903  02FA                     l1397:
  1904  02FA  0874               	movf	Lcd_Write_String@i,w
  1905  02FB  0776               	addwf	Lcd_Write_String@a,w
  1906  02FC  00F3               	movwf	??_Lcd_Write_String
  1907  02FD  0873               	movf	??_Lcd_Write_String,w
  1908  02FE  0084               	movwf	4
  1909  02FF  1383               	bcf	3,7	;select IRP bank0
  1910  0300  0800               	movf	0,w
  1911  0301  1D03               	btfss	3,2
  1912  0302  2B04               	goto	u751
  1913  0303  2B05               	goto	u750
  1914  0304                     u751:
  1915  0304  2AE9               	goto	l1393
  1916  0305                     u750:
  1917  0305                     l160:
  1918  0305  0008               	return
  1919  0306                     __end_of_Lcd_Write_String:
  1920                           
  1921                           	psect	text7
  1922  025F                     __ptext7:	
  1923 ;; *************** function _Lcd_Write_Char *****************
  1924 ;; Defined at:
  1925 ;;		line 77 in file "LCD.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  a               1    wreg     unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  a               1    2[COMMON] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         1       0       0       0       0
  1941 ;;      Temps:          1       0       0       0       0
  1942 ;;      Totals:         2       0       0       0       0
  1943 ;;Total ram usage:        2 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_Lcd_Port
  1948 ;; This function is called by:
  1949 ;;		_Lcd_Write_String
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _Lcd_Write_Char
  1955  025F                     _Lcd_Write_Char:
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1959                           ;Lcd_Write_Char@a stored from wreg
  1960  025F  00F2               	movwf	Lcd_Write_Char@a
  1961  0260                     l1247:
  1962                           
  1963                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  1964  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0262  1409               	bsf	9,0	;volatile
  1967  0263                     l1249:
  1968                           
  1969                           ;LCD.c: 88:    Lcd_Port(a);
  1970  0263  0872               	movf	Lcd_Write_Char@a,w
  1971  0264  120A  118A  21E6  120A  118A  	fcall	_Lcd_Port
  1972  0269                     l1251:
  1973                           
  1974                           ;LCD.c: 89:    RE1 = 1;
  1975  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1976  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1977  026B  1489               	bsf	9,1	;volatile
  1978  026C                     l1253:
  1979                           
  1980                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1981  026C  301A               	movlw	26
  1982  026D  00F1               	movwf	??_Lcd_Write_Char
  1983  026E                     u807:
  1984  026E  0BF1               	decfsz	??_Lcd_Write_Char,f
  1985  026F  2A6E               	goto	u807
  1986  0270  0000               	nop
  1987  0271                     l1255:
  1988                           
  1989                           ;LCD.c: 91:    RE1 = 0;
  1990  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0273  1089               	bcf	9,1	;volatile
  1993  0274                     l154:
  1994  0274  0008               	return
  1995  0275                     __end_of_Lcd_Write_Char:
  1996                           
  1997                           	psect	text8
  1998  0306                     __ptext8:	
  1999 ;; *************** function _Lcd_Set_Cursor *****************
  2000 ;; Defined at:
  2001 ;;		line 37 in file "LCD.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  a               1    wreg     unsigned char 
  2004 ;;  b               1    4[COMMON] unsigned char 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  a               1    6[COMMON] unsigned char 
  2007 ;;  temp            1    7[COMMON] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         1       0       0       0       0
  2018 ;;      Locals:         2       0       0       0       0
  2019 ;;      Temps:          1       0       0       0       0
  2020 ;;      Totals:         4       0       0       0       0
  2021 ;;Total ram usage:        4 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    2
  2024 ;; This function calls:
  2025 ;;		_Lcd_Cmd
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _Lcd_Set_Cursor
  2033  0306                     _Lcd_Set_Cursor:
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2037                           ;Lcd_Set_Cursor@a stored from wreg
  2038  0306  00F6               	movwf	Lcd_Set_Cursor@a
  2039  0307                     l1379:
  2040                           
  2041                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  2042  0307  0376               	decf	Lcd_Set_Cursor@a,w
  2043  0308  1D03               	btfss	3,2
  2044  0309  2B0B               	goto	u731
  2045  030A  2B0C               	goto	u730
  2046  030B                     u731:
  2047  030B  2B18               	goto	l1385
  2048  030C                     u730:
  2049  030C                     l1381:
  2050                           
  2051                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  2052  030C  0874               	movf	Lcd_Set_Cursor@b,w
  2053  030D  3E7F               	addlw	127
  2054  030E  00F5               	movwf	??_Lcd_Set_Cursor
  2055  030F  0875               	movf	??_Lcd_Set_Cursor,w
  2056  0310  00F7               	movwf	Lcd_Set_Cursor@temp
  2057  0311                     l1383:
  2058                           
  2059                           ;LCD.c: 46:   Lcd_Cmd(temp);
  2060  0311  0877               	movf	Lcd_Set_Cursor@temp,w
  2061  0312  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2062                           
  2063                           ;LCD.c: 47:  }
  2064  0317  2B29               	goto	l148
  2065  0318                     l1385:
  2066  0318  3002               	movlw	2
  2067  0319  0676               	xorwf	Lcd_Set_Cursor@a,w
  2068  031A  1D03               	btfss	3,2
  2069  031B  2B1D               	goto	u741
  2070  031C  2B1E               	goto	u740
  2071  031D                     u741:
  2072  031D  2B29               	goto	l148
  2073  031E                     u740:
  2074  031E                     l1387:
  2075                           
  2076                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  2077  031E  0874               	movf	Lcd_Set_Cursor@b,w
  2078  031F  3EBF               	addlw	191
  2079  0320  00F5               	movwf	??_Lcd_Set_Cursor
  2080  0321  0875               	movf	??_Lcd_Set_Cursor,w
  2081  0322  00F7               	movwf	Lcd_Set_Cursor@temp
  2082  0323                     l1389:
  2083                           
  2084                           ;LCD.c: 54:   Lcd_Cmd(temp);
  2085  0323  0877               	movf	Lcd_Set_Cursor@temp,w
  2086  0324  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2087  0329                     l148:
  2088  0329  0008               	return
  2089  032A                     __end_of_Lcd_Set_Cursor:
  2090                           
  2091                           	psect	text9
  2092  03BE                     __ptext9:	
  2093 ;; *************** function _Lcd_Init *****************
  2094 ;; Defined at:
  2095 ;;		line 58 in file "LCD.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2109 ;;      Params:         0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0
  2111 ;;      Temps:          2       0       0       0       0
  2112 ;;      Totals:         2       0       0       0       0
  2113 ;;Total ram usage:        2 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    2
  2116 ;; This function calls:
  2117 ;;		_Lcd_Cmd
  2118 ;;		_Lcd_Port
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _Lcd_Init
  2126  03BE                     _Lcd_Init:
  2127  03BE                     l1367:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2130                           
  2131                           
  2132                           ;LCD.c: 60:   Lcd_Port(0x00);
  2133  03BE  3000               	movlw	0
  2134  03BF  120A  118A  21E6  120A  118A  	fcall	_Lcd_Port
  2135  03C4                     l1369:
  2136                           
  2137                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2138  03C4  3034               	movlw	52
  2139  03C5  00F5               	movwf	??_Lcd_Init+1
  2140  03C6  30F1               	movlw	241
  2141  03C7  00F4               	movwf	??_Lcd_Init
  2142  03C8                     u817:
  2143  03C8  0BF4               	decfsz	??_Lcd_Init,f
  2144  03C9  2BC8               	goto	u817
  2145  03CA  0BF5               	decfsz	??_Lcd_Init+1,f
  2146  03CB  2BC8               	goto	u817
  2147  03CC  2BCD               	nop2
  2148  03CD                     l1371:
  2149                           
  2150                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  2151  03CD  3030               	movlw	48
  2152  03CE  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2153                           
  2154                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2155  03D3  300D               	movlw	13
  2156  03D4  00F5               	movwf	??_Lcd_Init+1
  2157  03D5  30FB               	movlw	251
  2158  03D6  00F4               	movwf	??_Lcd_Init
  2159  03D7                     u827:
  2160  03D7  0BF4               	decfsz	??_Lcd_Init,f
  2161  03D8  2BD7               	goto	u827
  2162  03D9  0BF5               	decfsz	??_Lcd_Init+1,f
  2163  03DA  2BD7               	goto	u827
  2164  03DB  2BDC               	nop2
  2165  03DC                     l1373:
  2166                           
  2167                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  2168  03DC  3030               	movlw	48
  2169  03DD  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2170  03E2                     l1375:
  2171                           
  2172                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2173  03E2  301D               	movlw	29
  2174  03E3  00F5               	movwf	??_Lcd_Init+1
  2175  03E4  3091               	movlw	145
  2176  03E5  00F4               	movwf	??_Lcd_Init
  2177  03E6                     u837:
  2178  03E6  0BF4               	decfsz	??_Lcd_Init,f
  2179  03E7  2BE6               	goto	u837
  2180  03E8  0BF5               	decfsz	??_Lcd_Init+1,f
  2181  03E9  2BE6               	goto	u837
  2182                           
  2183                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  2184  03EA  3030               	movlw	48
  2185  03EB  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2186                           
  2187                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  2188  03F0  3038               	movlw	56
  2189  03F1  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2190                           
  2191                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  2192  03F6  300C               	movlw	12
  2193  03F7  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2194                           
  2195                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  2196  03FC  3001               	movlw	1
  2197  03FD  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2198                           
  2199                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  2200  0402  3006               	movlw	6
  2201  0403  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2202  0408                     l151:
  2203  0408  0008               	return
  2204  0409                     __end_of_Lcd_Init:
  2205                           
  2206                           	psect	text10
  2207  022A                     __ptext10:	
  2208 ;; *************** function _Lcd_Clear *****************
  2209 ;; Defined at:
  2210 ;;		line 31 in file "LCD.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    2
  2231 ;; This function calls:
  2232 ;;		_Lcd_Cmd
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _Lcd_Clear
  2240  022A                     _Lcd_Clear:
  2241  022A                     l1377:	
  2242                           ;incstack = 0
  2243                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2244                           
  2245                           
  2246                           ;LCD.c: 33:  Lcd_Cmd(0);
  2247  022A  3000               	movlw	0
  2248  022B  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2249                           
  2250                           ;LCD.c: 34:  Lcd_Cmd(1);
  2251  0230  3001               	movlw	1
  2252  0231  120A  118A  228D  120A  118A  	fcall	_Lcd_Cmd
  2253  0236                     l142:
  2254  0236  0008               	return
  2255  0237                     __end_of_Lcd_Clear:
  2256                           
  2257                           	psect	text11
  2258  028D                     __ptext11:	
  2259 ;; *************** function _Lcd_Cmd *****************
  2260 ;; Defined at:
  2261 ;;		line 22 in file "LCD.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  a               1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  a               1    3[COMMON] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       0       0       0
  2276 ;;      Locals:         1       0       0       0       0
  2277 ;;      Temps:          2       0       0       0       0
  2278 ;;      Totals:         3       0       0       0       0
  2279 ;;Total ram usage:        3 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    1
  2282 ;; This function calls:
  2283 ;;		_Lcd_Port
  2284 ;; This function is called by:
  2285 ;;		_Lcd_Clear
  2286 ;;		_Lcd_Set_Cursor
  2287 ;;		_Lcd_Init
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _Lcd_Cmd
  2293  028D                     _Lcd_Cmd:
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2297                           ;Lcd_Cmd@a stored from wreg
  2298  028D  00F3               	movwf	Lcd_Cmd@a
  2299  028E                     l1237:
  2300                           
  2301                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  2302  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2303  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0290  1009               	bcf	9,0	;volatile
  2305  0291                     l1239:
  2306                           
  2307                           ;LCD.c: 25:  Lcd_Port(a);
  2308  0291  0873               	movf	Lcd_Cmd@a,w
  2309  0292  120A  118A  21E6  120A  118A  	fcall	_Lcd_Port
  2310  0297                     l1241:
  2311                           
  2312                           ;LCD.c: 26:  RE1 = 1;
  2313  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0299  1489               	bsf	9,1	;volatile
  2316  029A                     l1243:
  2317                           
  2318                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2319  029A  300B               	movlw	11
  2320  029B  00F2               	movwf	??_Lcd_Cmd+1
  2321  029C  3062               	movlw	98
  2322  029D  00F1               	movwf	??_Lcd_Cmd
  2323  029E                     u847:
  2324  029E  0BF1               	decfsz	??_Lcd_Cmd,f
  2325  029F  2A9E               	goto	u847
  2326  02A0  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2327  02A1  2A9E               	goto	u847
  2328  02A2  0000               	nop
  2329  02A3                     l1245:
  2330                           
  2331                           ;LCD.c: 28:         RE1 = 0;
  2332  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2333  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2334  02A5  1089               	bcf	9,1	;volatile
  2335  02A6                     l139:
  2336  02A6  0008               	return
  2337  02A7                     __end_of_Lcd_Cmd:
  2338                           
  2339                           	psect	text12
  2340  01E6                     __ptext12:	
  2341 ;; *************** function _Lcd_Port *****************
  2342 ;; Defined at:
  2343 ;;		line 17 in file "LCD.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  a               1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  a               1    0[COMMON] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0
  2360 ;;      Totals:         1       0       0       0       0
  2361 ;;Total ram usage:        1 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_Lcd_Cmd
  2367 ;;		_Lcd_Init
  2368 ;;		_Lcd_Write_Char
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _Lcd_Port
  2374  01E6                     _Lcd_Port:
  2375                           
  2376                           ;incstack = 0
  2377                           ; Regs used in _Lcd_Port: [wreg]
  2378                           ;Lcd_Port@a stored from wreg
  2379  01E6  00F0               	movwf	Lcd_Port@a
  2380  01E7                     l1177:
  2381                           
  2382                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  2383  01E7  0870               	movf	Lcd_Port@a,w
  2384  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2385  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2386  01EA  0088               	movwf	8	;volatile
  2387  01EB                     l136:
  2388  01EB  0008               	return
  2389  01EC                     __end_of_Lcd_Port:
  2390                           
  2391                           	psect	text13
  2392  0207                     __ptext13:	
  2393 ;; *************** function _I2C_Master_Write *****************
  2394 ;; Defined at:
  2395 ;;		line 65 in file "I2C.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  d               2    0[COMMON] unsigned int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         2       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    1
  2416 ;; This function calls:
  2417 ;;		_I2C_Master_Wait
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _I2C_Master_Write
  2425  0207                     _I2C_Master_Write:
  2426  0207                     l1403:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2429                           
  2430                           
  2431                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2432  0207  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2433  020C                     l1405:
  2434                           
  2435                           ;I2C.c: 68:     SSPBUF = d;
  2436  020C  0870               	movf	I2C_Master_Write@d,w
  2437  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2438  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2439  020F  0093               	movwf	19	;volatile
  2440  0210                     l207:
  2441  0210  0008               	return
  2442  0211                     __end_of_I2C_Master_Write:
  2443                           
  2444                           	psect	text14
  2445  01FE                     __ptext14:	
  2446 ;; *************** function _I2C_Master_Stop *****************
  2447 ;; Defined at:
  2448 ;;		line 55 in file "I2C.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, pclath, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    1
  2469 ;; This function calls:
  2470 ;;		_I2C_Master_Wait
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _I2C_Master_Stop
  2478  01FE                     _I2C_Master_Stop:
  2479  01FE                     l1407:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2482                           
  2483                           
  2484                           ;I2C.c: 57:     I2C_Master_Wait();
  2485  01FE  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2486  0203                     l1409:
  2487                           
  2488                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2489  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0205  1511               	bsf	17,2	;volatile
  2492  0206                     l204:
  2493  0206  0008               	return
  2494  0207                     __end_of_I2C_Master_Stop:
  2495                           
  2496                           	psect	text15
  2497  01F5                     __ptext15:	
  2498 ;; *************** function _I2C_Master_Start *****************
  2499 ;; Defined at:
  2500 ;;		line 39 in file "I2C.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    1
  2521 ;; This function calls:
  2522 ;;		_I2C_Master_Wait
  2523 ;; This function is called by:
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _I2C_Master_Start
  2530  01F5                     _I2C_Master_Start:
  2531  01F5                     l1399:	
  2532                           ;incstack = 0
  2533                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2534                           
  2535                           
  2536                           ;I2C.c: 41:     I2C_Master_Wait();
  2537  01F5  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2538  01FA                     l1401:
  2539                           
  2540                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2541  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2542  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  2543  01FC  1411               	bsf	17,0	;volatile
  2544  01FD                     l198:
  2545  01FD  0008               	return
  2546  01FE                     __end_of_I2C_Master_Start:
  2547                           
  2548                           	psect	text16
  2549  01EC                     __ptext16:	
  2550 ;; *************** function _I2C_Master_RepeatedStart *****************
  2551 ;; Defined at:
  2552 ;;		line 47 in file "I2C.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		_I2C_Master_Wait
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _I2C_Master_RepeatedStart
  2582  01EC                     _I2C_Master_RepeatedStart:
  2583  01EC                     l1411:	
  2584                           ;incstack = 0
  2585                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2586                           
  2587                           
  2588                           ;I2C.c: 49:     I2C_Master_Wait();
  2589  01EC  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2590  01F1                     l1413:
  2591                           
  2592                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2593  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2594  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2595  01F3  1491               	bsf	17,1	;volatile
  2596  01F4                     l201:
  2597  01F4  0008               	return
  2598  01F5                     __end_of_I2C_Master_RepeatedStart:
  2599                           
  2600                           	psect	text17
  2601  032A                     __ptext17:	
  2602 ;; *************** function _I2C_Master_Read *****************
  2603 ;; Defined at:
  2604 ;;		line 74 in file "I2C.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  a               2    0[COMMON] unsigned short 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  temp            2    4[COMMON] unsigned short 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  2    0[COMMON] unsigned short 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         2       0       0       0       0
  2619 ;;      Locals:         2       0       0       0       0
  2620 ;;      Temps:          2       0       0       0       0
  2621 ;;      Totals:         6       0       0       0       0
  2622 ;;Total ram usage:        6 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    1
  2625 ;; This function calls:
  2626 ;;		_I2C_Master_Wait
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _I2C_Master_Read
  2634  032A                     _I2C_Master_Read:
  2635  032A                     l1415:	
  2636                           ;incstack = 0
  2637                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2638                           
  2639                           
  2640                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2641  032A  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2642  032F                     l1417:
  2643                           
  2644                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2645  032F  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0330  1303               	bcf	3,6	;RP1=0, select bank1
  2647  0331  1591               	bsf	17,3	;volatile
  2648                           
  2649                           ;I2C.c: 79:     I2C_Master_Wait();
  2650  0332  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2651  0337                     l1419:
  2652                           
  2653                           ;I2C.c: 80:     temp = SSPBUF;
  2654  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0339  0813               	movf	19,w	;volatile
  2657  033A  00F2               	movwf	??_I2C_Master_Read
  2658  033B  01F3               	clrf	??_I2C_Master_Read+1
  2659  033C  0872               	movf	??_I2C_Master_Read,w
  2660  033D  00F4               	movwf	I2C_Master_Read@temp
  2661  033E  0873               	movf	??_I2C_Master_Read+1,w
  2662  033F  00F5               	movwf	I2C_Master_Read@temp+1
  2663  0340                     l1421:
  2664                           
  2665                           ;I2C.c: 81:     I2C_Master_Wait();
  2666  0340  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2667  0345                     l1423:
  2668                           
  2669                           ;I2C.c: 82:     if(a == 1){
  2670  0345  0370               	decf	I2C_Master_Read@a,w
  2671  0346  0471               	iorwf	I2C_Master_Read@a+1,w
  2672  0347  1D03               	btfss	3,2
  2673  0348  2B4A               	goto	u761
  2674  0349  2B4B               	goto	u760
  2675  034A                     u761:
  2676  034A  2B4F               	goto	l210
  2677  034B                     u760:
  2678  034B                     l1425:
  2679                           
  2680                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2681  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2682  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2683  034D  1291               	bcf	17,5	;volatile
  2684                           
  2685                           ;I2C.c: 84:     }else{
  2686  034E  2B52               	goto	l211
  2687  034F                     l210:
  2688                           
  2689                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2690  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0351  1691               	bsf	17,5	;volatile
  2693  0352                     l211:	
  2694                           ;I2C.c: 86:     }
  2695                           
  2696                           
  2697                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2698  0352  1611               	bsf	17,4	;volatile
  2699  0353                     l1427:
  2700                           
  2701                           ;I2C.c: 88:     return temp;
  2702  0353  0875               	movf	I2C_Master_Read@temp+1,w
  2703  0354  00F1               	movwf	?_I2C_Master_Read+1
  2704  0355  0874               	movf	I2C_Master_Read@temp,w
  2705  0356  00F0               	movwf	?_I2C_Master_Read
  2706  0357                     l212:
  2707  0357  0008               	return
  2708  0358                     __end_of_I2C_Master_Read:
  2709                           
  2710                           	psect	text18
  2711  021D                     __ptext18:	
  2712 ;; *************** function _I2C_Master_Wait *****************
  2713 ;; Defined at:
  2714 ;;		line 32 in file "I2C.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0
  2731 ;;      Totals:         0       0       0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_I2C_Master_Start
  2738 ;;		_I2C_Master_RepeatedStart
  2739 ;;		_I2C_Master_Stop
  2740 ;;		_I2C_Master_Write
  2741 ;;		_I2C_Master_Read
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           
  2746                           ;psect for function _I2C_Master_Wait
  2747  021D                     _I2C_Master_Wait:
  2748  021D                     l1257:	
  2749                           ;incstack = 0
  2750                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2751                           
  2752  021D                     l192:	
  2753                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2754                           
  2755  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2756  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2757  021F  1914               	btfsc	20,2	;volatile
  2758  0220  2A22               	goto	u521
  2759  0221  2A23               	goto	u520
  2760  0222                     u521:
  2761  0222  2A1D               	goto	l192
  2762  0223                     u520:
  2763  0223                     l1259:
  2764  0223  0811               	movf	17,w	;volatile
  2765  0224  391F               	andlw	31
  2766  0225  1D03               	btfss	3,2
  2767  0226  2A28               	goto	u531
  2768  0227  2A29               	goto	u530
  2769  0228                     u531:
  2770  0228  2A1D               	goto	l192
  2771  0229                     u530:
  2772  0229                     l195:
  2773  0229  0008               	return
  2774  022A                     __end_of_I2C_Master_Wait:
  2775                           
  2776                           	psect	text19
  2777  052F                     __ptext19:	
  2778 ;; *************** function _DS3231_time *****************
  2779 ;; Defined at:
  2780 ;;		line 198 in file "main.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0
  2796 ;;      Temps:          2       0       0       0       0
  2797 ;;      Totals:         2       0       0       0       0
  2798 ;;Total ram usage:        2 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    2
  2801 ;; This function calls:
  2802 ;;		___awdiv
  2803 ;;		___awmod
  2804 ;;		_bcd_to_decimal
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _DS3231_time
  2812  052F                     _DS3231_time:
  2813  052F                     l1431:	
  2814                           ;incstack = 0
  2815                           ; Regs used in _DS3231_time: [wreg+status,2+status,0+pclath+cstack]
  2816                           
  2817                           
  2818                           ;main.c: 202:   sec = bcd_to_decimal(sec);
  2819  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0531  084A               	movf	_sec,w
  2822  0532  120A  118A  2275  120A  118A  	fcall	_bcd_to_decimal
  2823  0537  00F9               	movwf	??_DS3231_time
  2824  0538  01FA               	clrf	??_DS3231_time+1
  2825  0539  0879               	movf	??_DS3231_time,w
  2826  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2827  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2828  053C  00CA               	movwf	_sec
  2829  053D  087A               	movf	??_DS3231_time+1,w
  2830  053E  00CB               	movwf	_sec+1
  2831                           
  2832                           ;main.c: 203:   min = bcd_to_decimal(min);
  2833  053F  0848               	movf	_min,w
  2834  0540  120A  118A  2275  120A  118A  	fcall	_bcd_to_decimal
  2835  0545  00F9               	movwf	??_DS3231_time
  2836  0546  01FA               	clrf	??_DS3231_time+1
  2837  0547  0879               	movf	??_DS3231_time,w
  2838  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2840  054A  00C8               	movwf	_min
  2841  054B  087A               	movf	??_DS3231_time+1,w
  2842  054C  00C9               	movwf	_min+1
  2843                           
  2844                           ;main.c: 204:   hour = bcd_to_decimal(hour);
  2845  054D  0846               	movf	_hour,w
  2846  054E  120A  118A  2275  120A  118A  	fcall	_bcd_to_decimal
  2847  0553  00F9               	movwf	??_DS3231_time
  2848  0554  01FA               	clrf	??_DS3231_time+1
  2849  0555  0879               	movf	??_DS3231_time,w
  2850  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0558  00C6               	movwf	_hour
  2853  0559  087A               	movf	??_DS3231_time+1,w
  2854  055A  00C7               	movwf	_hour+1
  2855                           
  2856                           ;main.c: 205:   date = bcd_to_decimal(date);
  2857  055B  0844               	movf	_date,w
  2858  055C  120A  118A  2275  120A  118A  	fcall	_bcd_to_decimal
  2859  0561  00F9               	movwf	??_DS3231_time
  2860  0562  01FA               	clrf	??_DS3231_time+1
  2861  0563  0879               	movf	??_DS3231_time,w
  2862  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0566  00C4               	movwf	_date
  2865  0567  087A               	movf	??_DS3231_time+1,w
  2866  0568  00C5               	movwf	_date+1
  2867                           
  2868                           ;main.c: 206:   month = bcd_to_decimal(month);
  2869  0569  0842               	movf	_month,w
  2870  056A  120A  118A  2275  120A  118A  	fcall	_bcd_to_decimal
  2871  056F  00F9               	movwf	??_DS3231_time
  2872  0570  01FA               	clrf	??_DS3231_time+1
  2873  0571  0879               	movf	??_DS3231_time,w
  2874  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0574  00C2               	movwf	_month
  2877  0575  087A               	movf	??_DS3231_time+1,w
  2878  0576  00C3               	movwf	_month+1
  2879                           
  2880                           ;main.c: 207:   year = bcd_to_decimal(year);
  2881  0577  0840               	movf	_year,w
  2882  0578  120A  118A  2275  120A  118A  	fcall	_bcd_to_decimal
  2883  057D  00F9               	movwf	??_DS3231_time
  2884  057E  01FA               	clrf	??_DS3231_time+1
  2885  057F  0879               	movf	??_DS3231_time,w
  2886  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0582  00C0               	movwf	_year
  2889  0583  087A               	movf	??_DS3231_time+1,w
  2890  0584  00C1               	movwf	_year+1
  2891                           
  2892                           ;main.c: 211:   time[6] = hour / 10 + '0';
  2893  0585  300A               	movlw	10
  2894  0586  00F0               	movwf	___awdiv@divisor
  2895  0587  3000               	movlw	0
  2896  0588  00F1               	movwf	___awdiv@divisor+1
  2897  0589  0847               	movf	_hour+1,w
  2898  058A  00F3               	movwf	___awdiv@dividend+1
  2899  058B  0846               	movf	_hour,w
  2900  058C  00F2               	movwf	___awdiv@dividend
  2901  058D  120A  118A  24C8  120A  118A  	fcall	___awdiv
  2902  0592  0870               	movf	?___awdiv,w
  2903  0593  3E30               	addlw	48
  2904  0594  00F9               	movwf	??_DS3231_time
  2905  0595  0879               	movf	??_DS3231_time,w
  2906  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0598  00B7               	movwf	_time+6
  2909                           
  2910                           ;main.c: 212:   time[7] = hour % 10 + '0';
  2911  0599  300A               	movlw	10
  2912  059A  00F0               	movwf	___awmod@divisor
  2913  059B  3000               	movlw	0
  2914  059C  00F1               	movwf	___awmod@divisor+1
  2915  059D  0847               	movf	_hour+1,w
  2916  059E  00F3               	movwf	___awmod@dividend+1
  2917  059F  0846               	movf	_hour,w
  2918  05A0  00F2               	movwf	___awmod@dividend
  2919  05A1  120A  118A  2409  120A  118A  	fcall	___awmod
  2920  05A6  0870               	movf	?___awmod,w
  2921  05A7  3E30               	addlw	48
  2922  05A8  00F9               	movwf	??_DS3231_time
  2923  05A9  0879               	movf	??_DS3231_time,w
  2924  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2925  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2926  05AC  00B8               	movwf	_time+7
  2927                           
  2928                           ;main.c: 213:   time[9] = min / 10 + '0';
  2929  05AD  300A               	movlw	10
  2930  05AE  00F0               	movwf	___awdiv@divisor
  2931  05AF  3000               	movlw	0
  2932  05B0  00F1               	movwf	___awdiv@divisor+1
  2933  05B1  0849               	movf	_min+1,w
  2934  05B2  00F3               	movwf	___awdiv@dividend+1
  2935  05B3  0848               	movf	_min,w
  2936  05B4  00F2               	movwf	___awdiv@dividend
  2937  05B5  120A  118A  24C8  120A  118A  	fcall	___awdiv
  2938  05BA  0870               	movf	?___awdiv,w
  2939  05BB  3E30               	addlw	48
  2940  05BC  00F9               	movwf	??_DS3231_time
  2941  05BD  0879               	movf	??_DS3231_time,w
  2942  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2943  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2944  05C0  00BA               	movwf	_time+9
  2945                           
  2946                           ;main.c: 214:   time[10] = min % 10 + '0';
  2947  05C1  300A               	movlw	10
  2948  05C2  00F0               	movwf	___awmod@divisor
  2949  05C3  3000               	movlw	0
  2950  05C4  00F1               	movwf	___awmod@divisor+1
  2951  05C5  0849               	movf	_min+1,w
  2952  05C6  00F3               	movwf	___awmod@dividend+1
  2953  05C7  0848               	movf	_min,w
  2954  05C8  00F2               	movwf	___awmod@dividend
  2955  05C9  120A  118A  2409  120A  118A  	fcall	___awmod
  2956  05CE  0870               	movf	?___awmod,w
  2957  05CF  3E30               	addlw	48
  2958  05D0  00F9               	movwf	??_DS3231_time
  2959  05D1  0879               	movf	??_DS3231_time,w
  2960  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2961  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2962  05D4  00BB               	movwf	_time+10
  2963                           
  2964                           ;main.c: 215:   time[12] = sec / 10 + '0';
  2965  05D5  300A               	movlw	10
  2966  05D6  00F0               	movwf	___awdiv@divisor
  2967  05D7  3000               	movlw	0
  2968  05D8  00F1               	movwf	___awdiv@divisor+1
  2969  05D9  084B               	movf	_sec+1,w
  2970  05DA  00F3               	movwf	___awdiv@dividend+1
  2971  05DB  084A               	movf	_sec,w
  2972  05DC  00F2               	movwf	___awdiv@dividend
  2973  05DD  120A  118A  24C8  120A  118A  	fcall	___awdiv
  2974  05E2  0870               	movf	?___awdiv,w
  2975  05E3  3E30               	addlw	48
  2976  05E4  00F9               	movwf	??_DS3231_time
  2977  05E5  0879               	movf	??_DS3231_time,w
  2978  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2979  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2980  05E8  00BD               	movwf	_time+12
  2981                           
  2982                           ;main.c: 216:   time[13] = sec % 10 + '0';
  2983  05E9  300A               	movlw	10
  2984  05EA  00F0               	movwf	___awmod@divisor
  2985  05EB  3000               	movlw	0
  2986  05EC  00F1               	movwf	___awmod@divisor+1
  2987  05ED  084B               	movf	_sec+1,w
  2988  05EE  00F3               	movwf	___awmod@dividend+1
  2989  05EF  084A               	movf	_sec,w
  2990  05F0  00F2               	movwf	___awmod@dividend
  2991  05F1  120A  118A  2409  120A  118A  	fcall	___awmod
  2992  05F6  0870               	movf	?___awmod,w
  2993  05F7  3E30               	addlw	48
  2994  05F8  00F9               	movwf	??_DS3231_time
  2995  05F9  0879               	movf	??_DS3231_time,w
  2996  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2997  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2998  05FC  00BE               	movwf	_time+13
  2999                           
  3000                           ;main.c: 218:   date1[6] = date / 10 + '0';
  3001  05FD  300A               	movlw	10
  3002  05FE  00F0               	movwf	___awdiv@divisor
  3003  05FF  3000               	movlw	0
  3004  0600  00F1               	movwf	___awdiv@divisor+1
  3005  0601  0845               	movf	_date+1,w
  3006  0602  00F3               	movwf	___awdiv@dividend+1
  3007  0603  0844               	movf	_date,w
  3008  0604  00F2               	movwf	___awdiv@dividend
  3009  0605  120A  118A  24C8  120A  118A  	fcall	___awdiv
  3010  060A  0870               	movf	?___awdiv,w
  3011  060B  3E30               	addlw	48
  3012  060C  00F9               	movwf	??_DS3231_time
  3013  060D  0879               	movf	??_DS3231_time,w
  3014  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3015  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0610  00A6               	movwf	_date1+6
  3017                           
  3018                           ;main.c: 219:   date1[7] = date % 10 + '0';
  3019  0611  300A               	movlw	10
  3020  0612  00F0               	movwf	___awmod@divisor
  3021  0613  3000               	movlw	0
  3022  0614  00F1               	movwf	___awmod@divisor+1
  3023  0615  0845               	movf	_date+1,w
  3024  0616  00F3               	movwf	___awmod@dividend+1
  3025  0617  0844               	movf	_date,w
  3026  0618  00F2               	movwf	___awmod@dividend
  3027  0619  120A  118A  2409  120A  118A  	fcall	___awmod
  3028  061E  0870               	movf	?___awmod,w
  3029  061F  3E30               	addlw	48
  3030  0620  00F9               	movwf	??_DS3231_time
  3031  0621  0879               	movf	??_DS3231_time,w
  3032  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0624  00A7               	movwf	_date1+7
  3035                           
  3036                           ;main.c: 220:   date1[9] = month / 10 + '0';
  3037  0625  300A               	movlw	10
  3038  0626  00F0               	movwf	___awdiv@divisor
  3039  0627  3000               	movlw	0
  3040  0628  00F1               	movwf	___awdiv@divisor+1
  3041  0629  0843               	movf	_month+1,w
  3042  062A  00F3               	movwf	___awdiv@dividend+1
  3043  062B  0842               	movf	_month,w
  3044  062C  00F2               	movwf	___awdiv@dividend
  3045  062D  120A  118A  24C8  120A  118A  	fcall	___awdiv
  3046  0632  0870               	movf	?___awdiv,w
  3047  0633  3E30               	addlw	48
  3048  0634  00F9               	movwf	??_DS3231_time
  3049  0635  0879               	movf	??_DS3231_time,w
  3050  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0638  00A9               	movwf	_date1+9
  3053                           
  3054                           ;main.c: 221:   date1[10] = month % 10 + '0';
  3055  0639  300A               	movlw	10
  3056  063A  00F0               	movwf	___awmod@divisor
  3057  063B  3000               	movlw	0
  3058  063C  00F1               	movwf	___awmod@divisor+1
  3059  063D  0843               	movf	_month+1,w
  3060  063E  00F3               	movwf	___awmod@dividend+1
  3061  063F  0842               	movf	_month,w
  3062  0640  00F2               	movwf	___awmod@dividend
  3063  0641  120A  118A  2409  120A  118A  	fcall	___awmod
  3064  0646  0870               	movf	?___awmod,w
  3065  0647  3E30               	addlw	48
  3066  0648  00F9               	movwf	??_DS3231_time
  3067  0649  0879               	movf	??_DS3231_time,w
  3068  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3069  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3070  064C  00AA               	movwf	_date1+10
  3071                           
  3072                           ;main.c: 222:   date1[14] = year / 10 + '0';
  3073  064D  300A               	movlw	10
  3074  064E  00F0               	movwf	___awdiv@divisor
  3075  064F  3000               	movlw	0
  3076  0650  00F1               	movwf	___awdiv@divisor+1
  3077  0651  0841               	movf	_year+1,w
  3078  0652  00F3               	movwf	___awdiv@dividend+1
  3079  0653  0840               	movf	_year,w
  3080  0654  00F2               	movwf	___awdiv@dividend
  3081  0655  120A  118A  24C8  120A  118A  	fcall	___awdiv
  3082  065A  0870               	movf	?___awdiv,w
  3083  065B  3E30               	addlw	48
  3084  065C  00F9               	movwf	??_DS3231_time
  3085  065D  0879               	movf	??_DS3231_time,w
  3086  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3087  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0660  00AE               	movwf	_date1+14
  3089                           
  3090                           ;main.c: 223:   date1[15] = year % 10 + '0';
  3091  0661  300A               	movlw	10
  3092  0662  00F0               	movwf	___awmod@divisor
  3093  0663  3000               	movlw	0
  3094  0664  00F1               	movwf	___awmod@divisor+1
  3095  0665  0841               	movf	_year+1,w
  3096  0666  00F3               	movwf	___awmod@dividend+1
  3097  0667  0840               	movf	_year,w
  3098  0668  00F2               	movwf	___awmod@dividend
  3099  0669  120A  118A  2409  120A  118A  	fcall	___awmod
  3100  066E  0870               	movf	?___awmod,w
  3101  066F  3E30               	addlw	48
  3102  0670  00F9               	movwf	??_DS3231_time
  3103  0671  0879               	movf	??_DS3231_time,w
  3104  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0674  00AF               	movwf	_date1+15
  3107  0675                     l99:
  3108  0675  0008               	return
  3109  0676                     __end_of_DS3231_time:
  3110                           
  3111                           	psect	text20
  3112  0275                     __ptext20:	
  3113 ;; *************** function _bcd_to_decimal *****************
  3114 ;; Defined at:
  3115 ;;		line 194 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  number          1    wreg     unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  number          1    7[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0
  3131 ;;      Temps:          3       0       0       0       0
  3132 ;;      Totals:         4       0       0       0       0
  3133 ;;Total ram usage:        4 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    1
  3136 ;; This function calls:
  3137 ;;		___bmul
  3138 ;; This function is called by:
  3139 ;;		_DS3231_time
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _bcd_to_decimal
  3145  0275                     _bcd_to_decimal:
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  3149                           ;bcd_to_decimal@number stored from wreg
  3150  0275  00F7               	movwf	bcd_to_decimal@number
  3151  0276                     l1233:
  3152                           
  3153                           ;main.c: 195:   return((number >> 4) * 10 + (number & 0x0F));
  3154  0276  300F               	movlw	15
  3155  0277  0577               	andwf	bcd_to_decimal@number,w
  3156  0278  00F4               	movwf	??_bcd_to_decimal
  3157  0279  300A               	movlw	10
  3158  027A  00F5               	movwf	??_bcd_to_decimal+1
  3159  027B  0875               	movf	??_bcd_to_decimal+1,w
  3160  027C  00F0               	movwf	___bmul@multiplicand
  3161  027D  0877               	movf	bcd_to_decimal@number,w
  3162  027E  00F6               	movwf	??_bcd_to_decimal+2
  3163  027F  3004               	movlw	4
  3164  0280                     u515:
  3165  0280  1003               	clrc
  3166  0281  0CF6               	rrf	??_bcd_to_decimal+2,f
  3167  0282  3EFF               	addlw	-1
  3168  0283  1D03               	skipz
  3169  0284  2A80               	goto	u515
  3170  0285  0876               	movf	??_bcd_to_decimal+2,w
  3171  0286  120A  118A  224A  120A  118A  	fcall	___bmul
  3172  028B  0774               	addwf	??_bcd_to_decimal,w
  3173  028C                     l96:
  3174  028C  0008               	return
  3175  028D                     __end_of_bcd_to_decimal:
  3176                           
  3177                           	psect	text21
  3178  024A                     __ptext21:	
  3179 ;; *************** function ___bmul *****************
  3180 ;; Defined at:
  3181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  multiplier      1    wreg     unsigned char 
  3184 ;;  multiplicand    1    0[COMMON] unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  multiplier      1    3[COMMON] unsigned char 
  3187 ;;  product         1    2[COMMON] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      unsigned char 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         1       0       0       0       0
  3198 ;;      Locals:         2       0       0       0       0
  3199 ;;      Temps:          1       0       0       0       0
  3200 ;;      Totals:         4       0       0       0       0
  3201 ;;Total ram usage:        4 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_bcd_to_decimal
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function ___bmul
  3212  024A                     ___bmul:
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3216                           ;___bmul@multiplier stored from wreg
  3217  024A  00F3               	movwf	___bmul@multiplier
  3218  024B                     l1179:
  3219  024B  01F2               	clrf	___bmul@product
  3220  024C                     l1181:
  3221  024C  1C73               	btfss	___bmul@multiplier,0
  3222  024D  2A4F               	goto	u401
  3223  024E  2A50               	goto	u400
  3224  024F                     u401:
  3225  024F  2A54               	goto	l1185
  3226  0250                     u400:
  3227  0250                     l1183:
  3228  0250  0870               	movf	___bmul@multiplicand,w
  3229  0251  00F1               	movwf	??___bmul
  3230  0252  0871               	movf	??___bmul,w
  3231  0253  07F2               	addwf	___bmul@product,f
  3232  0254                     l1185:
  3233  0254  1003               	clrc
  3234  0255  0DF0               	rlf	___bmul@multiplicand,f
  3235  0256                     l1187:
  3236  0256  1003               	clrc
  3237  0257  0CF3               	rrf	___bmul@multiplier,f
  3238  0258  0873               	movf	___bmul@multiplier,w
  3239  0259  1D03               	btfss	3,2
  3240  025A  2A5C               	goto	u411
  3241  025B  2A5D               	goto	u410
  3242  025C                     u411:
  3243  025C  2A4C               	goto	l1181
  3244  025D                     u410:
  3245  025D                     l1189:
  3246  025D  0872               	movf	___bmul@product,w
  3247  025E                     l327:
  3248  025E  0008               	return
  3249  025F                     __end_of___bmul:
  3250                           
  3251                           	psect	text22
  3252  0409                     __ptext22:	
  3253 ;; *************** function ___awmod *****************
  3254 ;; Defined at:
  3255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  divisor         2    0[COMMON] int 
  3258 ;;  dividend        2    2[COMMON] int 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  sign            1    6[COMMON] unsigned char 
  3261 ;;  counter         1    5[COMMON] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  2    0[COMMON] int 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3271 ;;      Params:         4       0       0       0       0
  3272 ;;      Locals:         2       0       0       0       0
  3273 ;;      Temps:          1       0       0       0       0
  3274 ;;      Totals:         7       0       0       0       0
  3275 ;;Total ram usage:        7 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_DS3231_time
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function ___awmod
  3286  0409                     ___awmod:
  3287  0409                     l1305:	
  3288                           ;incstack = 0
  3289                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3290                           
  3291  0409  01F6               	clrf	___awmod@sign
  3292  040A                     l1307:
  3293  040A  1FF3               	btfss	___awmod@dividend+1,7
  3294  040B  2C0D               	goto	u641
  3295  040C  2C0E               	goto	u640
  3296  040D                     u641:
  3297  040D  2C15               	goto	l1313
  3298  040E                     u640:
  3299  040E                     l1309:
  3300  040E  09F2               	comf	___awmod@dividend,f
  3301  040F  09F3               	comf	___awmod@dividend+1,f
  3302  0410  0AF2               	incf	___awmod@dividend,f
  3303  0411  1903               	skipnz
  3304  0412  0AF3               	incf	___awmod@dividend+1,f
  3305  0413                     l1311:
  3306  0413  01F6               	clrf	___awmod@sign
  3307  0414  0AF6               	incf	___awmod@sign,f
  3308  0415                     l1313:
  3309  0415  1FF1               	btfss	___awmod@divisor+1,7
  3310  0416  2C18               	goto	u651
  3311  0417  2C19               	goto	u650
  3312  0418                     u651:
  3313  0418  2C1E               	goto	l1317
  3314  0419                     u650:
  3315  0419                     l1315:
  3316  0419  09F0               	comf	___awmod@divisor,f
  3317  041A  09F1               	comf	___awmod@divisor+1,f
  3318  041B  0AF0               	incf	___awmod@divisor,f
  3319  041C  1903               	skipnz
  3320  041D  0AF1               	incf	___awmod@divisor+1,f
  3321  041E                     l1317:
  3322  041E  0870               	movf	___awmod@divisor,w
  3323  041F  0471               	iorwf	___awmod@divisor+1,w
  3324  0420  1903               	btfsc	3,2
  3325  0421  2C23               	goto	u661
  3326  0422  2C24               	goto	u660
  3327  0423                     u661:
  3328  0423  2C53               	goto	l1335
  3329  0424                     u660:
  3330  0424                     l1319:
  3331  0424  01F5               	clrf	___awmod@counter
  3332  0425  0AF5               	incf	___awmod@counter,f
  3333  0426  2C32               	goto	l1325
  3334  0427                     l1321:
  3335  0427  3001               	movlw	1
  3336  0428                     u675:
  3337  0428  1003               	clrc
  3338  0429  0DF0               	rlf	___awmod@divisor,f
  3339  042A  0DF1               	rlf	___awmod@divisor+1,f
  3340  042B  3EFF               	addlw	-1
  3341  042C  1D03               	skipz
  3342  042D  2C28               	goto	u675
  3343  042E                     l1323:
  3344  042E  3001               	movlw	1
  3345  042F  00F4               	movwf	??___awmod
  3346  0430  0874               	movf	??___awmod,w
  3347  0431  07F5               	addwf	___awmod@counter,f
  3348  0432                     l1325:
  3349  0432  1FF1               	btfss	___awmod@divisor+1,7
  3350  0433  2C35               	goto	u681
  3351  0434  2C36               	goto	u680
  3352  0435                     u681:
  3353  0435  2C27               	goto	l1321
  3354  0436                     u680:
  3355  0436                     l1327:
  3356  0436  0871               	movf	___awmod@divisor+1,w
  3357  0437  0273               	subwf	___awmod@dividend+1,w
  3358  0438  1D03               	skipz
  3359  0439  2C3C               	goto	u695
  3360  043A  0870               	movf	___awmod@divisor,w
  3361  043B  0272               	subwf	___awmod@dividend,w
  3362  043C                     u695:
  3363  043C  1C03               	skipc
  3364  043D  2C3F               	goto	u691
  3365  043E  2C40               	goto	u690
  3366  043F                     u691:
  3367  043F  2C46               	goto	l1331
  3368  0440                     u690:
  3369  0440                     l1329:
  3370  0440  0870               	movf	___awmod@divisor,w
  3371  0441  02F2               	subwf	___awmod@dividend,f
  3372  0442  0871               	movf	___awmod@divisor+1,w
  3373  0443  1C03               	skipc
  3374  0444  03F3               	decf	___awmod@dividend+1,f
  3375  0445  02F3               	subwf	___awmod@dividend+1,f
  3376  0446                     l1331:
  3377  0446  3001               	movlw	1
  3378  0447                     u705:
  3379  0447  1003               	clrc
  3380  0448  0CF1               	rrf	___awmod@divisor+1,f
  3381  0449  0CF0               	rrf	___awmod@divisor,f
  3382  044A  3EFF               	addlw	-1
  3383  044B  1D03               	skipz
  3384  044C  2C47               	goto	u705
  3385  044D                     l1333:
  3386  044D  3001               	movlw	1
  3387  044E  02F5               	subwf	___awmod@counter,f
  3388  044F  1D03               	btfss	3,2
  3389  0450  2C52               	goto	u711
  3390  0451  2C53               	goto	u710
  3391  0452                     u711:
  3392  0452  2C36               	goto	l1327
  3393  0453                     u710:
  3394  0453                     l1335:
  3395  0453  0876               	movf	___awmod@sign,w
  3396  0454  1903               	btfsc	3,2
  3397  0455  2C57               	goto	u721
  3398  0456  2C58               	goto	u720
  3399  0457                     u721:
  3400  0457  2C5D               	goto	l1339
  3401  0458                     u720:
  3402  0458                     l1337:
  3403  0458  09F2               	comf	___awmod@dividend,f
  3404  0459  09F3               	comf	___awmod@dividend+1,f
  3405  045A  0AF2               	incf	___awmod@dividend,f
  3406  045B  1903               	skipnz
  3407  045C  0AF3               	incf	___awmod@dividend+1,f
  3408  045D                     l1339:
  3409  045D  0873               	movf	___awmod@dividend+1,w
  3410  045E  00F1               	movwf	?___awmod+1
  3411  045F  0872               	movf	___awmod@dividend,w
  3412  0460  00F0               	movwf	?___awmod
  3413  0461                     l467:
  3414  0461  0008               	return
  3415  0462                     __end_of___awmod:
  3416                           
  3417                           	psect	text23
  3418  04C8                     __ptext23:	
  3419 ;; *************** function ___awdiv *****************
  3420 ;; Defined at:
  3421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  divisor         2    0[COMMON] int 
  3424 ;;  dividend        2    2[COMMON] int 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  quotient        2    7[COMMON] int 
  3427 ;;  sign            1    6[COMMON] unsigned char 
  3428 ;;  counter         1    5[COMMON] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  2    0[COMMON] int 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         4       0       0       0       0
  3439 ;;      Locals:         4       0       0       0       0
  3440 ;;      Temps:          1       0       0       0       0
  3441 ;;      Totals:         9       0       0       0       0
  3442 ;;Total ram usage:        9 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_DS3231_time
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function ___awdiv
  3453  04C8                     ___awdiv:
  3454  04C8                     l1261:	
  3455                           ;incstack = 0
  3456                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3457                           
  3458  04C8  01F6               	clrf	___awdiv@sign
  3459  04C9                     l1263:
  3460  04C9  1FF1               	btfss	___awdiv@divisor+1,7
  3461  04CA  2CCC               	goto	u541
  3462  04CB  2CCD               	goto	u540
  3463  04CC                     u541:
  3464  04CC  2CD4               	goto	l1269
  3465  04CD                     u540:
  3466  04CD                     l1265:
  3467  04CD  09F0               	comf	___awdiv@divisor,f
  3468  04CE  09F1               	comf	___awdiv@divisor+1,f
  3469  04CF  0AF0               	incf	___awdiv@divisor,f
  3470  04D0  1903               	skipnz
  3471  04D1  0AF1               	incf	___awdiv@divisor+1,f
  3472  04D2                     l1267:
  3473  04D2  01F6               	clrf	___awdiv@sign
  3474  04D3  0AF6               	incf	___awdiv@sign,f
  3475  04D4                     l1269:
  3476  04D4  1FF3               	btfss	___awdiv@dividend+1,7
  3477  04D5  2CD7               	goto	u551
  3478  04D6  2CD8               	goto	u550
  3479  04D7                     u551:
  3480  04D7  2CE1               	goto	l1275
  3481  04D8                     u550:
  3482  04D8                     l1271:
  3483  04D8  09F2               	comf	___awdiv@dividend,f
  3484  04D9  09F3               	comf	___awdiv@dividend+1,f
  3485  04DA  0AF2               	incf	___awdiv@dividend,f
  3486  04DB  1903               	skipnz
  3487  04DC  0AF3               	incf	___awdiv@dividend+1,f
  3488  04DD                     l1273:
  3489  04DD  3001               	movlw	1
  3490  04DE  00F4               	movwf	??___awdiv
  3491  04DF  0874               	movf	??___awdiv,w
  3492  04E0  06F6               	xorwf	___awdiv@sign,f
  3493  04E1                     l1275:
  3494  04E1  01F7               	clrf	___awdiv@quotient
  3495  04E2  01F8               	clrf	___awdiv@quotient+1
  3496  04E3                     l1277:
  3497  04E3  0870               	movf	___awdiv@divisor,w
  3498  04E4  0471               	iorwf	___awdiv@divisor+1,w
  3499  04E5  1903               	btfsc	3,2
  3500  04E6  2CE8               	goto	u561
  3501  04E7  2CE9               	goto	u560
  3502  04E8                     u561:
  3503  04E8  2D20               	goto	l1297
  3504  04E9                     u560:
  3505  04E9                     l1279:
  3506  04E9  01F5               	clrf	___awdiv@counter
  3507  04EA  0AF5               	incf	___awdiv@counter,f
  3508  04EB  2CF7               	goto	l1285
  3509  04EC                     l1281:
  3510  04EC  3001               	movlw	1
  3511  04ED                     u575:
  3512  04ED  1003               	clrc
  3513  04EE  0DF0               	rlf	___awdiv@divisor,f
  3514  04EF  0DF1               	rlf	___awdiv@divisor+1,f
  3515  04F0  3EFF               	addlw	-1
  3516  04F1  1D03               	skipz
  3517  04F2  2CED               	goto	u575
  3518  04F3                     l1283:
  3519  04F3  3001               	movlw	1
  3520  04F4  00F4               	movwf	??___awdiv
  3521  04F5  0874               	movf	??___awdiv,w
  3522  04F6  07F5               	addwf	___awdiv@counter,f
  3523  04F7                     l1285:
  3524  04F7  1FF1               	btfss	___awdiv@divisor+1,7
  3525  04F8  2CFA               	goto	u581
  3526  04F9  2CFB               	goto	u580
  3527  04FA                     u581:
  3528  04FA  2CEC               	goto	l1281
  3529  04FB                     u580:
  3530  04FB                     l1287:
  3531  04FB  3001               	movlw	1
  3532  04FC                     u595:
  3533  04FC  1003               	clrc
  3534  04FD  0DF7               	rlf	___awdiv@quotient,f
  3535  04FE  0DF8               	rlf	___awdiv@quotient+1,f
  3536  04FF  3EFF               	addlw	-1
  3537  0500  1D03               	skipz
  3538  0501  2CFC               	goto	u595
  3539  0502  0871               	movf	___awdiv@divisor+1,w
  3540  0503  0273               	subwf	___awdiv@dividend+1,w
  3541  0504  1D03               	skipz
  3542  0505  2D08               	goto	u605
  3543  0506  0870               	movf	___awdiv@divisor,w
  3544  0507  0272               	subwf	___awdiv@dividend,w
  3545  0508                     u605:
  3546  0508  1C03               	skipc
  3547  0509  2D0B               	goto	u601
  3548  050A  2D0C               	goto	u600
  3549  050B                     u601:
  3550  050B  2D13               	goto	l1293
  3551  050C                     u600:
  3552  050C                     l1289:
  3553  050C  0870               	movf	___awdiv@divisor,w
  3554  050D  02F2               	subwf	___awdiv@dividend,f
  3555  050E  0871               	movf	___awdiv@divisor+1,w
  3556  050F  1C03               	skipc
  3557  0510  03F3               	decf	___awdiv@dividend+1,f
  3558  0511  02F3               	subwf	___awdiv@dividend+1,f
  3559  0512                     l1291:
  3560  0512  1477               	bsf	___awdiv@quotient,0
  3561  0513                     l1293:
  3562  0513  3001               	movlw	1
  3563  0514                     u615:
  3564  0514  1003               	clrc
  3565  0515  0CF1               	rrf	___awdiv@divisor+1,f
  3566  0516  0CF0               	rrf	___awdiv@divisor,f
  3567  0517  3EFF               	addlw	-1
  3568  0518  1D03               	skipz
  3569  0519  2D14               	goto	u615
  3570  051A                     l1295:
  3571  051A  3001               	movlw	1
  3572  051B  02F5               	subwf	___awdiv@counter,f
  3573  051C  1D03               	btfss	3,2
  3574  051D  2D1F               	goto	u621
  3575  051E  2D20               	goto	u620
  3576  051F                     u621:
  3577  051F  2CFB               	goto	l1287
  3578  0520                     u620:
  3579  0520                     l1297:
  3580  0520  0876               	movf	___awdiv@sign,w
  3581  0521  1903               	btfsc	3,2
  3582  0522  2D24               	goto	u631
  3583  0523  2D25               	goto	u630
  3584  0524                     u631:
  3585  0524  2D2A               	goto	l1301
  3586  0525                     u630:
  3587  0525                     l1299:
  3588  0525  09F7               	comf	___awdiv@quotient,f
  3589  0526  09F8               	comf	___awdiv@quotient+1,f
  3590  0527  0AF7               	incf	___awdiv@quotient,f
  3591  0528  1903               	skipnz
  3592  0529  0AF8               	incf	___awdiv@quotient+1,f
  3593  052A                     l1301:
  3594  052A  0878               	movf	___awdiv@quotient+1,w
  3595  052B  00F1               	movwf	?___awdiv+1
  3596  052C  0877               	movf	___awdiv@quotient,w
  3597  052D  00F0               	movwf	?___awdiv
  3598  052E                     l454:
  3599  052E  0008               	return
  3600  052F                     __end_of___awdiv:
  3601  007E                     btemp	set	126	;btemp
  3602  007E                     wtemp0	set	126
  3603                           
  3604                           	psect	config
  3605                           
  3606                           ;Config register CONFIG1 @ 0x2007
  3607                           ;	Oscillator Selection bits
  3608                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3609                           ;	Watchdog Timer Enable bit
  3610                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3611                           ;	Power-up Timer Enable bit
  3612                           ;	PWRTE = OFF, PWRT disabled
  3613                           ;	RE3/MCLR pin function select bit
  3614                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3615                           ;	Code Protection bit
  3616                           ;	CP = OFF, Program memory code protection is disabled
  3617                           ;	Data Code Protection bit
  3618                           ;	CPD = OFF, Data memory code protection is disabled
  3619                           ;	Brown Out Reset Selection bits
  3620                           ;	BOREN = OFF, BOR disabled
  3621                           ;	Internal External Switchover bit
  3622                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3623                           ;	Fail-Safe Clock Monitor Enabled bit
  3624                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3625                           ;	Low Voltage Programming Enable bit
  3626                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3627                           ;	In-Circuit Debugger Mode bit
  3628                           ;	DEBUG = 0x1, unprogrammed default
  3629  2007                     	org	8199
  3630  2007  20D4               	dw	8404
  3631                           
  3632                           ;Config register CONFIG2 @ 0x2008
  3633                           ;	Brown-out Reset Selection bit
  3634                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3635                           ;	Flash Program Memory Self Write Enable bits
  3636                           ;	WRT = OFF, Write protection off
  3637  2008                     	org	8200
  3638  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> date1(BANK0[17]), time(BANK0[15]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 17
		 -> date1(BANK0[17]), time(BANK0[15]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DS3231_time->___awdiv
    _bcd_to_decimal->___bmul

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5613
                                              8 BANK0      3     3      0
                        _DS3231_time
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     178
                                              1 COMMON     3     3      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     266
                                              3 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_time                                          2     2      0    2632
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231_time
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 21:46:22 2021

                                pc 0002                     ___bmul@product 0072  
                               l93 0385                                 l96 028C  
                               l99 0675                       ___awdiv@sign 0076  
                               fsr 0004                                l201 01F4  
                              l210 034F                                l211 0352  
                              l212 0357                                l204 0206  
                              l116 0212                                l125 02C4  
                              l142 0236                                l207 0210  
                              l151 0408                                l119 021C  
                              l136 01EB                                l160 0305  
                              l154 0274                                l139 02A6  
                              l148 0329                                l327 025E  
                              l192 021D                                l337 04C7  
                              l195 0229                                l189 03BD  
                              l454 052E                                l198 01FD  
                              l467 0461                                _GIE 005F  
                              _RE0 0048                                _RE1 0049  
                              u400 0250                                u401 024F  
                              u410 025D                                u411 025C  
                              u420 0472                                u500 039D  
                              u421 0471                                u600 050C  
                              u520 0223                                u440 0486  
                              u601 050B                                u521 0222  
                              u441 0485                                u505 0398  
                              u530 0229                                u515 0280  
                              u531 0228                                u435 0477  
                              u620 0520                                u540 04CD  
                              u460 04A1                                u621 051F  
                              u605 0508                                u541 04CC  
                              u461 04A0                                u630 0525  
                              u550 04D8                                u710 0453  
                              u631 0524                                u615 0514  
                              u551 04D7                                u711 0452  
                              u455 0488                                u560 04E9  
                              u720 0458                                u640 040E  
                              u480 04BF                                u561 04E8  
                              u721 0457                                u705 0447  
                              u641 040D                                u481 04BE  
                              u465 049D                                u650 0419  
                              u730 030C                                u490 0218  
                              u651 0418                                u731 030B  
                              u491 0217                                u475 04B1  
                              u580 04FB                                u660 0424  
                              u740 031E                                u581 04FA  
                              u661 0423                                u741 031D  
                              u750 0305                                u575 04ED  
                              u807 026E                                u751 0304  
                              u680 0436                                u760 034B  
                              u681 0435                                u761 034A  
                              u817 03C8                                u690 0440  
                              u770 02C4                                u595 04FC  
                              u691 043F                                u675 0428  
                              u827 03D7                                u771 02C3  
                              u837 03E6                                u695 043C  
                              u847 029E                                u787 0703  
                              u797 07A2                                _min 0048  
                              _sec 004A                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0076  
                             l1201 0486                               l1211 04B9  
                             l1203 048F                               l1301 052A  
                             l1205 04A1                               l1213 04BF  
                             l1221 0386                               l1311 0413  
                             l1207 04AF                               l1231 03BC  
                             l1223 038A                               l1321 0427  
                             l1313 0415                               l1305 0409  
                             l1233 0276                               l1401 01FA  
                             l1241 0297                               l1217 0212  
                             l1209 04B0                               l1225 038D  
                             l1331 0446                               l1323 042E  
                             l1315 0419                               l1307 040A  
                             l1411 01EC                               l1403 0207  
                             l1243 029A                               l1251 0269  
                             l1219 0218                               l1227 03BA  
                             l1261 04C8                               l1333 044D  
                             l1325 0432                               l1317 041E  
                             l1309 040E                               l1181 024C  
                             l1421 0340                               l1413 01F1  
                             l1405 020C                               l1245 02A3  
                             l1237 028E                               l1253 026C  
                             l1229 03BB                               l1501 0773  
                             l1271 04D8                               l1263 04C9  
                             l1327 0436                               l1319 0424  
                             l1335 0453                               l1183 0250  
                             l1431 052F                               l1423 0345  
                             l1415 032A                               l1407 01FE  
                             l1239 0291                               l1255 0271  
                             l1247 0260                               l1351 036C  
                             l1343 0358                               l1511 07A9  
                             l1503 0782                               l1281 04EC  
                             l1273 04DD                               l1265 04CD  
                             l1337 0458                               l1329 0440  
                             l1185 0254                               l1257 021D  
                             l1425 034B                               l1417 032F  
                             l1409 0203                               l1177 01E7  
                             l1249 0263                               l1433 02A8  
                             l1193 0462                               l1361 0380  
                             l1353 0379                               l1345 0360  
                             l1521 07CB                               l1513 07B1  
                             l1505 0790                               l1441 0676  
                             l1291 0512                               l1283 04F3  
                             l1275 04E1                               l1267 04D2  
                             l1339 045D                               l1187 0256  
                             l1179 024B                               l1259 0223  
                             l1427 0353                               l1419 0337  
                             l1371 03CD                               l1435 02AA  
                             l1195 0472                               l1363 0383  
                             l1355 037C                               l1347 0361  
                             l1523 07D1                               l1515 07B7  
                             l1507 0795                               l1451 0690  
                             l1443 067B                               l1293 0513  
                             l1285 04F7                               l1277 04E3  
                             l1269 04D4                               l1189 025D  
                             l1373 03DC                               l1381 030C  
                             l1437 02B5                               l1197 0475  
                             l1365 0384                               l1357 037E  
                             l1349 0362                               l1525 07D7  
                             l1517 07BF                               l1509 079A  
                             l1461 06B2                               l1453 0696  
                             l1445 067E                               l1295 051A  
                             l1287 04FB                               l1279 04E9  
                             l1375 03E2                               l1367 03BE  
                             l1383 0311                               l1391 02E6  
                             l1439 02B9                               l1199 0482  
                             l1359 037F                               l1519 07C5  
                             l1471 06DB                               l1463 06BA  
                             l1455 069E                               l1447 0683  
                             l1289 050C                               l1297 0520  
                             l1377 022A                               l1369 03C4  
                             l1385 0318                               l1393 02E9  
                             l1481 070A                               l1473 06E4  
                             l1465 06C2                               l1457 06A4  
                             l1449 0688                               l1299 0525  
                             l1387 031E                               l1379 0307  
                             l1395 02F4                               l1491 072E  
                             l1483 070F                               l1475 06ED  
                             l1467 06CA                               l1459 06A9  
                             l1389 0323                               l1397 02FA  
                             l1493 073D                               l1485 0718  
                             l1477 06F6                               l1469 06D3  
                             l1399 01F5                               l1495 074C  
                             l1487 0720                               l1479 06FB  
                             l1497 075B                               l1489 0725  
                             l1499 0764                               _PEIE 005E  
                             _RCIF 0065                               _TRMT 04C1  
                ?_Lcd_Write_String 0070                               _date 0044  
 __end_of_I2C_Master_RepeatedStart 01F5                               _main 0676  
                             _hour 0046                               _time 0031  
                             _year 0040                               btemp 007E  
                             start 0000                 ??_Lcd_Write_String 0073  
                  __end_of_Lcd_Cmd 02A7                  ___bmul@multiplier 0073  
                 ?_I2C_Master_Init 004D                   ?_I2C_Master_Read 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 052F  
                  __end_of___awmod 0462                              _ANSEL 0188  
                  __end_of___lldiv 04C8                    ___awdiv@divisor 0070  
                  ___awdiv@counter 0075                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
          __size_of_Lcd_Set_Cursor 0024                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _date1 0020                              _month 0042  
                            _setup 0358                              pclath 000A  
                            status 0003                              wtemp0 007E  
                 __end_of_Lcd_Init 0409                   __end_of_Lcd_Port 01EC  
                  __initialization 07E1                       __end_of_main 07E1  
                 USART_ESCRITURA@a 0070                             ??_main 0055  
               __size_of_Lcd_Clear 000D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0070  
               ??_I2C_Master_Write 0072                   ___awdiv@dividend 0072  
                           ?_setup 0070                             _ANSELH 0189  
                    USART_STRING@a 0073                      USART_STRING@i 0072  
                        ??_Lcd_Cmd 0071                             _SPBRGH 009A  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 01EC                             ___bmul 024A  
                        ??___awdiv 0074                          ??___awmod 0074  
                        ??___lldiv 0078                   ___awdiv@quotient 0077  
                  ___awmod@divisor 0070                    ___awmod@counter 0075  
                  Lcd_Set_Cursor@a 0076                    Lcd_Set_Cursor@b 0074  
          __end_of__initialization 07FC                  __end_of_Lcd_Clear 0237  
              ___bmul@multiplicand 0070                     __pcstackCOMMON 0070  
                     __pidataBANK0 02C5                      __end_of_setup 0386  
                   _Lcd_Set_Cursor 0306                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 007E  
                       __pbssBANK0 0040                      ??_DS3231_time 0079  
                       __pmaintext 0676                            ?___bmul 0070  
        __size_of_Lcd_Write_String 0021             __end_of_Lcd_Set_Cursor 032A  
         __size_of_USART_ESCRITURA 000C            __size_of_bcd_to_decimal 0018  
                       ??_Lcd_Init 0074                         ??_Lcd_Port 0070  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                   _Lcd_Write_Char 025F                            _Lcd_Cmd 028D  
                  __size_of___bmul 0015                            ___awdiv 04C8  
                          ___awmod 0409                __end_of_DS3231_time 0676  
                          ___lldiv 0462                    ?_Lcd_Set_Cursor 0074  
                          __ptext1 0358                            __ptext2 0386  
                          __ptext3 0462                            __ptext4 02A7  
                          __ptext5 0211                            __ptext6 02E5  
                          __ptext7 025F                            __ptext8 0306  
                          __ptext9 03BE                   ___awmod@dividend 0072  
         __size_of_I2C_Master_Init 0038           __size_of_I2C_Master_Read 002E  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
           __end_of_Lcd_Write_Char 0275               end_of_initialization 07FC  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                          _RCSTAbits 0018  
                 I2C_Master_Init@c 004D                   I2C_Master_Read@a 0070  
                        Lcd_Port@a 0070                          _TRISCbits 0087  
                ??_USART_ESCRITURA 0070                      ?_USART_STRING 0070  
                  ?_Lcd_Write_Char 0070                  Lcd_Write_String@a 0076  
                Lcd_Write_String@i 0074                          _TXSTAbits 0098  
                      _DS3231_time 052F                          _Lcd_Clear 022A  
                   __end_of___bmul 025F                   _Lcd_Write_String 02E5  
              start_initialization 07E1                     _bcd_to_decimal 0275  
                   ??_USART_STRING 0071                  __size_of_Lcd_Init 004B  
                __size_of_Lcd_Port 0006                  ??_I2C_Master_Init 0051  
                ??_I2C_Master_Read 0072                  ??_I2C_Master_Wait 0070  
                ??_I2C_Master_Stop 0070                         ?_Lcd_Clear 0070  
                         ??___bmul 0071                         init_fetch0 0237  
                      __pdataBANK0 0020                    Lcd_Write_Char@a 0072  
           __end_of_bcd_to_decimal 028D                          ___latbits 0002  
                    __pcstackBANK0 004D                           ?_Lcd_Cmd 0070  
                 _I2C_Master_Start 01F5                   _I2C_Master_Write 0207  
                 ??_Lcd_Set_Cursor 0075                           ?___awdiv 0070  
                         ?___awmod 0070                           ?___lldiv 0070  
                  ?_bcd_to_decimal 0070               bcd_to_decimal@number 0077  
                   __size_of_setup 002E                           Lcd_Cmd@a 0073  
                      ??_Lcd_Clear 0074               __end_of_USART_STRING 02C5  
                  _USART_ESCRITURA 0211                   ??_Lcd_Write_Char 0071  
                         _Lcd_Init 03BE                           _Lcd_Port 01E6  
              I2C_Master_Read@temp 0074           __end_of_Lcd_Write_String 0306  
                 __size_of_Lcd_Cmd 001A                       ?_DS3231_time 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0067  
                 __size_of___awmod 0059          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0066                    _I2C_Master_Init 0386  
                  _I2C_Master_Read 032A                    _I2C_Master_Wait 021D  
                  _I2C_Master_Stop 01FE                           __ptext10 022A  
                         __ptext11 028D                           __ptext20 0275  
                         __ptext12 01E6                           __ptext21 024A  
                         __ptext13 0207                           __ptext22 0409  
                         __ptext14 01FE                           __ptext23 04C8  
                         __ptext15 01F5                           __ptext16 01EC  
                         __ptext17 032A                           __ptext18 021D  
                         __ptext19 052F                      __size_of_main 016B  
          __end_of_USART_ESCRITURA 021D           __end_of_I2C_Master_Start 01FE  
         __end_of_I2C_Master_Write 0211                           init_ram0 023B  
                 ___lldiv@dividend 0074              __size_of_USART_STRING 001E  
                 ??_bcd_to_decimal 0074            __end_of_I2C_Master_Init 03BE  
          __end_of_I2C_Master_Read 0358            __end_of_I2C_Master_Wait 022A  
          __end_of_I2C_Master_Stop 0207                 Lcd_Set_Cursor@temp 0077  
                 ___lldiv@quotient 0079                  I2C_Master_Write@d 0070  
                      _SSPCON2bits 0091                       _USART_STRING 02A7  
                       _USART_LEER 004C                   ?_USART_ESCRITURA 0070  
             __size_of_DS3231_time 0147  
