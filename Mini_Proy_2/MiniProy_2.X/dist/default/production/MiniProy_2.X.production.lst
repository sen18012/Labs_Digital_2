

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar 08 21:50:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460                           
   461                           	psect	idataBANK0
   462  02BF                     __pidataBANK0:
   463                           
   464                           ;initializer for _calendar
   465  02BF  3444               	retlw	68
   466  02C0  3441               	retlw	65
   467  02C1  3454               	retlw	84
   468  02C2  3445               	retlw	69
   469  02C3  343A               	retlw	58
   470  02C4  3420               	retlw	32
   471  02C5  3420               	retlw	32
   472  02C6  342F               	retlw	47
   473  02C7  3420               	retlw	32
   474  02C8  3420               	retlw	32
   475  02C9  342F               	retlw	47
   476  02CA  3420               	retlw	32
   477  02CB  3420               	retlw	32
   478  02CC  3400               	retlw	0
   479                           
   480                           ;initializer for _time
   481  02CD  3454               	retlw	84
   482  02CE  3449               	retlw	73
   483  02CF  344D               	retlw	77
   484  02D0  3445               	retlw	69
   485  02D1  343A               	retlw	58
   486  02D2  3420               	retlw	32
   487  02D3  3420               	retlw	32
   488  02D4  343A               	retlw	58
   489  02D5  3420               	retlw	32
   490  02D6  3420               	retlw	32
   491  02D7  343A               	retlw	58
   492  02D8  3420               	retlw	32
   493  02D9  3420               	retlw	32
   494  02DA  3400               	retlw	0
   495  0013                     _SSPBUF	set	19
   496  0014                     _SSPCON	set	20
   497  0019                     _TXREG	set	25
   498  001A                     _RCREG	set	26
   499  0018                     _RCSTAbits	set	24
   500  0006                     _PORTB	set	6
   501  0008                     _PORTD	set	8
   502  0009                     _PORTE	set	9
   503  0007                     _PORTC	set	7
   504  0063                     _SSPIF	set	99
   505  005E                     _PEIE	set	94
   506  005F                     _GIE	set	95
   507  0049                     _RE1	set	73
   508  0048                     _RE0	set	72
   509  0065                     _RCIF	set	101
   510  0091                     _SSPCON2bits	set	145
   511  0087                     _TRISCbits	set	135
   512  0094                     _SSPSTAT	set	148
   513  0093                     _SSPADD	set	147
   514  0091                     _SSPCON2	set	145
   515  0098                     _TXSTAbits	set	152
   516  0099                     _SPBRG	set	153
   517  009A                     _SPBRGH	set	154
   518  0089                     _TRISE	set	137
   519  0086                     _TRISB	set	134
   520  0088                     _TRISD	set	136
   521  0463                     _SSPIE	set	1123
   522  043C                     _TRISC4	set	1084
   523  043B                     _TRISC3	set	1083
   524  04C1                     _TRMT	set	1217
   525  0189                     _ANSELH	set	393
   526  0188                     _ANSEL	set	392
   527                           
   528                           	psect	cinit
   529  07E0                     start_initialization:	
   530                           ; #config settings
   531                           
   532  07E0                     __initialization:
   533                           
   534                           ; Initialize objects allocated to BANK0
   535  07E0  1383               	bcf	3,7	;select IRP bank0
   536  07E1  303C               	movlw	low (__pdataBANK0+28)
   537  07E2  00FD               	movwf	btemp+-1
   538  07E3  3002               	movlw	high __pidataBANK0
   539  07E4  00FE               	movwf	btemp
   540  07E5  30BF               	movlw	low __pidataBANK0
   541  07E6  00FF               	movwf	btemp+1
   542  07E7  3020               	movlw	low __pdataBANK0
   543  07E8  0084               	movwf	4
   544  07E9  120A  118A  2280  120A  118A  	fcall	init_ram0
   545                           
   546                           ; Clear objects allocated to BANK0
   547  07EE  01BC               	clrf	__pbssBANK0& (0+127)
   548  07EF  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   549  07F0  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   550  07F1  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   551  07F2  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   552  07F3  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   553  07F4  01C2               	clrf	(__pbssBANK0+6)& (0+127)
   554  07F5  01C3               	clrf	(__pbssBANK0+7)& (0+127)
   555  07F6  01C4               	clrf	(__pbssBANK0+8)& (0+127)
   556  07F7  01C5               	clrf	(__pbssBANK0+9)& (0+127)
   557  07F8  01C6               	clrf	(__pbssBANK0+10)& (0+127)
   558  07F9  01C7               	clrf	(__pbssBANK0+11)& (0+127)
   559  07FA  01C8               	clrf	(__pbssBANK0+12)& (0+127)
   560  07FB  01C9               	clrf	(__pbssBANK0+13)& (0+127)
   561  07FC                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564  07FC                     __end_of__initialization:
   565  07FC  0183               	clrf	3
   566  07FD  120A  118A  2D21   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	bssBANK0
   569  003C                     __pbssBANK0:
   570  003C                     _year:
   571  003C                     	ds	2
   572  003E                     _month:
   573  003E                     	ds	2
   574  0040                     _date:
   575  0040                     	ds	2
   576  0042                     _hour:
   577  0042                     	ds	2
   578  0044                     _minute:
   579  0044                     	ds	2
   580  0046                     _second:
   581  0046                     	ds	2
   582  0048                     _i:
   583  0048                     	ds	2
   584                           
   585                           	psect	dataBANK0
   586  0020                     __pdataBANK0:
   587  0020                     _calendar:
   588  0020                     	ds	14
   589  002E                     _time:
   590  002E                     	ds	14
   591                           
   592                           	psect	inittext
   593  027C                     init_fetch0:	
   594                           ;	Called with low address in FSR and high address in W
   595                           
   596  027C  087E               	movf	btemp,w
   597  027D  008A               	movwf	10
   598  027E  087F               	movf	btemp+1,w
   599  027F  0082               	movwf	2
   600  0280                     init_ram0:	
   601                           ;Called with:
   602                           ;	high address of idata address in btemp 
   603                           ;	low address of idata address in btemp+1 
   604                           ;	low address of data in FSR
   605                           ;	high address + 1 of data in btemp-1
   606                           
   607  0280  120A  118A  227C  120A  118A  	fcall	init_fetch0
   608  0285  0080               	movwf	0
   609  0286  0A84               	incf	4,f
   610  0287  0804               	movf	4,w
   611  0288  067D               	xorwf	btemp+-1,w
   612  0289  1903               	btfsc	3,2
   613  028A  3400               	retlw	0
   614  028B  0AFF               	incf	btemp+1,f
   615  028C  1903               	btfsc	3,2
   616  028D  0AFE               	incf	btemp,f
   617  028E  2A80               	goto	init_ram0
   618                           
   619                           	psect	cstackCOMMON
   620  0070                     __pcstackCOMMON:
   621  0070                     ?_setup:
   622  0070                     ?_Lcd_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Clear:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Lcd_Write_String:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_I2C_Master_Start:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ??_I2C_Master_Start:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_I2C_Master_Write:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_I2C_Master_Stop:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_I2C_Master_Stop:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_DS3231:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_USART_STRING:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_USART_ESCRITURA:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_USART_ESCRITURA:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Lcd_Port:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_Lcd_Port:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Lcd_Cmd:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_Lcd_Write_Char:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_I2C_Master_Wait:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_I2C_Master_Wait:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_I2C_Master_Read:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?___wmul:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0070                     ?___lwdiv:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     ?___lwmod:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     ?___lldiv:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0070                     USART_ESCRITURA@a:	
   695                           ; 4 bytes @ 0x0
   696                           
   697  0070                     Lcd_Port@a:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     I2C_Master_Write@d:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     I2C_Master_Read@a:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0070                     ___wmul@multiplier:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  0070                     ___lwdiv@divisor:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     ___lwmod@divisor:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ___lldiv@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718                           
   719                           ; 4 bytes @ 0x0
   720  0070                     	ds	1
   721  0071                     ??_USART_STRING:
   722  0071                     ??_Lcd_Cmd:	
   723                           ; 1 bytes @ 0x1
   724                           
   725  0071                     ??_Lcd_Write_Char:	
   726                           ; 1 bytes @ 0x1
   727                           
   728                           
   729                           ; 1 bytes @ 0x1
   730  0071                     	ds	1
   731  0072                     ??_I2C_Master_Write:
   732  0072                     ??_I2C_Master_Read:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     USART_STRING@i:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0072                     Lcd_Write_Char@a:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     ___wmul@multiplicand:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     ___lwdiv@dividend:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0072                     ___lwmod@dividend:	
   748                           ; 2 bytes @ 0x2
   749                           
   750                           
   751                           ; 2 bytes @ 0x2
   752  0072                     	ds	1
   753  0073                     ??_Lcd_Write_String:
   754  0073                     USART_STRING@a:	
   755                           ; 1 bytes @ 0x3
   756                           
   757  0073                     Lcd_Cmd@a:	
   758                           ; 1 bytes @ 0x3
   759                           
   760                           
   761                           ; 1 bytes @ 0x3
   762  0073                     	ds	1
   763  0074                     ??_Lcd_Init:
   764  0074                     ??_Lcd_Clear:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ?_Lcd_Set_Cursor:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??___wmul:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     ??___lwdiv:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     ??___lwmod:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     Lcd_Set_Cursor@b:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     Lcd_Write_String@i:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     I2C_Master_Read@temp:	
   786                           ; 2 bytes @ 0x4
   787                           
   788  0074                     ___wmul@product:	
   789                           ; 2 bytes @ 0x4
   790                           
   791  0074                     ___lldiv@dividend:	
   792                           ; 2 bytes @ 0x4
   793                           
   794                           
   795                           ; 4 bytes @ 0x4
   796  0074                     	ds	1
   797  0075                     ??_Lcd_Set_Cursor:
   798  0075                     ___lwmod@counter:	
   799                           ; 1 bytes @ 0x5
   800                           
   801  0075                     ___lwdiv@quotient:	
   802                           ; 1 bytes @ 0x5
   803                           
   804                           
   805                           ; 2 bytes @ 0x5
   806  0075                     	ds	1
   807  0076                     Lcd_Set_Cursor@a:
   808  0076                     Lcd_Write_String@a:	
   809                           ; 1 bytes @ 0x6
   810                           
   811                           
   812                           ; 1 bytes @ 0x6
   813  0076                     	ds	1
   814  0077                     Lcd_Set_Cursor@temp:
   815  0077                     ___lwdiv@counter:	
   816                           ; 1 bytes @ 0x7
   817                           
   818                           
   819                           ; 1 bytes @ 0x7
   820  0077                     	ds	1
   821  0078                     ??_DS3231:
   822  0078                     ??___lldiv:	
   823                           ; 1 bytes @ 0x8
   824                           
   825                           
   826                           ; 1 bytes @ 0x8
   827  0078                     	ds	1
   828  0079                     ___lldiv@quotient:
   829                           
   830                           ; 4 bytes @ 0x9
   831  0079                     	ds	4
   832  007D                     ___lldiv@counter:
   833                           
   834                           ; 1 bytes @ 0xD
   835  007D                     	ds	1
   836  007E                     ??_setup:
   837                           
   838                           	psect	cstackBANK0
   839  004A                     __pcstackBANK0:	
   840                           ; 1 bytes @ 0xE
   841                           
   842  004A                     ?_I2C_Master_Init:
   843  004A                     I2C_Master_Init@c:	
   844                           ; 1 bytes @ 0x0
   845                           
   846                           
   847                           ; 4 bytes @ 0x0
   848  004A                     	ds	4
   849  004E                     ??_I2C_Master_Init:
   850                           
   851                           ; 1 bytes @ 0x4
   852  004E                     	ds	4
   853  0052                     ??_main:
   854                           
   855                           ; 1 bytes @ 0x8
   856  0052                     	ds	2
   857                           
   858                           	psect	maintext
   859  0521                     __pmaintext:	
   860 ;;
   861 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   862 ;;
   863 ;; *************** function _main *****************
   864 ;; Defined at:
   865 ;;		line 87 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : B00/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          0       2       0       0       0
   882 ;;      Totals:         0       2       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels required when called:    3
   885 ;; This function calls:
   886 ;;		_DS3231
   887 ;;		_I2C_Master_Read
   888 ;;		_I2C_Master_Start
   889 ;;		_I2C_Master_Stop
   890 ;;		_I2C_Master_Write
   891 ;;		_Lcd_Clear
   892 ;;		_Lcd_Init
   893 ;;		_Lcd_Set_Cursor
   894 ;;		_Lcd_Write_String
   895 ;;		_USART_ESCRITURA
   896 ;;		_USART_STRING
   897 ;;		_setup
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _main
   905  0521                     _main:
   906  0521                     l1314:	
   907                           ;incstack = 0
   908                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   909                           
   910                           
   911                           ;main.c: 88:     setup();
   912  0521  120A  118A  2363  120A  118A  	fcall	_setup
   913  0526                     l1316:
   914                           
   915                           ;main.c: 89:     TRISD = 0x00;
   916  0526  1683               	bsf	3,5	;RP0=1, select bank1
   917  0527  1303               	bcf	3,6	;RP1=0, select bank1
   918  0528  0188               	clrf	8	;volatile
   919  0529                     l1318:
   920                           
   921                           ;main.c: 90:     Lcd_Init();
   922  0529  120A  118A  2470  120A  118A  	fcall	_Lcd_Init
   923  052E                     l1320:
   924                           
   925                           ;main.c: 91:     Lcd_Clear();
   926  052E  120A  118A  226F  120A  118A  	fcall	_Lcd_Clear
   927  0533                     l1322:
   928                           
   929                           ;main.c: 92:     Lcd_Set_Cursor(1, 1);
   930  0533  01F4               	clrf	Lcd_Set_Cursor@b
   931  0534  0AF4               	incf	Lcd_Set_Cursor@b,f
   932  0535  3001               	movlw	1
   933  0536  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
   934  053B                     l1324:
   935                           
   936                           ;main.c: 93:     Lcd_Write_String(time);
   937  053B  302E               	movlw	(low (_time| 0))& (0+255)
   938  053C  120A  118A  22F9  120A  118A  	fcall	_Lcd_Write_String
   939  0541                     l1326:
   940                           
   941                           ;main.c: 94:     Lcd_Set_Cursor(2, 1);
   942  0541  01F4               	clrf	Lcd_Set_Cursor@b
   943  0542  0AF4               	incf	Lcd_Set_Cursor@b,f
   944  0543  3002               	movlw	2
   945  0544  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
   946  0549                     l1328:
   947                           
   948                           ;main.c: 95:     Lcd_Write_String(calendar);
   949  0549  3020               	movlw	(low (_calendar| 0))& (0+255)
   950  054A  120A  118A  22F9  120A  118A  	fcall	_Lcd_Write_String
   951  054F                     l1330:
   952                           
   953                           ;main.c: 98:         I2C_Master_Start();
   954  054F  120A  118A  223A  120A  118A  	fcall	_I2C_Master_Start
   955  0554                     l1332:
   956                           
   957                           ;main.c: 99:         I2C_Master_Write(0xD0);
   958  0554  30D0               	movlw	208
   959  0555  00F0               	movwf	I2C_Master_Write@d
   960  0556  3000               	movlw	0
   961  0557  00F1               	movwf	I2C_Master_Write@d+1
   962  0558  120A  118A  224C  120A  118A  	fcall	_I2C_Master_Write
   963  055D                     l1334:
   964                           
   965                           ;main.c: 100:         I2C_Master_Write(0);
   966  055D  3000               	movlw	0
   967  055E  00F0               	movwf	I2C_Master_Write@d
   968  055F  00F1               	movwf	I2C_Master_Write@d+1
   969  0560  120A  118A  224C  120A  118A  	fcall	_I2C_Master_Write
   970  0565                     l1336:
   971                           
   972                           ;main.c: 101:         I2C_Master_Start();
   973  0565  120A  118A  223A  120A  118A  	fcall	_I2C_Master_Start
   974  056A                     l1338:
   975                           
   976                           ;main.c: 102:         I2C_Master_Write(0xD1);
   977  056A  30D1               	movlw	209
   978  056B  00F0               	movwf	I2C_Master_Write@d
   979  056C  3000               	movlw	0
   980  056D  00F1               	movwf	I2C_Master_Write@d+1
   981  056E  120A  118A  224C  120A  118A  	fcall	_I2C_Master_Write
   982  0573                     l1340:
   983                           
   984                           ;main.c: 103:         second = I2C_Master_Read(1);
   985  0573  3001               	movlw	1
   986  0574  00F0               	movwf	I2C_Master_Read@a
   987  0575  3000               	movlw	0
   988  0576  00F1               	movwf	I2C_Master_Read@a+1
   989  0577  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
   990  057C  0871               	movf	?_I2C_Master_Read+1,w
   991  057D  1283               	bcf	3,5	;RP0=0, select bank0
   992  057E  1303               	bcf	3,6	;RP1=0, select bank0
   993  057F  00C7               	movwf	_second+1
   994  0580  0870               	movf	?_I2C_Master_Read,w
   995  0581  00C6               	movwf	_second
   996  0582                     l1342:
   997                           
   998                           ;main.c: 104:         minute = I2C_Master_Read(1);
   999  0582  3001               	movlw	1
  1000  0583  00F0               	movwf	I2C_Master_Read@a
  1001  0584  3000               	movlw	0
  1002  0585  00F1               	movwf	I2C_Master_Read@a+1
  1003  0586  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
  1004  058B  0871               	movf	?_I2C_Master_Read+1,w
  1005  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1006  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1007  058E  00C5               	movwf	_minute+1
  1008  058F  0870               	movf	?_I2C_Master_Read,w
  1009  0590  00C4               	movwf	_minute
  1010  0591                     l1344:
  1011                           
  1012                           ;main.c: 105:         hour = I2C_Master_Read(1);
  1013  0591  3001               	movlw	1
  1014  0592  00F0               	movwf	I2C_Master_Read@a
  1015  0593  3000               	movlw	0
  1016  0594  00F1               	movwf	I2C_Master_Read@a+1
  1017  0595  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
  1018  059A  0871               	movf	?_I2C_Master_Read+1,w
  1019  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1020  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1021  059D  00C3               	movwf	_hour+1
  1022  059E  0870               	movf	?_I2C_Master_Read,w
  1023  059F  00C2               	movwf	_hour
  1024  05A0                     l1346:
  1025                           
  1026                           ;main.c: 106:         I2C_Master_Read(1);
  1027  05A0  3001               	movlw	1
  1028  05A1  00F0               	movwf	I2C_Master_Read@a
  1029  05A2  3000               	movlw	0
  1030  05A3  00F1               	movwf	I2C_Master_Read@a+1
  1031  05A4  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
  1032  05A9                     l1348:
  1033                           
  1034                           ;main.c: 107:         date = I2C_Master_Read(1);
  1035  05A9  3001               	movlw	1
  1036  05AA  00F0               	movwf	I2C_Master_Read@a
  1037  05AB  3000               	movlw	0
  1038  05AC  00F1               	movwf	I2C_Master_Read@a+1
  1039  05AD  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
  1040  05B2  0871               	movf	?_I2C_Master_Read+1,w
  1041  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1042  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1043  05B5  00C1               	movwf	_date+1
  1044  05B6  0870               	movf	?_I2C_Master_Read,w
  1045  05B7  00C0               	movwf	_date
  1046  05B8                     l1350:
  1047                           
  1048                           ;main.c: 108:         month = I2C_Master_Read(1);
  1049  05B8  3001               	movlw	1
  1050  05B9  00F0               	movwf	I2C_Master_Read@a
  1051  05BA  3000               	movlw	0
  1052  05BB  00F1               	movwf	I2C_Master_Read@a+1
  1053  05BC  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
  1054  05C1  0871               	movf	?_I2C_Master_Read+1,w
  1055  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1056  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1057  05C4  00BF               	movwf	_month+1
  1058  05C5  0870               	movf	?_I2C_Master_Read,w
  1059  05C6  00BE               	movwf	_month
  1060  05C7                     l1352:
  1061                           
  1062                           ;main.c: 109:         year = I2C_Master_Read(0);
  1063  05C7  3000               	movlw	0
  1064  05C8  00F0               	movwf	I2C_Master_Read@a
  1065  05C9  00F1               	movwf	I2C_Master_Read@a+1
  1066  05CA  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Read
  1067  05CF  0871               	movf	?_I2C_Master_Read+1,w
  1068  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1069  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1070  05D2  00BD               	movwf	_year+1
  1071  05D3  0870               	movf	?_I2C_Master_Read,w
  1072  05D4  00BC               	movwf	_year
  1073  05D5                     l1354:
  1074                           
  1075                           ;main.c: 110:         I2C_Master_Stop();
  1076  05D5  120A  118A  2243  120A  118A  	fcall	_I2C_Master_Stop
  1077  05DA                     l1356:
  1078                           
  1079                           ;main.c: 111:         DS3231();
  1080  05DA  120A  118A  2621  120A  118A  	fcall	_DS3231
  1081  05DF                     l1358:
  1082                           
  1083                           ;main.c: 112:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1084  05DF  3082               	movlw	130
  1085  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1086  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1087  05E2  00D3               	movwf	??_main+1
  1088  05E3  30DD               	movlw	221
  1089  05E4  00D2               	movwf	??_main
  1090  05E5                     u687:
  1091  05E5  0BD2               	decfsz	??_main,f
  1092  05E6  2DE5               	goto	u687
  1093  05E7  0BD3               	decfsz	??_main+1,f
  1094  05E8  2DE5               	goto	u687
  1095  05E9                     l1360:
  1096                           
  1097                           ;main.c: 114:         Lcd_Set_Cursor(1, 1);
  1098  05E9  01F4               	clrf	Lcd_Set_Cursor@b
  1099  05EA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1100  05EB  3001               	movlw	1
  1101  05EC  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
  1102  05F1                     l1362:
  1103                           
  1104                           ;main.c: 115:         Lcd_Write_String(time);
  1105  05F1  302E               	movlw	(low (_time| 0))& (0+255)
  1106  05F2  120A  118A  22F9  120A  118A  	fcall	_Lcd_Write_String
  1107  05F7                     l1364:
  1108                           
  1109                           ;main.c: 116:         Lcd_Set_Cursor(2, 1);
  1110  05F7  01F4               	clrf	Lcd_Set_Cursor@b
  1111  05F8  0AF4               	incf	Lcd_Set_Cursor@b,f
  1112  05F9  3002               	movlw	2
  1113  05FA  120A  118A  231A  120A  118A  	fcall	_Lcd_Set_Cursor
  1114  05FF                     l1366:
  1115                           
  1116                           ;main.c: 117:         Lcd_Write_String(calendar);
  1117  05FF  3020               	movlw	(low (_calendar| 0))& (0+255)
  1118  0600  120A  118A  22F9  120A  118A  	fcall	_Lcd_Write_String
  1119  0605                     l1368:
  1120                           
  1121                           ;main.c: 119:         USART_STRING(time);
  1122  0605  302E               	movlw	(low (_time| 0))& (0+255)
  1123  0606  120A  118A  22DB  120A  118A  	fcall	_USART_STRING
  1124  060B                     l1370:
  1125                           
  1126                           ;main.c: 120:         USART_STRING(calendar);
  1127  060B  3020               	movlw	(low (_calendar| 0))& (0+255)
  1128  060C  120A  118A  22DB  120A  118A  	fcall	_USART_STRING
  1129  0611                     l1372:
  1130                           
  1131                           ;main.c: 122:         USART_ESCRITURA(13);
  1132  0611  300D               	movlw	13
  1133  0612  120A  118A  2256  120A  118A  	fcall	_USART_ESCRITURA
  1134  0617                     l1374:
  1135                           
  1136                           ;main.c: 123:         USART_ESCRITURA(10);
  1137  0617  300A               	movlw	10
  1138  0618  120A  118A  2256  120A  118A  	fcall	_USART_ESCRITURA
  1139  061D  2D4F               	goto	l1330
  1140  061E  120A  118A  2800   	ljmp	start
  1141  0621                     __end_of_main:
  1142                           
  1143                           	psect	text1
  1144  0363                     __ptext1:	
  1145 ;; *************** function _setup *****************
  1146 ;; Defined at:
  1147 ;;		line 132 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    2
  1168 ;; This function calls:
  1169 ;;		_I2C_Master_Init
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _setup
  1177  0363                     _setup:
  1178  0363                     l1226:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1181                           
  1182                           
  1183                           ;main.c: 133:     ANSEL = 0;
  1184  0363  1683               	bsf	3,5	;RP0=1, select bank3
  1185  0364  1703               	bsf	3,6	;RP1=1, select bank3
  1186  0365  0188               	clrf	8	;volatile
  1187                           
  1188                           ;main.c: 134:     ANSELH = 0;
  1189  0366  0189               	clrf	9	;volatile
  1190                           
  1191                           ;main.c: 135:     TRISB = 0;
  1192  0367  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0368  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0369  0186               	clrf	6	;volatile
  1195                           
  1196                           ;main.c: 136:     TRISE = 0;
  1197  036A  0189               	clrf	9	;volatile
  1198                           
  1199                           ;main.c: 137:     TRISD = 0;
  1200  036B  0188               	clrf	8	;volatile
  1201                           
  1202                           ;main.c: 139:     PORTC = 0;
  1203  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1204  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1205  036E  0187               	clrf	7	;volatile
  1206                           
  1207                           ;main.c: 140:     PORTE = 0;
  1208  036F  0189               	clrf	9	;volatile
  1209                           
  1210                           ;main.c: 141:     PORTD = 0;
  1211  0370  0188               	clrf	8	;volatile
  1212                           
  1213                           ;main.c: 142:     PORTB = 0;
  1214  0371  0186               	clrf	6	;volatile
  1215  0372                     l1228:
  1216                           
  1217                           ;main.c: 144:     I2C_Master_Init(100000);
  1218  0372  3000               	movlw	0
  1219  0373  00CD               	movwf	I2C_Master_Init@c+3
  1220  0374  3001               	movlw	1
  1221  0375  00CC               	movwf	I2C_Master_Init@c+2
  1222  0376  3086               	movlw	134
  1223  0377  00CB               	movwf	I2C_Master_Init@c+1
  1224  0378  30A0               	movlw	160
  1225  0379  00CA               	movwf	I2C_Master_Init@c
  1226  037A  120A  118A  23BA  120A  118A  	fcall	_I2C_Master_Init
  1227  037F                     l1230:
  1228                           
  1229                           ;main.c: 147:     SPBRGH = 0;
  1230  037F  1683               	bsf	3,5	;RP0=1, select bank1
  1231  0380  1303               	bcf	3,6	;RP1=0, select bank1
  1232  0381  019A               	clrf	26	;volatile
  1233  0382                     l1232:
  1234                           
  1235                           ;main.c: 148:     SPBRG = 12;
  1236  0382  300C               	movlw	12
  1237  0383  0099               	movwf	25	;volatile
  1238  0384                     l1234:
  1239                           
  1240                           ;main.c: 150:     TXSTAbits.TXEN = 1;
  1241  0384  1698               	bsf	24,5	;volatile
  1242  0385                     l1236:
  1243                           
  1244                           ;main.c: 151:     TXSTAbits.SYNC = 0;
  1245  0385  1218               	bcf	24,4	;volatile
  1246  0386                     l1238:
  1247                           
  1248                           ;main.c: 153:     RCSTAbits.SPEN = 1;
  1249  0386  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0387  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0388  1798               	bsf	24,7	;volatile
  1252  0389                     l1240:
  1253                           
  1254                           ;main.c: 154:     RCSTAbits.CREN = 1;
  1255  0389  1618               	bsf	24,4	;volatile
  1256  038A                     l1242:
  1257                           
  1258                           ;main.c: 155:     RCREG = 0;
  1259  038A  019A               	clrf	26	;volatile
  1260  038B                     l85:
  1261  038B  0008               	return
  1262  038C                     __end_of_setup:
  1263                           
  1264                           	psect	text2
  1265  03BA                     __ptext2:	
  1266 ;; *************** function _I2C_Master_Init *****************
  1267 ;; Defined at:
  1268 ;;		line 16 in file "I2C.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  c               4    0[BANK0 ] const unsigned long 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       4       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       4       0       0       0
  1285 ;;      Totals:         0       8       0       0       0
  1286 ;;Total ram usage:        8 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    1
  1289 ;; This function calls:
  1290 ;;		___lldiv
  1291 ;; This function is called by:
  1292 ;;		_setup
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _I2C_Master_Init
  1298  03BA                     _I2C_Master_Init:
  1299  03BA                     l1128:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1302                           
  1303                           
  1304                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1305  03BA  3028               	movlw	40
  1306  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1307  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1308  03BD  0094               	movwf	20	;volatile
  1309  03BE                     l1130:
  1310                           
  1311                           ;I2C.c: 19:     SSPCON2 = 0;
  1312  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  1313  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  1314  03C0  0191               	clrf	17	;volatile
  1315  03C1                     l1132:
  1316                           
  1317                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1318  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1319  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1320  03C3  084A               	movf	I2C_Master_Init@c,w
  1321  03C4  00CE               	movwf	??_I2C_Master_Init
  1322  03C5  084B               	movf	I2C_Master_Init@c+1,w
  1323  03C6  00CF               	movwf	??_I2C_Master_Init+1
  1324  03C7  084C               	movf	I2C_Master_Init@c+2,w
  1325  03C8  00D0               	movwf	??_I2C_Master_Init+2
  1326  03C9  084D               	movf	I2C_Master_Init@c+3,w
  1327  03CA  00D1               	movwf	??_I2C_Master_Init+3
  1328  03CB  3002               	movlw	2
  1329  03CC                     u435:
  1330  03CC  1003               	clrc
  1331  03CD  0DCE               	rlf	??_I2C_Master_Init,f
  1332  03CE  0DCF               	rlf	??_I2C_Master_Init+1,f
  1333  03CF  0DD0               	rlf	??_I2C_Master_Init+2,f
  1334  03D0  0DD1               	rlf	??_I2C_Master_Init+3,f
  1335  03D1                     u430:
  1336  03D1  3EFF               	addlw	-1
  1337  03D2  1D03               	skipz
  1338  03D3  2BCC               	goto	u435
  1339  03D4  0851               	movf	??_I2C_Master_Init+3,w
  1340  03D5  00F3               	movwf	___lldiv@divisor+3
  1341  03D6  0850               	movf	??_I2C_Master_Init+2,w
  1342  03D7  00F2               	movwf	___lldiv@divisor+2
  1343  03D8  084F               	movf	??_I2C_Master_Init+1,w
  1344  03D9  00F1               	movwf	___lldiv@divisor+1
  1345  03DA  084E               	movf	??_I2C_Master_Init,w
  1346  03DB  00F0               	movwf	___lldiv@divisor
  1347  03DC  3000               	movlw	0
  1348  03DD  00F7               	movwf	___lldiv@dividend+3
  1349  03DE  307A               	movlw	122
  1350  03DF  00F6               	movwf	___lldiv@dividend+2
  1351  03E0  3012               	movlw	18
  1352  03E1  00F5               	movwf	___lldiv@dividend+1
  1353  03E2  3000               	movlw	0
  1354  03E3  00F4               	movwf	___lldiv@dividend
  1355  03E4  120A  118A  24BB  120A  118A  	fcall	___lldiv
  1356  03E9  0870               	movf	?___lldiv,w
  1357  03EA  3EFF               	addlw	255
  1358  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1359  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1360  03ED  0093               	movwf	19	;volatile
  1361  03EE                     l1134:
  1362                           
  1363                           ;I2C.c: 21:     SSPSTAT = 0;
  1364  03EE  0194               	clrf	20	;volatile
  1365  03EF                     l1136:
  1366                           
  1367                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1368  03EF  1587               	bsf	7,3	;volatile
  1369  03F0                     l1138:
  1370                           
  1371                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1372  03F0  1607               	bsf	7,4	;volatile
  1373  03F1                     l178:
  1374  03F1  0008               	return
  1375  03F2                     __end_of_I2C_Master_Init:
  1376                           
  1377                           	psect	text3
  1378  04BB                     __ptext3:	
  1379 ;; *************** function ___lldiv *****************
  1380 ;; Defined at:
  1381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  divisor         4    0[COMMON] unsigned long 
  1384 ;;  dividend        4    4[COMMON] unsigned long 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  quotient        4    9[COMMON] unsigned long 
  1387 ;;  counter         1   13[COMMON] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  4    0[COMMON] unsigned long 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         8       0       0       0       0
  1398 ;;      Locals:         5       0       0       0       0
  1399 ;;      Temps:          1       0       0       0       0
  1400 ;;      Totals:        14       0       0       0       0
  1401 ;;Total ram usage:       14 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_I2C_Master_Init
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function ___lldiv
  1412  04BB                     ___lldiv:
  1413  04BB                     l1100:	
  1414                           ;incstack = 0
  1415                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1416                           
  1417  04BB  3000               	movlw	0
  1418  04BC  00FC               	movwf	___lldiv@quotient+3
  1419  04BD  3000               	movlw	0
  1420  04BE  00FB               	movwf	___lldiv@quotient+2
  1421  04BF  3000               	movlw	0
  1422  04C0  00FA               	movwf	___lldiv@quotient+1
  1423  04C1  3000               	movlw	0
  1424  04C2  00F9               	movwf	___lldiv@quotient
  1425  04C3  0873               	movf	___lldiv@divisor+3,w
  1426  04C4  0472               	iorwf	___lldiv@divisor+2,w
  1427  04C5  0471               	iorwf	___lldiv@divisor+1,w
  1428  04C6  0470               	iorwf	___lldiv@divisor,w
  1429  04C7  1903               	skipnz
  1430  04C8  2CCA               	goto	u351
  1431  04C9  2CCB               	goto	u350
  1432  04CA                     u351:
  1433  04CA  2D18               	goto	l1120
  1434  04CB                     u350:
  1435  04CB                     l1102:
  1436  04CB  01FD               	clrf	___lldiv@counter
  1437  04CC  0AFD               	incf	___lldiv@counter,f
  1438  04CD  2CDB               	goto	l1106
  1439  04CE                     l1104:
  1440  04CE  3001               	movlw	1
  1441  04CF  00F8               	movwf	??___lldiv
  1442  04D0                     u365:
  1443  04D0  1003               	clrc
  1444  04D1  0DF0               	rlf	___lldiv@divisor,f
  1445  04D2  0DF1               	rlf	___lldiv@divisor+1,f
  1446  04D3  0DF2               	rlf	___lldiv@divisor+2,f
  1447  04D4  0DF3               	rlf	___lldiv@divisor+3,f
  1448  04D5  0BF8               	decfsz	??___lldiv,f
  1449  04D6  2CD0               	goto	u365
  1450  04D7  3001               	movlw	1
  1451  04D8  00F8               	movwf	??___lldiv
  1452  04D9  0878               	movf	??___lldiv,w
  1453  04DA  07FD               	addwf	___lldiv@counter,f
  1454  04DB                     l1106:
  1455  04DB  1FF3               	btfss	___lldiv@divisor+3,7
  1456  04DC  2CDE               	goto	u371
  1457  04DD  2CDF               	goto	u370
  1458  04DE                     u371:
  1459  04DE  2CCE               	goto	l1104
  1460  04DF                     u370:
  1461  04DF                     l1108:
  1462  04DF  3001               	movlw	1
  1463  04E0  00F8               	movwf	??___lldiv
  1464  04E1                     u385:
  1465  04E1  1003               	clrc
  1466  04E2  0DF9               	rlf	___lldiv@quotient,f
  1467  04E3  0DFA               	rlf	___lldiv@quotient+1,f
  1468  04E4  0DFB               	rlf	___lldiv@quotient+2,f
  1469  04E5  0DFC               	rlf	___lldiv@quotient+3,f
  1470  04E6  0BF8               	decfsz	??___lldiv,f
  1471  04E7  2CE1               	goto	u385
  1472  04E8                     l1110:
  1473  04E8  0873               	movf	___lldiv@divisor+3,w
  1474  04E9  0277               	subwf	___lldiv@dividend+3,w
  1475  04EA  1D03               	skipz
  1476  04EB  2CF6               	goto	u395
  1477  04EC  0872               	movf	___lldiv@divisor+2,w
  1478  04ED  0276               	subwf	___lldiv@dividend+2,w
  1479  04EE  1D03               	skipz
  1480  04EF  2CF6               	goto	u395
  1481  04F0  0871               	movf	___lldiv@divisor+1,w
  1482  04F1  0275               	subwf	___lldiv@dividend+1,w
  1483  04F2  1D03               	skipz
  1484  04F3  2CF6               	goto	u395
  1485  04F4  0870               	movf	___lldiv@divisor,w
  1486  04F5  0274               	subwf	___lldiv@dividend,w
  1487  04F6                     u395:
  1488  04F6  1C03               	skipc
  1489  04F7  2CF9               	goto	u391
  1490  04F8  2CFA               	goto	u390
  1491  04F9                     u391:
  1492  04F9  2D09               	goto	l1116
  1493  04FA                     u390:
  1494  04FA                     l1112:
  1495  04FA  0870               	movf	___lldiv@divisor,w
  1496  04FB  02F4               	subwf	___lldiv@dividend,f
  1497  04FC  0871               	movf	___lldiv@divisor+1,w
  1498  04FD  1C03               	skipc
  1499  04FE  0F71               	incfsz	___lldiv@divisor+1,w
  1500  04FF  02F5               	subwf	___lldiv@dividend+1,f
  1501  0500  0872               	movf	___lldiv@divisor+2,w
  1502  0501  1C03               	skipc
  1503  0502  0F72               	incfsz	___lldiv@divisor+2,w
  1504  0503  02F6               	subwf	___lldiv@dividend+2,f
  1505  0504  0873               	movf	___lldiv@divisor+3,w
  1506  0505  1C03               	skipc
  1507  0506  0F73               	incfsz	___lldiv@divisor+3,w
  1508  0507  02F7               	subwf	___lldiv@dividend+3,f
  1509  0508                     l1114:
  1510  0508  1479               	bsf	___lldiv@quotient,0
  1511  0509                     l1116:
  1512  0509  3001               	movlw	1
  1513  050A                     u405:
  1514  050A  1003               	clrc
  1515  050B  0CF3               	rrf	___lldiv@divisor+3,f
  1516  050C  0CF2               	rrf	___lldiv@divisor+2,f
  1517  050D  0CF1               	rrf	___lldiv@divisor+1,f
  1518  050E  0CF0               	rrf	___lldiv@divisor,f
  1519  050F  3EFF               	addlw	-1
  1520  0510  1D03               	skipz
  1521  0511  2D0A               	goto	u405
  1522  0512                     l1118:
  1523  0512  3001               	movlw	1
  1524  0513  02FD               	subwf	___lldiv@counter,f
  1525  0514  1D03               	btfss	3,2
  1526  0515  2D17               	goto	u411
  1527  0516  2D18               	goto	u410
  1528  0517                     u411:
  1529  0517  2CDF               	goto	l1108
  1530  0518                     u410:
  1531  0518                     l1120:
  1532  0518  087C               	movf	___lldiv@quotient+3,w
  1533  0519  00F3               	movwf	?___lldiv+3
  1534  051A  087B               	movf	___lldiv@quotient+2,w
  1535  051B  00F2               	movwf	?___lldiv+2
  1536  051C  087A               	movf	___lldiv@quotient+1,w
  1537  051D  00F1               	movwf	?___lldiv+1
  1538  051E  0879               	movf	___lldiv@quotient,w
  1539  051F  00F0               	movwf	?___lldiv
  1540  0520                     l326:
  1541  0520  0008               	return
  1542  0521                     __end_of___lldiv:
  1543                           
  1544                           	psect	text4
  1545  02DB                     __ptext4:	
  1546 ;; *************** function _USART_STRING *****************
  1547 ;; Defined at:
  1548 ;;		line 17 in file "USART.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  a               1    wreg     PTR unsigned char 
  1551 ;;		 -> calendar(14), time(14), 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  a               1    3[COMMON] PTR unsigned char 
  1554 ;;		 -> calendar(14), time(14), 
  1555 ;;  i               1    2[COMMON] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         2       0       0       0       0
  1567 ;;      Temps:          1       0       0       0       0
  1568 ;;      Totals:         3       0       0       0       0
  1569 ;;Total ram usage:        3 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    1
  1572 ;; This function calls:
  1573 ;;		_USART_ESCRITURA
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _USART_STRING
  1581  02DB                     _USART_STRING:
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _USART_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1585                           ;USART_STRING@a stored from wreg
  1586  02DB  00F3               	movwf	USART_STRING@a
  1587  02DC                     l1306:
  1588                           
  1589                           ;USART.c: 18:     uint8_t i;;USART.c: 19:     for(i=0;a[i]!='\0';i++){
  1590  02DC  01F2               	clrf	USART_STRING@i
  1591  02DD  2AED               	goto	l1312
  1592  02DE                     l1308:
  1593                           
  1594                           ;USART.c: 20:         USART_ESCRITURA(a[i]);
  1595  02DE  0872               	movf	USART_STRING@i,w
  1596  02DF  0773               	addwf	USART_STRING@a,w
  1597  02E0  00F1               	movwf	??_USART_STRING
  1598  02E1  0871               	movf	??_USART_STRING,w
  1599  02E2  0084               	movwf	4
  1600  02E3  0800               	movf	0,w
  1601  02E4  120A  118A  2256  120A  118A  	fcall	_USART_ESCRITURA
  1602  02E9                     l1310:
  1603                           
  1604                           ;USART.c: 21:     }
  1605  02E9  3001               	movlw	1
  1606  02EA  00F1               	movwf	??_USART_STRING
  1607  02EB  0871               	movf	??_USART_STRING,w
  1608  02EC  07F2               	addwf	USART_STRING@i,f
  1609  02ED                     l1312:
  1610  02ED  0872               	movf	USART_STRING@i,w
  1611  02EE  0773               	addwf	USART_STRING@a,w
  1612  02EF  00F1               	movwf	??_USART_STRING
  1613  02F0  0871               	movf	??_USART_STRING,w
  1614  02F1  0084               	movwf	4
  1615  02F2  1383               	bcf	3,7	;select IRP bank0
  1616  02F3  0800               	movf	0,w
  1617  02F4  1D03               	btfss	3,2
  1618  02F5  2AF7               	goto	u671
  1619  02F6  2AF8               	goto	u670
  1620  02F7                     u671:
  1621  02F7  2ADE               	goto	l1308
  1622  02F8                     u670:
  1623  02F8                     l114:
  1624  02F8  0008               	return
  1625  02F9                     __end_of_USART_STRING:
  1626                           
  1627                           	psect	text5
  1628  0256                     __ptext5:	
  1629 ;; *************** function _USART_ESCRITURA *****************
  1630 ;; Defined at:
  1631 ;;		line 13 in file "USART.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  a               1    wreg     unsigned char 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  a               1    0[COMMON] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       0       0       0
  1646 ;;      Locals:         1       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0
  1648 ;;      Totals:         1       0       0       0       0
  1649 ;;Total ram usage:        1 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;;		_USART_STRING
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _USART_ESCRITURA
  1661  0256                     _USART_ESCRITURA:
  1662                           
  1663                           ;incstack = 0
  1664                           ; Regs used in _USART_ESCRITURA: [wreg]
  1665                           ;USART_ESCRITURA@a stored from wreg
  1666  0256  00F0               	movwf	USART_ESCRITURA@a
  1667  0257                     l1124:
  1668  0257                     l105:	
  1669                           ;USART.c: 14:     while(!TRMT);
  1670                           
  1671  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1672  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1673  0259  1C98               	btfss	24,1	;volatile
  1674  025A  2A5C               	goto	u421
  1675  025B  2A5D               	goto	u420
  1676  025C                     u421:
  1677  025C  2A57               	goto	l105
  1678  025D                     u420:
  1679  025D                     l1126:
  1680                           
  1681                           ;USART.c: 15:     TXREG = a;
  1682  025D  0870               	movf	USART_ESCRITURA@a,w
  1683  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1684  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0260  0099               	movwf	25	;volatile
  1686  0261                     l108:
  1687  0261  0008               	return
  1688  0262                     __end_of_USART_ESCRITURA:
  1689                           
  1690                           	psect	text6
  1691  02F9                     __ptext6:	
  1692 ;; *************** function _Lcd_Write_String *****************
  1693 ;; Defined at:
  1694 ;;		line 94 in file "LCD.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  a               1    wreg     PTR unsigned char 
  1697 ;;		 -> calendar(14), time(14), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  a               1    6[COMMON] PTR unsigned char 
  1700 ;;		 -> calendar(14), time(14), 
  1701 ;;  i               2    4[COMMON] int 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         3       0       0       0       0
  1713 ;;      Temps:          1       0       0       0       0
  1714 ;;      Totals:         4       0       0       0       0
  1715 ;;Total ram usage:        4 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    2
  1718 ;; This function calls:
  1719 ;;		_Lcd_Write_Char
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _Lcd_Write_String
  1727  02F9                     _Lcd_Write_String:
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1731                           ;Lcd_Write_String@a stored from wreg
  1732  02F9  00F6               	movwf	Lcd_Write_String@a
  1733  02FA                     l1268:
  1734                           
  1735                           ;LCD.c: 94: void Lcd_Write_String(char *a);LCD.c: 95: {;LCD.c: 96:  int i;;LCD.c: 97:  f
      +                          or(i=0;a[i]!='\0';i++)
  1736  02FA  01F4               	clrf	Lcd_Write_String@i
  1737  02FB  01F5               	clrf	Lcd_Write_String@i+1
  1738  02FC  2B0E               	goto	l1274
  1739  02FD                     l1270:
  1740                           
  1741                           ;LCD.c: 98:     Lcd_Write_Char(a[i]);
  1742  02FD  0874               	movf	Lcd_Write_String@i,w
  1743  02FE  0776               	addwf	Lcd_Write_String@a,w
  1744  02FF  00F3               	movwf	??_Lcd_Write_String
  1745  0300  0873               	movf	??_Lcd_Write_String,w
  1746  0301  0084               	movwf	4
  1747  0302  0800               	movf	0,w
  1748  0303  120A  118A  228F  120A  118A  	fcall	_Lcd_Write_Char
  1749  0308                     l1272:
  1750  0308  3001               	movlw	1
  1751  0309  07F4               	addwf	Lcd_Write_String@i,f
  1752  030A  1803               	skipnc
  1753  030B  0AF5               	incf	Lcd_Write_String@i+1,f
  1754  030C  3000               	movlw	0
  1755  030D  07F5               	addwf	Lcd_Write_String@i+1,f
  1756  030E                     l1274:
  1757  030E  0874               	movf	Lcd_Write_String@i,w
  1758  030F  0776               	addwf	Lcd_Write_String@a,w
  1759  0310  00F3               	movwf	??_Lcd_Write_String
  1760  0311  0873               	movf	??_Lcd_Write_String,w
  1761  0312  0084               	movwf	4
  1762  0313  1383               	bcf	3,7	;select IRP bank0
  1763  0314  0800               	movf	0,w
  1764  0315  1D03               	btfss	3,2
  1765  0316  2B18               	goto	u651
  1766  0317  2B19               	goto	u650
  1767  0318                     u651:
  1768  0318  2AFD               	goto	l1270
  1769  0319                     u650:
  1770  0319                     l149:
  1771  0319  0008               	return
  1772  031A                     __end_of_Lcd_Write_String:
  1773                           
  1774                           	psect	text7
  1775  028F                     __ptext7:	
  1776 ;; *************** function _Lcd_Write_Char *****************
  1777 ;; Defined at:
  1778 ;;		line 77 in file "LCD.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  a               1    wreg     unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  a               1    2[COMMON] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         1       0       0       0       0
  1794 ;;      Temps:          1       0       0       0       0
  1795 ;;      Totals:         2       0       0       0       0
  1796 ;;Total ram usage:        2 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    1
  1799 ;; This function calls:
  1800 ;;		_Lcd_Port
  1801 ;; This function is called by:
  1802 ;;		_Lcd_Write_String
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _Lcd_Write_Char
  1808  028F                     _Lcd_Write_Char:
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1812                           ;Lcd_Write_Char@a stored from wreg
  1813  028F  00F2               	movwf	Lcd_Write_Char@a
  1814  0290                     l1150:
  1815                           
  1816                           ;LCD.c: 77: void Lcd_Write_Char(char a);LCD.c: 78: {;LCD.c: 83:    RE0 = 1;
  1817  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0292  1409               	bsf	9,0	;volatile
  1820  0293                     l1152:
  1821                           
  1822                           ;LCD.c: 88:    Lcd_Port(a);
  1823  0293  0872               	movf	Lcd_Write_Char@a,w
  1824  0294  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  1825  0299                     l1154:
  1826                           
  1827                           ;LCD.c: 89:    RE1 = 1;
  1828  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1829  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1830  029B  1489               	bsf	9,1	;volatile
  1831  029C                     l1156:
  1832                           
  1833                           ;LCD.c: 90:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1834  029C  301A               	movlw	26
  1835  029D  00F1               	movwf	??_Lcd_Write_Char
  1836  029E                     u697:
  1837  029E  0BF1               	decfsz	??_Lcd_Write_Char,f
  1838  029F  2A9E               	goto	u697
  1839  02A0  0000               	nop
  1840  02A1                     l1158:
  1841                           
  1842                           ;LCD.c: 91:    RE1 = 0;
  1843  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1844  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1845  02A3  1089               	bcf	9,1	;volatile
  1846  02A4                     l143:
  1847  02A4  0008               	return
  1848  02A5                     __end_of_Lcd_Write_Char:
  1849                           
  1850                           	psect	text8
  1851  031A                     __ptext8:	
  1852 ;; *************** function _Lcd_Set_Cursor *****************
  1853 ;; Defined at:
  1854 ;;		line 37 in file "LCD.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  a               1    wreg     unsigned char 
  1857 ;;  b               1    4[COMMON] unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  a               1    6[COMMON] unsigned char 
  1860 ;;  temp            1    7[COMMON] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0, pclath, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1870 ;;      Params:         1       0       0       0       0
  1871 ;;      Locals:         2       0       0       0       0
  1872 ;;      Temps:          1       0       0       0       0
  1873 ;;      Totals:         4       0       0       0       0
  1874 ;;Total ram usage:        4 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    2
  1877 ;; This function calls:
  1878 ;;		_Lcd_Cmd
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _Lcd_Set_Cursor
  1886  031A                     _Lcd_Set_Cursor:
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1890                           ;Lcd_Set_Cursor@a stored from wreg
  1891  031A  00F6               	movwf	Lcd_Set_Cursor@a
  1892  031B                     l1256:
  1893                           
  1894                           ;LCD.c: 37: void Lcd_Set_Cursor(char a, char b);LCD.c: 38: {;LCD.c: 39:  char temp;;LCD.
      +                          c: 40:  if(a == 1)
  1895  031B  0376               	decf	Lcd_Set_Cursor@a,w
  1896  031C  1D03               	btfss	3,2
  1897  031D  2B1F               	goto	u631
  1898  031E  2B20               	goto	u630
  1899  031F                     u631:
  1900  031F  2B2C               	goto	l1262
  1901  0320                     u630:
  1902  0320                     l1258:
  1903                           
  1904                           ;LCD.c: 41:  {;LCD.c: 42:    temp = 0x80 + b - 1;
  1905  0320  0874               	movf	Lcd_Set_Cursor@b,w
  1906  0321  3E7F               	addlw	127
  1907  0322  00F5               	movwf	??_Lcd_Set_Cursor
  1908  0323  0875               	movf	??_Lcd_Set_Cursor,w
  1909  0324  00F7               	movwf	Lcd_Set_Cursor@temp
  1910  0325                     l1260:
  1911                           
  1912                           ;LCD.c: 46:   Lcd_Cmd(temp);
  1913  0325  0877               	movf	Lcd_Set_Cursor@temp,w
  1914  0326  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  1915                           
  1916                           ;LCD.c: 47:  }
  1917  032B  2B3D               	goto	l137
  1918  032C                     l1262:
  1919  032C  3002               	movlw	2
  1920  032D  0676               	xorwf	Lcd_Set_Cursor@a,w
  1921  032E  1D03               	btfss	3,2
  1922  032F  2B31               	goto	u641
  1923  0330  2B32               	goto	u640
  1924  0331                     u641:
  1925  0331  2B3D               	goto	l137
  1926  0332                     u640:
  1927  0332                     l1264:
  1928                           
  1929                           ;LCD.c: 49:  {;LCD.c: 50:   temp = 0xC0 + b - 1;
  1930  0332  0874               	movf	Lcd_Set_Cursor@b,w
  1931  0333  3EBF               	addlw	191
  1932  0334  00F5               	movwf	??_Lcd_Set_Cursor
  1933  0335  0875               	movf	??_Lcd_Set_Cursor,w
  1934  0336  00F7               	movwf	Lcd_Set_Cursor@temp
  1935  0337                     l1266:
  1936                           
  1937                           ;LCD.c: 54:   Lcd_Cmd(temp);
  1938  0337  0877               	movf	Lcd_Set_Cursor@temp,w
  1939  0338  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  1940  033D                     l137:
  1941  033D  0008               	return
  1942  033E                     __end_of_Lcd_Set_Cursor:
  1943                           
  1944                           	psect	text9
  1945  0470                     __ptext9:	
  1946 ;; *************** function _Lcd_Init *****************
  1947 ;; Defined at:
  1948 ;;		line 58 in file "LCD.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0
  1964 ;;      Temps:          2       0       0       0       0
  1965 ;;      Totals:         2       0       0       0       0
  1966 ;;Total ram usage:        2 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    2
  1969 ;; This function calls:
  1970 ;;		_Lcd_Cmd
  1971 ;;		_Lcd_Port
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _Lcd_Init
  1979  0470                     _Lcd_Init:
  1980  0470                     l1244:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1983                           
  1984                           
  1985                           ;LCD.c: 60:   Lcd_Port(0x00);
  1986  0470  3000               	movlw	0
  1987  0471  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  1988  0476                     l1246:
  1989                           
  1990                           ;LCD.c: 61:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1991  0476  3034               	movlw	52
  1992  0477  00F5               	movwf	??_Lcd_Init+1
  1993  0478  30F1               	movlw	241
  1994  0479  00F4               	movwf	??_Lcd_Init
  1995  047A                     u707:
  1996  047A  0BF4               	decfsz	??_Lcd_Init,f
  1997  047B  2C7A               	goto	u707
  1998  047C  0BF5               	decfsz	??_Lcd_Init+1,f
  1999  047D  2C7A               	goto	u707
  2000  047E  2C7F               	nop2
  2001  047F                     l1248:
  2002                           
  2003                           ;LCD.c: 62:   Lcd_Cmd(0x30);
  2004  047F  3030               	movlw	48
  2005  0480  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2006                           
  2007                           ;LCD.c: 63:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2008  0485  300D               	movlw	13
  2009  0486  00F5               	movwf	??_Lcd_Init+1
  2010  0487  30FB               	movlw	251
  2011  0488  00F4               	movwf	??_Lcd_Init
  2012  0489                     u717:
  2013  0489  0BF4               	decfsz	??_Lcd_Init,f
  2014  048A  2C89               	goto	u717
  2015  048B  0BF5               	decfsz	??_Lcd_Init+1,f
  2016  048C  2C89               	goto	u717
  2017  048D  2C8E               	nop2
  2018  048E                     l1250:
  2019                           
  2020                           ;LCD.c: 64:   Lcd_Cmd(0x30);
  2021  048E  3030               	movlw	48
  2022  048F  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2023  0494                     l1252:
  2024                           
  2025                           ;LCD.c: 65:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2026  0494  301D               	movlw	29
  2027  0495  00F5               	movwf	??_Lcd_Init+1
  2028  0496  3091               	movlw	145
  2029  0497  00F4               	movwf	??_Lcd_Init
  2030  0498                     u727:
  2031  0498  0BF4               	decfsz	??_Lcd_Init,f
  2032  0499  2C98               	goto	u727
  2033  049A  0BF5               	decfsz	??_Lcd_Init+1,f
  2034  049B  2C98               	goto	u727
  2035                           
  2036                           ;LCD.c: 66:   Lcd_Cmd(0x30);
  2037  049C  3030               	movlw	48
  2038  049D  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2039                           
  2040                           ;LCD.c: 68:   Lcd_Cmd(0x38);
  2041  04A2  3038               	movlw	56
  2042  04A3  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2043                           
  2044                           ;LCD.c: 69:   Lcd_Cmd(0x0C);
  2045  04A8  300C               	movlw	12
  2046  04A9  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2047                           
  2048                           ;LCD.c: 70:   Lcd_Cmd(0x01);
  2049  04AE  3001               	movlw	1
  2050  04AF  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2051                           
  2052                           ;LCD.c: 71:   Lcd_Cmd(0x06);
  2053  04B4  3006               	movlw	6
  2054  04B5  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2055  04BA                     l140:
  2056  04BA  0008               	return
  2057  04BB                     __end_of_Lcd_Init:
  2058                           
  2059                           	psect	text10
  2060  026F                     __ptext10:	
  2061 ;; *************** function _Lcd_Clear *****************
  2062 ;; Defined at:
  2063 ;;		line 31 in file "LCD.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    2
  2084 ;; This function calls:
  2085 ;;		_Lcd_Cmd
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _Lcd_Clear
  2093  026F                     _Lcd_Clear:
  2094  026F                     l1254:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2097                           
  2098                           
  2099                           ;LCD.c: 33:  Lcd_Cmd(0);
  2100  026F  3000               	movlw	0
  2101  0270  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2102                           
  2103                           ;LCD.c: 34:  Lcd_Cmd(1);
  2104  0275  3001               	movlw	1
  2105  0276  120A  118A  22A5  120A  118A  	fcall	_Lcd_Cmd
  2106  027B                     l131:
  2107  027B  0008               	return
  2108  027C                     __end_of_Lcd_Clear:
  2109                           
  2110                           	psect	text11
  2111  02A5                     __ptext11:	
  2112 ;; *************** function _Lcd_Cmd *****************
  2113 ;; Defined at:
  2114 ;;		line 22 in file "LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  a               1    wreg     unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  a               1    3[COMMON] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         1       0       0       0       0
  2130 ;;      Temps:          2       0       0       0       0
  2131 ;;      Totals:         3       0       0       0       0
  2132 ;;Total ram usage:        3 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    1
  2135 ;; This function calls:
  2136 ;;		_Lcd_Port
  2137 ;; This function is called by:
  2138 ;;		_Lcd_Clear
  2139 ;;		_Lcd_Set_Cursor
  2140 ;;		_Lcd_Init
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _Lcd_Cmd
  2146  02A5                     _Lcd_Cmd:
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2150                           ;Lcd_Cmd@a stored from wreg
  2151  02A5  00F3               	movwf	Lcd_Cmd@a
  2152  02A6                     l1140:
  2153                           
  2154                           ;LCD.c: 22: void Lcd_Cmd(char a);LCD.c: 23: {;LCD.c: 24:  RE0 = 0;
  2155  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2156  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2157  02A8  1009               	bcf	9,0	;volatile
  2158  02A9                     l1142:
  2159                           
  2160                           ;LCD.c: 25:  Lcd_Port(a);
  2161  02A9  0873               	movf	Lcd_Cmd@a,w
  2162  02AA  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  2163  02AF                     l1144:
  2164                           
  2165                           ;LCD.c: 26:  RE1 = 1;
  2166  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2167  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2168  02B1  1489               	bsf	9,1	;volatile
  2169  02B2                     l1146:
  2170                           
  2171                           ;LCD.c: 27:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2172  02B2  300B               	movlw	11
  2173  02B3  00F2               	movwf	??_Lcd_Cmd+1
  2174  02B4  3062               	movlw	98
  2175  02B5  00F1               	movwf	??_Lcd_Cmd
  2176  02B6                     u737:
  2177  02B6  0BF1               	decfsz	??_Lcd_Cmd,f
  2178  02B7  2AB6               	goto	u737
  2179  02B8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2180  02B9  2AB6               	goto	u737
  2181  02BA  0000               	nop
  2182  02BB                     l1148:
  2183                           
  2184                           ;LCD.c: 28:         RE1 = 0;
  2185  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2186  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2187  02BD  1089               	bcf	9,1	;volatile
  2188  02BE                     l128:
  2189  02BE  0008               	return
  2190  02BF                     __end_of_Lcd_Cmd:
  2191                           
  2192                           	psect	text12
  2193  0234                     __ptext12:	
  2194 ;; *************** function _Lcd_Port *****************
  2195 ;; Defined at:
  2196 ;;		line 17 in file "LCD.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  a               1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  a               1    0[COMMON] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         1       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         1       0       0       0       0
  2214 ;;Total ram usage:        1 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_Lcd_Cmd
  2220 ;;		_Lcd_Init
  2221 ;;		_Lcd_Write_Char
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _Lcd_Port
  2227  0234                     _Lcd_Port:
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _Lcd_Port: [wreg]
  2231                           ;Lcd_Port@a stored from wreg
  2232  0234  00F0               	movwf	Lcd_Port@a
  2233  0235                     l1098:
  2234                           
  2235                           ;LCD.c: 17: void Lcd_Port(char a);LCD.c: 18: {;LCD.c: 19:     PORTD = a;
  2236  0235  0870               	movf	Lcd_Port@a,w
  2237  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0238  0088               	movwf	8	;volatile
  2240  0239                     l125:
  2241  0239  0008               	return
  2242  023A                     __end_of_Lcd_Port:
  2243                           
  2244                           	psect	text13
  2245  024C                     __ptext13:	
  2246 ;; *************** function _I2C_Master_Write *****************
  2247 ;; Defined at:
  2248 ;;		line 65 in file "I2C.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  d               2    0[COMMON] unsigned int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         2       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0
  2265 ;;      Totals:         2       0       0       0       0
  2266 ;;Total ram usage:        2 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		_I2C_Master_Wait
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _I2C_Master_Write
  2278  024C                     _I2C_Master_Write:
  2279  024C                     l1280:	
  2280                           ;incstack = 0
  2281                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2282                           
  2283                           
  2284                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2285  024C  120A  118A  2262  120A  118A  	fcall	_I2C_Master_Wait
  2286  0251                     l1282:
  2287                           
  2288                           ;I2C.c: 68:     SSPBUF = d;
  2289  0251  0870               	movf	I2C_Master_Write@d,w
  2290  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0254  0093               	movwf	19	;volatile
  2293  0255                     l196:
  2294  0255  0008               	return
  2295  0256                     __end_of_I2C_Master_Write:
  2296                           
  2297                           	psect	text14
  2298  0243                     __ptext14:	
  2299 ;; *************** function _I2C_Master_Stop *****************
  2300 ;; Defined at:
  2301 ;;		line 55 in file "I2C.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		_I2C_Master_Wait
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _I2C_Master_Stop
  2331  0243                     _I2C_Master_Stop:
  2332  0243                     l1300:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2335                           
  2336                           
  2337                           ;I2C.c: 57:     I2C_Master_Wait();
  2338  0243  120A  118A  2262  120A  118A  	fcall	_I2C_Master_Wait
  2339  0248                     l1302:
  2340                           
  2341                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2342  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0249  1303               	bcf	3,6	;RP1=0, select bank1
  2344  024A  1511               	bsf	17,2	;volatile
  2345  024B                     l193:
  2346  024B  0008               	return
  2347  024C                     __end_of_I2C_Master_Stop:
  2348                           
  2349                           	psect	text15
  2350  023A                     __ptext15:	
  2351 ;; *************** function _I2C_Master_Start *****************
  2352 ;; Defined at:
  2353 ;;		line 39 in file "I2C.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    1
  2374 ;; This function calls:
  2375 ;;		_I2C_Master_Wait
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _I2C_Master_Start
  2383  023A                     _I2C_Master_Start:
  2384  023A                     l1276:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2387                           
  2388                           
  2389                           ;I2C.c: 41:     I2C_Master_Wait();
  2390  023A  120A  118A  2262  120A  118A  	fcall	_I2C_Master_Wait
  2391  023F                     l1278:
  2392                           
  2393                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2394  023F  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0240  1303               	bcf	3,6	;RP1=0, select bank1
  2396  0241  1411               	bsf	17,0	;volatile
  2397  0242                     l187:
  2398  0242  0008               	return
  2399  0243                     __end_of_I2C_Master_Start:
  2400                           
  2401                           	psect	text16
  2402  038C                     __ptext16:	
  2403 ;; *************** function _I2C_Master_Read *****************
  2404 ;; Defined at:
  2405 ;;		line 74 in file "I2C.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  a               2    0[COMMON] unsigned short 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  temp            2    4[COMMON] unsigned short 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  2    0[COMMON] unsigned short 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         2       0       0       0       0
  2420 ;;      Locals:         2       0       0       0       0
  2421 ;;      Temps:          2       0       0       0       0
  2422 ;;      Totals:         6       0       0       0       0
  2423 ;;Total ram usage:        6 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    1
  2426 ;; This function calls:
  2427 ;;		_I2C_Master_Wait
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _I2C_Master_Read
  2435  038C                     _I2C_Master_Read:
  2436  038C                     l1284:	
  2437                           ;incstack = 0
  2438                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2439                           
  2440                           
  2441                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2442  038C  120A  118A  2262  120A  118A  	fcall	_I2C_Master_Wait
  2443  0391                     l1286:
  2444                           
  2445                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2446  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0393  1591               	bsf	17,3	;volatile
  2449                           
  2450                           ;I2C.c: 79:     I2C_Master_Wait();
  2451  0394  120A  118A  2262  120A  118A  	fcall	_I2C_Master_Wait
  2452  0399                     l1288:
  2453                           
  2454                           ;I2C.c: 80:     temp = SSPBUF;
  2455  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2456  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2457  039B  0813               	movf	19,w	;volatile
  2458  039C  00F2               	movwf	??_I2C_Master_Read
  2459  039D  01F3               	clrf	??_I2C_Master_Read+1
  2460  039E  0872               	movf	??_I2C_Master_Read,w
  2461  039F  00F4               	movwf	I2C_Master_Read@temp
  2462  03A0  0873               	movf	??_I2C_Master_Read+1,w
  2463  03A1  00F5               	movwf	I2C_Master_Read@temp+1
  2464  03A2                     l1290:
  2465                           
  2466                           ;I2C.c: 81:     I2C_Master_Wait();
  2467  03A2  120A  118A  2262  120A  118A  	fcall	_I2C_Master_Wait
  2468  03A7                     l1292:
  2469                           
  2470                           ;I2C.c: 82:     if(a == 1){
  2471  03A7  0370               	decf	I2C_Master_Read@a,w
  2472  03A8  0471               	iorwf	I2C_Master_Read@a+1,w
  2473  03A9  1D03               	btfss	3,2
  2474  03AA  2BAC               	goto	u661
  2475  03AB  2BAD               	goto	u660
  2476  03AC                     u661:
  2477  03AC  2BB1               	goto	l199
  2478  03AD                     u660:
  2479  03AD                     l1294:
  2480                           
  2481                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2482  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2483  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2484  03AF  1291               	bcf	17,5	;volatile
  2485                           
  2486                           ;I2C.c: 84:     }else{
  2487  03B0  2BB4               	goto	l200
  2488  03B1                     l199:
  2489                           
  2490                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2491  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2492  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2493  03B3  1691               	bsf	17,5	;volatile
  2494  03B4                     l200:	
  2495                           ;I2C.c: 86:     }
  2496                           
  2497                           
  2498                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2499  03B4  1611               	bsf	17,4	;volatile
  2500  03B5                     l1296:
  2501                           
  2502                           ;I2C.c: 88:     return temp;
  2503  03B5  0875               	movf	I2C_Master_Read@temp+1,w
  2504  03B6  00F1               	movwf	?_I2C_Master_Read+1
  2505  03B7  0874               	movf	I2C_Master_Read@temp,w
  2506  03B8  00F0               	movwf	?_I2C_Master_Read
  2507  03B9                     l201:
  2508  03B9  0008               	return
  2509  03BA                     __end_of_I2C_Master_Read:
  2510                           
  2511                           	psect	text17
  2512  0262                     __ptext17:	
  2513 ;; *************** function _I2C_Master_Wait *****************
  2514 ;; Defined at:
  2515 ;;		line 32 in file "I2C.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2529 ;;      Params:         0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0
  2532 ;;      Totals:         0       0       0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_I2C_Master_Start
  2539 ;;		_I2C_Master_Stop
  2540 ;;		_I2C_Master_Write
  2541 ;;		_I2C_Master_Read
  2542 ;;		_I2C_Master_RepeatedStart
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function _I2C_Master_Wait
  2548  0262                     _I2C_Master_Wait:
  2549  0262                     l1160:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2552                           
  2553  0262                     l181:	
  2554                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2555                           
  2556  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2557  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2558  0264  1914               	btfsc	20,2	;volatile
  2559  0265  2A67               	goto	u441
  2560  0266  2A68               	goto	u440
  2561  0267                     u441:
  2562  0267  2A62               	goto	l181
  2563  0268                     u440:
  2564  0268                     l1162:
  2565  0268  0811               	movf	17,w	;volatile
  2566  0269  391F               	andlw	31
  2567  026A  1D03               	btfss	3,2
  2568  026B  2A6D               	goto	u451
  2569  026C  2A6E               	goto	u450
  2570  026D                     u451:
  2571  026D  2A62               	goto	l181
  2572  026E                     u450:
  2573  026E                     l184:
  2574  026E  0008               	return
  2575  026F                     __end_of_I2C_Master_Wait:
  2576                           
  2577                           	psect	text18
  2578  0621                     __ptext18:	
  2579 ;; *************** function _DS3231 *****************
  2580 ;; Defined at:
  2581 ;;		line 160 in file "main.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0
  2597 ;;      Temps:          2       0       0       0       0
  2598 ;;      Totals:         2       0       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    1
  2602 ;; This function calls:
  2603 ;;		___lwdiv
  2604 ;;		___lwmod
  2605 ;;		___wmul
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _DS3231
  2613  0621                     _DS3231:
  2614  0621                     l1304:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _DS3231: [wreg+status,2+status,0+pclath+cstack]
  2617                           
  2618                           
  2619                           ;main.c: 162:     second = (second >> 4) * 10 + (second & 0x0F);
  2620  0621  300F               	movlw	15
  2621  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0624  0546               	andwf	_second,w
  2624  0625  00F8               	movwf	??_DS3231
  2625  0626  3000               	movlw	0
  2626  0627  0547               	andwf	_second+1,w
  2627  0628  00F9               	movwf	??_DS3231+1
  2628  0629  0E46               	swapf	_second,w
  2629  062A  390F               	andlw	15
  2630  062B  00F0               	movwf	___wmul@multiplier
  2631  062C  0E47               	swapf	_second+1,w
  2632  062D  39F0               	andlw	240
  2633  062E  04F0               	iorwf	___wmul@multiplier,f
  2634  062F  0E47               	swapf	_second+1,w
  2635  0630  390F               	andlw	15
  2636  0631  00F1               	movwf	___wmul@multiplier+1
  2637  0632  300A               	movlw	10
  2638  0633  00F2               	movwf	___wmul@multiplicand
  2639  0634  3000               	movlw	0
  2640  0635  00F3               	movwf	___wmul@multiplicand+1
  2641  0636  120A  118A  233E  120A  118A  	fcall	___wmul
  2642  063B  0878               	movf	??_DS3231,w
  2643  063C  0770               	addwf	?___wmul,w
  2644  063D  1283               	bcf	3,5	;RP0=0, select bank0
  2645  063E  1303               	bcf	3,6	;RP1=0, select bank0
  2646  063F  00C6               	movwf	_second
  2647  0640  0879               	movf	??_DS3231+1,w
  2648  0641  1803               	skipnc
  2649  0642  0A79               	incf	??_DS3231+1,w
  2650  0643  0771               	addwf	?___wmul+1,w
  2651  0644  00C7               	movwf	_second+1
  2652                           
  2653                           ;main.c: 163:     minute = (minute >> 4) * 10 + (minute & 0x0F);
  2654  0645  300F               	movlw	15
  2655  0646  0544               	andwf	_minute,w
  2656  0647  00F8               	movwf	??_DS3231
  2657  0648  3000               	movlw	0
  2658  0649  0545               	andwf	_minute+1,w
  2659  064A  00F9               	movwf	??_DS3231+1
  2660  064B  0E44               	swapf	_minute,w
  2661  064C  390F               	andlw	15
  2662  064D  00F0               	movwf	___wmul@multiplier
  2663  064E  0E45               	swapf	_minute+1,w
  2664  064F  39F0               	andlw	240
  2665  0650  04F0               	iorwf	___wmul@multiplier,f
  2666  0651  0E45               	swapf	_minute+1,w
  2667  0652  390F               	andlw	15
  2668  0653  00F1               	movwf	___wmul@multiplier+1
  2669  0654  300A               	movlw	10
  2670  0655  00F2               	movwf	___wmul@multiplicand
  2671  0656  3000               	movlw	0
  2672  0657  00F3               	movwf	___wmul@multiplicand+1
  2673  0658  120A  118A  233E  120A  118A  	fcall	___wmul
  2674  065D  0878               	movf	??_DS3231,w
  2675  065E  0770               	addwf	?___wmul,w
  2676  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0661  00C4               	movwf	_minute
  2679  0662  0879               	movf	??_DS3231+1,w
  2680  0663  1803               	skipnc
  2681  0664  0A79               	incf	??_DS3231+1,w
  2682  0665  0771               	addwf	?___wmul+1,w
  2683  0666  00C5               	movwf	_minute+1
  2684                           
  2685                           ;main.c: 164:     hour = (hour >> 4) * 10 + (hour & 0x0F);
  2686  0667  300F               	movlw	15
  2687  0668  0542               	andwf	_hour,w
  2688  0669  00F8               	movwf	??_DS3231
  2689  066A  3000               	movlw	0
  2690  066B  0543               	andwf	_hour+1,w
  2691  066C  00F9               	movwf	??_DS3231+1
  2692  066D  0E42               	swapf	_hour,w
  2693  066E  390F               	andlw	15
  2694  066F  00F0               	movwf	___wmul@multiplier
  2695  0670  0E43               	swapf	_hour+1,w
  2696  0671  39F0               	andlw	240
  2697  0672  04F0               	iorwf	___wmul@multiplier,f
  2698  0673  0E43               	swapf	_hour+1,w
  2699  0674  390F               	andlw	15
  2700  0675  00F1               	movwf	___wmul@multiplier+1
  2701  0676  300A               	movlw	10
  2702  0677  00F2               	movwf	___wmul@multiplicand
  2703  0678  3000               	movlw	0
  2704  0679  00F3               	movwf	___wmul@multiplicand+1
  2705  067A  120A  118A  233E  120A  118A  	fcall	___wmul
  2706  067F  0878               	movf	??_DS3231,w
  2707  0680  0770               	addwf	?___wmul,w
  2708  0681  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0682  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0683  00C2               	movwf	_hour
  2711  0684  0879               	movf	??_DS3231+1,w
  2712  0685  1803               	skipnc
  2713  0686  0A79               	incf	??_DS3231+1,w
  2714  0687  0771               	addwf	?___wmul+1,w
  2715  0688  00C3               	movwf	_hour+1
  2716                           
  2717                           ;main.c: 165:     date = (date >> 4) * 10 + (date & 0x0F);
  2718  0689  300F               	movlw	15
  2719  068A  0540               	andwf	_date,w
  2720  068B  00F8               	movwf	??_DS3231
  2721  068C  3000               	movlw	0
  2722  068D  0541               	andwf	_date+1,w
  2723  068E  00F9               	movwf	??_DS3231+1
  2724  068F  0E40               	swapf	_date,w
  2725  0690  390F               	andlw	15
  2726  0691  00F0               	movwf	___wmul@multiplier
  2727  0692  0E41               	swapf	_date+1,w
  2728  0693  39F0               	andlw	240
  2729  0694  04F0               	iorwf	___wmul@multiplier,f
  2730  0695  0E41               	swapf	_date+1,w
  2731  0696  390F               	andlw	15
  2732  0697  00F1               	movwf	___wmul@multiplier+1
  2733  0698  300A               	movlw	10
  2734  0699  00F2               	movwf	___wmul@multiplicand
  2735  069A  3000               	movlw	0
  2736  069B  00F3               	movwf	___wmul@multiplicand+1
  2737  069C  120A  118A  233E  120A  118A  	fcall	___wmul
  2738  06A1  0878               	movf	??_DS3231,w
  2739  06A2  0770               	addwf	?___wmul,w
  2740  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2741  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2742  06A5  00C0               	movwf	_date
  2743  06A6  0879               	movf	??_DS3231+1,w
  2744  06A7  1803               	skipnc
  2745  06A8  0A79               	incf	??_DS3231+1,w
  2746  06A9  0771               	addwf	?___wmul+1,w
  2747  06AA  00C1               	movwf	_date+1
  2748                           
  2749                           ;main.c: 166:     month = (month >> 4) * 10 + (month & 0x0F);
  2750  06AB  300F               	movlw	15
  2751  06AC  053E               	andwf	_month,w
  2752  06AD  00F8               	movwf	??_DS3231
  2753  06AE  3000               	movlw	0
  2754  06AF  053F               	andwf	_month+1,w
  2755  06B0  00F9               	movwf	??_DS3231+1
  2756  06B1  0E3E               	swapf	_month,w
  2757  06B2  390F               	andlw	15
  2758  06B3  00F0               	movwf	___wmul@multiplier
  2759  06B4  0E3F               	swapf	_month+1,w
  2760  06B5  39F0               	andlw	240
  2761  06B6  04F0               	iorwf	___wmul@multiplier,f
  2762  06B7  0E3F               	swapf	_month+1,w
  2763  06B8  390F               	andlw	15
  2764  06B9  00F1               	movwf	___wmul@multiplier+1
  2765  06BA  300A               	movlw	10
  2766  06BB  00F2               	movwf	___wmul@multiplicand
  2767  06BC  3000               	movlw	0
  2768  06BD  00F3               	movwf	___wmul@multiplicand+1
  2769  06BE  120A  118A  233E  120A  118A  	fcall	___wmul
  2770  06C3  0878               	movf	??_DS3231,w
  2771  06C4  0770               	addwf	?___wmul,w
  2772  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2773  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2774  06C7  00BE               	movwf	_month
  2775  06C8  0879               	movf	??_DS3231+1,w
  2776  06C9  1803               	skipnc
  2777  06CA  0A79               	incf	??_DS3231+1,w
  2778  06CB  0771               	addwf	?___wmul+1,w
  2779  06CC  00BF               	movwf	_month+1
  2780                           
  2781                           ;main.c: 167:     year = (year >> 4) * 10 + (year & 0x0F);
  2782  06CD  300F               	movlw	15
  2783  06CE  053C               	andwf	_year,w
  2784  06CF  00F8               	movwf	??_DS3231
  2785  06D0  3000               	movlw	0
  2786  06D1  053D               	andwf	_year+1,w
  2787  06D2  00F9               	movwf	??_DS3231+1
  2788  06D3  0E3C               	swapf	_year,w
  2789  06D4  390F               	andlw	15
  2790  06D5  00F0               	movwf	___wmul@multiplier
  2791  06D6  0E3D               	swapf	_year+1,w
  2792  06D7  39F0               	andlw	240
  2793  06D8  04F0               	iorwf	___wmul@multiplier,f
  2794  06D9  0E3D               	swapf	_year+1,w
  2795  06DA  390F               	andlw	15
  2796  06DB  00F1               	movwf	___wmul@multiplier+1
  2797  06DC  300A               	movlw	10
  2798  06DD  00F2               	movwf	___wmul@multiplicand
  2799  06DE  3000               	movlw	0
  2800  06DF  00F3               	movwf	___wmul@multiplicand+1
  2801  06E0  120A  118A  233E  120A  118A  	fcall	___wmul
  2802  06E5  0878               	movf	??_DS3231,w
  2803  06E6  0770               	addwf	?___wmul,w
  2804  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2805  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2806  06E9  00BC               	movwf	_year
  2807  06EA  0879               	movf	??_DS3231+1,w
  2808  06EB  1803               	skipnc
  2809  06EC  0A79               	incf	??_DS3231+1,w
  2810  06ED  0771               	addwf	?___wmul+1,w
  2811  06EE  00BD               	movwf	_year+1
  2812                           
  2813                           ;main.c: 172:     time[12] = second % 10 + 48;
  2814  06EF  300A               	movlw	10
  2815  06F0  00F0               	movwf	___lwmod@divisor
  2816  06F1  3000               	movlw	0
  2817  06F2  00F1               	movwf	___lwmod@divisor+1
  2818  06F3  0847               	movf	_second+1,w
  2819  06F4  00F3               	movwf	___lwmod@dividend+1
  2820  06F5  0846               	movf	_second,w
  2821  06F6  00F2               	movwf	___lwmod@dividend
  2822  06F7  120A  118A  23F2  120A  118A  	fcall	___lwmod
  2823  06FC  0870               	movf	?___lwmod,w
  2824  06FD  3E30               	addlw	48
  2825  06FE  00F8               	movwf	??_DS3231
  2826  06FF  0878               	movf	??_DS3231,w
  2827  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0702  00BA               	movwf	_time+12
  2830                           
  2831                           ;main.c: 173:     time[11] = second / 10 + 48;
  2832  0703  300A               	movlw	10
  2833  0704  00F0               	movwf	___lwdiv@divisor
  2834  0705  3000               	movlw	0
  2835  0706  00F1               	movwf	___lwdiv@divisor+1
  2836  0707  0847               	movf	_second+1,w
  2837  0708  00F3               	movwf	___lwdiv@dividend+1
  2838  0709  0846               	movf	_second,w
  2839  070A  00F2               	movwf	___lwdiv@dividend
  2840  070B  120A  118A  242C  120A  118A  	fcall	___lwdiv
  2841  0710  0870               	movf	?___lwdiv,w
  2842  0711  3E30               	addlw	48
  2843  0712  00F8               	movwf	??_DS3231
  2844  0713  0878               	movf	??_DS3231,w
  2845  0714  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0715  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0716  00B9               	movwf	_time+11
  2848                           
  2849                           ;main.c: 174:     time[9] = minute % 10 + 48;
  2850  0717  300A               	movlw	10
  2851  0718  00F0               	movwf	___lwmod@divisor
  2852  0719  3000               	movlw	0
  2853  071A  00F1               	movwf	___lwmod@divisor+1
  2854  071B  0845               	movf	_minute+1,w
  2855  071C  00F3               	movwf	___lwmod@dividend+1
  2856  071D  0844               	movf	_minute,w
  2857  071E  00F2               	movwf	___lwmod@dividend
  2858  071F  120A  118A  23F2  120A  118A  	fcall	___lwmod
  2859  0724  0870               	movf	?___lwmod,w
  2860  0725  3E30               	addlw	48
  2861  0726  00F8               	movwf	??_DS3231
  2862  0727  0878               	movf	??_DS3231,w
  2863  0728  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0729  1303               	bcf	3,6	;RP1=0, select bank0
  2865  072A  00B7               	movwf	_time+9
  2866                           
  2867                           ;main.c: 175:     time[8] = minute / 10 + 48;
  2868  072B  300A               	movlw	10
  2869  072C  00F0               	movwf	___lwdiv@divisor
  2870  072D  3000               	movlw	0
  2871  072E  00F1               	movwf	___lwdiv@divisor+1
  2872  072F  0845               	movf	_minute+1,w
  2873  0730  00F3               	movwf	___lwdiv@dividend+1
  2874  0731  0844               	movf	_minute,w
  2875  0732  00F2               	movwf	___lwdiv@dividend
  2876  0733  120A  118A  242C  120A  118A  	fcall	___lwdiv
  2877  0738  0870               	movf	?___lwdiv,w
  2878  0739  3E30               	addlw	48
  2879  073A  00F8               	movwf	??_DS3231
  2880  073B  0878               	movf	??_DS3231,w
  2881  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2882  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2883  073E  00B6               	movwf	_time+8
  2884                           
  2885                           ;main.c: 176:     time[6] = hour % 10 + 48;
  2886  073F  300A               	movlw	10
  2887  0740  00F0               	movwf	___lwmod@divisor
  2888  0741  3000               	movlw	0
  2889  0742  00F1               	movwf	___lwmod@divisor+1
  2890  0743  0843               	movf	_hour+1,w
  2891  0744  00F3               	movwf	___lwmod@dividend+1
  2892  0745  0842               	movf	_hour,w
  2893  0746  00F2               	movwf	___lwmod@dividend
  2894  0747  120A  118A  23F2  120A  118A  	fcall	___lwmod
  2895  074C  0870               	movf	?___lwmod,w
  2896  074D  3E30               	addlw	48
  2897  074E  00F8               	movwf	??_DS3231
  2898  074F  0878               	movf	??_DS3231,w
  2899  0750  1283               	bcf	3,5	;RP0=0, select bank0
  2900  0751  1303               	bcf	3,6	;RP1=0, select bank0
  2901  0752  00B4               	movwf	_time+6
  2902                           
  2903                           ;main.c: 177:     time[5] = hour / 10 + 48;
  2904  0753  300A               	movlw	10
  2905  0754  00F0               	movwf	___lwdiv@divisor
  2906  0755  3000               	movlw	0
  2907  0756  00F1               	movwf	___lwdiv@divisor+1
  2908  0757  0843               	movf	_hour+1,w
  2909  0758  00F3               	movwf	___lwdiv@dividend+1
  2910  0759  0842               	movf	_hour,w
  2911  075A  00F2               	movwf	___lwdiv@dividend
  2912  075B  120A  118A  242C  120A  118A  	fcall	___lwdiv
  2913  0760  0870               	movf	?___lwdiv,w
  2914  0761  3E30               	addlw	48
  2915  0762  00F8               	movwf	??_DS3231
  2916  0763  0878               	movf	??_DS3231,w
  2917  0764  1283               	bcf	3,5	;RP0=0, select bank0
  2918  0765  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0766  00B3               	movwf	_time+5
  2920                           
  2921                           ;main.c: 178:     calendar[12] = year % 10 + 48;
  2922  0767  300A               	movlw	10
  2923  0768  00F0               	movwf	___lwmod@divisor
  2924  0769  3000               	movlw	0
  2925  076A  00F1               	movwf	___lwmod@divisor+1
  2926  076B  083D               	movf	_year+1,w
  2927  076C  00F3               	movwf	___lwmod@dividend+1
  2928  076D  083C               	movf	_year,w
  2929  076E  00F2               	movwf	___lwmod@dividend
  2930  076F  120A  118A  23F2  120A  118A  	fcall	___lwmod
  2931  0774  0870               	movf	?___lwmod,w
  2932  0775  3E30               	addlw	48
  2933  0776  00F8               	movwf	??_DS3231
  2934  0777  0878               	movf	??_DS3231,w
  2935  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2937  077A  00AC               	movwf	_calendar+12
  2938                           
  2939                           ;main.c: 179:     calendar[11] = year / 10 + 48;
  2940  077B  300A               	movlw	10
  2941  077C  00F0               	movwf	___lwdiv@divisor
  2942  077D  3000               	movlw	0
  2943  077E  00F1               	movwf	___lwdiv@divisor+1
  2944  077F  083D               	movf	_year+1,w
  2945  0780  00F3               	movwf	___lwdiv@dividend+1
  2946  0781  083C               	movf	_year,w
  2947  0782  00F2               	movwf	___lwdiv@dividend
  2948  0783  120A  118A  242C  120A  118A  	fcall	___lwdiv
  2949  0788  0870               	movf	?___lwdiv,w
  2950  0789  3E30               	addlw	48
  2951  078A  00F8               	movwf	??_DS3231
  2952  078B  0878               	movf	??_DS3231,w
  2953  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2954  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2955  078E  00AB               	movwf	_calendar+11
  2956                           
  2957                           ;main.c: 180:     calendar[9] = month % 10 + 48;
  2958  078F  300A               	movlw	10
  2959  0790  00F0               	movwf	___lwmod@divisor
  2960  0791  3000               	movlw	0
  2961  0792  00F1               	movwf	___lwmod@divisor+1
  2962  0793  083F               	movf	_month+1,w
  2963  0794  00F3               	movwf	___lwmod@dividend+1
  2964  0795  083E               	movf	_month,w
  2965  0796  00F2               	movwf	___lwmod@dividend
  2966  0797  120A  118A  23F2  120A  118A  	fcall	___lwmod
  2967  079C  0870               	movf	?___lwmod,w
  2968  079D  3E30               	addlw	48
  2969  079E  00F8               	movwf	??_DS3231
  2970  079F  0878               	movf	??_DS3231,w
  2971  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  2972  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  2973  07A2  00A9               	movwf	_calendar+9
  2974                           
  2975                           ;main.c: 181:     calendar[8] = month / 10 + 48;
  2976  07A3  300A               	movlw	10
  2977  07A4  00F0               	movwf	___lwdiv@divisor
  2978  07A5  3000               	movlw	0
  2979  07A6  00F1               	movwf	___lwdiv@divisor+1
  2980  07A7  083F               	movf	_month+1,w
  2981  07A8  00F3               	movwf	___lwdiv@dividend+1
  2982  07A9  083E               	movf	_month,w
  2983  07AA  00F2               	movwf	___lwdiv@dividend
  2984  07AB  120A  118A  242C  120A  118A  	fcall	___lwdiv
  2985  07B0  0870               	movf	?___lwdiv,w
  2986  07B1  3E30               	addlw	48
  2987  07B2  00F8               	movwf	??_DS3231
  2988  07B3  0878               	movf	??_DS3231,w
  2989  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  2990  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  2991  07B6  00A8               	movwf	_calendar+8
  2992                           
  2993                           ;main.c: 182:     calendar[6] = date % 10 + 48;
  2994  07B7  300A               	movlw	10
  2995  07B8  00F0               	movwf	___lwmod@divisor
  2996  07B9  3000               	movlw	0
  2997  07BA  00F1               	movwf	___lwmod@divisor+1
  2998  07BB  0841               	movf	_date+1,w
  2999  07BC  00F3               	movwf	___lwmod@dividend+1
  3000  07BD  0840               	movf	_date,w
  3001  07BE  00F2               	movwf	___lwmod@dividend
  3002  07BF  120A  118A  23F2  120A  118A  	fcall	___lwmod
  3003  07C4  0870               	movf	?___lwmod,w
  3004  07C5  3E30               	addlw	48
  3005  07C6  00F8               	movwf	??_DS3231
  3006  07C7  0878               	movf	??_DS3231,w
  3007  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  3008  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  3009  07CA  00A6               	movwf	_calendar+6
  3010                           
  3011                           ;main.c: 183:     calendar[5] = date / 10 + 48;
  3012  07CB  300A               	movlw	10
  3013  07CC  00F0               	movwf	___lwdiv@divisor
  3014  07CD  3000               	movlw	0
  3015  07CE  00F1               	movwf	___lwdiv@divisor+1
  3016  07CF  0841               	movf	_date+1,w
  3017  07D0  00F3               	movwf	___lwdiv@dividend+1
  3018  07D1  0840               	movf	_date,w
  3019  07D2  00F2               	movwf	___lwdiv@dividend
  3020  07D3  120A  118A  242C  120A  118A  	fcall	___lwdiv
  3021  07D8  0870               	movf	?___lwdiv,w
  3022  07D9  3E30               	addlw	48
  3023  07DA  00F8               	movwf	??_DS3231
  3024  07DB  0878               	movf	??_DS3231,w
  3025  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3026  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3027  07DE  00A5               	movwf	_calendar+5
  3028  07DF                     l88:
  3029  07DF  0008               	return
  3030  07E0                     __end_of_DS3231:
  3031                           
  3032                           	psect	text19
  3033  033E                     __ptext19:	
  3034 ;; *************** function ___wmul *****************
  3035 ;; Defined at:
  3036 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  multiplier      2    0[COMMON] unsigned int 
  3039 ;;  multiplicand    2    2[COMMON] unsigned int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  product         2    4[COMMON] unsigned int 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  2    0[COMMON] unsigned int 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         4       0       0       0       0
  3052 ;;      Locals:         2       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0
  3054 ;;      Totals:         6       0       0       0       0
  3055 ;;Total ram usage:        6 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_DS3231
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function ___wmul
  3066  033E                     ___wmul:
  3067  033E                     l1164:	
  3068                           ;incstack = 0
  3069                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3070                           
  3071  033E  01F4               	clrf	___wmul@product
  3072  033F  01F5               	clrf	___wmul@product+1
  3073  0340                     l1166:
  3074  0340  1C70               	btfss	___wmul@multiplier,0
  3075  0341  2B43               	goto	u461
  3076  0342  2B44               	goto	u460
  3077  0343                     u461:
  3078  0343  2B4A               	goto	l290
  3079  0344                     u460:
  3080  0344                     l1168:
  3081  0344  0872               	movf	___wmul@multiplicand,w
  3082  0345  07F4               	addwf	___wmul@product,f
  3083  0346  1803               	skipnc
  3084  0347  0AF5               	incf	___wmul@product+1,f
  3085  0348  0873               	movf	___wmul@multiplicand+1,w
  3086  0349  07F5               	addwf	___wmul@product+1,f
  3087  034A                     l290:
  3088  034A  3001               	movlw	1
  3089  034B                     u475:
  3090  034B  1003               	clrc
  3091  034C  0DF2               	rlf	___wmul@multiplicand,f
  3092  034D  0DF3               	rlf	___wmul@multiplicand+1,f
  3093  034E  3EFF               	addlw	-1
  3094  034F  1D03               	skipz
  3095  0350  2B4B               	goto	u475
  3096  0351                     l1170:
  3097  0351  3001               	movlw	1
  3098  0352                     u485:
  3099  0352  1003               	clrc
  3100  0353  0CF1               	rrf	___wmul@multiplier+1,f
  3101  0354  0CF0               	rrf	___wmul@multiplier,f
  3102  0355  3EFF               	addlw	-1
  3103  0356  1D03               	skipz
  3104  0357  2B52               	goto	u485
  3105  0358                     l1172:
  3106  0358  0870               	movf	___wmul@multiplier,w
  3107  0359  0471               	iorwf	___wmul@multiplier+1,w
  3108  035A  1D03               	btfss	3,2
  3109  035B  2B5D               	goto	u491
  3110  035C  2B5E               	goto	u490
  3111  035D                     u491:
  3112  035D  2B40               	goto	l1166
  3113  035E                     u490:
  3114  035E                     l1174:
  3115  035E  0875               	movf	___wmul@product+1,w
  3116  035F  00F1               	movwf	?___wmul+1
  3117  0360  0874               	movf	___wmul@product,w
  3118  0361  00F0               	movwf	?___wmul
  3119  0362                     l292:
  3120  0362  0008               	return
  3121  0363                     __end_of___wmul:
  3122                           
  3123                           	psect	text20
  3124  03F2                     __ptext20:	
  3125 ;; *************** function ___lwmod *****************
  3126 ;; Defined at:
  3127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  divisor         2    0[COMMON] unsigned int 
  3130 ;;  dividend        2    2[COMMON] unsigned int 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  counter         1    5[COMMON] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  2    0[COMMON] unsigned int 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         4       0       0       0       0
  3143 ;;      Locals:         1       0       0       0       0
  3144 ;;      Temps:          1       0       0       0       0
  3145 ;;      Totals:         6       0       0       0       0
  3146 ;;Total ram usage:        6 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_DS3231
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function ___lwmod
  3157  03F2                     ___lwmod:
  3158  03F2                     l1204:	
  3159                           ;incstack = 0
  3160                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3161                           
  3162  03F2  0870               	movf	___lwmod@divisor,w
  3163  03F3  0471               	iorwf	___lwmod@divisor+1,w
  3164  03F4  1903               	btfsc	3,2
  3165  03F5  2BF7               	goto	u571
  3166  03F6  2BF8               	goto	u570
  3167  03F7                     u571:
  3168  03F7  2C27               	goto	l1222
  3169  03F8                     u570:
  3170  03F8                     l1206:
  3171  03F8  01F5               	clrf	___lwmod@counter
  3172  03F9  0AF5               	incf	___lwmod@counter,f
  3173  03FA  2C06               	goto	l1212
  3174  03FB                     l1208:
  3175  03FB  3001               	movlw	1
  3176  03FC                     u585:
  3177  03FC  1003               	clrc
  3178  03FD  0DF0               	rlf	___lwmod@divisor,f
  3179  03FE  0DF1               	rlf	___lwmod@divisor+1,f
  3180  03FF  3EFF               	addlw	-1
  3181  0400  1D03               	skipz
  3182  0401  2BFC               	goto	u585
  3183  0402                     l1210:
  3184  0402  3001               	movlw	1
  3185  0403  00F4               	movwf	??___lwmod
  3186  0404  0874               	movf	??___lwmod,w
  3187  0405  07F5               	addwf	___lwmod@counter,f
  3188  0406                     l1212:
  3189  0406  1FF1               	btfss	___lwmod@divisor+1,7
  3190  0407  2C09               	goto	u591
  3191  0408  2C0A               	goto	u590
  3192  0409                     u591:
  3193  0409  2BFB               	goto	l1208
  3194  040A                     u590:
  3195  040A                     l1214:
  3196  040A  0871               	movf	___lwmod@divisor+1,w
  3197  040B  0273               	subwf	___lwmod@dividend+1,w
  3198  040C  1D03               	skipz
  3199  040D  2C10               	goto	u605
  3200  040E  0870               	movf	___lwmod@divisor,w
  3201  040F  0272               	subwf	___lwmod@dividend,w
  3202  0410                     u605:
  3203  0410  1C03               	skipc
  3204  0411  2C13               	goto	u601
  3205  0412  2C14               	goto	u600
  3206  0413                     u601:
  3207  0413  2C1A               	goto	l1218
  3208  0414                     u600:
  3209  0414                     l1216:
  3210  0414  0870               	movf	___lwmod@divisor,w
  3211  0415  02F2               	subwf	___lwmod@dividend,f
  3212  0416  0871               	movf	___lwmod@divisor+1,w
  3213  0417  1C03               	skipc
  3214  0418  03F3               	decf	___lwmod@dividend+1,f
  3215  0419  02F3               	subwf	___lwmod@dividend+1,f
  3216  041A                     l1218:
  3217  041A  3001               	movlw	1
  3218  041B                     u615:
  3219  041B  1003               	clrc
  3220  041C  0CF1               	rrf	___lwmod@divisor+1,f
  3221  041D  0CF0               	rrf	___lwmod@divisor,f
  3222  041E  3EFF               	addlw	-1
  3223  041F  1D03               	skipz
  3224  0420  2C1B               	goto	u615
  3225  0421                     l1220:
  3226  0421  3001               	movlw	1
  3227  0422  02F5               	subwf	___lwmod@counter,f
  3228  0423  1D03               	btfss	3,2
  3229  0424  2C26               	goto	u621
  3230  0425  2C27               	goto	u620
  3231  0426                     u621:
  3232  0426  2C0A               	goto	l1214
  3233  0427                     u620:
  3234  0427                     l1222:
  3235  0427  0873               	movf	___lwmod@dividend+1,w
  3236  0428  00F1               	movwf	?___lwmod+1
  3237  0429  0872               	movf	___lwmod@dividend,w
  3238  042A  00F0               	movwf	?___lwmod
  3239  042B                     l572:
  3240  042B  0008               	return
  3241  042C                     __end_of___lwmod:
  3242                           
  3243                           	psect	text21
  3244  042C                     __ptext21:	
  3245 ;; *************** function ___lwdiv *****************
  3246 ;; Defined at:
  3247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  divisor         2    0[COMMON] unsigned int 
  3250 ;;  dividend        2    2[COMMON] unsigned int 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  quotient        2    5[COMMON] unsigned int 
  3253 ;;  counter         1    7[COMMON] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  2    0[COMMON] unsigned int 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         4       0       0       0       0
  3264 ;;      Locals:         3       0       0       0       0
  3265 ;;      Temps:          1       0       0       0       0
  3266 ;;      Totals:         8       0       0       0       0
  3267 ;;Total ram usage:        8 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_DS3231
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function ___lwdiv
  3278  042C                     ___lwdiv:
  3279  042C                     l1178:	
  3280                           ;incstack = 0
  3281                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3282                           
  3283  042C  01F5               	clrf	___lwdiv@quotient
  3284  042D  01F6               	clrf	___lwdiv@quotient+1
  3285  042E                     l1180:
  3286  042E  0870               	movf	___lwdiv@divisor,w
  3287  042F  0471               	iorwf	___lwdiv@divisor+1,w
  3288  0430  1903               	btfsc	3,2
  3289  0431  2C33               	goto	u501
  3290  0432  2C34               	goto	u500
  3291  0433                     u501:
  3292  0433  2C6B               	goto	l1200
  3293  0434                     u500:
  3294  0434                     l1182:
  3295  0434  01F7               	clrf	___lwdiv@counter
  3296  0435  0AF7               	incf	___lwdiv@counter,f
  3297  0436  2C42               	goto	l1188
  3298  0437                     l1184:
  3299  0437  3001               	movlw	1
  3300  0438                     u515:
  3301  0438  1003               	clrc
  3302  0439  0DF0               	rlf	___lwdiv@divisor,f
  3303  043A  0DF1               	rlf	___lwdiv@divisor+1,f
  3304  043B  3EFF               	addlw	-1
  3305  043C  1D03               	skipz
  3306  043D  2C38               	goto	u515
  3307  043E                     l1186:
  3308  043E  3001               	movlw	1
  3309  043F  00F4               	movwf	??___lwdiv
  3310  0440  0874               	movf	??___lwdiv,w
  3311  0441  07F7               	addwf	___lwdiv@counter,f
  3312  0442                     l1188:
  3313  0442  1FF1               	btfss	___lwdiv@divisor+1,7
  3314  0443  2C45               	goto	u521
  3315  0444  2C46               	goto	u520
  3316  0445                     u521:
  3317  0445  2C37               	goto	l1184
  3318  0446                     u520:
  3319  0446                     l1190:
  3320  0446  3001               	movlw	1
  3321  0447                     u535:
  3322  0447  1003               	clrc
  3323  0448  0DF5               	rlf	___lwdiv@quotient,f
  3324  0449  0DF6               	rlf	___lwdiv@quotient+1,f
  3325  044A  3EFF               	addlw	-1
  3326  044B  1D03               	skipz
  3327  044C  2C47               	goto	u535
  3328  044D  0871               	movf	___lwdiv@divisor+1,w
  3329  044E  0273               	subwf	___lwdiv@dividend+1,w
  3330  044F  1D03               	skipz
  3331  0450  2C53               	goto	u545
  3332  0451  0870               	movf	___lwdiv@divisor,w
  3333  0452  0272               	subwf	___lwdiv@dividend,w
  3334  0453                     u545:
  3335  0453  1C03               	skipc
  3336  0454  2C56               	goto	u541
  3337  0455  2C57               	goto	u540
  3338  0456                     u541:
  3339  0456  2C5E               	goto	l1196
  3340  0457                     u540:
  3341  0457                     l1192:
  3342  0457  0870               	movf	___lwdiv@divisor,w
  3343  0458  02F2               	subwf	___lwdiv@dividend,f
  3344  0459  0871               	movf	___lwdiv@divisor+1,w
  3345  045A  1C03               	skipc
  3346  045B  03F3               	decf	___lwdiv@dividend+1,f
  3347  045C  02F3               	subwf	___lwdiv@dividend+1,f
  3348  045D                     l1194:
  3349  045D  1475               	bsf	___lwdiv@quotient,0
  3350  045E                     l1196:
  3351  045E  3001               	movlw	1
  3352  045F                     u555:
  3353  045F  1003               	clrc
  3354  0460  0CF1               	rrf	___lwdiv@divisor+1,f
  3355  0461  0CF0               	rrf	___lwdiv@divisor,f
  3356  0462  3EFF               	addlw	-1
  3357  0463  1D03               	skipz
  3358  0464  2C5F               	goto	u555
  3359  0465                     l1198:
  3360  0465  3001               	movlw	1
  3361  0466  02F7               	subwf	___lwdiv@counter,f
  3362  0467  1D03               	btfss	3,2
  3363  0468  2C6A               	goto	u561
  3364  0469  2C6B               	goto	u560
  3365  046A                     u561:
  3366  046A  2C46               	goto	l1190
  3367  046B                     u560:
  3368  046B                     l1200:
  3369  046B  0876               	movf	___lwdiv@quotient+1,w
  3370  046C  00F1               	movwf	?___lwdiv+1
  3371  046D  0875               	movf	___lwdiv@quotient,w
  3372  046E  00F0               	movwf	?___lwdiv
  3373  046F                     l562:
  3374  046F  0008               	return
  3375  0470                     __end_of___lwdiv:
  3376  007E                     btemp	set	126	;btemp
  3377  007E                     wtemp0	set	126
  3378                           
  3379                           	psect	config
  3380                           
  3381                           ;Config register CONFIG1 @ 0x2007
  3382                           ;	Oscillator Selection bits
  3383                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3384                           ;	Watchdog Timer Enable bit
  3385                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3386                           ;	Power-up Timer Enable bit
  3387                           ;	PWRTE = OFF, PWRT disabled
  3388                           ;	RE3/MCLR pin function select bit
  3389                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3390                           ;	Code Protection bit
  3391                           ;	CP = OFF, Program memory code protection is disabled
  3392                           ;	Data Code Protection bit
  3393                           ;	CPD = OFF, Data memory code protection is disabled
  3394                           ;	Brown Out Reset Selection bits
  3395                           ;	BOREN = OFF, BOR disabled
  3396                           ;	Internal External Switchover bit
  3397                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3398                           ;	Fail-Safe Clock Monitor Enabled bit
  3399                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3400                           ;	Low Voltage Programming Enable bit
  3401                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3402                           ;	In-Circuit Debugger Mode bit
  3403                           ;	DEBUG = 0x1, unprogrammed default
  3404  2007                     	org	8199
  3405  2007  20D4               	dw	8404
  3406                           
  3407                           ;Config register CONFIG2 @ 0x2008
  3408                           ;	Brown-out Reset Selection bit
  3409                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3410                           ;	Flash Program Memory Self Write Enable bits
  3411                           ;	WRT = OFF, Write protection off
  3412  2008                     	org	8200
  3413  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 14
		 -> calendar(BANK0[14]), time(BANK0[14]), 

    USART_STRING@a	PTR unsigned char  size(1) Largest target is 14
		 -> calendar(BANK0[14]), time(BANK0[14]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _USART_STRING->_USART_ESCRITURA
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DS3231->___lwdiv

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5446
                                              8 BANK0      2     2      0
                             _DS3231
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _USART_ESCRITURA
                       _USART_STRING
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _USART_STRING                                         3     3      0     178
                                              1 COMMON     3     3      0
                    _USART_ESCRITURA
 ---------------------------------------------------------------------------------
 (2) _USART_ESCRITURA                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     266
                                              3 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231                                               2     2      0    3149
                                              8 COMMON     2     2      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1071
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1074
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231
     ___lwdiv
     ___lwmod
     ___wmul
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_ESCRITURA
   _USART_STRING
     _USART_ESCRITURA
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      42      12        0.0%
ABS                  0      0      42       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar 08 21:50:59 2021

                        _i 0048                          pc 0002                         l85 038B  
                       l88 07DF                         fsr 0004        ___wmul@multiplicand 0072  
                      l200 03B4                        l201 03B9                        l105 0257  
                      l114 02F8                        l131 027B                        l140 04BA  
                      l108 0261                        l125 0239                        l143 02A4  
                      l128 02BE                        l137 033D                        l181 0262  
                      l149 0319                        l326 0520                        l184 026E  
                      l193 024B                        l290 034A                        l178 03F1  
                      l187 0242                        l292 0362                        l196 0255  
                      l199 03B1                        l562 046F                        l572 042B  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      u410 0518                        u411 0517                        u500 0434  
                      u420 025D                        u501 0433                        u421 025C  
                      u405 050A                        u350 04CB                        u430 03D1  
                      u351 04CA                        u520 0446                        u600 0414  
                      u440 0268                        u521 0445                        u601 0413  
                      u441 0267                        u450 026E                        u370 04DF  
                      u515 0438                        u451 026D                        u371 04DE  
                      u435 03CC                        u540 0457                        u620 0427  
                      u460 0344                        u541 0456                        u621 0426  
                      u605 0410                        u461 0343                        u365 04D0  
                      u630 0320                        u390 04FA                        u535 0447  
                      u615 041B                        u631 031F                        u391 04F9  
                      u560 046B                        u640 0332                        u561 046A  
                      u545 0453                        u641 0331                        u385 04E1  
                      u570 03F8                        u490 035E                        u650 0319  
                      u555 045F                        u571 03F7                        u491 035D  
                      u475 034B                        u707 047A                        u651 0318  
                      u395 04F6                        u660 03AD                        u485 0352  
                      u661 03AC                        u717 0489                        u590 040A  
                      u670 02F8                        u591 0409                        u727 0498  
                      u671 02F7                        u585 03FC                        u737 02B6  
                      u687 05E5                        u697 029E                        fsr0 0004  
                      indf 0000                       l1100 04BB                       l1110 04E8  
                     l1102 04CB                       l1200 046B                       l1112 04FA  
                     l1104 04CE                       l1120 0518                       l1210 0402  
                     l1114 0508                       l1106 04DB                       l1130 03BE  
                     l1220 0421                       l1212 0406                       l1204 03F2  
                     l1300 0243                       l1140 02A6                       l1124 0257  
                     l1116 0509                       l1108 04DF                       l1132 03C1  
                     l1214 040A                       l1206 03F8                       l1222 0427  
                     l1302 0248                       l1142 02A9                       l1150 0290  
                     l1126 025D                       l1310 02E9                       l1118 0512  
                     l1134 03EE                       l1230 037F                       l1216 0414  
                     l1208 03FB                       l1304 0621                       l1160 0262  
                     l1144 02AF                       l1152 0293                       l1312 02ED  
                     l1136 03EF                       l1128 03BA                       l1240 0389  
                     l1232 0382                       l1320 052E                       l1218 041A  
                     l1170 0351                       l1162 0268                       l1146 02B2  
                     l1250 048E                       l1154 0299                       l1306 02DC  
                     l1138 03F0                       l1242 038A                       l1234 0384  
                     l1226 0363                       l1330 054F                       l1322 0533  
                     l1314 0521                       l1180 042E                       l1172 0358  
                     l1164 033E                       l1148 02BB                       l1252 0494  
                     l1244 0470                       l1260 0325                       l1156 029C  
                     l1308 02DE                       l1236 0385                       l1228 0372  
                     l1340 0573                       l1332 0554                       l1324 053B  
                     l1316 0526                       l1190 0446                       l1182 0434  
                     l1174 035E                       l1166 0340                       l1254 026F  
                     l1246 0476                       l1262 032C                       l1158 02A1  
                     l1270 02FD                       l1238 0386                       l1350 05B8  
                     l1342 0582                       l1334 055D                       l1326 0541  
                     l1318 0529                       l1192 0457                       l1184 0437  
                     l1168 0344                       l1280 024C                       l1248 047F  
                     l1264 0332                       l1256 031B                       l1272 0308  
                     l1360 05E9                       l1352 05C7                       l1344 0591  
                     l1336 0565                       l1328 0549                       l1194 045D  
                     l1186 043E                       l1178 042C                       l1290 03A2  
                     l1282 0251                       l1098 0235                       l1266 0337  
                     l1258 0320                       l1274 030E                       l1370 060B  
                     l1362 05F1                       l1354 05D5                       l1346 05A0  
                     l1338 056A                       l1196 045E                       l1188 0442  
                     l1292 03A7                       l1284 038C                       l1276 023A  
                     l1268 02FA                       l1372 0611                       l1364 05F7  
                     l1356 05DA                       l1348 05A9                       l1198 0465  
                     l1294 03AD                       l1286 0391                       l1278 023F  
                     l1374 0617                       l1366 05FF                       l1358 05DF  
                     l1296 03B5                       l1288 0399                       l1368 0605  
                     _PEIE 005E                       _RCIF 0065                       _TRMT 04C1  
        ?_Lcd_Write_String 0070                       _date 0040                       _main 0521  
                     _hour 0042                       _time 002E                       _year 003C  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
          __end_of_Lcd_Cmd 02BF           ?_I2C_Master_Init 004A           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ANSEL 0188            __end_of___lldiv 0521            __end_of___lwdiv 0470  
          __end_of___lwmod 042C                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019                      _month 003E  
                    _setup 0363                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 04BB           __end_of_Lcd_Port 023A  
          __initialization 07E0               __end_of_main 0621           USART_ESCRITURA@a 0070  
                   ??_main 0052         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _DS3231 0621                     ?_setup 0070                     _ANSELH 0189  
            USART_STRING@a 0073              USART_STRING@i 0072                  ??_Lcd_Cmd 0071  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                     ___wmul 033E                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 0074                     _minute 0044  
                   _second 0046            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 027C             __pcstackCOMMON 0070  
             __pidataBANK0 02BF              __end_of_setup 038C             _Lcd_Set_Cursor 031A  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ?_DS3231 0070  
                  ??_setup 007E                 __pbssBANK0 003C                 __pmaintext 0521  
                  ?___wmul 0070  __size_of_Lcd_Write_String 0021     __end_of_Lcd_Set_Cursor 033E  
 __size_of_USART_ESCRITURA 000C                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091            __size_of_DS3231 01BF                    _SSPSTAT 0094  
           _Lcd_Write_Char 028F                    _Lcd_Cmd 02A5                    ___lldiv 04BB  
          __size_of___wmul 0025                    ___lwdiv 042C                    ___lwmod 03F2  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0363                    __ptext2 03BA  
                  __ptext3 04BB                    __ptext4 02DB                    __ptext5 0256  
                  __ptext6 02F9                    __ptext7 028F                    __ptext8 031A  
                  __ptext9 0470   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 02A5  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
         I2C_Master_Init@c 004A           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
                _TRISCbits 0087          ??_USART_ESCRITURA 0070              ?_USART_STRING 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0074  
           __end_of_DS3231 07E0                  _TXSTAbits 0098                  _Lcd_Clear 026F  
           __end_of___wmul 0363           _Lcd_Write_String 02F9        start_initialization 07E0  
           ??_USART_STRING 0071                   ??_DS3231 0078          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 004E          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                 ?_Lcd_Clear 0070  
                 ??___wmul 0074                 init_fetch0 027C                __pdataBANK0 0020  
          Lcd_Write_Char@a 0072                  ___latbits 0002              __pcstackBANK0 004A  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 023A           _I2C_Master_Write 024C  
         ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0070           ___lwdiv@quotient 0075  
           __size_of_setup 0029             ___wmul@product 0074                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074       __end_of_USART_STRING 02F9            _USART_ESCRITURA 0256  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 0470  
                 _Lcd_Port 0234        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 031A  
         __size_of_Lcd_Cmd 001A           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                   _calendar 0020            _I2C_Master_Init 03BA  
          _I2C_Master_Read 038C            _I2C_Master_Wait 0262            _I2C_Master_Stop 0243  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 026F  
                 __ptext11 02A5                   __ptext20 03F2                   __ptext12 0234  
                 __ptext21 042C                   __ptext13 024C                   __ptext14 0243  
                 __ptext15 023A                   __ptext16 038C                   __ptext17 0262  
                 __ptext18 0621                   __ptext19 033E              __size_of_main 0100  
  __end_of_USART_ESCRITURA 0262   __end_of_I2C_Master_Start 0243   __end_of_I2C_Master_Write 0256  
                 init_ram0 0280           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
    __size_of_USART_STRING 001E    __end_of_I2C_Master_Init 03F2    __end_of_I2C_Master_Read 03BA  
  __end_of_I2C_Master_Wait 026F    __end_of_I2C_Master_Stop 024C         Lcd_Set_Cursor@temp 0077  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                _SSPCON2bits 0091               _USART_STRING 02DB  
         ?_USART_ESCRITURA 0070  
